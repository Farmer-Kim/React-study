{"version":3,"sources":["../node_modules/moment/locale sync /^/.*$","components/Button/index.js","components/Charts/index.js","containers/base/common/pwdInit.js","containers/base/common/pwdChg.js","containers/base/common/userChg.js","containers/com/COM010001/index.js","containers/com/COM010010/index.js","containers/com/COM010020/index.js","containers/stt/STT000001/index.js","containers/stt/STT010001/index.js","containers/stt/STT050001/index.js","containers/stt/STT050003/index.js","containers/stt/STT060001/index.js","containers/sta/STA030001/index.js","containers/sta/STA030002/index.js","containers/sta/STA030003/index.js","containers/bot/BOT010001/index.js","containers/bot/BOT010101/index.js","containers/sys/SYS010001/index.js","containers/sys/SYS030001/index.js","routes/popupRoute.js","components/Player/AnswerArea/index.js","store/modules/appModule.js","components/Dialog/index.js","components/FileUpload/index.js","components/Grid/components/date/index.js","components/Grid/components/checkbox/index.js","components/Grid/components/button/index.js","components/Grid/components/selecbox/index.js","components/Grid/components/customEditor/index.js","components/Grid/components/customToolTip/index.js","components/Grid/utils/index.js","components/Grid/index.js","components/HtmlEditor/index.js","components/Input/index.js","components/Label/index.js","components/Layout/index.js","components/Menu/index.js","components/Player/index.js","components/RealTimeViewer/index.js","components/Progressbar/index.js","components/SelectBox/index.js","components/Slide/index.js","components/Switch/index.js","components/Tab/index.js","components/Table/index.js","components/Textarea/index.js","components/Tray/index.js","components/CsState/index.js","components/Diagram/components/widgets/PortWidget.js","components/Diagram/components/defaults/DefaultPortLabelWidget.js","components/Diagram/components/defaults/DefaultNodeWidget.js","components/Diagram/components/Toolkit.js","components/Diagram/components/BaseEntity.js","components/Diagram/components/Common.js","components/Diagram/components/defaults/DefaultLinkWidget.js","components/Diagram/components/WidgetFactories.js","components/Diagram/components/defaults/DefaultLinkFactory.js","components/Diagram/components/AbstractInstanceFactory.js","components/Diagram/components/defaults/DefaultPortModel.js","components/Diagram/components/DiagramModel.js","components/Diagram/components/DiagramEngine.js","components/Diagram/components/LinkInstanceFactory.js","components/Diagram/components/widgets/actions/BaseAction.js","components/Diagram/components/widgets/actions/SelectingAction.js","components/Diagram/components/widgets/actions/MoveCanvasAction.js","components/Diagram/components/widgets/actions/MoveItemsAction.js","components/Diagram/components/widgets/LinkWidget.js","components/Diagram/components/widgets/LinkLayerWidget.js","components/Diagram/components/widgets/NodeWidget.js","components/Diagram/components/widgets/NodeLayerWidget.js","components/Diagram/components/widgets/DiagramWidget.js","components/Diagram/components/CustomNodeWidget.js","components/Diagram/components/CustomNodeFactory.js","components/Diagram/components/CustomNodeModel.js","components/Diagram/index.js","components/Tree/components/TreeSelectbox/utils/index.js","components/Tree/components/TreeSelectbox/index.js","components/Tree/utils/index.js","components/Tree/index.js","store/modules/index.js","store/index.js","store/configure.js","common/index.js","containers/base/common/login.js","containers/com/COM010000/index.js","containers/sta/STA010000/index.js","containers/sta/STA030000/index.js","containers/stt/STT010000/index.js","containers/stt/STT020000/index.js","containers/stt/STT030000/index.js","containers/stt/STT040000/index.js","containers/stt/STT050100/index.js","containers/stt/STT050200/index.js","containers/stt/STT050000/index.js","containers/stt/STT060000/index.js","containers/stt/STT070000/index.js","containers/sys/SYS010000/index.js","containers/sys/SYS020000/index.js","containers/sys/SYS030000/index.js","containers/sys/SYS040000/index.js","containers/sys/SYS050000/index.js","containers/sys/SYS060000/index.js","containers/sup/SUP010000/index.js","containers/sup/SUP020000/index.js","containers/sup/SUP030000/index.js","containers/sup/SUP040000/index.js","containers/sup/SUP050000/index.js","containers/sup/SUP060000/index.js","containers/sup/SUP070000/index.js","containers/sup/SUP080100/index.js","containers/sup/SUP080200/index.js","containers/sup/SUP080300/index.js","routes/index.js","containers/sup/SUP080000/index.js","containers/bot/BOT010000/index.js","containers/sam/SAM010000/index.js","containers/base/main/index.js","containers/base/footer/index.js","containers/base/header/index.js","containers/base/index.js","containers/App.js","index.js","../config/polyfills.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","BasicButton","props","state","disbaled","disabled","fiiled","innerImage","btnClass","iconClass","this","icon","value","size","color","className","ref","button","onClick","target","blur","tooltip","style","marginTop","mt","marginRight","mr","marginBottom","mb","marginLeft","ml","visibility","hidden","stopPropagation","click","React","Component","defaultProps","type","filled","IconButton","classes","CsButton","btnfiiled","callType","color2","border","outline","background","display","name","fontWeight","CustomTooltip","label","payload","content","length","dataKeys","_owner","memoizedProps","options","dataKey","backgroundColor","entry","index","stroke","unit","dataname","i","key","width","height","cx","cy","fill","ScrmLineBarChart","handleClick","onMouseEnter","onMouseMove","onMouseLeave","renderCusomizedLegend","textAlign","active","_","includes","dataSet","nextProps","data","prevProps","aspect","margin","right","left","strokeDasharray","XAsisKey","allowDecimals","domain","maxData","filter","item","activeDot","console","log","ScrmBarChart","layout","dailyOptions","YAsisKey","hide","reversed","barSize","PwdInit","validation","StrLib","isNull","param","ComLib","openDialog","telNo","transaction","transId","transManager","TransManager","setTransId","setTransUrl","constants","url","init","setCallBack","callback","addConfig","dao","base","crudh","create","datasetsend","datasetrecv","addDataset","USR_ID","USR_NM","TEL_NO","birth","agent","err","alert","res","dsRecvData","password","onClose","event","input","onChange","setState","open","bind","placeholder","PwdChg","setStateValue","document","getElementById","popupdivid","remove","serviceid","dsPwdInfo","getValue","isAlpha","substr","test","setdata","common","passwd","columnid","read","sqlmapid","getTransRecords","dsChkCurPwdRst","dsChkNewPwdRst","DataLib","datalist","getInstance","CUR_PWD","NEW_PWD","CON_PWD","setStateInitRecords","records","userChg","transRecords","orgdata","AUTH_NM","CENT_NM","colGrp","tbData","colSpan","COM010001","SVR_HST","params","dsSttErrListRecv","dsSttErrList","grdProps","grdSttErr","areaName","header","headerName","field","colId","Fragment","rowNum","addRowBtn","delRowBtn","View","SRCH_YN","BORD_MNG_NO","srchFileParam","dsNoteInfo","dsNoteFileInfo","dsModifyInfo","TITLE","VALD_DT","DateLib","getToday","CONT","CONT_DV","DEL_YN","REG_DT","REG_USR","MFY_ER","MFY_DT","grid","onRowClicked","assign","getRowJSON","REG_CENT","REG_DTM","REG_ID","CHG_ID","CHG_DTM","valueFormatter","getFormatterDate","cellEditor","cellEditorParams","values","setGridComCodeComboCellVal","setGridComCodeComboCellNm","readOnly","toolbarHidden","Slide","STT000001","ctrNo","callId","STT010001","constCd","CONST_CD","constNm","CONST_NM","sttUnq","STT_UNQ","calendarProps","caldate","selectboxProps","selTime","selected","textFieldProps","iptTrnTitle","selectbox","selectedIndex","inputcalendar","onKeyPress","date","time","title","onCallbackFunc","dsMisSenList","dataset","convComboList","getCommCodeList","newScrmObj","select","argument","isOpen","maxDate","minDate","required","minLength","maxLength","btnProps","btnAppTrain","monthRangeArr","MONTH_RANGE","CODE","dsTrainHistory","editable","getComCodeValue","getComCodeName","dnlExcelBtn","dsSttAns","dsSttRes","grdSttAns","grdSttRes","imageIndex","imageTotal","class","href","src","alt","sessionUser","getSession","onGridReady","userGridApi","gridApi","userGrid","userChkGridApi","userChkGrid","onRowSelected","gridDataset","userChkRecords","push","userChkrid","dsUserList","dsUserChkList","iptUser","btnSearch","btnConfrim","grdUser","resizable","grdUserChk","infoCheckBox","use","suppressRowClickSelection","rowSelection","dsStudyLogInfo","SYS080001","SNRO_CD","dsSnroProcessListRecv","onSelectionChanged","snroProcessGridApi","snroProcessGrid","setStateRecords","dsSnroProcessList","getRow","processRow","processRows","rowModel","rowsToDisplay","SORT_ORD","setSelected","tts","dsSnroTts","SNRO_TTS_CD","SUCCESS_TTS","SNRO_TTS_TEXT","FAIL_TTS","dsSelected","onCellValueChanged","onDeleteRow","onBeforeInsertRow","rtn","onInsertRow","ttsText","processArr","interfaceArr","PROCESS_TP","PROCESS_CD","SUCCESS","FAIL","RTN_TARGET","btnKeywordSave","grdSnroProcess","defaultValue","singleClickEdit","iptSnroNm","iptSortOrd","iptSucTTS","iptFailTTS","iptRtnTarget","selProcessTP","selProcessExpl","selProcessSuc","selProcessSucNm","selProcessFail","selProcessFailNm","snro","dsSnro","inter","dsInter","arrSnro","arrTtsNm","arrInter","CODE_NM","SNRO_EXPL","SNRO_TTS_EXPL","ITF_CD","ITF_NM","BOT010101","chkCnt","returnVal","iptSnroSco","Number","snroKeywordGrid","outer","intA","rowtype","crud","lagHeader","grdSnroKeyword","rows","snroKeywordGridApi","TEMP_CD","replace","intB","KWD","moveRow","orgValue","ND_UUID","ND_PORT","port","handle","REQ_SCO","dsSnroKeywordListRecv","tempCd","maxTempCd","setRecords","setRowData","getRecords","destroy","row","ensureIndexVisible","dsSnroKeywordList","iptSnroType","snroTp","dsUserDetail","stndParam","CENT_CD","update","dsPwdData","INIT_PWD","dsPwdStndCd","STND_VAL","dsgetUserCdCheck","CHK_CNT","dsgetUserNmCheck","isNew","checkbox","chkUseFlag","checked","AUTH_LV","TEAM_CD","USE_FLAG","getCentList","getTeamList","authList","keyProp","dsConstDetail","dsConstCdCheck","dsConstNmCheck","EXT_NUM","popRoute","component","pwdChg","TYPE","NEW_VALUE","changed","SPK","isCS","org","switch","INDEX","isAddNew","spk","newVal","VALUE","COM010010","COM010020","STT050001","STT050003","STT060001","STA030001","STA030002","STA030003","BOT010001","SYS010001","SYS030001","addTray","createAction","delTray","delAllTray","selectTray","prevTray","nextTray","addPop","delPop","delAllPop","selectPop","handleActions","popup","popupList","concat","action","menu","tray","indexOf","MNU_ID","parseInt","findIndex","element","AlertDialog","span","message","split","borderRadius","zIndex","backdropStyle","noBackdrop","clickBackdropToClose","float","ConfirmDialog","onReturnVal","position","bottom","padding","PopupDialog","onFocus","parentElement","onBlur","onKeyDown","keyCode","shiftKey","activeElement","focus","preventDefault","onMinimize","AppModuleAction","modal","bound","top","getBoundingClientRect","ReactDOM","findDOMNode","scrollIntoView","modaless","body","addEventListener","removeEventListener","bounds","defaultPosition","positionOffset","x","y","allowAnyClick","tabIndex","overflow","comp","ModalLoading","fontSize","fontFamily","connect","appModule","dispatch","bindActionCreators","appModuleActions","InputFileUpload","getUploadParams","onChangeStatus","status","meta","mete","onUploadComplete","files","savedFileList","msg","setProgressPercent","progressEvent","uploadPercent","Math","floor","loaded","total","uploadStatus","handleSubmit","allFiles","validate","showProgressbar","serviceId","formData","FormData","Array","from","forEach","f","page","append","file","upload","setTimeout","JSON","stringify","transdata","result","Allsize","uploadValidation","valTest","reader","FileReader","onload","readAsText","percent","inputContent","inputWithFilesContent","submitButtonContent","LayoutComponent","Layout","onSubmit","accept","maxFiles","maxSizeBytes","styles","dropzone","inputLabel","fontColor","previews","submitButton","dropzoneProps","extra","dzHeight","substring","DateComponent","api","getVerticalPixelRange","node","rowTop","direction","TimeComponent","format","disableClock","maxTime","RangeDateComponent","onChangeDate","startDate","endDate","oldStartDate","oldEndDate","sColId","eColId","sCol","eCol","outputCheckFn","setDataValue","curState","today","sDate","eDate","nowState","getStringYymmdd","getElementsByClassName","children","strtId","endId","showClearDates","RangeTimeComponent","onStrtTmChange","strtTime","onEndTmChange","endTime","STRT_TM","END_TM","getFormatterTime","CheckboxRenderer","checkedHandler","column","DelRowButton","context","componentParent","ActionButton","onActionCellClicked","colDef","cursor","SelectboxRenderer","KEY_BACKSPACE","KEY_DELETE","CustomEditor","createInitialState","handleChange","startValue","highlightAllOnFocus","keyPress","charPress","undefined","inputType","toString","RegExp","refs","eInput","setSelectionRange","isLeftOrRight","deleteOrBackspace","inputValue","window","which","borderStyle","charCode","getCharCodeFromEvent","forwardRef","useState","getDisplayedRowAtIndex","rowIndex","useImperativeHandle","getReactContainerClasses","tooltipField","valueRowSpan","beforeData","setColumnProperty","ele","setGridHeader","rtnHeader","treeCol","sortable","lockPosition","defaultWidth","minWidth","maxWidth","numCol","valueGetter","cellStyle","chkCol","sort","headerCheckboxSelection","checkboxSelection","hideCol","dragCol","rowDrag","rowDragText","rowNode","colPinned","checkHeaderDepth","tree","arrData","_function","_func","hasOwnProperty","checkHeaderProp","col","rtnVal","Grid","columnApi","pageDataset","onColumnResized","onGridSizeChanged","onRowDataUpdated","onBodyScroll","infinite","getDisplayedRowCount","lastNode","rowHeight","totalRowCnt","propDataset","onScrollEnd","excelLoadAll","onPaginationChanged","_newValue","newValue","oldValue","setValue","recid","rowData","doDisplayChange","isSub","isTree","childCNT","makeTreeData","newDataset","getTreeData","forEachNode","CHK","onCellClicked","onCellDoubleClicked","onCellFocused","onRowDoubleClicked","onCellEditingStopped","onRowDataChanged","sizeColumnsToFit","onSortChanged","refreshCells","columns","onColumnGroupOpened","extended","columnGroup","expanded","findRowToMove","rtnArr","parentID","temp","parse","parentLV","parnetOpen","temp2","j","needToMove","k","stndCol","childCnt","setTreeOrder","needTomove","isMoved","cnt","onRowDragEnd","gridData","standardNode","overIndex","overNode","nodes","orgrecords","tmpGrdData","tmpOrgData","redrawRows","dragData","doFilter","setQuickFilter","getSelectedRowIndex","getSelectedNodes","getSelectedRows","getDeSelectedRows","deSelectRows","isSelected","editStart","setFocusedCell","startEditingCell","colKey","autoSizeFit","addGridRow","rtnJson","addRow","insertData","delGridRow","onBeforeDeleteRow","lstRecid","deleteData","setGridData","initRecords","appendRecords","downExcelData","exelData","lengthCheck","ExcelLib","exportToExcel","rtnNode","idx","undoCellEditng","undoCellEditing","redoCellEditng","redoCellEditing","setInfiniteGridData","initPageIndex","onFilterHeadClick","newHeader","cloneDeep","pageHeader","filterToggle","setColumnVisible","filterVal","onHeaderChange","expandAllRow","orgRecord","EXPAND","contractAllRow","LEVEL","_display","initFlag","orgPageHeader","columnDefs","headerToggle","noName","paddingLeft","alwaysShowVerticalScroll","frameworkComponents","dates","rangeDate","rangeTime","delButton","customEditor","actionButton","customTooltip","CustomToolTip","tooltipShowDelay","components","suppressMovableColumns","suppressPropertyNamesCheck","stopEditingWhenCellsLoseFocus","multiSortKey","headerHeight","defaultColDef","floatingFilter","rowDragManaged","enableMultiRowDragging","suppressDragLeaveHidesColumns","suppressRowDeselection","stopEditingWhenGridLosesFocus","rowBuffer","undoRedoCellEditing","enableCellChangeFlash","undoRedoCellEditingLimit","localeText","noRowsToShow","colResizeDefault","suppressRowTransform","suppressScrollOnNewData","doNotScrollTop","rowMultiSelectWithClick","HtmlEditor","modules","toolbar","font","list","indent","align","clipboard","matchVisual","formats","theme","Checkbox","htmlFor","MultiCheckBox","getElementsByName","setRadio","defaultSelected","selectedOption","Textfield","autoComplete","InputCalendar","focused","convertDate","numberOfMonths","monthFormat","isOutsideRange","showClearDate","showDefaultInputIcon","openDirection","verticalSpacing","appendToBody","inputIconPosition","displayFormat","keepOpenOnDateSelect","allowTextEdit","onDateChange","small","onFocusChange","RangeInputCalendar","focusedInput","enableOutsideDays","minimumNights","startDateId","endDateId","startDatePlaceholderText","endDatePlaceholderText","onDatesChange","moment","Label","AppPanel","HeadPanel","MiddlePanel","MainPanel","ComponentPanel","sizeVar","FooterPanel","FlexPanel","FullPanel","SubFullPanel","LFloatArea","RFloatArea","RelativeGroup","TrayPanel","SearchPanel","HeaderMenu","handleClickOutside","domNode","contains","closeMenuList","setMenuDivOpen","PARE_MNU_ID","MNU_NM","subMenu","subKey","openMenu","playerConstants","default","container","container2","ans","Player","useUuid","dsRcvCallList","CALL_ID","UUID","grdPlayerListApi","newMS","dsNewMissSen","updateMS","dsUpdateMissSen","deleteMS","dsDeleteMissSen","tp","nm","TP_CD","FILE_NM","sftp","sttSearch","PATH","dsRcvSttJobData","FILE_PATH","ACT_TP","newPath","obj","uuid","handler","setDs","playing","howler","stop","srchText","dsRcvSttAnsData","STT_RSLT","maxIndex","dsRcvMissSenData","NEW_SPK","IDX","rcvMissMatched","rcvMiss","ANS_SENT_CONT","ANS_SPK_TP","UNQ","missStartLocation","SENT_ST_TM","missIndex","POS_START","splice","POS_END","SENT_ED_TM","dsKeywordList","regexAll","results","match","playable","dsRcvSttAnsDataOrg","missSenEdited","newIndex","selKeywordData","JOB_TP","Howl","html5","onplay","player","onPlay","onLoad","onloaderror","onLoadError","onpause","onPause","onend","onEnd","onstop","onStop","searchText","duration","seek","play","selKeyword","volume","parseFloat","currentIndex","searchedIndex","selKeywordType","selKeywordColor","getComCodeCdVal","keywordList","KWD_TP","rate","text","ansData","orgAnsData","newAnsData","updateAnsData","deleteAnsData","orgExist","newData","chagned","deleted","pause","txtArr","copyText","writeTxtFile","join","listOpen","optionalTime","renderSeekPos","loadingFinish","onClickListTime","pos","onClickListValue","disAllowEdit","openId","removeChild","option","openPop","setMissSen","grdPlayerList","openAnswerArea","numberWidth","waveform","round","initialize","location","matched","cancelAnimationFrame","requestAnimationFrame","offsetTop","scrollTop","seconds","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","string","slice","getSrchMarker","txt","srchTxt","replaceAll","getKewordMark","tmpText","testKwd","selectBoxClass","getKeywords","kewordList","keyword","searched","cntDupSearched","moveListItem","dsRcvSttData","buffer","loadingBuffer","prevState","unload","min","max","step","dateTime","alignItems","alignSelf","bodyHeight","RealTimeViewer","EMPTY","realTime","setProgress","dsRealTimeSentence","lastIndex","timeoutID","SENT_CONT","checkboxProps","chkAutoScroll","moveToLastItem","selKeywordTypeDataSet","typeSelectedIndex","csState","refreshSearch","listSelectedIndex","getContents","getListItem","clearTimeout","ProgressBar","symbol","error","success","TreeSelectbox","rowId","onAction","onNodeToggle","changeToTreeSelectData","parentId","expandArr","newTreeData","PARENT_ID","expand","ID","LABEL","isDefaultValue","DEFAULT","DISABLED","tempChild","makeData","parentArr","findParentOrg","noMatches","showPartiallySelected","mode","paddingRight","texts","inlineSearchInput","showDropdown","Selectbox","data-tip","tooltipCont","controlOrgCombo","setDisableByAuth","isQaCombo","prop","a","dsCentComboInfo","comboItem","centCd","dsTeamComboInfo","TEAM_NM","getUserList","teamCd","dsUsrComboInfo","USR_CD","SlidePreview","process","filepath","SlideContainer","onDownload","reqOptions","method","headers","responseType","axios","resData","URL","createObjectURL","Blob","link","createElement","setAttribute","appendChild","onPreview","mdi","DIALOG","dialog","render","unmountComponentAtNode","ext","doc","xls","ppt","pdf","img","CustomSlide","setSlideInfo","setSlideContent","onDownloadAll","onSelectPrev","slider","slickPrev","onSelectNext","slickNext","settings","dots","slidesToShow","slidesToScroll","initialSlide","speed","responsive","breakpoint","c","Switch","Tabs","onClickTab","Children","toArray","child","tab","tabWidth","Tab","TabPanel","Table","setColGroup","setBody","setRow","rowArray","colArray","setColumn","colJson","rowSpan","head","footer","Textarea","TrayDiv","selectMenu","onSelect","removeMenu","CsState","totalCs","openCs","csPerCenterList","colLen","colLeng","csList","centerList","csListItems","cs","CONS_STATE","iconbm","onClickCs","tempCnt","tempCnt2","items","rowCnt","csRow","ceil","doMakeTable","tbllm","tblrm","iconSize","colCount","tblData","toggleCenter","PortWidget","links","diagramEngine","forceUpdate","data-name","data-nodeid","getID","DefaultPortLabel","model","option2","getParent","kwdSco","portOrd","in","DefaultNodeWidget","getInPorts","getOutPorts","onRemove","Toolkit","r","random","BaseEntity","listeners","UID","cb","listener","uid","BaseModel","ob","_class","constructor","itterateListeners","selectionChanged","entityRemoved","PointModel","points","removePoint","LinkModel","linkType","getDefaultPoints","extras","sourcePort","targetPort","point","p","deSerialize","source","serialize","removeLink","getPointIndex","addLink","pointModel","PortModel","parentNode","NodeModel","nodeType","ports","getLinks","setParentNode","DefaultLinkWidget","pointIndex","uiCircleProps","circleProps","opacity","extraProps","strokeWidth","strokeLinecap","data-linkid","strokeOpacity","onContextMenu","pointAdded","paths","abs","pointLeft","pointRight","generateLink","onMouseDown","getRelativeMousePoint","addPoint","d","generatePoint","smooth","ds","drawLine","drawAdvancedLine","engine","WidgetFactory","NodeWidgetFactory","DefaultLinkFactory","AbstractInstanceFactory","DefaultPortInstanceFactory","DefaultPortModel","isInput","object","DiagramModel","offsetX","offsetY","zoom","rendered","nodeOb","getInstanceFactory","portOb","addPort","addNode","linkOb","setTargetPort","getNode","getPortFromID","setSourcePort","ignore","supressListener","getSelectedItems","selectionCleared","flatMap","controlsUpdated","addListener","linksUpdated","removeNode","nodesUpdated","DiagramEngine","diagramModel","nodeFactories","linkFactories","instanceFactories","linkInstanceFactory","canvas","paintableWidgets","entities","entity","getPorts","getLink","baseModel","factory","getName","getType","nodeFactoriesUpdated","linkFactoriesUpdated","linkFactory","getFactoryForLink","generateReactWidget","nodeFactory","getFactoryForNode","getRelativePoint","pageX","pageY","getZoomLevel","getOffsetX","getOffsetY","canvasRect","selector","querySelector","sourceElement","getNodePortElement","sourceRect","rel","offsetWidth","offsetHeight","LinkInstanceFactory","BaseAction","mouseX","mouseY","ms","getTime","SelectingAction","mouseX2","mouseY2","z","elX","elY","MoveCanvasAction","initialOffsetX","initialOffsetY","MoveItemsAction","moved","enableRepaintEntities","getDiagramModel","selectionModels","initialX","initialY","LinkWidget","canEntityRepaint","LinkLayerWidget","updateLocation","getPortCenter","ex","last","generatedLink","generateWidgetForLink","cloneElement","svgStyle","transform","generateLinks","NodeWidget","isArray","NodeLayerWidget","getNodes","generateWidgetForNode","DEFAULT_ACTIONS","deleteItems","selectItems","moveItems","multiselect","multiselectDrag","canvasDrag","copy","paste","selectAll","deselectAll","DiagramWidget","actionType","renderedNodes","windowListener","actions","setCanvas","setForceUpdate","getActions","selectedItems","ctrl","metaKey","ctrlKey","copySelectedItems","pasteSelectedItems","getLastPoint","getFirstPoint","serializeDiagram","flatModel","newModel","gMap","copied","pasted","clearSelection","closest","nodeElement","getAttribute","getPort","getPointModel","setZoomLevel","deltaY","currentActionType","relative","containsElement","allSelected","setOffset","getMouseElement","clearRepaintEntities","deselect","nodeSelected","filtered","isLink","isNode","isPoint","actionOutput","pointDelete","tagName","ignoreLink","oPid","eleLinks","sP","tP","linkModel","portModel","innerWidth","innerHeight","RJD","nodeTp","dataTransfer","getData","nodeName","nodeColor","nodeOutpt","nodeOption","nextNode","createNode","createPort","onDrop","onDragOver","onWheel","onMouseUp","renderLinkLayerWidget","renderSelector","CustomNodeWidget","arr","ttsCont","arrTts","lastLabel","indexOfCom","newLabel","removePort","delPort","CustomNodeFactory","CustomNodeInstanceFactory","CustomNodeModel","merge","Diagram","serializationSave","str","diagramNode","diagramlinks","saveNode","jsonProts","savePort","EXTRAS","ND_COLOR","ND_KWD_SCO","ND_NM","ND_PORTS","ND_TP","ND_TTS_ID","ND_X","ND_Y","saveLink","LK_EN_ND","LK_EN_ND_PORT","LK_POINT","LK_ST_ND","LK_ST_ND_PORT","LK_TP","LK_UUID","onSave","registerNodeFactory","registerLinkFactory","registerInstanceFactory","dsSnroNode","newNode","propsNode","newLink","propsLink","dsSnroLink","portArray","jsonNdPort","jsonString","setDiagramModel","propNode","propLink","deSerializeDiagram","draggable","onDragStart","setData","treeData","getNodeKey","ignoreCollapsed","mapDescendants","isPseudoRoot","path","lowerSiblingCounts","selfPath","treeIndex","selfInfo","childIndex","childCount","mapResult","len","lastIndexOf","targetNoLen","changetreeIndex","changeColumWithID","changeColum","treedata","updateTreeData","treeRow","selectElement","getElementsByTagName","selectOptions","codeValue","getNodeDataAtTreeIndexOrNextIndex","targetIndex","nextIndex","getDescendantCount","walk","walkDescendants","toggleExpandedForAll","changeNodeAtPath","traverse","currentTreeIndex","pathIndex","nextTreeIndex","getNodeAtPath","foundNodeInfo","addNodeUnderParent","parentKey","expandParent","addAsFirstChild","insertedTreeIndex","hasBeenAdded","changedTreeData","getFlatDataFromTree","flattened","nodeInfo","getTreeFromFlatData","flatData","getKey","getParentKey","rootKey","childrenToParents","trav","parent","Tree","onMoveNode","dataNodes","propData","newSortOrd","nextParentNode","treeDataset","isSearched","searchString","addTreeRow","topNode","defaultNode","newIndx","isToTop","addToTop","newTree","treeDataState","chkChildRowtype","chkChildSearched","isFlatData","datasetIndexOf","scrollDiv","colum","selectedCode","selArr","targetId","maxDepth","onRowSelect","delNode","allowDel","deletedtreeData","removeNodeAtPath","editNode","viewNode","customPlaceholder","makeTreeHeader","treeHeader","canDrag","borderLeft","lastLen","allowSearch","toggleNodeExpansion","searchNode","searchQuery","handleSearchOnChange","searchFocusIndex","serchTargetIndex","treeRef","wrappedInstance","current","scrollToRow","selectPrevMatch","searchFoundCount","selectNextMatch","testonScroll","tempDataset","initial","rowInfo","selVal","depth","ediRowBtn","tempRecords","openAllonInitial","generateNodeProps","placeholderRenderer","searchMethod","scaffoldBlockPxWidth","reactVirtualizedListProps","searchFinishCallback","matches","orgSearched","toMove","dubchk","onRowDelete","combineReducers","configure","devTools","__REDUX_DEVTOOLS_EXTENSION__","createStore","datetime","POP_UP","PLAYER","LOADING","all","none","dataType","cns","qa","mng","authControl","QA","CENT","TEAM","USER","CSR","CREATE_OR_UPDATE","DESTROY","CREATE","UPDATE","isJson","setSession","sessionStorage","setItem","getItem","msgcd","sendMessage","getMsgCont","Dialog","callbackFunc","arrPopTag","tag","popDiv","store","Promise","reject","then","catch","openPlayer","arrPlayerTag","isAreadyOpened","currentplayer","playerDiv","openRealTime","arrRealTimeTag","currentRealTime","realTimeDiv","textContent","execCommand","strData","strFileName","navigator","appVersion","msSaveBlob","download","sBigCtgCd","sMdlCtgCd","tgtOrg","blnQa","setOrgComboValue","orgCode","commCodeList","BIG_CD","MDL_CD","getCentStndVl","strStndCd","strTargetCol","strRtn","arrStndVl","STND_CD","APY_FLAG","getInitScreen","iScrnId","setStateDs","strDatasetId","setRecordsToDs","nRowIndex","strColumnId","strValue","setValueToDs","arrRecords","initRecordsToDs","args","convOrgList","family","orgId","orgList","ORG_CS","ORG_QA","childArr","findChildrenOrg","familyArr","expandId","ChildArr","strMsg","objMsg","MSG_CD","MSG_CONT","setServerInfos","serverInfos","localStorage","prod","hostname","protocol","domainPort","host","dev","localbuild","local","blnBizPsb","arrCentList","BIZ_PSB_YN","objDs","teamType","arrTeamList","blnActive","arrUsrList","usr","ACT_STA_CD","getFuncAuth","strFuncKey","func","FUNC_ID","getConstList","arrConstList","getConstListValue","sValue","getTrim","String","valueOf","getPos","sOrg","sFind","nStart","getPosCase","toLowerCase","getPosReverse","getPosReverseCase","getReplace","sRepFrom","sRepTo","sRet","getReplaceCase","getSexCd","sRrNo","strRno","getNumStr","getLPad","nTotLen","sPad","nPadLen","getRPad","getRight","nSize","getLenB","sVal","charCodeAt","getLen3B","getFull2Half","sFull","sHalf","unescape","charAt","getHalf2Full","rTmp","iTmp","fromCharCode","isNum","sNum","point_cnt","ret","search","isAlNum","isKor","arg","sResult","setComma","nEnd","ppos","sDigit","setFormatData","delim","grdId","fileName","getTodayTime","excelComponent","base64","export","convertDataStructureToTable","getHeaderDepth","maxCnt","getMaxDepth","depthArr","reduce","previous","setHeader","headerArr","setHeaderforBody","bodyHeader","json","htmltable","excelFile","ctx","worksheet","table","s","m","btoa","encodeURIComponent","getLastDateNum","nMonth","isLeapYear","nY","getLastDate","nLastDate","getAddDate","nOffset","nYear","nDate","objDate","getFullYear","getMonth","getDate","getAddMonth","sYear","sMonth","sDay","nsDate","sToday","getHours","getMinutes","getSeconds","getDiffDate","sStartDate","sEndDate","NaN","vFromDate","vToDate","getDiffMonth","nStartMon","getStringDate","getDateYymmdd","strRowType","arrOrgRecs","idxA","idxB","blnModified","arrCol","getValueByRecId","setValueByRecId","find","record","findFirst","findLast","isUpdated","epytwor","gifnoc","reyolpme","datasets","setAccessToken","setReyolpme","arrUser","contentType","setBeforeSend","beforeSend","setError","timeout","setAsync","async","progress","makeTransData","config","addSequence","sequence","addIterator","iterator","addSendDataset","addRecvDataset","token","accessToken","setProgressBar","bln","noProgressbar","replcaceSpChar","doLoading","bVisible","objLoadDiv","loadProgressBar","agentAsync","agentSync","fileupload","retry","ERR_CODE","errorcode","UPLOADFAIL","ERR_MESSAGE","erorr","asyncdata","ERROR","systemid","procedure","batch","dir","interface","datasetmap","javascript","noisivid","datatype","html","script","xml","Login","getInfos","dsLoginInfo","onKeyUp","getModifierState","warning","hasChildNodes","dsRst","foo","dsUserInfo","dsCommCodeInfo","dsMenuInfo","dsCentStvlInfo","dsCentList","dsTeamList","dsMsgList","dsConstList","dsOrgList","LGN_IP","LOGIN_DT","timeoutId","dsLogin","PWD","CONN_IP","qs","decodeURIComponent","get_query","TA","dispatchEvent","CustomEvent","to","pathname","svrDivColor","cssText","jobSvrInfo","resSvrInfo","dsSvrInfo","RESC_USE_FLAG","TRN_FLAG","dsSvrJobInfo","allSECT","dsSrvDailyJobInfo","SECT","jobTpSECT","callTpSECT","totalSeconds","REC_TM","hours","REC_TM_HMS","jobTpDiagramData","callTpDiagramData","SUCC_CNT","TP_CONT","TP","fillTLObj","svrJobArr","svr","svrChartView","strJobData","fillArr","number","TIMELINE","dsSvrAllJobDailyInfo","intC","allData","jobTpData","CallTpData","strResData","svrResArr","svrBarChartView","svrChartView2","dsSrvDailyResInfoforGraph","maxData2","CPU","MEM","SWAP","IO","dsSvrResourceInfoDaily","DISK","USAGE","dsResStatsticDaily","dsSvrResourceAvgMax","options2","AVG_CPU","MAX_CPU","AVG_MEM","MAX_MEM","onFailClick","option1","jobTphoverd","jobTpselected","callTphoverd","callTpselected","setHovered","SVR_CONT","TM","AVG_IO","AVG_SWAP","MAX_IO","MAX_SWAP","dsJobStatisticDaily","SUCC_CNT_PERCENTAGE","FAIL_CNT_PERCENTAGE","REG_TIME","TOTAL_CNT","FAIL_CNT","FILE_SIZE","FILE_LENGTH","TYPEN","TYPER","TYPES","dsSrvDailyJobInfoforGraph","dsSrvDailyResInfo","TOT_CNT","FILE_SIZE_GB","radius","viewBoxSize","center","lineWidth","lengthAngle","dataEntry","percentage","labelPosition","segmentsStyle","transition","segmentsShift","labelStyle","pointerEvents","onMouseOver","onMouseOut","animate","detail","rangeCalendarProps","rgcSearch","S_DATE","E_DATE","CPU_MAX","MEM_MAX","SWAP_MAX","IO_MAX","maxAdd","maxDataCpu","maxDataMem","maxDataSwap","maxDataIo","onCalendarClose","onCalendarOpen","gridResult","gridResultGridApi","buttonProps","cpu","mem","swap","io","dsJobInfo","dsErrInfo","merged","isExist","existIndex","JobTpList","callTpList","serTp","useMaxSucc","useMaxFail","useSucc","useFail","allSucc","allFail","jobSucc","jobFail","callSucc","callFail","grdErrList","grdTotalList","dsTotalJobList","dsErrList","jobDataKeySucc","jobDataKeyFail","callDataKeySucc","callDataKeyFail","CD_VAL","orgMenu","userCent","userAuth","dsCent","dsUser","timeoutID2","iptCsNm","serchCs","dsCenterList","dsCsList","filterCsList","filterList","filteredcsList","setTransDate","New","dsSrchParamInfo","start","gridSttResultList","paging","searchTP","selSearchType","lastSearchType","resultTotal","must","searchTxt","iptSearch","callTp","searchTp","rgcSearchJob","selCallTP","lastSearchTxt","lastStartDate","lastEndDate","lastCallTp","query","bool","pattern_spc","searchIpt","axiosTransaction","newTransaction","dsSttSearch","orgData","hits","searchChar","highlight","_source","stt_rslt","end","ACTION_ICON","rec_tm","dtm","reg_dtm","secs","mins","hrs","file_size","kb","job_tp","stt_unq","call_tp","const_cd","call_id","_id","loading","sttGrd","selJobStateSearch","sttGrdApi","btnSearchProps","constList","cellRenderer","dsSttResultInfo","snapshot","pageStart","pageLimit","JOB_START_DATE","JOB_END_DATE","SCH_TP","SCH_VAL","JOB_STATE","CALL_TP","selJobTP","QUERY_START","QUERY_LIMIT","lastSearchTP","lastSearchVal","lastJobState","lastJobTp","sttResultGrd","sttResultGrdApi","setSearchParam","tooltipComponent","fileDataArray","START_DATE","END_DATE","REQ_USR","dsSrch","lastUsrCd","dsSelfFileList","gridProps","grdSelfFileList","selfFileListGrd","fileArray","jobId","JOB_ID","JOB_DV_CD","SERVER_NM","NEW_NM","selfFileListGrdApi","fileUpload","selUserList","existsBrdCdFileDataArray","existsVlaBrdInfoArray","SRCH_DV","SRCH_VALUE","dsGrp","fileUploadValidation","searchEnterKey","targetParams","addWord","iptAddCW","dupChkArr","uniqueArr","addCombineWord","targetWord","propsCmpWordList","cmpWordList","filterCmpWrodList","iconClick","delCombineWord","currentTarget","btnAddWord","iptSearchCW","CmpWordList","propsList","searchWord","NewList","word","orgColor","newColor","overFlowYScroll","addSentence","iptAddSentence","targetSentence","propsSentenceList","sentenceList","filterSentenceList","delSentence","dsStudyList","btnAddSentence","iptSearchSentence","searchSentence","sentence","dsWordList","dsSentenceList","wordDs","sentenceDs","combinedWordList","TRN_TIT","TRN_DTM","TRN_WORD","TRN_SENT","TRN_TP","TRN_UNQ","dsTrainList","wordList","trainListGridApi","grdTrainList","trainListGrid","dsTrainState","TrainUse_YN","addNewTrainList","activeTab","onExelDownLoad","selectedRow","trnState","TRN_STATE","confirm","newTargetList","newWordList","newWord","updateFlag","newSentanceList","newSentance","newSentenceList","onUploadFiles","targetFile","targetFileName","bstr","wb","excel","sheetNm1","SheetNames","ws1","Sheets","A1","cmpData","utils","sheet_to_json","sheetNm2","ws2","srtData","readAsArrayBuffer","btnDataDownload","btnExcelUpload","btnExecuteLearning","btnOpenLearningHist","exportFileFlag","STT050100","STT050200","fileTypes","handleFiles","searchType","searchDateS","searchDateE","accType","pageEnd","STD_FLAG","STD_TYPE","QUERY_PAGE","lastSelAccType","lastSelSearchType","lastCcalSearchDate","lastCalSearchDate","PART_NM","CALL_ST_DT","totalcount","ACC_FLAG","ACC_CONT","ACC_HISTORY","dsAccSwt","selAccType","calSearchDate","stId","grdAccSwt","calSearchDate_startDate","calSearchDate_endDate","selSearchType_value","dsSuccess","dsFail","totalJobCnt","totalFailCnt","gridSttSucc_total","gridSttFail_total","dataTP","dsSttGraph","gridSttSucc_header","gridSttFail_header","trim","lastdsSrch","param2","dsAuthList","authSearData","cmbSrchAuth_dataset","clickBtnId","afterAddUser","grdUserApi","userRow","userRows","cmbSrchDv_dataset","rowFinder","targetRecords","targetColumn","currentRow","secondColumn","secondRow","centRecord","gridCent","centHeader","centRows","gridCentApi","centNum","teamRecord","gridTeam","teamHeader","stndRecord","gridStndVal","iptCentCdNm","dsSel","teamRows","centRow","teamRow","dsCentRecv","dsCentCd","tempCentCd","maxCentTempCd","lastEditedCent","currentRowCent","dsTeamRecv","dsTeamCd","tempTeamCd","maxTeamTempCd","gridTeamApi","lastEditedTeam","currentRowTeam","dsStndValRecv","gridStndValApi","CENT_SET_CHG_FLAG","STND_PPTY_USE_FLAG","APY_PPTY_USE_FLAG","ETC1_PPTY_USE_FLAG","ETC2_PPTY_USE_FLAG","rowType","centCdRecords","currentRowStnd","currentCentTempCd","currtenTeamTempCd","maxStndTempCd","copyRow","dsCentStndValList","btnCentSave","btnTeamSave","btnStndSave","afterAddCus","csGridApi","csGrid","constRow","constRows","iptSrchword","rgcRecDate","missSentGrid","REG_USR_ID","iptRegIdNm","APP_YN","selAppYn","lastRegIdNm","lastAppYn","dsMissSentList","missSentGridApi","btnSave","gridMissSentList","keywordGrid","stnScrtHeader","selKeyType","selUseYn","lastkeyType","slastUseYn","lastUseYn","keywordGridApi","dictionaryRecord","dictionaryGrid","dictionaryHeader","grdDictionary","dictionaryRows","dictionaryGridApi","dictionaryNum","WORD_NM","similarRecord","similarGrid","similarHeader","grdSilmilar","similarRows","similarGridApi","similarNum","SNM_NM","similarNumA","similarNumB","dicRecord","simRecord","iptWordNm","selWordTp","WORD_UNQ","dictionaryRow","silmilarRow","dsDictionaryRecv","wordUnq","dsDictionary","tempDicCd","maxtempDicCd","lastEditedDic","currentRowDic","dsSimilar","dsSimilarRecv","tempSimilar","maxtempSimilar","currentRowSil","bigCdRecords","currentRowMdm","dsDictionaryList","dsSimilarList","btnDictionarySave","btnSimilarSave","btnDistribute","lagRecord","lagCdGrid","grdLagCd","lagRows","lagCdGridApi","lagNum","LAG_CD","MDM_CD","smlRecord","smlCdGrid","smlHeader","grdSmlCd","smlRows","smlCdGridApi","smlNum","SML_CD","smlNumA","smlNumB","iptLagCdNm","lagRow","smlRow","dsBigCdRecv","bigCd","mdlCd","dsBigCd","tempLagCd","maxTempLagCd","lastEditedLag","lastEditedMdm","currentRowLag","dsSmlCd","dsSmlCdRecv","tempSmlCd","maxTempSmlCd","currentRowSml","dsLagCdList","dsSmlCdList","btnBigSave","btnSmlSave","menuRecord","grdMenu","menuHeader","grdMenuCdProps","menuRows","grdMenuApi","menuNum","iptMenuId","iptMenuNm","dsMenuRecv","MNU_TP","btnMenuSearchProps","btnBMenuSaveProps","grdPrgmApi","grdAuthApi","currentRowAuth","authRowNm","dsAuthInfo","dsAuthRecv","authCd","dsPrgmRecv","grdAuth","grdPrgm","authRow","authRows","getRowNode","childSelectedCnt","childNode","siblingSelectedCnt","siblingNode","isRowClicked","dsPrgmInfo","grdAuthInfo","grdPrgmInfo","btnPrgmSaveProps","stndHeader","stndCdGrid","iptCdNm","dsStndCdRecv","dsStndValInfo","btnSaveProps","rowspan","msgRecord","gridMsgCd","msgHeader","iptMsgCdNm","dsMsgCdRecv","gridMsgCdApi","currentRowMsg","dsMsgCdList","serverRecords","gridServer","serverHeader","SVR_IP","iptServerNm","dsServerListRecv","gridServerApi","currentRowSvr","dsServerList","chennelRecord","chennelGrid","chennelHeader","chennelRows","chennelGridApi","chennelNum","TEMP","isDup","dupType","CONST_IP","SRH_STR","SRH_TP","cnList","dsChennelList","chennelRow","currntChennel","allowed","btnAdd","cmbSrchUseYn","orgAreaName","dsSysLogList","onLoadData","grdSysLog","dsSnroList","sysLogList","lastSchStr","lastSchTp","dsUserLogList","grdUserLog","userLogList","dsTrainLogList","grdTrainLog","trainLogList","appRoute","exact","COM010000","STA010000","STA030000","STT010000","STT020000","STT030000","STT040000","STT050000","STT060000","STT070000","SYS010000","SYS020000","SYS030000","SYS040000","SYS050000","SYS060000","SUP010000","SUP020000","SUP030000","SUP040000","SUP050000","SUP060000","SUP070000","SUP080100","SUP080200","SUP080300","orgNode","dsSnroNodeList","orgLink","dsSnroLinkList","dsDelNodeList","dsSnroInitTTSListRecv","addSelect","CODE_TP","dsSnroNodeListRecv","dsSnroLinkListRecv","refDiagram","diagram","transNode","transLink","dsSnroInitTTSList","actionData","grdSnroInitProcess","iptBigCdNm","schRecord","ORG_ID","AUTH_CD","lastEdited","multiSelectbox","USE_YN","selAuthCd_dataSet","grdUserList_header","schParm","Main","closeMenu","onPrevMove","prevMenu","onNextMove","nextMenu","closeAllMenu","trayProp","Footer","Header","pop","divUser","userInfo","infoOption","expended","alignContent","verticalAlign","AppMain","onbeforeunload","returnValue","onunload","trayWidthTransform","trayWidth","App","token_TA","history","createBrowserHistory","require","enable"],"mappings":"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","file":"public/js/main.4822bbff.chunk.js","sourcesContent":["var map = {\n\t\"./af\": 581,\n\t\"./af.js\": 581,\n\t\"./ar\": 582,\n\t\"./ar-dz\": 583,\n\t\"./ar-dz.js\": 583,\n\t\"./ar-kw\": 584,\n\t\"./ar-kw.js\": 584,\n\t\"./ar-ly\": 585,\n\t\"./ar-ly.js\": 585,\n\t\"./ar-ma\": 586,\n\t\"./ar-ma.js\": 586,\n\t\"./ar-sa\": 587,\n\t\"./ar-sa.js\": 587,\n\t\"./ar-tn\": 588,\n\t\"./ar-tn.js\": 588,\n\t\"./ar.js\": 582,\n\t\"./az\": 589,\n\t\"./az.js\": 589,\n\t\"./be\": 590,\n\t\"./be.js\": 590,\n\t\"./bg\": 591,\n\t\"./bg.js\": 591,\n\t\"./bm\": 592,\n\t\"./bm.js\": 592,\n\t\"./bn\": 593,\n\t\"./bn-bd\": 594,\n\t\"./bn-bd.js\": 594,\n\t\"./bn.js\": 593,\n\t\"./bo\": 595,\n\t\"./bo.js\": 595,\n\t\"./br\": 596,\n\t\"./br.js\": 596,\n\t\"./bs\": 597,\n\t\"./bs.js\": 597,\n\t\"./ca\": 598,\n\t\"./ca.js\": 598,\n\t\"./cs\": 599,\n\t\"./cs.js\": 599,\n\t\"./cv\": 600,\n\t\"./cv.js\": 600,\n\t\"./cy\": 601,\n\t\"./cy.js\": 601,\n\t\"./da\": 602,\n\t\"./da.js\": 602,\n\t\"./de\": 603,\n\t\"./de-at\": 604,\n\t\"./de-at.js\": 604,\n\t\"./de-ch\": 605,\n\t\"./de-ch.js\": 605,\n\t\"./de.js\": 603,\n\t\"./dv\": 606,\n\t\"./dv.js\": 606,\n\t\"./el\": 607,\n\t\"./el.js\": 607,\n\t\"./en-au\": 608,\n\t\"./en-au.js\": 608,\n\t\"./en-ca\": 609,\n\t\"./en-ca.js\": 609,\n\t\"./en-gb\": 610,\n\t\"./en-gb.js\": 610,\n\t\"./en-ie\": 611,\n\t\"./en-ie.js\": 611,\n\t\"./en-il\": 612,\n\t\"./en-il.js\": 612,\n\t\"./en-in\": 613,\n\t\"./en-in.js\": 613,\n\t\"./en-nz\": 614,\n\t\"./en-nz.js\": 614,\n\t\"./en-sg\": 615,\n\t\"./en-sg.js\": 615,\n\t\"./eo\": 616,\n\t\"./eo.js\": 616,\n\t\"./es\": 617,\n\t\"./es-do\": 618,\n\t\"./es-do.js\": 618,\n\t\"./es-mx\": 619,\n\t\"./es-mx.js\": 619,\n\t\"./es-us\": 620,\n\t\"./es-us.js\": 620,\n\t\"./es.js\": 617,\n\t\"./et\": 621,\n\t\"./et.js\": 621,\n\t\"./eu\": 622,\n\t\"./eu.js\": 622,\n\t\"./fa\": 623,\n\t\"./fa.js\": 623,\n\t\"./fi\": 624,\n\t\"./fi.js\": 624,\n\t\"./fil\": 625,\n\t\"./fil.js\": 625,\n\t\"./fo\": 626,\n\t\"./fo.js\": 626,\n\t\"./fr\": 627,\n\t\"./fr-ca\": 628,\n\t\"./fr-ca.js\": 628,\n\t\"./fr-ch\": 629,\n\t\"./fr-ch.js\": 629,\n\t\"./fr.js\": 627,\n\t\"./fy\": 630,\n\t\"./fy.js\": 630,\n\t\"./ga\": 631,\n\t\"./ga.js\": 631,\n\t\"./gd\": 632,\n\t\"./gd.js\": 632,\n\t\"./gl\": 633,\n\t\"./gl.js\": 633,\n\t\"./gom-deva\": 634,\n\t\"./gom-deva.js\": 634,\n\t\"./gom-latn\": 635,\n\t\"./gom-latn.js\": 635,\n\t\"./gu\": 636,\n\t\"./gu.js\": 636,\n\t\"./he\": 637,\n\t\"./he.js\": 637,\n\t\"./hi\": 638,\n\t\"./hi.js\": 638,\n\t\"./hr\": 639,\n\t\"./hr.js\": 639,\n\t\"./hu\": 640,\n\t\"./hu.js\": 640,\n\t\"./hy-am\": 641,\n\t\"./hy-am.js\": 641,\n\t\"./id\": 642,\n\t\"./id.js\": 642,\n\t\"./is\": 643,\n\t\"./is.js\": 643,\n\t\"./it\": 644,\n\t\"./it-ch\": 645,\n\t\"./it-ch.js\": 645,\n\t\"./it.js\": 644,\n\t\"./ja\": 646,\n\t\"./ja.js\": 646,\n\t\"./jv\": 647,\n\t\"./jv.js\": 647,\n\t\"./ka\": 648,\n\t\"./ka.js\": 648,\n\t\"./kk\": 649,\n\t\"./kk.js\": 649,\n\t\"./km\": 650,\n\t\"./km.js\": 650,\n\t\"./kn\": 651,\n\t\"./kn.js\": 651,\n\t\"./ko\": 652,\n\t\"./ko.js\": 652,\n\t\"./ku\": 653,\n\t\"./ku.js\": 653,\n\t\"./ky\": 654,\n\t\"./ky.js\": 654,\n\t\"./lb\": 655,\n\t\"./lb.js\": 655,\n\t\"./lo\": 656,\n\t\"./lo.js\": 656,\n\t\"./lt\": 657,\n\t\"./lt.js\": 657,\n\t\"./lv\": 658,\n\t\"./lv.js\": 658,\n\t\"./me\": 659,\n\t\"./me.js\": 659,\n\t\"./mi\": 660,\n\t\"./mi.js\": 660,\n\t\"./mk\": 661,\n\t\"./mk.js\": 661,\n\t\"./ml\": 662,\n\t\"./ml.js\": 662,\n\t\"./mn\": 663,\n\t\"./mn.js\": 663,\n\t\"./mr\": 664,\n\t\"./mr.js\": 664,\n\t\"./ms\": 665,\n\t\"./ms-my\": 666,\n\t\"./ms-my.js\": 666,\n\t\"./ms.js\": 665,\n\t\"./mt\": 667,\n\t\"./mt.js\": 667,\n\t\"./my\": 668,\n\t\"./my.js\": 668,\n\t\"./nb\": 669,\n\t\"./nb.js\": 669,\n\t\"./ne\": 670,\n\t\"./ne.js\": 670,\n\t\"./nl\": 671,\n\t\"./nl-be\": 672,\n\t\"./nl-be.js\": 672,\n\t\"./nl.js\": 671,\n\t\"./nn\": 673,\n\t\"./nn.js\": 673,\n\t\"./oc-lnc\": 674,\n\t\"./oc-lnc.js\": 674,\n\t\"./pa-in\": 675,\n\t\"./pa-in.js\": 675,\n\t\"./pl\": 676,\n\t\"./pl.js\": 676,\n\t\"./pt\": 677,\n\t\"./pt-br\": 678,\n\t\"./pt-br.js\": 678,\n\t\"./pt.js\": 677,\n\t\"./ro\": 679,\n\t\"./ro.js\": 679,\n\t\"./ru\": 680,\n\t\"./ru.js\": 680,\n\t\"./sd\": 681,\n\t\"./sd.js\": 681,\n\t\"./se\": 682,\n\t\"./se.js\": 682,\n\t\"./si\": 683,\n\t\"./si.js\": 683,\n\t\"./sk\": 684,\n\t\"./sk.js\": 684,\n\t\"./sl\": 685,\n\t\"./sl.js\": 685,\n\t\"./sq\": 686,\n\t\"./sq.js\": 686,\n\t\"./sr\": 687,\n\t\"./sr-cyrl\": 688,\n\t\"./sr-cyrl.js\": 688,\n\t\"./sr.js\": 687,\n\t\"./ss\": 689,\n\t\"./ss.js\": 689,\n\t\"./sv\": 690,\n\t\"./sv.js\": 690,\n\t\"./sw\": 691,\n\t\"./sw.js\": 691,\n\t\"./ta\": 692,\n\t\"./ta.js\": 692,\n\t\"./te\": 693,\n\t\"./te.js\": 693,\n\t\"./tet\": 694,\n\t\"./tet.js\": 694,\n\t\"./tg\": 695,\n\t\"./tg.js\": 695,\n\t\"./th\": 696,\n\t\"./th.js\": 696,\n\t\"./tk\": 697,\n\t\"./tk.js\": 697,\n\t\"./tl-ph\": 698,\n\t\"./tl-ph.js\": 698,\n\t\"./tlh\": 699,\n\t\"./tlh.js\": 699,\n\t\"./tr\": 700,\n\t\"./tr.js\": 700,\n\t\"./tzl\": 701,\n\t\"./tzl.js\": 701,\n\t\"./tzm\": 702,\n\t\"./tzm-latn\": 703,\n\t\"./tzm-latn.js\": 703,\n\t\"./tzm.js\": 702,\n\t\"./ug-cn\": 704,\n\t\"./ug-cn.js\": 704,\n\t\"./uk\": 705,\n\t\"./uk.js\": 705,\n\t\"./ur\": 706,\n\t\"./ur.js\": 706,\n\t\"./uz\": 707,\n\t\"./uz-latn\": 708,\n\t\"./uz-latn.js\": 708,\n\t\"./uz.js\": 707,\n\t\"./vi\": 709,\n\t\"./vi.js\": 709,\n\t\"./x-pseudo\": 710,\n\t\"./x-pseudo.js\": 710,\n\t\"./yo\": 711,\n\t\"./yo.js\": 711,\n\t\"./zh-cn\": 712,\n\t\"./zh-cn.js\": 712,\n\t\"./zh-hk\": 713,\n\t\"./zh-hk.js\": 713,\n\t\"./zh-mo\": 714,\n\t\"./zh-mo.js\": 714,\n\t\"./zh-tw\": 715,\n\t\"./zh-tw.js\": 715\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1399;","import React from 'react';\r\n\r\nclass BasicButton extends React.Component{\r\n\tconstructor (props) {\r\n\t\t\tsuper(props);\r\n\t\t\tthis.state = { disbaled : this.props.disabled }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tmt: '0px',\r\n\t\tmr: '0px',\r\n\t\tmb: '0px',\r\n\t\tml: '0px',\r\n\t\tdisabled: false,\r\n\t\ttype : 'default',\r\n\t\tsize : 'md',\r\n\t\tcolor : 'grey',\r\n\t\tfilled : false,\r\n\t\thidden: false,\r\n\t\tonClick : (e) => {return;}\r\n\t}\r\n\trender () {\r\n\t\tlet fiiled, innerImage, btnClass, iconClass;\r\n\r\n\t\tfiiled = (this.props.fiiled) ? '' : '-o';\r\n\t\tinnerImage = (this.props.icon) ? ' i' : '';\r\n\r\n\t\tbtnClass =  (this.props.value) ? 'scrm-btn ' + this.props.size + ' ' + this.props.color + fiiled : btnClass = 'scrm-btn ' + this.props.size + ' ' + this.props.color + fiiled + innerImage;\r\n\r\n\t\tswitch (this.props.icon) {\r\n\t\t\tcase \"save\"    : iconClass = 'xi-diskette xi-x'; break;\r\n\t\t\tcase \"add\"     : iconClass = 'xi-plus xi-x';     break;\r\n\t\t\tcase \"del\"     : iconClass = 'xi-minus xi-x';    break;\r\n\t\t\tcase \"check\"   : iconClass = 'xi-check xi-x';    break;\r\n\t\t\tcase \"trash\"   : iconClass = 'xi-trash-o xi-x';  break;\t\t\t\t\r\n\t\t\tcase \"undo\"    : iconClass = 'xi-undo';          break;\r\n\t\t\tcase \"redo\"    : iconClass = 'xi-redo';          break;\r\n\t\t\tcase \"arrowUp\" : iconClass = 'xi-arrow-up';      break;\r\n\t\t\tcase \"arrowDn\" : iconClass = 'xi-arrow-down';    break;\r\n\t\t\tcase \"close\"   : iconClass = 'xi-close';         break;\r\n\t\t\tcase \"play\"    : iconClass = 'xi-play xi-x';     break;\r\n\t\t\tcase \"pause\"   : iconClass = 'xi-pause xi-x';    break;\r\n\t\t\tcase \"left\"    : iconClass = 'xi-arrow-left xi-x c-grey-6';   break;\r\n\t\t\tcase \"right\"   : iconClass = 'xi-arrow-right xi-x c-grey-6';  break;\r\n\t\t\tcase \"copy\"    : iconClass = (this.props.fiiled) ? 'xi-documents xi-x'  : 'xi-documents-o xi-x'; break;\r\n\t\t\tcase \"down\"    : iconClass = (this.props.fiiled) ? 'xi-download xi-x'   : 'xi-download-o xi-x';  break;\r\n\t\t\tcase \"srch\"    : iconClass = (this.props.fiiled) ? 'xi-search xi-x'     : 'xi-search-o xi-x';    break;\r\n\t\t\tdefault : iconClass = null; break;\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<button className = {btnClass} ref = { (ref) => this.button = ref } id = {this.props.id} onClick = {(e) => { e.target.blur(); this.props.onClick(e);} } disabled={ this.props.disabled }\r\n\t\t\t\t\ttooltip = {this.props.tooltip} style={{ marginTop: this.props.mt, marginRight: this.props.mr, marginBottom: this.props.mb, marginLeft: this.props.ml, visibility : (this.props.hidden) ? 'hidden' :  'visible'}}\r\n\t\t\t>\r\n\t\t\t\t{iconClass !== null ? <i onClick= {(e) => { e.stopPropagation(); this.button.click(); }} className={ iconClass }></i> :  null}\r\n\t\t\t\t{this.props.value}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass IconButton extends React.Component{\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<button tooltip = {this.props.tooltip} className= {this.props.classes} id = {this.props.id} style={this.props.style} onClick = {this.props.onClick}></button>\r\n\t\t);\r\n\t}\r\n}\r\nclass BadgeButton extends React.Component{\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<button tooltip = {this.props.tooltip} className= {this.props.classes} id = {this.props.id} onClick = {this.props.onClick}></button>\r\n\t\t);\r\n\t}\r\n}\r\nclass CsButton extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { disbaled : this.props.disabled }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tdisabled: false,\r\n\t\ttype : 'default',\r\n\t\tsize : 'xi-5x',\r\n\t\tcolor : 'grey',\r\n\t\tfilled : false,\r\n\t\tonClick : (e) => {return;}\r\n\t}\r\n\trender () {\r\n\t\tlet btnfiiled, fiiled, iconClass, btnClass;\r\n\r\n\t\tbtnfiiled = this.props.callType !== 'E' ? '-o ' : '-o ';\r\n\t\tfiiled    = this.props.callType !== 'E' ? '-o ' : '-off ';\r\n\t\tbtnClass  = 'scrm-cs-btn ' + (this.props.callType !== 'E' ? (this.props.callType === 'I' ? this.props.color : this.props.color2) : 'grey') + btnfiiled + 'i';\r\n\t\ticonClass = 'xi-microphone' + fiiled + this.props.size;  \r\n\t\treturn (\r\n\t\t\t<button ref={(ref)=> this.button = ref} \r\n\t\t\t\t\tclassName={btnClass} \r\n\t\t\t\t\ttooltip={this.props.tooltip} \r\n\t\t\t\t\tid={this.props.id} \r\n\t\t\t\t\tstyle={{ border: '0', outline: '0', background: 'none'}}\r\n\t\t\t\t\tdisabled={this.props.callType === 'E' ? true : false}>\r\n\t\t\t\t<i className={ iconClass }></i>\r\n\t\t\t\t<div>\t\t\t\t\r\n\t\t\t\t\t<div className=\"scrm-label-div\" style={{display: 'block'}}>\r\n\t\t\t\t\t\t<span style={{color : 'black'}}>{this.props.name}</span>\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.props.callType === 'E' ?\r\n\t\t\t\t\t\t<span style={{color: \"#808080\"}}>(-)</span>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tthis.props.callType === 'I' ?\r\n\t\t\t\t\t\t\t<span style={{color: this.props.color, fontWeight: \"bold\"}}>(In)</span>\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<span style={{color: this.props.color2, fontWeight: \"bold\"}}>(Out)</span>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n}\r\nexport {BasicButton, IconButton, BadgeButton, CsButton};\r\n","import React from 'react';\r\nimport {\r\n\tResponsiveContainer, RadialBar, Legend, Tooltip, \r\n\tLineChart, CartesianGrid, XAxis,YAxis, Line,\r\n\tBarChart , Bar,\r\n\tSurface,\r\n\tSymbols\r\n} from 'recharts';\r\n// https://recharts.org/en-US/guide <== API site\r\nimport _ from \"lodash\";\r\nimport { SubFullPanel\r\n\t, FlexPanel\r\n\t, ComponentPanel\r\n\t, RelativeGroup    } from 'components';\r\nimport { max } from 'moment';\r\n\r\nconst CustomTooltip = (e) => {\r\n\tlet {label, payload, content} = e;\r\n\tif (payload && payload.length && label) {\r\n\t\tlet dataKeys = content._owner.memoizedProps.options.dataKey;\r\n\t\treturn (\r\n\t\t\t<div style={{backgroundColor: \"white\", border: \"1px solid #1a1a1a\"}}>\r\n\t\t\t\t<div className=\"scrm-label-div\" >\r\n\t\t\t\t\t<span>{label}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t{payload.map((entry, index) => {\r\n\t\t\t\t\tconst { dataKey, stroke, unit, payload } = entry;\r\n\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\tmarginRight: 10,\r\n\t\t\t\t\t\tcolor: stroke\r\n\t\t\t\t\t};\r\n\t\t\t\t\tlet dataname = \"\";\t\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < dataKeys.length; i ++){\r\n\t\t\t\t\t\tif (dataKeys[i].key === dataKey) {\r\n\t\t\t\t\t\t\tdataname = dataKeys[i].name\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tclassName=\"legend-item\"\r\n\t\t\t\t\t\t\t\tkey={index + \"_legend-item\"}\r\n\t\t\t\t\t\t\t\tstyle={style}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Surface width={10} height={10} >\r\n\t\t\t\t\t\t\t\t\t<Symbols cx={5} cy={5} type=\"circle\" size={50} fill={stroke} />\r\n\t\t\t\t\t\t\t\t</Surface>\r\n\t\t\t\t\t\t\t\t<span>{dataname} : {payload[dataKey] + unit}</span>\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\t\t\t\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n\t\r\n\t// return null;\r\n  };\r\n\r\nclass ScrmLineBarChart extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { disabled: []};\r\n\t\tthis.dataSet = [];\r\n\t}\r\n\r\n\thandleClick = dataKey => {\r\n\t\t// 사용 안하기로 함\r\n\r\n\t\t// if (_.includes(this.state.disabled, dataKey)) {\r\n\t\t// \tthis.setState({\r\n\t\t// \t\tdisabled: this.state.disabled.filter(obj => obj !== dataKey)\r\n\t\t// \t});\r\n\t\t// } else {\r\n\t\t//   \tthis.setState({ disabled: this.state.disabled.concat(dataKey) });\r\n\t\t// }\r\n\t};\r\n\tonMouseEnter = (e) => {\r\n\t\t\r\n\t}\r\n\tonMouseMove = (e) => {\r\n\t\t\r\n\t}\r\n\tonMouseLeave = (e) => {\r\n\t\t\r\n\t}\r\n\trenderCusomizedLegend = ({ payload }) => {\r\n\t\treturn (\r\n\t\t\t<div className=\"customized-legend\" style={{textAlign: 'center'}}>\t\t\t\t\r\n\t\t\t\t{payload.map((entry, index) => {\r\n\t\t\t\t\tconst { key, color, name } = entry;\r\n\t\t\t\t\tconst active = _.includes(this.state.disabled, key);\r\n\t\t\t\t\tconst style = {\r\n\t\t\t\t\t\tmarginRight: 10,\r\n\t\t\t\t\t\tcolor: active ? \"#AAA\" : color\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\tclassName=\"legend-item\"\r\n\t\t\t\t\t\t\tkey={index + \"_legend-item\"}\r\n\t\t\t\t\t\t\tonClick={() => this.handleClick(key)}\r\n\t\t\t\t\t\t\tstyle={style}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{/* <Surface width={10} height={10} viewBox=\"0 0 10 10\"></Surface> */}\r\n\t\t\t\t\t\t\t<Surface width={10} height={10} >\r\n\t\t\t\t\t\t\t\t<Symbols cx={5} cy={5} type=\"circle\" size={50} fill={color} />\r\n\t\t\t\t\t\t\t\t\t{active && (\r\n\t\t\t\t\t\t\t\t\t\t<Symbols\r\n\t\t\t\t\t\t\t\t\t\t\tcx={5}\r\n\t\t\t\t\t\t\t\t\t\t\tcy={5}\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"circle\"\r\n\t\t\t\t\t\t\t\t\t\t\tsize={25}\r\n\t\t\t\t\t\t\t\t\t\t\tfill={\"#FFF\"}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</Surface>\r\n\t\t\t\t\t\t\t<span>{name}</span>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</div>\r\n\t\t);\r\n\t};\r\n\tshouldComponentUpdate (nextProps) {\r\n\t\tif (nextProps.data === this.dataSet) {\r\n\r\n\t\t\treturn false;\r\n\t\t} else {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\t// let dataMax = this.findMaxData();\r\n\r\n\t\t// dataSet = this.props.data;\r\n\t\t\r\n\t}\r\n\r\n\trender () {\t\t\r\n\t\treturn (\t\t\t\t\r\n\t\t\t\t\t<ResponsiveContainer width=\"100%\" aspect={this.props.aspect}>\t\r\n\t\t\t\t\t\t<LineChart data={this.props.data} margin={{right: 20, left: 20 }}>\r\n\t\t\t\t\t\t\t<CartesianGrid strokeDasharray=\"3 3\" />\r\n\t\t\t\t\t\t\t<XAxis dataKey={this.props.options.XAsisKey}  />\r\n\t\t\t\t\t\t\t<YAxis allowDecimals = {false} domain={[0, this.props.maxData]}/>\r\n\t\t\t\t\t\t\t<Tooltip content={<CustomTooltip />} />\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.options.dataKey.filter(item => !_.includes(this.state.disabled, item.key)).map((item, key) => {\r\n\t\t\t\t\t\t\t\t\t\treturn <Line type=\"monotone\" dataKey={item.key} key={key} stroke={item.color} unit = {this.props.unit}  activeDot={{onClick: (e)=> {console.log(e)} }}/>\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t<Legend\r\n\t\t\t\t\t\t\t\theight={24}\r\n\t\t\t\t\t\t\t\tpayload={this.props.options.dataKey}\r\n\t\t\t\t\t\t\t\tcontent={this.renderCusomizedLegend}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</LineChart>\t\t\t\t\r\n\t\t\t\t\t</ResponsiveContainer>\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass ScrmBarChart extends React.Component{\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div style={{width: \"100%\", height: \"100%\"}}>\t\r\n\t\t\t\t<ResponsiveContainer width=\"100%\" height=\"80%\">\t\t\t\r\n\t\t\t\t\t<BarChart  data={this.props.data} layout={this.props.layout} >\r\n\t\t\t\t\t\t<XAxis type=\"number\" domain={[0, 100]}  /> \r\n\t\t\t\t\t\t<YAxis dataKey= {this.props.dailyOptions.YAsisKey} hide reversed type=\"category\" />\r\n\t\t\t\t\t\t<Tooltip/>\r\n\t\t\t\t\t\t<Legend/>     \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tthis.props.dailyOptions.dataKey.map((item, key) => {\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\treturn <Bar dataKey={item.key} key={key} fill={item.color} unit={'%'} barSize={100}/>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t</BarChart>\r\n\t\t\t\t</ResponsiveContainer>\t\r\n\t\t\t</div>\t\t\t\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\n\r\nexport { ScrmLineBarChart, ScrmBarChart};","import React from 'react'\r\nimport {ComLib, TransManager, StrLib} from 'common';\r\n\r\nclass PwdInit extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        // state 초기화\r\n        this.state = {\r\n            open : false,\r\n            param : {\r\n                id : '',\r\n                name : '',\r\n                telNo : ''\r\n             }\r\n        }\r\n        // 이벤트 바인딩\r\n        this.event.button.onClick = this.event.button.onClick.bind(this);\r\n        this.event.input.onChange = this.event.input.onChange.bind(this)\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [2. OnLoad Event Zone]\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [3. validation Event Zone]\r\n    //  - validation 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    validation = (id) => {\r\n        switch (id) {\r\n            // 로그인 체크\r\n            case 'PWD_INIT_C01' :\r\n                if (StrLib.isNull(this.state.param.id)) {\r\n                    ComLib.openDialog('A', 'ID를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.name)) {\r\n                    ComLib.openDialog('A', '사용자 성명을 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                if (StrLib.isNull(this.state.param.telNo)) {\r\n                    ComLib.openDialog('A', '전화번호를 입력해 주세요.');\r\n                    return false;\r\n                }\r\n                return true;\r\n            default :\r\n                break;\r\n        }\r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [4. transaction Event Zone]\r\n    //  - transaction 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    transaction = (transId) => {\r\n        console.log('transaction start');\r\n        let transManager = new TransManager();\r\n        try  {\r\n            switch (transId) {\r\n                // 로그인 체크\r\n                case 'PWD_INIT_C01' :\r\n                    transManager.setTransId(transId);\r\n                    transManager.setTransUrl(transManager.constants.url.init);\r\n                    transManager.setCallBack(this.callback);\r\n                    transManager.addConfig({\r\n                        dao: transManager.constants.dao.base,\r\n                        crudh: transManager.constants.crudh.create,\r\n                        // sqlmapid:\"COM.C_doInitPwd\",\r\n                        datasetsend:\"dsSendData\",\r\n                        datasetrecv:\"dsRecvData\",\r\n                    });\r\n                    transManager.addDataset('dsSendData', [{ USR_ID : this.state.param.id, USR_NM: this.state.param.name, TEL_NO: this.state.param.birth }]);\r\n                    transManager.agent();\r\n                    break;\r\n\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n    }\r\n\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [5. Callback Event Zone]\r\n    //  - Callback 관련 정의\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    callback = (res) => {\r\n        console.log('callback start');\r\n        console.log(res);\r\n        try  {\r\n            switch (res.id) {\r\n                case 'PWD_INIT_C01' :\r\n                    console.log(res.data);\r\n                    alert(res.data.dsRecvData.password);\r\n                    this.props.onClose();\r\n                    break;\r\n                default :\r\n                    break;\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            alert(err);\r\n        }\r\n        \r\n    }\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    // [6. event Zone]\r\n    //  - 각 Component의 event 처리\r\n    /*------------------------------------------------------------------------------------------------*/\r\n    event = {\r\n        button : {\r\n            onClick : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'btnPwdInitConfirm' : \r\n                        if (this.validation('PWD_INIT_C01')) {\r\n                            this.transaction('PWD_INIT_C01');\r\n                        }\r\n                        break;\r\n                    case 'btnPwdInitCancel' :\r\n                        this.props.onClose();\r\n                        break;\r\n                    default : break;\r\n                }\r\n            }\r\n        },\r\n        input : {\r\n            onChange : (e) => {\r\n                switch (e.target.id) {\r\n                    case 'txtInitId'    : this.setState({...this.state, param : {...this.state.param, id : e.target.value}}); break;\r\n                    case 'txtInitPwd'   : this.setState({...this.state, param : {...this.state.param, name : e.target.value}}); break;\r\n                    case 'txtInitTelNo' : this.setState({...this.state, param : {...this.state.param, telNo : e.target.value}}); break;\r\n                    default: break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    componentDidMount(){\r\n    }\r\n    render () {\r\n        return (\r\n            <div className=\"scrm-pwdinit\">\r\n                <div className=\"scrm-pwd-init-div\">\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>ID</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitId' value={this.state.param.id} placeholder={'사용자 ID를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div> \r\n                    <div className = 'scrm-login-input'>\r\n                        <label>성명</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitPwd' value={this.state.param.name} placeholder={'성명을 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-input'>\r\n                        <label>전화번호</label>\r\n                        <input style={{width: '100%'}} type=\"text\" id = 'txtInitTelNo' value={this.state.param.telNo} placeholder={'전화번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n                    </div>\r\n                    <div className = 'scrm-login-btn-div'>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitConfirm' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n                        <div className = 'scrm-login-btn'><button id='btnPwdInitCancel' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PwdInit;","import React from 'react';\r\nimport {ComLib, StrLib, TransManager, DataLib} from 'common';\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n//  화면 ID     : pwdChg\r\n//  화면명      : 비밀번호 변경\r\n//  화면 종류   : 팝업\r\n//  작성자      : HW.LEE\r\n//  작성일자    : 2020.07.26\r\n/*------------------------------------------------------------------------------------------------*/\r\nclass PwdChg extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\tdsPwdInfo: DataLib.datalist.getInstance([{USR_ID: '', CUR_PWD: '', NEW_PWD: '', CON_PWD: ''}]),\r\n\t\t}\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this)\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tComLib.setStateInitRecords(this, \"dsPwdInfo\", this.props.options.param);\r\n\t}\r\n\r\n\tevent = {\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptUsrCd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"USR_ID\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptCurPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CUR_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptNewPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"NEW_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptConPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CON_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnPwdchgConfirm':\r\n\t\t\t\t\tif (this.validation('PWDCHG_R01')) this.transaction('PWDCHG_R01');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnPwdchgCancel':\r\n\t\t\t\t\t//window.location = '/';\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid).remove();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t * PWDCHG_R01 : 인증 / 신규 비밀번호 체크\r\n\t * PWDCHG_C01 : 신규 비밀번호 등록\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"USR_ID\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['아이디를 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CUR_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['현재 비밀번호를 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['새로운 비밀번호를 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"CUR_PWD\") === this.state.dsPwdInfo.getValue(0, \"NEW_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['현재 비밀번호와 신규 비밀번호가 같습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").length < 4) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['최소 4자리 이상 입력해 주세요']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").length > 14) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['최대 14자리 까지 입력해 주세요']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") === this.state.dsPwdInfo.getValue(0, \"USR_ID\")) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['사용자 ID와 비밀번호가 동일합니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!StrLib.isAlpha(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").substr(0, 1))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호는 영문자로 시작해야 합니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!/[_!@#$%^&*()_+=-]/.test(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['특수문자가 포함되어야 합니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CON_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['신규 비밀번호를 재 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") !== this.state.dsPwdInfo.getValue(0, \"CON_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['신규 비밀번호와 재입력된 비밀번호가 다릅니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Sen data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PWDCHG_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'PWDCHG_C01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkCurUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkCurPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkNewPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkNewPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.U_setUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'PWDCHG_R01':\r\n\t\t\t\tif (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'USR') {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['아이디가 없습니다.']);\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'N') {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호 오류 입니다.']);\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'Y') {\r\n\t\t\t\t\tif (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'Y') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['최근 6개월 이내 사용된 비밀번호 입니다.']);\r\n\t\t\t\t\t} else if (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'N') {\r\n\t\t\t\t\t\tif (this.validation('PWDCHG_C01')) this.transaction('PWDCHG_C01');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'PWDCHG_C01':\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호가 변경되었습니다. 다시 로그인 해주세요']);\r\n\t\t\t\t//ComLib.openDialog('A', '비밀번호가 변경되었습니다.');\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tdocument.getElementById('_btnClose').click();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className = {(this.props.options) ? 'scrm-login-pop' : 'scrm-login'}>\r\n\t\t\t\t<div className = \"scrm-login-div\">\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>아이디</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'iptUsrCd' value = {this.state.dsPwdInfo.records[0][\"USR_ID\"]} placeholder = {'아이디를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>현재 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptCurPwd' value = {this.state.dsPwdInfo.records[0][\"CUR_PWD\"]} placeholder = {'현재 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>신규 비밀번호</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptNewPwd' value = {this.state.dsPwdInfo.records[0][\"NEW_PWD\"]} placeholder = {'신규 비밀번호를 입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t<label>비밀번호 확인</label>\r\n\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'iptConPwd' value = {this.state.dsPwdInfo.records[0][\"CON_PWD\"]} placeholder = {'신규 비밀번호를 재입력하세요.'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = 'scrm-login-btn-div gr-wrap'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn gr-6'><button id = 'btnPwdchgConfirm' className='btn md purple w100' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn gr-6'><button id = 'btnPwdchgCancel' className='btn md purple-o w100' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<label>※ 8~16 영문, 숫자, 특수문자 입력</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default PwdChg;","import React from 'react';\r\nimport {ComLib, StrLib, TransManager, DataLib} from 'common';\r\nimport {Table} from 'components';\r\n/*------------------------------------------------------------------------------------------------*/\r\n//  화면 ID     : userChg\r\n//  화면명      : 비밀번호 변경\r\n//  화면 종류   : 팝업\r\n//  작성자      : \r\n//  작성일자    : \r\n/*------------------------------------------------------------------------------------------------*/\r\nclass userChg extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\topen: false,\r\n\t\t\tdsPwdInfo: DataLib.datalist.getInstance([{USR_ID: '', CUR_PWD: '', NEW_PWD: '', CON_PWD: '', AUTH_NM: '', CENT_NM: '', USR_NM: ''}]),\r\n\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this)\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tComLib.setStateInitRecords(this, \"dsPwdInfo\", this.props.options.param);\r\n\t\t\r\n\t\tconsole.log(this.props.options.param)\r\n\t\tconsole.log(this.state.dsPwdInfo.records)\r\n\t}\r\n\r\n\tevent = {\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptUsrNm':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"USR_NM\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptCurPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CUR_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptNewPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"NEW_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptConPwd':\r\n\t\t\t\t\tComLib.setStateValue(this, 'dsPwdInfo', 0, \"CON_PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnuserChgConfirm':\r\n\t\t\t\t\tif (this.validation('userChg_R01')) this.transaction('userChg_R01');\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnuserChgCancel':\r\n\t\t\t\t\t//window.location = '/';\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid).remove();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t * userChg_R01 : 인증 / 신규 비밀번호 체크\r\n\t * userChg_C01 : 신규 비밀번호 등록\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'userChg_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"USR_NM\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['이름 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CUR_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['현재 비밀번호를 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['새로운 비밀번호를 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"CUR_PWD\") === this.state.dsPwdInfo.getValue(0, \"NEW_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['현재 비밀번호와 신규 비밀번호가 같습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").length < 4) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['최소 4자리 이상 입력해 주세요']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").length > 14) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['최대 14자리 까지 입력해 주세요']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") === this.state.dsPwdInfo.getValue(0, \"USR_ID\")) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['사용자 ID와 비밀번호가 동일합니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!StrLib.isAlpha(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\").substr(0, 1))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호는 영문자로 시작해야 합니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (!/[_!@#$%^&*()_+=-]/.test(this.state.dsPwdInfo.getValue(0, \"NEW_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['특수문자가 포함되어야 합니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (StrLib.isNull(this.state.dsPwdInfo.getValue(0, \"CON_PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['신규 비밀번호를 재 입력해 주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (this.state.dsPwdInfo.getValue(0, \"NEW_PWD\") !== this.state.dsPwdInfo.getValue(0, \"CON_PWD\")) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['신규 비밀번호와 재입력된 비밀번호가 다릅니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'userChg_C01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Sen data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'userChg_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'userChg_C01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'userChg_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkCurUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkCurPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_chkNewPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsChkNewPwdRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', this.state.dsPwdInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'userChg_C01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"CUR_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsPwdInfo\",\r\n\t\t\t\t\tcolumnid: \"NEW_PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t dao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.U_setUsrPwd\",\r\n\t\t\t\t\tdatasetsend:\"dsPwdInfo\",\r\n\t\t\t\t});\r\n\t\t\t\tlet transRecords = this.state.dsPwdInfo.getTransRecords();\r\n\r\n\t\t\t\tif (transRecords[0].orgdata.USR_NM !== transRecords[0].USR_NM ) {\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t   crudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t   sqlmapid:\"COM.U_setUsrNm\",\r\n\t\t\t\t\t   datasetsend:\"dsPwdInfo\",\r\n\t\t\t\t   });\r\n\t\t\t\t}\r\n\t\t\t\ttransManager.addDataset('dsPwdInfo', transRecords);\r\n\t\t\t\t\r\n\t\t\t\t//transManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'userChg_R01':\r\n\t\t\t\tif (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'USR') {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['아이디가 없습니다.']);\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'N') {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호 오류 입니다.']);\r\n\t\t\t\t} else if (res.data.dsChkCurPwdRst[0][\"MAT_YN\"] === 'Y') {\r\n\t\t\t\t\tif (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'Y') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['최근 6개월 이내 사용된 비밀번호 입니다.']);\r\n\t\t\t\t\t} else if (res.data.dsChkNewPwdRst[0][\"DUP_YN\"] === 'N') {\r\n\t\t\t\t\t\tif (this.validation('userChg_C01')) this.transaction('userChg_C01');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'userChg_C01':\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호가 변경되었습니다. 다시 로그인 해주세요']);\r\n\t\t\t\t//ComLib.openDialog('A', '비밀번호가 변경되었습니다.');\r\n\t\t\t\t//window.location = '/';\r\n\t\t\t\tdocument.getElementById('_btnClose').click();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\r\n\t\t// USR_ID: '', CUR_PWD: '', NEW_PWD: '', CON_PWD: '', AUTH_LV: '', CENT_NM: '', USR_NM: ''\r\n\r\n\t\treturn (\r\n\t\t\t<div className = {'scrm-login-pop'}>\r\n\t\t\t\t<div className = \"scrm-login-div\">\r\n\t\t\t\t\t<Table\r\n\t\t\t\t\t\tid=\"tblUsrInfo\" \r\n\t\t\t\t\t\tcolGrp = {[{width: '15%'}, {width: '30%'}, {width: '20%'}, {width: '35%'}]}\r\n\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t[   \t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '아이디'},\r\n\t\t\t\t\t\t\t\t{type : 'T', value : this.state.dsPwdInfo.records[0][\"USR_ID\"]},\r\n\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{height: \"35px\"}}>※ 8~16 영문, 숫자, 특수문자 입력</div>, colSpan: 2},\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t[   \t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '이름'},\r\n\t\t\t\t\t\t\t\t{type : 'T', value : this.state.dsPwdInfo.records[0][\"USR_NM\"]},\t\t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '현재 비밀번호'},\r\n\t\t\t\t\t\t\t\t{type : 'D', value : <input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{width: '100%'}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype  = {\"password\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid    = 'iptCurPwd' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsPwdInfo.records[0][\"CUR_PWD\"]} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {'현재 비밀번호를 입력하세요.'} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t[   \t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '센터/팀'},\r\n\t\t\t\t\t\t\t\t{type : 'T', value : this.state.dsPwdInfo.records[0][\"CENT_NM\"]},\t\t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '신규 비밀번호'},\r\n\t\t\t\t\t\t\t\t{type : 'D', value : <input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{width: '100%'}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype  = {\"password\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid    = 'iptNewPwd' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsPwdInfo.records[0][\"NEW_PWD\"]} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {'신규 비밀번호를 입력하세요.'} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t[   \t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '권한'},\r\n\t\t\t\t\t\t\t\t{type : 'T', value : this.state.dsPwdInfo.records[0][\"AUTH_NM\"]},\t\r\n\t\t\t\t\t\t\t\t{type : 'T', value : '비밀번호 확인'},\r\n\t\t\t\t\t\t\t\t{type : 'D', value : <input \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = {{width: '100%'}} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype  = {\"password\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid    = 'iptConPwd' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsPwdInfo.records[0][\"CON_PWD\"]} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {'신규 비밀번호를 재입력하세요.'} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t<div className = \"scrm-login-div\">\r\n\t\t\t\t\t<div className = 'scrm-login-btn-div gr-wrap'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn gr-6'><button id = 'btnuserChgConfirm' className='btn md purple w100' onClick = {this.event.button.onClick}>{'확인'}</button></div>\r\n\t\t\t\t\t\t<div className = 'scrm-login-btn gr-6'><button id = 'btnuserChgCancel' className='btn md purple-o w100' onClick = {this.event.button.onClick}>{'취소'}</button></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default userChg;","// STT 오류 리스트\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FullPanel, SubFullPanel\r\n} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass COM010001 extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsSttErrList : DataLib.datalist.getInstance(),\t\t\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdSttErr : {\r\n\t\t\t\t\tid       : 'grdSttErr',\r\n\t\t\t\t\tareaName : 'STT 오류',\r\n\t\t\t\t\theight   : '400px',\r\n\t\t\t\t\theader   : [\r\n\t\t\t\t\t\t\t\t\t{headerName: '오류 코드',\t field: 'ERR_CD',\tcolId: 'ERR_CD', width: 120},\r\n\t\t\t\t\t\t\t\t\t{headerName: '오류 설명',   field: 'ERR_MSG',\tcolId: 'ERR_MSG', width: 400},\r\n\t\t\t\t\t\t\t\t\t{headerName: '오류 횟수',   field: 'ERR_CNT',\tcolId: 'ERR_CNT', width: 120},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\t\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"COM010001_R00\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\t\t\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'COM010001_R00':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getSttErr\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsSttErrListRecv\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSearch', [{SVR_HST: this.props.options.params.type}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\t\t\r\n\t\tcase 'COM010001_R00':\r\n\t\t\tif (res.data.dsSttErrListRecv.length > 0) {\r\n\t\t\t\tlet dsSttErrListRecv = res.data.dsSttErrListRecv;\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSttErrList\", dsSttErrListRecv);\r\n\r\n\t\t\t}\t\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.grdProps.grdSttErr.id} \r\n\t\t\t\t\t\t\t\t\tareaName    = {this.state.grdProps.grdSttErr.areaName}\r\n\t\t\t\t\t\t\t\t\theader      = {this.state.grdProps.grdSttErr.header}\r\n\t\t\t\t\t\t\t\t\tdata        = {this.state.dsSttErrList}\r\n\t\t\t\t\t\t\t\t\theight      = {this.state.grdProps.grdSttErr.height}\r\n\t\t\t\t\t\t\t\t\trowNum      = {true}\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default COM010001;","import React from 'react';\r\nimport {SubFullPanel, HtmlEditor, CustomSlide as Slide} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DateLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone] \r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tsrchFileParam : '',\r\n\t\t\tdsNoteInfo : [],\r\n\t\t\tdsNoteFileInfo : [],\r\n\t\t\tdsModifyInfo : { BORD_MNG_NO: '', TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', REG_CENT: '', DEL_YN : '', REG_DTM : '', REG_ID : '' , CHG_ID: '', CHG_DTM: ''}\r\n\t\t}\r\n\t\tthis.event.grid.onRowClicked = this.event.grid.onRowClicked.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction('COM010010_R01');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tswitch (id) {\r\n\t\t\tcase 'COM010010_R01' :\r\n\t\t\t\tthis.transaction('COM010010_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\tcase 'COM010010_R01' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'COM010010_R02' :\r\n\t\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid:\"COM.R_getNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetsend:\"dsSrchNoteFileInfo\",\r\n\t\t\t\t\t\tdatasetrecv:\"dsNoteFileInfo\"\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSrchNoteFileInfo', [{BORD_MNG_NO : this.state.srchFileParam}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\talert(err);\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'COM010010_R01' : \r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t...this.state,\r\n\t\t\t\t\t\tdsNoteInfo : res.data.dsNoteInfo,\r\n\t\t\t\t\t\tdsNoteFileInfo : [],\r\n\t\t\t\t\t\tdsModifyInfo : { TITLE: '', VALD_DT : DateLib.getToday(), CONT: '', CONT_DV: '', DEL_YN : '', REG_DT : '', REG_USR : '' , MFY_ER: '', MFY_DT: ''}\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010010_R02' : \r\n\t\t\t\tthis.setState({...this.state, dsNoteFileInfo : res.data.dsNoteFileInfo});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :  break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tgrid : {\r\n\t\t\tonRowClicked  : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'grdNoteInfo' :\r\n\t\t\t\t\t\tthis.setState({ \r\n\t\t\t\t\t\t\t...this.state\r\n\t\t\t\t\t\t\t,   dsModifyInfo : Object.assign(this.state.dsModifyInfo, DataLib.getRowJSON(e.index, this.state.dsNoteInfo))\r\n\t\t\t\t\t\t\t,   srchFileParam : e.data.BORD_MNG_NO\r\n\t\t\t\t\t\t}, () => this.transaction('COM010010_R02'));\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<Grid   id = 'grdNoteInfo' ref='grdNoteInfo' height=\"200px\"\r\n\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t{   headerName : 'No',          field : 'BORD_MNG_NO',  colId : 'BORD_MNG_NO',  width: 80      },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록일자',    field : 'REG_DTM',      colId : 'REG_DTM',      width: 120,\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n\t\t\t\t\t\t\t\t{   headerName : '유효일자',    field : 'VALD_DT',      colId : 'VALD_DT',      width: 120,        \r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) =>  StrLib.getFormatterDate(param.value)                           },\r\n\t\t\t\t\t\t\t\t{   headerName : '제목',        field : 'TITLE',        colId : 'TITLE',        width: 200      },\r\n\t\t\t\t\t\t\t\t{   headerName : '내용구분',    field : 'CONT_DV',      colId : 'CONT_DV',      width: 120,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor', \r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.setGridComCodeComboCellVal('106') },\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.setGridComCodeComboCellNm(param.value, '106')            },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록센터',    field : 'CENT_NM',      colId : 'CENT_NM',     width: 120       },\r\n\t\t\t\t\t\t\t\t{   headerName : '등록자',      field : 'REG_ID',       colId : 'REG_ID',      width: 110       }\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\tdata = {this.state.dsNoteInfo}\r\n\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<HtmlEditor id=\"iptNoteCont\"  value={this.state.dsModifyInfo.CONT} readOnly={true} toolbarHidden={true} height={320}/>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t{(this.state.dsNoteFileInfo.length !== 0) ? <Slide data={this.state.dsNoteFileInfo} height={150}></Slide> : <span>{'조회된 파일 없습니다.'}</span> }\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","import React from 'react';\r\nimport {BasicButton as Button, SubFullPanel, FlexPanel, ComponentPanel, Textfield, CentListSelectBox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n    render () {\r\n        return (\r\n            <React.Fragment>\r\n                <ComponentPanel>\r\n                    \r\n                </ComponentPanel>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\nexport default View;","import React from 'react';\r\nimport {Player} from 'components';\r\n\r\nclass STT000001 extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div style={{width: '99%'}}>\r\n\t\t\t\t<Player ctrNo={this.props.options.ctrNo} callId = {this.props.options.callId} options ={this.props.options} popupdivid ={this.props.popupdivid}/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default STT000001;","import React from 'react';\r\nimport {RealTimeViewer} from 'components';\r\n\r\nclass STT010001 extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper();\r\n\t}\r\n\tcomponentDidMount () {\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div style={{width: '99%'}}>\r\n\t\t\t\t<RealTimeViewer\r\n\t\t\t\t\tconstCd={this.props.options.params.CONST_CD}\r\n\t\t\t\t\tconstNm={this.props.options.params.CONST_NM}\r\n\t\t\t\t\tsttUnq={this.props.options.params.STT_UNQ}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default STT010001;","// 학습 등록\r\nimport React from 'react';\r\nimport {\r\n\tFlexPanel, FullPanel, SubFullPanel, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, InputCalendar, Selectbox} from 'components';\r\nimport {ComLib, DataLib, DateLib, StrLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsMisSenList : DataLib.datalist.getInstance(),\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselTime : {\r\n\t\t\t\t\tid       : 'selTime',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList(\"CMN_SET\", \"STT_TRN_LST\"), newScrmObj.constants.select.argument.select),\r\n\t\t\t\t\twidth    : 150,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcalendarProps : {\r\n\t\t\t\tcaldate : {\r\n\t\t\t\t\tid : 'caldate',\r\n\t\t\t\t\tvalue : DateLib.getToday(),\r\n\t\t\t\t\tisOpen : false,\r\n\t\t\t\t\tmaxDate : null,\r\n\t\t\t\t\tminDate : DateLib.getToday(),\r\n\t\t\t\t\trequired : false,\r\n\t\t\t\t},\r\n\t\t\t},\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptTrnTitle : {\r\n\t\t\t\t\tid          : 'iptTrnTitle',\r\n\t\t\t\t\tname        : 'iptTrnTitle',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '학습타이틀',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 12,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnAppTrain : {\r\n\t\t\t\t\tid       : 'btnAppTrain',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '확인',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'addNewTrain' :\r\n\t\t\t\tif (StrLib.isNull(this.state.calendarProps.caldate.value)) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '학습일자 공백');\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t} \r\n\r\n\t\t\t\tif (this.state.selectboxProps.selTime.selected === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '학습 시간 미 선택');\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t} \r\n\r\n\t\t\t\tif (StrLib.isNull(this.state.textFieldProps.iptTrnTitle.value)) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '학습 타이틀 미입력');\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.target.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.target.id].value    = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'caldate':\r\n\t\t\t\t\tif (e.target.value < DateLib.getToday() && !StrLib.isNull(e.target.value)) {\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0003', ['학습일자']);\r\n\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet state = this.state;\r\n\t\r\n\t\t\t\t\tstate['calendarProps']['caldate'].value =  e.target.value;\r\n\r\n\t\t\t\t\tthis.setState(state);\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptTrnTitle':\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['textFieldProps']['iptTrnTitle'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptTrnTitle':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"addNewTrain\")) {\r\n\t\t\t\t\t\t\tlet date  = this.state.calendarProps.caldate.value;\r\n\t\t\t\t\t\t\tlet time  = this.state.selectboxProps.selTime.value;\r\n\t\t\t\t\t\t\tlet title = e.target.value;\r\n\t\t\t\t\t\t\tthis.props.onCallbackFunc({date: date, time: time, title: title});\r\n\t\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnAppTrain\":\t\t\t\t\t\r\n\t\t\t\t\tif (this.validation(\"addNewTrain\")) {\r\n\t\t\t\t\t\tlet date  = this.state.calendarProps.caldate.value;\r\n\t\t\t\t\t\tlet time  = this.state.selectboxProps.selTime.value;\r\n\t\t\t\t\t\tlet title = this.state.textFieldProps.iptTrnTitle.value;\r\n\t\t\t\t\t\tthis.props.onCallbackFunc({date: date, time: time, title: title});\r\n\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<div className=\"scrm-cal-div\">\r\n\t\t\t\t\t\t\t<InputCalendar\r\n\t\t\t\t\t\t\t\tid              = {this.state.calendarProps.caldate.id}\r\n\t\t\t\t\t\t\t\tvalue           = {this.state.calendarProps.caldate.value}\r\n\t\t\t\t\t\t\t\tisOpen          = {this.state.calendarProps.caldate.isOpen}\r\n\t\t\t\t\t\t\t\tmaxDate         = {this.state.calendarProps.caldate.maxDate}\r\n\t\t\t\t\t\t\t\tminDate         = {this.state.calendarProps.caldate.minDate}\r\n\t\t\t\t\t\t\t\trequired        = {this.state.calendarProps.caldate.required}\r\n\t\t\t\t\t\t\t\tonChange        = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selTime.id}\r\n\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selTime.value}\r\n\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selTime.dataset}\r\n\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selTime.width}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selTime.disabled}\r\n\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selTime.selected}\r\n\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</SubFullPanel>\t\t\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<div className=\"scrm-cal-div\">\r\n\t\t\t\t\t\t\t\t<Label value=\"타이틀명\"/>\r\n\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\twidth       = {280}\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptTrnTitle.id}\r\n\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptTrnTitle.name}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptTrnTitle.value}\r\n\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptTrnTitle.placeholder}\r\n\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptTrnTitle.minLength}\r\n\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptTrnTitle.maxLength}\r\n\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptTrnTitle.readOnly}\r\n\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptTrnTitle.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t<br/><br/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<Label value=\"학습진행일자 선택 및 학습타이틀을 입력하세요.\"/>\r\n\t\t\t\t\t\t\t<Label value=\"학습 가능 일자는 금일 부터입니다.\"/><br/>\r\n\t\t\t\t\t\t\t<Label value=\"학습 가능 시간대는 20:00 ~ 02:00 사이 입니다.\"/>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t<br/><br/><br/>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnAppTrain.id}\r\n\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnAppTrain.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnAppTrain.disabled}\r\n\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnAppTrain.hidden}\r\n\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tFullPanel, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {Label} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsTrainHistory : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction('STT030003_R01')\r\n\t\tComLib.setStateInitRecords(this, \"dsTrainHistory\", this.props.options.dsTrainHistory);\r\n\t\t\r\n\t\tconsole.log(this.props)\r\n\t\tconsole.log(this.props.options.dsTrainHistory)\r\n\t\tconsole.log(this.state.dsTrainHistory)\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\t\t\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'STT030003_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_getTrainHistory\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsTrainHistory\",\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\tlet monthRangeArr = ComLib.getCommCodeList('TRAIN_LOG_MONTH');\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearch', [{MONTH_RANGE: monthRangeArr[0].CODE}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\t\t\r\n\t\tcase 'STT030003_R01':\r\n\t\t\tlet dsTrainHistory = res.data.dsTrainHistory;\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsTrainHistory\", dsTrainHistory);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Label value=\"최근 3개월 학습 로그만 표시합니다.\"/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\tareaName = {'학습 로그'}\t\t\r\n\t\t\t\t\t\tid       = {'grdTrainHistory'}\r\n\t\t\t\t\t\theight   = \"300px\"\r\n\t\t\t\t\t\tdata     = {this.state.dsTrainHistory}\r\n\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t[\t\t\t\t\t\t  \t\t\r\n\t\t\t\t\t\t\t\t{headerName:  '학습일자',\tfield: 'TRN_DTM',\t\t colId: 'TRN_DTM',\t\teditable: false}\r\n\t\t\t\t\t\t\t\t,{headerName: '타이틀',\tfield: 'TRN_TITLE',\t\t\tcolId: 'TRN_TITLE',\t\teditable: false }\r\n\t\t\t\t\t\t\t\t,{headerName: '작업상태',\tfield: 'TRN_STATE',\t\t\tcolId: 'TRN_STATE',\t\teditable: false,\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('STT_TBL_TRAIN', 'TRN_STATE')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('STT_TBL_TRAIN', params.value, 'TRN_STATE')}}\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\tdnlExcelBtn = {false}\r\n\t\t\t\t\t\trowNum      = {true}\t\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FlexPanel, FullPanel, SubFullPanel} from 'components';\r\n//버튼 컴포넌트\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsSttAns : DataLib.datalist.getInstance(),\r\n\t\t\tdsSttRes : DataLib.datalist.getInstance(),\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdSttAns : {\r\n\t\t\t\t\tid       : 'grdSttAns',\r\n\t\t\t\t\tareaName : 'STT 정답지',\r\n\t\t\t\t\theight   : '600px',\r\n\t\t\t\t\theader   : [\r\n\t\t\t\t\t\t\t\t\t{headerName: '화자',\tfield: 'CENT_NM',\tcolId: 'CENT_NM', width: 50},\r\n\t\t\t\t\t\t\t\t\t{headerName: '발화내용', field: 'PART_NM',\tcolId: 'PART_NM', width: 200},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t},\r\n\t\t\t\tgrdSttRes : {\r\n\t\t\t\t\tid       : 'grdSttRes',\r\n\t\t\t\t\tareaName : 'STT 결과',\r\n\t\t\t\t\theight   : '600px',\r\n\t\t\t\t\theader   : [\r\n\t\t\t\t\t\t\t\t\t{headerName: '화자',\tfield: 'CENT_NM',\tcolId: 'CENT_NM', width: 50},\r\n\t\t\t\t\t\t\t\t\t{headerName: '발화내용', field: 'PART_NM',\tcolId: 'PART_NM', width: 200},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\t// this.transaction('STT060001_R01')\r\n\t\t// ComLib.setStateInitRecords(this, \"dsTrainHistory\", this.props.options.dsTrainHistory);\r\n\t\t\r\n\t\tconsole.log(this.props)\r\n\t\tconsole.log(this.props.options.dsTrainHistory)\r\n\t\tconsole.log(this.state.dsTrainHistory)\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\t\t\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'STT060001_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_getTrainHistory\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsTrainHistory\",\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\tlet monthRangeArr = ComLib.getCommCodeList('TRAIN_LOG_MONTH');\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearch', [{MONTH_RANGE: monthRangeArr[0].CODE}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\t\t\r\n\t\tcase 'STT060001_R01':\r\n\t\t\tlet dsTrainHistory = res.data.dsTrainHistory;\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsTrainHistory\", dsTrainHistory);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.grdProps.grdSttAns.id} \r\n\t\t\t\t\t\t\t\t\tareaName    = {this.state.grdProps.grdSttAns.areaName}\r\n\t\t\t\t\t\t\t\t\theader      = {this.state.grdProps.grdSttAns.header}\r\n\t\t\t\t\t\t\t\t\tdata        = {this.state.dsSttAns}\r\n\t\t\t\t\t\t\t\t\theight      = {this.state.grdProps.grdSttAns.height}\r\n\t\t\t\t\t\t\t\t\trowNum      = {true}\t\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.grdProps.grdSttRes.id} \r\n\t\t\t\t\t\t\t\t\tareaName    = {this.state.grdProps.grdSttRes.areaName}\r\n\t\t\t\t\t\t\t\t\theader      = {this.state.grdProps.grdSttRes.header}\r\n\t\t\t\t\t\t\t\t\tdata        = {this.state.dsSttRes}\r\n\t\t\t\t\t\t\t\t\theight      = {this.state.grdProps.grdSttRes.height}\r\n\t\t\t\t\t\t\t\t\trowNum      = {true}\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 결함 이미지 미리보기\r\nimport React from 'react';\r\nimport {\r\n   ComponentPanel, FlexPanel, FullPanel} from 'components';\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\t\r\n\t\t\timageIndex: 1, \r\n\t\t\timageTotal: 3\r\n\t\t\t\r\n\t\t}\r\n   }\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [2. OnLoad Event Zone]\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [3. validation Event Zone]\r\n   //  - validation 관련 정의\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STA020000_R01':\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [4. transaction Event Zone]\r\n   //  - transaction 관련 정의\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'STA020000_R01' :\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STA.R_getQAVlaStaCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchStaCode\",\r\n\t\t\t\t\tdatasetrecv:\"dsSvrStatCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSrchStaCode', [{}]);\t\t\t\t\t\r\n\t\t\t\ttransManager.agent();\t\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [5. Callback Event Zone]\r\n   //  - Callback 관련 정의\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STA020000_R01':\r\n\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [6. event Zone]\r\n   //  - 각 Component의 event 처리\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\t\t\t\tlet { imageIndex, imageTotal } = this.state;\r\n\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'imgLeft':\r\n\t\t\t\t\tif (1 < imageIndex) {\r\n\t\t\t\t\t\tstate['imageIndex'] = state['imageIndex'] - 1;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate['imageIndex'] = imageTotal;\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'imgRight':\r\n\t\t\t\t\tif (imageIndex < imageTotal) {\r\n\t\t\t\t\t\tstate['imageIndex'] = state['imageIndex'] + 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate['imageIndex'] = 1;\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [7. render Zone]\r\n   //  - 화면 관련 내용 작성\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\r\n\trender () {\t\r\n\t\tlet { imageIndex, imageTotal } = this.state;\t\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<FlexPanel>\t\t\t\t\t\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<div class=\"gallery\" style={{width:\"100%\", height:\"600px\"}}>\r\n\t\t\t\t\t\t\t\t<a target=\"_blank\" href=\"img_forest.jpg\">\r\n\t\t\t\t\t\t\t\t\t<img src=\"img_forest.jpg\" alt=\"Forest\" height=\"600\"></img>\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tid = {'imgLeft'}\r\n\t\t\t\t\t\t\t\tvalue = {'◀'}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Label value={imageIndex + \" / \" + imageTotal}/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tid = {'imgRight'}\r\n\t\t\t\t\t\t\t\tvalue = {'▶'}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\t\r\n\t\t\t\t\t</FlexPanel>\t\t\t\t\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 결함 담당자 검색\r\nimport React from 'react';\r\nimport {\r\n   ComponentPanel, FlexPanel, FullPanel, RelativeGroup\r\n} from 'components';\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, RFloatArea, LFloatArea} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.userGridApi    = null;\r\n\t\tthis.userChkGridApi = null;\r\n\r\n\t\tthis.userGrid   = null;\r\n\t\tthis.userChkrid = null;\r\n\r\n\t\tthis.state = {\t\r\n\t\t\tdsUserList   : DataLib.datalist.getInstance(),\r\n\t\t\tdsUserChkList: DataLib.datalist.getInstance(),\r\n\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptUser : {\r\n\t\t\t\t\tid          : 'iptUser',\r\n\t\t\t\t\tname        : 'iptUser',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '성명/사번',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 10,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnConfrim : {\r\n\t\t\t\t\tid       : 'btnConfrim',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '확인',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\t\t\t\r\n\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdUser : {\r\n\t\t\t\t\tid : 'grdUser',\r\n\t\t\t\t\tareaName : '사용자',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t{headerName: '사번'   ,\tfield: 'CODE',\t        colId: 'CODE',       editable: false, width: 400},\r\n\t\t\t\t\t\t{headerName: '성명'   ,\tfield: 'CODE_NM',\t\tcolId: 'CODE_NM',\t editable: false, width: 400},\r\n\t\t\t\t\t\t{headerName: '센터'   ,\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\t editable: false, width: 400},\r\n\t\t\t\t\t\t{headerName: '직책'  ,\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\t editable: false, width: 400, resizable: false},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\tgrdUserChk : {\r\n\t\t\t\t\tid : 'grdUserChk',\r\n\t\t\t\t\tareaName : '선택된 사용자',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t{headerName: '사번'   ,\tfield: 'CODE',\t        colId: 'CODE',       editable: false, width: 400},\r\n\t\t\t\t\t\t{headerName: '성명'   ,\tfield: 'CODE_NM',\t\tcolId: 'CODE_NM',\t editable: false, width: 400},\r\n\t\t\t\t\t\t{headerName: '센터'   ,\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD',\t editable: false, width: 400},\r\n\t\t\t\t\t\t{headerName: '직책'  ,\tfield: 'AUTH_LV',\t\tcolId: 'AUTH_LV',\t editable: false, width: 400, resizable: false},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n   }\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [2. OnLoad Event Zone]\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [3. validation Event Zone]\r\n   //  - validation 관련 정의\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STA020000_R01':\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [4. transaction Event Zone]\r\n   //  - transaction 관련 정의\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'STA020000_R01' :\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STA.R_getQAVlaStaCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchStaCode\",\r\n\t\t\t\t\tdatasetrecv:\"dsSvrStatCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSrchStaCode', [{}]);\t\t\t\t\t\r\n\t\t\t\ttransManager.agent();\t\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [5. Callback Event Zone]\r\n   //  - Callback 관련 정의\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STA020000_R01':\r\n\r\n\t\t\tbreak;\r\n\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [6. event Zone]\r\n   //  - 각 Component의 event 처리\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\t\r\n\r\n\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnSearch':\r\n\t\t\t\t\tlet arrInitUser = [];\r\n\t\t\t\t\tlet sessionUser = ComLib.getSession(\"gdsUserList\");\r\n\t\t\t\t\tlet sessionCent = ComLib.getSession(\"gdsCentList\");\r\n\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsUserList\", sessionUser);\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'btnConfrim':\r\n\t\t\t\t\tthis.props.onClose('TEST');\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptBigCdNm':\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['textFieldProps']['iptBigCdNm'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptBigCdNm':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_R01\")) this.transaction(\"SYS010000_R01\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdUser\":\r\n\t\t\t\t\tthis.userGridApi = e.gridApi;\r\n\t\t\t\t\tthis.userGrid    = e.grid;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdUserChk\":\r\n\t\t\t\t\tthis.userChkGridApi = e.gridApi;\r\n\t\t\t\t\tthis.userChkGrid    = e.grid;;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'grdVlaItem':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\t\t\t\t\r\n\t\t\t\tlet userRecords    = this.userGrid.gridDataset.records;\t\t\t\t\r\n\t\t\t\tlet userChkRecords = this.userChkGrid.gridDataset.records;\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdUser\":\r\n\t\t\t\t\tuserChkRecords.push(e.data)\r\n\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsUserChkList\", userChkRecords);\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdUserChk\":\r\n\t\t\t\t\tconsole.log(this.userChkGrid.gridDataset.records[e.index])\r\n\t\t\t\t\t \r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [7. render Zone]\r\n   //  - 화면 관련 내용 작성\r\n   /*------------------------------------------------------------------------------------------------*/\r\n\r\n\trender () {\t\r\n\t\tlet { type } = this.props.options;\t\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"성명/사번\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptUser.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptUser.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptUser.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptUser.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptUser.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptUser.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptUser.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptUser.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</RelativeGroup>\t\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<Grid\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tid        = {this.state.grdProps.grdUser.id} \r\n\t\t\t\t\t\t\t\t\tareaName  = {type === 'searchUser' ? \"사용자\" : \"개발자\"}\r\n\t\t\t\t\t\t\t\t\theader    = {this.state.grdProps.grdUser.header}\r\n\t\t\t\t\t\t\t\t\tdata      = {this.state.dsUserList}\r\n\t\t\t\t\t\t\t\t\theight    = {type === 'searchUser' || type === 'searchDev' ? \"250px\" : \"500px\"}\r\n\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\tinfoCheckBox = {{use : true}}\r\n\t\t\t\t\t\t\t\t\tonGridReady  = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\tsuppressRowClickSelection = { type === 'searchUser' || type === 'searchDev' ? true :false}\r\n\t\t\t\t\t\t\t\t\trowSelection = { type === 'searchUser' || type === 'searchDev' ? 'multiple' :'single'}\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t{ type === 'searchUser' || type === 'searchDev' ? \r\n\t\t\t\t\t\t\t\t\t<Grid\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tid        = {this.state.grdProps.grdUserChk.id} \r\n\t\t\t\t\t\t\t\t\t\tareaName  = {type === 'searchUser' ? \"선택된 사용자\" : \"선택된 개발자\"}\r\n\t\t\t\t\t\t\t\t\t\theader    = {this.state.grdProps.grdUserChk.header}\r\n\t\t\t\t\t\t\t\t\t\tdata      = {this.state.dsUserChkList}\r\n\t\t\t\t\t\t\t\t\t\theight    = \"250px\"\r\n\t\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\t\tinfoCheckBox = {{use : true}}\r\n\t\t\t\t\t\t\t\t\t\tonGridReady  = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnConfrim.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnConfrim.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnConfrim.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnConfrim.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmr       = {20}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\t\t\t\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {Label} from 'components';\r\nimport {Grid} from 'components';\r\nimport {DataLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsStudyLogInfo : DataLib.datalist.getInstance()\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Label value=\"최근 3개월 학습 로그만 표시합니다.\"/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t<Grid\r\n\t\t\t\t\t\theight= \"300px\"\r\n\t\t\t\t\t\tdata = {this.state.dsStudyLogInfo}\r\n\t\t\t\t\t\theader = {\r\n\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t{headerName: '학습일자',\tfield: 'BIZ_PSB_YN',\tcolId: 'BIZ_PSB_YN' },\r\n\t\t\t\t\t\t\t\t{headerName: '타이틀',\t\tfield: 'TEAM_CD',\t\tcolId: 'TEAM_CD',\t},\r\n\t\t\t\t\t\t\t\t{headerName: '상태',\t\tfield: 'USR_CD',\t\tcolId: 'USR_CD',\t},\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tAppPanel, HeadPanel, MiddlePanel, SidePanel, MainPanel, ComponentPanel, SearchPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, MultiSelectbox, TextPasswdfield, RangeInputCalendar, Selectbox, MulitSelectBox, Tree, InputFileUpload} from 'components';\r\nimport {Table, Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager, newScrmObj} from 'common';\r\n\r\nclass SYS080001 extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\r\n\t\tthis.snroProcessGridApi = null;\r\n\t\tthis.snroProcessGrid    = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsSnroProcessList : DataLib.datalist.getInstance(),\t\r\n\t\t\tdsSelected        : DataLib.datalist.getInstance([{SORT_ORD: \"\", PROCESS_TP: \"\", PROCESS_CD:\"\", SUCCESS: \"\", SUCCESS_TTS: \"\", FAIL: \"\", FAIL_TTS: \"\", RTN_TARGET: \"\"}]),\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnKeywordSave : {\r\n\t\t\t\t\tid       : 'btnKeywordSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdSnroProcess : {\r\n\t\t\t\t\tid       : 'grdSnroProcess',\r\n\t\t\t\t\tareaName : '시나리오 프로세스',\r\n\t\t\t\t\theight   : '380px',\r\n\t\t\t\t\theader   : [\r\n\t\t\t\t\t\t\t\t\t{headerName: '순번',\t field: 'SORT_ORD',\tcolId: 'SORT_ORD', width: 50},\r\n\t\t\t\t\t\t\t\t\t{headerName: '타입',          field: 'PROCESS_TP',\t   colId: 'PROCESS_TP',\teditable: true, defaultValue : '', width: 80, req: true, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CALLBOT_SNRO', 'PROCESS_TP')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CALLBOT_SNRO', param.value, 'PROCESS_TP')},\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{headerName: '설명',   field: 'SNRO_EXPL',   \tcolId: 'SNRO_EXPL', width: 180},\t\r\n\t\t\t\t\t\t\t\t\t{headerName: '성공시',          field: 'SUCCESS',\t   colId: 'SUCCESS',\teditable: true, defaultValue : '', width: 100, req: true,  textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CALLBOT_SNRO', 'SUC_TP')},\r\n\t\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CALLBOT_SNRO', param.value, 'SUC_TP')},\t\r\n\t\t\t\t\t\t\t\t\t{headerName: '성공 TTS',\t field: 'SUCCESS_NM',\tcolId: 'SUCCESS_NM', width: 200},\r\n\t\t\t\t\t\t\t\t\t{headerName: '실패시',          field: 'FAIL',\t   colId: 'FAIL',\teditable: true, defaultValue : '', width: 100, req: true, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CALLBOT_SNRO', 'FAIL_TP')},\r\n\t\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CALLBOT_SNRO', param.value, 'FAIL_TP')},\t\r\n\t\t\t\t\t\t\t\t\t{headerName: '실패 TTS',\t field: 'FAIL_NM',\tcolId: 'FAIL_NM', width: 200},\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSnroNm : {\r\n\t\t\t\t\tid          : 'iptSnroNm',\r\n\t\t\t\t\tname        : 'iptSnroNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\r\n\t\t\t\tiptSortOrd : {\r\n\t\t\t\t\tid          : 'iptSortOrd',\r\n\t\t\t\t\tname        : 'iptSortOrd',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\r\n\t\t\t\tiptSucTTS : {\r\n\t\t\t\t\tid          : 'iptSucTTS',\r\n\t\t\t\t\tname        : 'iptSucTTS',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\r\n\t\t\t\tiptFailTTS : {\r\n\t\t\t\t\tid          : 'iptFailTTS',\r\n\t\t\t\t\tname        : 'iptFailTTS',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\r\n\t\t\t\tiptRtnTarget : {\r\n\t\t\t\t\tid          : 'iptRtnTarget',\r\n\t\t\t\t\tname        : 'iptRtnTarget',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselProcessTP : {\r\n\t\t\t\t\tid : 'selProcessTP',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('CALLBOT_SNRO', 'PROCESS_TP'), newScrmObj.constants.select.argument.select),\r\n\t\t\t\t\tvalue : \"\",\r\n\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselProcessExpl : {\r\n\t\t\t\t\tid : 'selProcessExpl',\r\n\t\t\t\t\tdataset : [],\r\n\t\t\t\t\tvalue : \"\",\r\n\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselProcessSuc : {\r\n\t\t\t\t\tid : 'selProcessSuc',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('CALLBOT_SNRO', 'SUC_TP'), newScrmObj.constants.select.argument.select),\r\n\t\t\t\t\tvalue : \"\",\r\n\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselProcessSucNm : {\r\n\t\t\t\t\tid : 'selProcessSucNm',\r\n\t\t\t\t\tdataset : [],\r\n\t\t\t\t\tvalue : \"\",\r\n\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselProcessFail : {\r\n\t\t\t\t\tid : 'selProcessFail',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('CALLBOT_SNRO', 'FAIL_TP'), newScrmObj.constants.select.argument.select),\r\n\t\t\t\t\tvalue : \"\",\r\n\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselProcessFailNm : {\r\n\t\t\t\t\tid : 'selProcessFailNm',\r\n\t\t\t\t\tdataset : [],\r\n\t\t\t\t\tvalue : \"\",\r\n\t\t\t\t\twidth : '100%',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tlet snro = this.props.options.dsSnro;\r\n\t\tlet tts  = this.props.options.dsSnroTts;\r\n\t\tlet inter  = this.props.options.dsInter;\r\n\r\n\t\tlet arrSnro    = [];\r\n\t\tlet arrTtsNm   = [];\r\n\t\tlet arrInter   = [];\r\n\r\n\t\tfor (let i = 0; i < snro.length; i ++) {\r\n\t\t\tarrSnro.push({CODE: snro[i].SNRO_CD, CODE_NM: snro[i].SNRO_EXPL})\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < tts.length; i ++) {\r\n\t\t\tarrTtsNm.push({CODE: tts[i].SNRO_TTS_CD, CODE_NM: tts[i].SNRO_TTS_EXPL})\r\n\t\t\t\r\n\t\t}\t\t\r\n\t\t\r\n\t\tfor (let i = 0; i < inter.length; i ++) {\r\n\t\t\tarrInter.push({CODE: inter[i].ITF_CD, CODE_NM: inter[i].ITF_NM})\r\n\t\t\t\r\n\t\t}\r\n\r\n\r\n\t\tlet props = this.props.options.params;\r\n\t\tlet state = this.state;\r\n\t\tstate['textFieldProps']['iptSnroNm'].value = props.SNRO_EXPL;\r\n\t\tstate['selectboxProps']['selProcessExpl'].dataset    = ComLib.convComboList(arrSnro   , newScrmObj.constants.select.argument.select);\r\n\t\tstate['selectboxProps']['selProcessSucNm'].dataset   = ComLib.convComboList(arrTtsNm  , newScrmObj.constants.select.argument.select);\r\n\t\tstate['selectboxProps']['selProcessFailNm'].dataset  = ComLib.convComboList(arrTtsNm  , newScrmObj.constants.select.argument.select);\r\n\t\tstate.processArr   = ComLib.convComboList(arrSnro   , newScrmObj.constants.select.argument.select);\r\n\t\tstate.interfaceArr = ComLib.convComboList(arrInter  , newScrmObj.constants.select.argument.select)\r\n\t\tthis.setState(state);\r\n\t\tthis.transaction(\"SYS080001_R00\")\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\t\t\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS080001_R00':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"SYS.R_getSnroProcess\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsSnroProcessListRecv\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tlet props = this.props.options.params;\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearch', [{SNRO_CD: props.SNRO_CD}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\t\t\r\n\t\tcase 'SYS080001_R00':\r\n\t\t\tif (res.data.dsSnroProcessListRecv.length > 0) {\r\n\t\t\t\tlet dsSnroProcessListRecv = res.data.dsSnroProcessListRecv;\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroProcessList\", dsSnroProcessListRecv);\r\n\r\n\t\t\t}\t\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnSearch\":\r\n\t\t\t\t\tif (this.validation(\"SYS010000_R01\")) this.transaction(\"SYS010000_R01\");\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroProcess\":\r\n\t\t\t\t\tconsole.log(e);\r\n\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t// state['textFieldProps']['iptFailTTS']\r\n\t\t\t\t\t// state['textFieldProps']['iptFailTTS']\r\n\t\t\t\t\t// state['textFieldProps']['iptFailTTS']\r\n\t\t\t\t\t// state['textFieldProps']['iptFailTTS']\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonGridReady: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroProcess\":\r\n\t\t\t\t\tthis.snroProcessGridApi = e.gridApi;\r\n\t\t\t\t\tthis.snroProcessGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSelected\", this.state.dsSnroProcessList.getRow(e.index));\r\n\t\t\t\t\r\n\t\t\t\t// 클릭을 한 번 더 했을 때 그리드에 선택된 인덱스가 풀리지 않도록 하기\r\n\t\t\t\tlet processRows = this.snroProcessGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\tlet processRow;\r\n\r\n\t\t\t\tfor (let i = 0; i < processRows.length; i ++) {\r\n\t\t\t\t\tif (processRows[i].data.SORT_ORD === e.data.SORT_ORD){\r\n\t\t\t\t\t\tprocessRow = this.snroProcessGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprocessRow.setSelected(true);\r\n\r\n\t\t\t\tlet tts = this.props.options.dsSnroTts;\t\t\r\n\t\t\t\tlet state = this.state;\r\n\t\t\t\tfor (let i = 0; i < tts.length; i ++) {\r\n\t\t\t\t\tif (tts[i].SNRO_TTS_CD === e.data.SUCCESS_TTS) {\r\n\t\t\t\t\t\tstate['textFieldProps']['iptSucTTS'].value = tts[i].SNRO_TTS_TEXT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else if (tts[i].SNRO_TTS_CD === e.data.FAIL_TTS) {\r\n\t\t\t\t\t\tstate['textFieldProps']['iptFailTTS'].value = tts[i].SNRO_TTS_TEXT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\tconsole.log(this.state.dsSnroProcessList)\r\n\t\t\t\tconsole.log(this.state.dsSelected)\r\n\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroProcess\":\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroProcess\":\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroProcess\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {rtn: true, index: 0};\r\n\t\t\t},\t\t\t\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroProcess\":\r\n\t\t\t\t\t\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSnroNm':\r\n\r\n\t\t\t\t\tstate['textFieldProps']['iptSnroNm'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptSnroSco':\r\n\t\t\t\t\tstate['textFieldProps']['iptSnroNm'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSnroNm':\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iptSnroSco':\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\t\t\t\tlet tts   = [];\t\t\t\t\t\t\r\n\t\t\t\tlet ttsText = '';\r\n\r\n\t\t\t\tstate['selectboxProps'][e.target.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.target.id].value    = e.target.value;\r\n\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'selProcessTP':\r\n\t\t\t\t\tif (e.target.value === 'P') {\r\n\t\t\t\t\t\tstate['selectboxProps']['selProcessExpl'].dataset = state.processArr;\r\n\r\n\t\t\t\t\t} else if (e.target.value === 'I') {\r\n\t\t\t\t\t\tstate['selectboxProps']['selProcessExpl'].dataset = state.interfaceArr;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstate['selectboxProps']['selProcessExpl'].dataset = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'selProcessSucNm':\t\r\n\t\t\t\t\ttts = this.props.options.dsSnroTts;\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < tts.length; i ++) {\r\n\t\t\t\t\t\tif (tts[i].SNRO_TTS_CD === e.target.value) {\r\n\t\t\t\t\t\t\tttsText = tts[i].SNRO_TTS_TEXT;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tstate['textFieldProps']['iptSucTTS'].value = ttsText;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selProcessFailNm':\t\r\n\t\t\t\t\ttts = this.props.options.dsSnroTts;\t\r\n\r\n\t\t\t\t\tfor (let i = 0; i < tts.length; i ++) {\r\n\t\t\t\t\t\tif (tts[i].SNRO_TTS_CD === e.target.value) {\r\n\t\t\t\t\t\t\tttsText = tts[i].SNRO_TTS_TEXT;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tstate['textFieldProps']['iptFailTTS'].value = ttsText;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t<Label value=\"시나리오\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\twidth       = {200}\r\n\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSnroNm.id}\r\n\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSnroNm.name}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSnroNm.value}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly    = {true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid          = {this.state.grdProps.grdSnroProcess.id} \r\n\t\t\t\t\t\t\t\tareaName    = {this.state.grdProps.grdSnroProcess.areaName}\r\n\t\t\t\t\t\t\t\theader      = {this.state.grdProps.grdSnroProcess.header}\r\n\t\t\t\t\t\t\t\tdata        = {this.state.dsSnroProcessList}\r\n\t\t\t\t\t\t\t\theight      = {this.state.grdProps.grdSnroProcess.height}\r\n\t\t\t\t\t\t\t\taddRowBtn   = {true}\r\n\t\t\t\t\t\t\t\tdelRowBtn   = {true}\r\n\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonDeleteRow        = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow        = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\tonBeforeInsertRow  = {this.event.grid.onBeforeInsertRow}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\t\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\t\t\t\tid=\"tblUsrDetInfo\" \r\n\t\t\t\t\t\t\t\t\t\tcolGrp = {[{width: '8%'}, {width: '12%'}, {width: '8%'}, {width: '26%'}, {width: '8%'}, {width: '42%'}]}\r\n\t\t\t\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '순번'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSortOrd.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSortOrd.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsSelected.records[0][\"SORT_ORD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSortOrd.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptSortOrd.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptSortOrd.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptSortOrd.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptSortOrd.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '타입'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selProcessTP.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSelected.records[0][\"PROCESS_TP\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selProcessTP.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selProcessTP.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selProcessTP.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selProcessTP.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '프로세스'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selProcessExpl.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSelected.records[0][\"PROCESS_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selProcessExpl.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selProcessExpl.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selProcessExpl.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selProcessExpl.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>, colSpan : 3},\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '성공 액션'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selProcessSuc.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSelected.records[0][\"SUCCESS\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selProcessSuc.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selProcessSuc.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selProcessSuc.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selProcessSuc.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : 'TTS 명'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selProcessSucNm.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSelected.records[0][\"SUCCESS_TTS\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selProcessSucNm.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selProcessSucNm.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selProcessSucNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selProcessSucNm.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : 'TTS'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSucTTS.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSucTTS.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSucTTS.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSucTTS.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptSucTTS.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptSucTTS.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptSucTTS.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptSucTTS.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>, colSpan : 3}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '실패 액션'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selProcessFail.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSelected.records[0][\"FAIL\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selProcessFail.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selProcessFail.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selProcessFail.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selProcessFail.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : 'TTS 명'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selProcessFailNm.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSelected.records[0][\"FAIL_TTS\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selProcessFailNm.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selProcessFailNm.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selProcessFailNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selProcessFailNm.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : 'TTS'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptFailTTS.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptFailTTS.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptFailTTS.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptFailTTS.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptFailTTS.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptFailTTS.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptFailTTS.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptFailTTS.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>, colSpan : 3}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '타겟프로세스'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptRtnTarget.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptRtnTarget.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsSelected.records[0][\"RTN_TARGET\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptRtnTarget.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptRtnTarget.minLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptRtnTarget.maxLength}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptRtnTarget.readOnly}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptRtnTarget.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <RFloatArea><Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnKeywordSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnKeywordSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnKeywordSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnKeywordSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></RFloatArea>, colSpan : 6}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SYS080001;","// 오인식문장관리\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, SearchPanel,\r\n\tFlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, TransManager, newScrmObj, StrLib} from 'common';\r\nimport { number } from 'mathjs';\r\n\r\nclass BOT010101 extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.maxTempCd = 0;\r\n\t\t\r\n\t\tthis.snroKeywordGridApi = null;\r\n\t\tthis.snroKeywordGrid    = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsSnroKeywordList : DataLib.datalist.getInstance(),\t\t\t\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnKeywordSave : {\r\n\t\t\t\t\tid       : 'btnKeywordSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdSnroKeyword : {\r\n\t\t\t\t\tid       : 'grdSnroKeyword',\r\n\t\t\t\t\tareaName : '추출 키워드',\r\n\t\t\t\t\theight   : '580px',\r\n\t\t\t\t\theader   : [\r\n\t\t\t\t\t\t\t\t\t{headerName: '키워드',\t field: 'KWD',\tcolId: 'KWD', width: 200, cellEditor: 'customEditor', maxLength: 30, type:'kor',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '가중치',   field: 'KWD_SCO',\tcolId: 'KWD_SCO', width: 100, cellEditor: 'customEditor', maxLength: 3, type:'num',\teditable: true, req: true},\r\n\t\t\t\t\t\t\t\t\t{headerName: '사용여부', field: 'USE_FLAG',\tcolId: 'USE_FLAG',\teditable: true, defaultValue : 'Y', width: 150, req: true, resizable: false, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')}\t\r\n\t\t\t\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSnroNm : {\r\n\t\t\t\t\tid          : 'iptSnroNm',\r\n\t\t\t\t\tname        : 'iptSnroNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\t\t\t\t\r\n\t\t\t\tiptSnroType : {\r\n\t\t\t\t\tid          : 'iptSnroType',\r\n\t\t\t\t\tname        : 'iptSnroType',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t},\r\n\t\t\t\tiptSnroSco : {\r\n\t\t\t\t\tid          : 'iptSnroSco',\r\n\t\t\t\t\tname        : 'iptSnroSco',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\torgValue    : '',\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tlet props = this.props.options.param;     \r\n\t\tlet state = this.state;\r\n\t\tstate['textFieldProps']['iptSnroNm'].value = props.name;\r\n\t\tstate['textFieldProps']['iptSnroType'].value = props.snroTp;\r\n\r\n\t\tthis.setState(state);\r\n\t\tthis.transaction(\"BOT010101_R00\")\t\r\n\t}\r\n\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\r\n\t\tswitch (transId) {\r\n\t\tcase 'BOT010101_H01':\r\n\t\t\t\r\n\t\t\tif (StrLib.isNull(this.state.textFieldProps.iptSnroSco.value) || Number(this.state.textFieldProps.iptSnroSco.value) <= 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0002', [\"임계값\"]);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tlet records = this.snroKeywordGrid.gridDataset.records;\r\n\r\n\t\t\touter : for (let intA = 0; intA < records.length; intA ++) {\r\n\t\t\t\tif (records[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet lagHeader = this.state.grdProps.grdSnroKeyword.header;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < lagHeader.length; i ++) {\t\t\r\n\t\t\t\t\tif (lagHeader[i].req === true) {\r\n\t\t\t\t\t\tif (StrLib.isNull(records[intA][lagHeader[i].field])) {\r\n\t\t\t\t\t\t\tlet rows = this.snroKeywordGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\tlet rowNum = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i = 0; i < rows.length; i ++) {\r\n\t\t\t\t\t\t\t\tif (rows[i].data.TEMP_CD === records[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\trowNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(rowNum + 1) , lagHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\r\n\t\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < records.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB \r\n\t\t\t\t\t\t&& records[intA].KWD === records[intB].KWD) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet rows = this.snroKeywordGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\tlet rowNum = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (let i = 0; i < rows.length; i ++) {\r\n\t\t\t\t\t\t\tif (rows[i].data.TEMP_CD === records[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\trowNum = i;\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(rowNum + 1), Number(intB + 1), '키워드']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.snroKeywordGrid.moveRow(intA, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.snroKeywordGrid.moveRow(returnVal, true);\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\r\n\t\t\tif (records.length < 1 || chkCnt === 0) {\r\n\t\t\t\tif (this.state.textFieldProps.iptSnroSco.value === this.state.textFieldProps.iptSnroSco.orgValue) {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\t\t\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\tlet props = this.props.options.param;\r\n\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'BOT010101_R00':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"BOT.R_getSnroKeywordList\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsSnroKeywordListRecv\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSearch', [{ND_UUID: props.id, ND_PORT: props.port}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'BOT010101_H01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid:\"BOT.H_handleSnroKeywordList\",\r\n\t\t\t\t\tdatasetsend:\"dsSave\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tlet records = this.snroKeywordGrid.gridDataset.records;\r\n\t\t\t\tfor (let i = 0; i < records.length; i ++) {\r\n\t\t\t\t\trecords[i].REQ_SCO = Number(this.state.textFieldProps.iptSnroSco.value);\r\n\t\t\t\t\trecords[i].ND_UUID = props.id;\r\n\t\t\t\t\trecords[i].ND_PORT = props.port;\r\n\t\t\t\t\tif (this.state.textFieldProps.iptSnroSco.value !== this.state.textFieldProps.iptSnroSco.orgValue) {\r\n\t\t\t\t\t\tif (records[i].rowtype === 'r') {\r\n\t\t\t\t\t\t\trecords[i].rowtype = 'u';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttransManager.addDataset('dsSave', records);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tconsole.log(res)\r\n\t\tswitch (res.id) {\t\t\r\n\t\tcase 'BOT010101_R00':\r\n\t\t\tif (res.data.dsSnroKeywordListRecv.length > 0) {\r\n\t\t\t\tlet dsSnroKeywordListRecv = res.data.dsSnroKeywordListRecv;\r\n\r\n\t\t\t\tlet tempCd = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < dsSnroKeywordListRecv.length; i ++) {\r\n\t\t\t\t\tdsSnroKeywordListRecv[i].TEMP_CD = tempCd;\r\n\t\t\t\t\ttempCd ++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.maxTempCd = tempCd;\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroKeywordList\", dsSnroKeywordListRecv);\r\n\t\t\t\t\r\n\t\t\t\tlet state = this.state;\r\n\t\t\t\tstate['textFieldProps']['iptSnroSco'].value = res.data.dsSnroKeywordListRecv[0].REQ_SCO;\r\n\t\t\t\tstate['textFieldProps']['iptSnroSco'].orgValue = res.data.dsSnroKeywordListRecv[0].REQ_SCO;\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t}\t\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'BOT010101_H01':\r\n\t\t\tComLib.openDialog(\"A\", \"COMI0001\", [\"키워드\"]);\r\n\t\t\t\r\n\t\t\tthis.transaction(\"BOT010101_R00\");\r\n\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnKeywordSave\":\r\n\t\t\t\t\tif (this.validation(\"BOT010101_H01\")) {\r\n\t\t\t\t\t\tthis.transaction(\"BOT010101_H01\");\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonGridReady: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\r\n\t\t\t\t\tthis.snroKeywordGridApi = e.gridApi;\r\n\t\t\t\t\tthis.snroKeywordGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {rtn: true, index: 0};\r\n\t\t\t},\t\t\t\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdSnroKeyword\":\r\n\t\t\t\t\tlet records = this.snroKeywordGrid.gridDataset.records;\r\n\r\n\t\t\t\t\trecords[e.index].TEMP_CD = this.maxTempCd + 1;\r\n\r\n\t\t\t\t\tthis.maxTempCd ++;\r\n\r\n\t\t\t\t\tthis.snroKeywordGrid.gridDataset.setRecords(records);\r\n\r\n\t\t\t\t\tthis.snroKeywordGridApi.setRowData(this.snroKeywordGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\r\n\t\t\t\t\tlet rows = this.snroKeywordGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet row;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < rows.length; i ++) {\r\n\t\t\t\t\t\tif (rows[i].data.TEMP_CD === this.maxTempCd){\r\n\t\t\t\t\t\t\trow = this.snroKeywordGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tthis.snroKeywordGridApi.ensureIndexVisible(i, 'middle');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (row.selected !== true) {\r\n\t\t\t\t\t\trow.setSelected(true);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSnroSco':\r\n\t\t\t\t\tstate['textFieldProps']['iptSnroSco'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSnroSco':\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.target.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.target.id].value    = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value=\"시나리오\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth       = {250}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSnroNm.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSnroNm.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSnroNm.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {true}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value=\"임계값\" req={true}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth       = {50}\r\n\t\t\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSnroSco.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSnroSco.name}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSnroSco.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSnroSco.placeholder}\r\n\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {3}\r\n\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttype        = {\"onlyNum\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.grdProps.grdSnroKeyword.id} \r\n\t\t\t\t\t\t\t\t\tareaName    = {this.state.grdProps.grdSnroKeyword.areaName}\r\n\t\t\t\t\t\t\t\t\theader      = {this.state.grdProps.grdSnroKeyword.header}\r\n\t\t\t\t\t\t\t\t\tdata        = {this.state.dsSnroKeywordList}\r\n\t\t\t\t\t\t\t\t\theight      = {this.state.grdProps.grdSnroKeyword.height}\r\n\t\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\r\n\t\t\t\t\t\t\t\t\trowNum      = {true}\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {true}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {true}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnKeywordSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnKeywordSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnKeywordSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnKeywordSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default BOT010101;","// 사용자관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , SearchPanel\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield \r\n\t   , Selectbox \r\n\t   , Checkbox\r\n\t   , Table                 } from 'components';\r\nimport { BasicButton as Button } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\n\t   \r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.password = '';\r\n\t\tthis.state = {\r\n\t\t\tdsUserDetail : DataLib.datalist.getInstance([{USR_ID  : this.props.options.param.records[0].USR_ID\r\n\t\t\t\t                                        , USR_NM  : this.props.options.param.records[0].USR_NM\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, AUTH_LV : this.props.options.param.records[0].AUTH_LV\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, CENT_CD : this.props.options.param.records[0].CENT_CD\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, TEAM_CD : this.props.options.param.records[0].TEAM_CD\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, USE_FLAG: this.props.options.param.records[0].USE_FLAG}]),\r\n\t\t\t\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// 1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t// => 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () { // 조회\t\t\r\n\t}\r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS010001_H01' :\r\n\t\t\t\t// 사용자ID, 이름, 권한, 센터, 팀, 활동여부\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDetail.getValue(0, 'USR_ID'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'COMI0062');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDetail.getValue(0, 'USR_NM'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0201');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDetail.getValue(0, 'AUTH_LV'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0202');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDetail.getValue(0, 'CENT_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0203');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsUserDetail.getValue(0, 'TEAM_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0204');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\t\t\t\t\r\n\t\t\t\tcase 'SYS010001_R01' :\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : 'SYS.R_getPwdStndCode',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsPwdStndCd'\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet stndParam = {\r\n\t\t\t\t\t\tCENT_CD: this.state.dsUserDetail.records[0][\"CENT_CD\"],\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', [ stndParam ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010001_R02' : // 신규일 때, 사용자아이디 및 사용자이름 체크 용도\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getUserCdCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsgetUserCdCheck'\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getUserNmCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsgetUserNmCheck'\r\n\t\t\t\t\t});\t\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', this.state.dsUserDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010001_R03' : // 수정할 때, 사용자이름 체크 용도\r\n\t\t\t\t\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getUserNmCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsgetUserNmCheck'\r\n\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', this.state.dsUserDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010001_H01' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.update,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.U_setUsrInfo\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 비밀번호 정보 추가 해야함. (기준값 테이블에서 조회한 값으로 셋팅)\r\n\t\t\t\t\tlet rowtype = this.state.dsUserDetail.getRow(0)[0].rowtype;\r\n\t\t\t\t\tif(rowtype === 'c') {\r\n\t\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\t\t\tdatasetsend: 'dsSendPwd',\r\n\t\t\t\t\t\t\tcolumnid: 'INIT_PWD'\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\t\tcrudh      : transManager.constants.crudh.create,\r\n\t\t\t\t\t\t\tsqlmapid   : \"SYS.U_setPwdInit\",\r\n\t\t\t\t\t\t\tdatasetsend: \"dsSendPwd\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet dsPwdData = {\r\n\t\t\t\t\t\tUSR_ID: this.state.dsUserDetail.records[0][\"USR_ID\"],\r\n\t\t\t\t\t\tINIT_PWD: this.password,\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSendPwd', [ dsPwdData ] );\r\n\t\t\t\t\ttransManager.addDataset('dsSend', this.state.dsUserDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010001_U01' :\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.passwd,\r\n\t\t\t\t\t\tdatasetsend: 'dsSendPwd',\r\n\t\t\t\t\t\tcolumnid   : 'INIT_PWD'\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.update,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.U_setPwdInit\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSendPwd\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tdsPwdData = {\r\n\t\t\t\t\t\tUSR_ID: this.state.dsUserDetail.records[0][\"USR_ID\"],\r\n\t\t\t\t\t\tINIT_PWD: this.password\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSendPwd', [ dsPwdData ] );\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010001_U02' :\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.U_setLoginInit',\r\n\t\t\t\t\t\tdatasetsend: 'dsSend'\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSend', this.state.dsUserDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\r\n\r\n\t\t\tcase 'SYS010001_R01':\r\n\t\t\t\tif(res.data.dsPwdStndCd.length > 0) {\r\n\t\t\t\t\tthis.password = res.data.dsPwdStndCd[0].STND_VAL;\r\n\r\n\t\t\t\t\tif (this.password === null || this.password === '') {\r\n\t\t\t\t\t\t// 해당 제휴사의 비밀번호 기준값이 존재하지 않습니다.[!@]\\n관리자에게 문의해 주십시오\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0207');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.transaction(\"SYS010001_R02\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 해당 제휴사의 비밀번호 기준값이 존재하지 않습니다.[!@]\\n관리자에게 문의해 주십시오\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0207');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS010001_R02': // 신규일 때, 사용자아이디 및 사용자이름 체크 용도\r\n\t\t\t\tif (res.data.dsgetUserCdCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0208');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (res.data.dsgetUserNmCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0209');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.transaction(\"SYS010001_H01\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010001_R03': // 수정할 때, 사용자이름 체크 용도\r\n\t\t\t\tif (res.data.dsgetUserNmCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0209');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.transaction(\"SYS010001_H01\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010001_H01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"COMI0003\");\r\n\t\t\t\t\r\n\t\t\t\tthis.props.onCallbackFunc({date: this.state.dsUserDetail});\r\n\t\t\t\tthis.props.onClose();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010001_R04':\r\n\t\t\t\tif(res.data.dsPwdStndCd.length > 0) {\r\n\t\t\t\t\tthis.password = res.data.dsPwdStndCd[0].STND_VAL;\r\n\r\n\t\t\t\t\tif (this.password === null || this.password === '') {\r\n\t\t\t\t\t\t// 해당 제휴사의 비밀번호 기준값이 존재하지 않습니다.[!@]\\n관리자에게 문의해 주십시오\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0207');\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.transaction(\"SYS010001_U02\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 해당 제휴사의 비밀번호 기준값이 존재하지 않습니다.[!@]\\n관리자에게 문의해 주십시오\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0207');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'SYS010000_U01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"SYSI0003\");\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010000_U02':\r\n\t\t\t\tComLib.openDialog(\"A\", \"SYSI0004\");\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnSave\" : \t// 저장\r\n\t\t\t\t\tif (this.validation(\"SYS010001_H01\")) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet isNew = this.props.options.param.isNew;\r\n\t\t\t\t\t\tif (isNew) { // 신규이면 센터 기준 암호 조회 후 사용자 아이디와 사용자이름 중복체크\r\n\t\t\t\t\t\t\tthis.transaction('SYS010001_R01');\r\n\t\t\t\t\t\t\t// this.transaction(\"SYS010001_R02\");\r\n\t\t\t\t\t\t} else { // 수정시 사용자이름 중복체크\r\n\t\t\t\t\t\t\tthis.transaction(\"SYS010001_R03\");\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase \"btnInitLogin\" : \t// 로그인 초기화\r\n\t\t\t\t\tthis.transaction(\"SYS010001_U01\"); \r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"btnInitPwd\" : \t// 비밀번호 초기화\r\n\t\t\t\t\t// 기준값 조회\r\n\t\t\t\t\tthis.transaction(\"SYS010001_R04\");\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptUsrCd' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"USR_ID\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptUsrNm' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"USR_NM\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'chkUseYn' :\r\n\t\t\t\t\t\tthis.setState({...this.state, chkUseFlag: {...this.state.chkUseFlag, checked : (e.checked) ? 'Y' : 'N'}});\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"USE_FLAG\", (e.checked) ? 'Y' : 'N');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selCentCd' : \r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"TEAM_CD\", \"\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'selTeamCd' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'selAuthCd' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsUserDetail\", 0, \"AUTH_LV\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\t\t\t\tid=\"tblUsrDetInfo\" \r\n\t\t\t\t\t\t\t\t\t\tcolGrp = {[{width: '15%'}, {width: '35%'}, {width: '15%'}, {width: '35%'}]}\r\n\t\t\t\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '사용자 아이디'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {\"100%\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {\"iptUsrCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {\"iptUsrCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsUserDetail.records[0][\"USR_ID\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {\"사용자 아이디\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.props.options.param.isNew ? false : true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '사용자 이름'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {\"100%\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {\"iptUsrNm\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {\"iptUsrNm\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsUserDetail.records[0][\"USR_NM\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {\"사용자 이름\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '센터'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"selCentCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsUserDetail.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {'100%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '팀'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"selTeamCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getTeamList(this.state.dsUserDetail), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsUserDetail.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {'100%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '권한'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"selAuthCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.props.options.param.authList}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsUserDetail.records[0][\"AUTH_LV\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {'100%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '사용여부'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"chkUseFlag\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkeyProp  = {\"SYS010001_chkUseYn\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {\"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked  = {this.state.dsUserDetail.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</LFloatArea>}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t]\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t{this.props.options.param.isNew ? \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t \t: \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\t\tfiiled   = {true} \r\n\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"btnInitLogin\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {\"로그인초기화\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tml = {5}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmr = {5}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\t\tfiiled   = {true} \r\n\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"btnInitPwd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {\"비밀번호초기화\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor = {\"purple\"} \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled= {true} \r\n\t\t\t\t\t\t\t\t\t\t\tid    = {\"btnSave\"}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {\"저장\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {7}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 상담원 관리 팝업\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , SearchPanel\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield \r\n\t   , Selectbox \r\n\t   , Checkbox\r\n\t   , Table                 } from 'components';\r\nimport { BasicButton as Button } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\nconst testTeamGetter = (centcd) => {\r\n\tlet teamList = ComLib.getSession(\"gdsTeamList\");\r\n\treturn teamList.filter(item => item.CENT_CD === centcd).map(item => {return item.CODE_NM})\r\n}\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.password = '';\r\n\t\tthis.state = {\t\t\t\r\n\t\t\tdsConstDetail : DataLib.datalist.getInstance([{CONST_CD  : this.props.options.param.records[0].CONST_CD\r\n\t\t\t\t                                        , CONST_NM  : this.props.options.param.records[0].CONST_NM\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, CENT_CD : this.props.options.param.records[0].CENT_CD\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, TEAM_CD : this.props.options.param.records[0].TEAM_CD\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, EXT_NUM : this.props.options.param.records[0].EXT_NUM\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, USE_FLAG: this.props.options.param.records[0].USE_FLAG}]),\r\n\t\t\t\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// 1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t// => 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () { // 조회\t\t\r\n\t}\r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS030001_H01' :\r\n\t\t\t\t// 상담원ID, 성명, 센터, 팀\r\n\t\t\t\tif(StrLib.isNull(this.state.dsConstDetail.getValue(0, 'CONST_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'COMI0062');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsConstDetail.getValue(0, 'CONST_NM'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0201');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsConstDetail.getValue(0, 'CENT_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0203');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsConstDetail.getValue(0, 'TEAM_CD'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0204');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(StrLib.isNull(this.state.dsConstDetail.getValue(0, 'EXT_NUM'))) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0210');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\t\t\t\t\r\n\t\t\t\tcase 'SYS030001_R01' : // 신규일 때, 상담원아이디 및 상담원성명 체크 용도\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getConstCdCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsConstCdCheck'\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getConstNmCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsConstNmCheck'\r\n\t\t\t\t\t});\t\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', this.state.dsConstDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS030001_R02' : // 수정할 때, 상담원성명 체크 용도\r\n\t\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid: 'SYS.R_getConstNmCheck',\r\n\t\t\t\t\t\tdatasetsend: 'dsSrch',\r\n\t\t\t\t\t\tdatasetrecv: 'dsConstNmCheck'\r\n\t\t\t\t\t});\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSrch', this.state.dsConstDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tcase 'SYS030001_H01' :\r\n\t\t\t\t\ttransManager.addConfig ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.create,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.C_setConstInfo\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSend', this.state.dsConstDetail.getRow(0));\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\r\n\r\n\t\t\tcase 'SYS030001_R01': // 신규일 때, 상담원아이디 및 상담원성명 체크 용도\r\n\t\t\t\tif (res.data.dsConstCdCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0208');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else if (res.data.dsConstNmCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0209');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.transaction(\"SYS030001_H01\");\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS030001_R02': // 수정할 때, 상담원성명 체크 용도\r\n\t\t\t\tif (res.data.dsConstNmCheck[0].CHK_CNT > 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0209');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.transaction(\"SYS030001_H01\");\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS030001_H01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"COMI0003\");\r\n\t\t\t\tthis.props.onCallbackFunc({date: this.state.dsConstDetail});\r\n\t\t\t\tthis.props.onClose();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\r\n\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnSave\" : \t// 저장\r\n\t\t\t\t\tif (this.validation(\"SYS030001_H01\")) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet isNew = this.props.options.param.isNew;\r\n\t\t\t\t\t\tif (isNew) { // 신규이면 상담원 ID/성명 중복체크\r\n\t\t\t\t\t\t\tthis.transaction('SYS030001_R01');\r\n\t\t\t\t\t\t} else { // 수정시 상담원 성명 중복체크\r\n\t\t\t\t\t\t\tthis.transaction(\"SYS030001_R02\");\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptConstCd' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"CONST_CD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptConstNm' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"CONST_NM\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptPhoneNb' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"EXT_NUM\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'chkUseFlag' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"USE_FLAG\", (e.checked) ? 'Y' : 'N');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'selCentCd' : \r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"TEAM_CD\", \"\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'selTeamCd' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsConstDetail\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<FullPanel>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\t\t\t\tid=\"tblUsrDetInfo\" \r\n\t\t\t\t\t\t\t\t\t\tcolGrp = {[{width: '15%'}, {width: '35%'}, {width: '15%'}, {width: '35%'}]}\r\n\t\t\t\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '상담원 아이디'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {\"100%\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {\"iptConstCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {\"iptConstCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsConstDetail.records[0][\"CONST_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {\"상담원 아이디\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {this.props.options.param.isNew ? false : true}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '상담원 이름'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth       = {\"100%\"} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid          = {\"iptConstNm\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname        = {\"iptConstNm\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsConstDetail.records[0][\"CONST_NM\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {\"상담원 이름\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[   {type : 'T', value : '센터'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"selCentCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsConstDetail.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {'100%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '팀'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"selTeamCd\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getTeamList(this.state.dsConstDetail), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsConstDetail.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {'100%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t\t\t\t[\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '내선번호'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Textfield width='100%'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid = {\"iptPhoneNb\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname = {\"iptPhoneNb\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsConstDetail.records[0][\"EXT_NUM\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder = {\"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tminLength = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmaxLength = {20}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treadOnly = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype     = {\"onlyNum\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'T', value : '사용여부'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {\"chkUseFlag\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkeyProp  = {\"SYS030001_chkUseYn\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue    = {\"\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked  = {this.state.dsConstDetail.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</LFloatArea>}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t]\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</FullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor = {\"purple\"} \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled= {true} \r\n\t\t\t\t\t\t\t\t\t\t\tid    = {\"btnSave\"}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {\"저장\"}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmr = {7}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","import PwdInit   from 'containers/base/common/pwdInit.js';\r\nimport pwdChg   from 'containers/base/common/pwdChg.js';\r\nimport userChg   from 'containers/base/common/userChg.js';\r\n\r\n\r\nimport COM010001 from 'containers/com/COM010001';\r\nimport COM010010 from 'containers/com/COM010010';\r\nimport COM010020 from 'containers/com/COM010020';\r\nimport STT000001 from 'containers/stt/STT000001';\r\n\r\nimport STT010001 from 'containers/stt/STT010001';\r\nimport STT050001 from 'containers/stt/STT050001';\r\nimport STT050003 from 'containers/stt/STT050003';\r\nimport STT060001 from 'containers/stt/STT060001';\r\n\r\nimport STA030001 from 'containers/sta/STA030001';\r\nimport STA030002 from 'containers/sta/STA030002';\r\nimport STA030003 from 'containers/sta/STA030003';\r\n\r\nimport BOT010001 from 'containers/bot/BOT010001';\r\nimport BOT010101 from 'containers/bot/BOT010101';\r\n\r\n\r\nimport SYS010001 from 'containers/sys/SYS010001';\r\nimport SYS030001 from 'containers/sys/SYS030001';\r\n\r\nimport AnswerArea from 'components/Player/AnswerArea';\r\n\r\nexport const popRoute = [\r\n\t{ id: 'pwdInit',\t\tcomponent: PwdInit },\r\n\t{ id: 'pwdChg',\t\t\tcomponent: pwdChg },\r\n\t{ id: 'userChg',\t\tcomponent: userChg },\r\n\t{ id: 'AnswerArea',\t\tcomponent: AnswerArea },\r\n\t\r\n\t\r\n\t{ id: 'COM010001',\t\tcomponent: COM010001 },\r\n\r\n\t{ id: 'COM010010',\t\tcomponent: COM010010 },\r\n\t{ id: 'COM010020',\t\tcomponent: COM010020 },\r\n\t{ id: 'STT000001',\t\tcomponent: STT000001 },\r\n\t\t\r\n\t{ id: 'STT010001',\t\tcomponent: STT010001 },\r\n\t{ id: 'STT050001',\t\tcomponent: STT050001 },\r\n\t{ id: 'STT050003',\t\tcomponent: STT050003 },\r\n\t{ id: 'STT060001',\t\tcomponent: STT060001 },\r\n\t\r\n\t{ id: 'STA030001',\t\tcomponent: STA030001 },\r\n\t{ id: 'STA030002',\t\tcomponent: STA030002 },\r\n\t{ id: 'STA030003',\t\tcomponent: STA030003 },\r\n\t{ id: 'BOT010001',\t\tcomponent: BOT010001 },\r\n\t{ id: 'BOT010101',\t\tcomponent: BOT010101 },\r\n\t\r\n\t{ id: 'SYS010001',\t\tcomponent: SYS010001 },\r\n\t{ id: 'SYS030001',\t\tcomponent: SYS030001 },\r\n\r\n];","import React from 'react';\r\nimport {BasicButton as Button, Label, Textarea, RelativeGroup, ComponentPanel, Switch, SubFullPanel, RFloatArea} from 'components';\r\nimport {ComLib, StrLib} from 'common';\r\nimport 'assets/styles/component.css';\r\n\r\nclass AnswerArea extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\torg     : \"\",\r\n\t\t\tchanged : \"\",\r\n\t\t\tisAddNew: false,\r\n\t\t\tisCS: false\r\n\t\t}\r\n\t\t\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tlet params = this.props.options.param[0]\t\t\r\n\t\tlet newVal = params.TYPE === 'd' ? \"\" : params.NEW_VALUE;\r\n\t\tlet spk    = params.SPK  === 'A' ? true : false;\r\n\t\t\r\n\t\tthis.setState({org : params.VALUE, changed: newVal, isCS: spk}, () => {\r\n\t\t\t\t\t\r\n\t\t\tif (this.state.isCS) {\r\n\t\t\t\tif (params.TYPE !== 'd') {\r\n\t\t\t\t\tdocument.getElementById('changeTo_' + params.INDEX).style.backgroundColor = \"#ffec99\";\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (params.TYPE !== 'c') {\r\n\t\t\t\t\tdocument.getElementById('org_'      + params.INDEX).style.backgroundColor = \"#ffec99\";\r\n\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t} \t\t\t\r\n\t\t});\t\t\r\n\t}\r\n\tcomponentWillUnmount () {\r\n\t\tthis.props.onCallbackFunc({type: 'noChange'});\r\n\t}\r\n\r\n\tonChange (e) {\r\n\t\tthis.setState({...this.state, changed: e.target.value})\r\n\t}\r\n\tonKeyPress (e) {\r\n\t\t\r\n\t}\r\n\tvalidation = (serviceid) => {\r\n\t\tlet rtn = true\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'btnSave':\t\r\n\t\t\tlet params = this.props.options.param[0]\r\n\r\n\t\t\tif (params.TYPE === 'c' || params.TYPE === 'u') {\r\n\t\t\t\tif ((params.NEW_VALUE === this.state.changed) && ((params.SPK  === 'A') === this.state.isCS)) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['오인식 문장이 변경 되지 않았습니다.']);\r\n\t\t\r\n\t\t\t\t\trtn = false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (this.state.org === this.state.changed && ((params.SPK  === 'A') === this.state.isCS)) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['원문 문장과 동일 합니다.']);\r\n\t\t\r\n\t\t\t\t\trtn = false;\r\n\t\t\t\t}\r\n\t\t\t} \r\n\t\t\tif (StrLib.isNull(this.state.changed)) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['오인식 문장을 작성 해주셔야 합니다.']);\r\n\t\t\t\trtn = false;\r\n\t\t\t}\r\n\t\t\t// 한글만 입력 가능 하도록 validation 걸어야 함\r\n\t\t\tbreak;\r\n\t\t}\r\n\t\t\t\t\t\t\r\n\t\treturn rtn;\r\n\t}\r\n\tevent = {\r\n\t\tswitch: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tthis.setState({...this.state, isCS : !this.state.isCS}, () => {\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet param = this.props.options.param[0];\r\n\r\n\t\t\t\t\tif (this.state.isCS) {\r\n\t\t\t\t\t\tdocument.getElementById('changeTo_' + param.INDEX).style.backgroundColor = \"#ffec99\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdocument.getElementById('changeTo_' + param.INDEX).style.backgroundColor = \"white\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t\t} \r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnSave':\r\n\t\t\t\t\tlet changed = this.state.changed\r\n\t\t\t\t\tif (this.validation('btnSave')) {\r\n\t\t\t\t\t\tif (this.state.isAddNew) {\r\n\t\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['신규 문장을 추가 하시겠습니까?'], checked => { if (checked === true) {\t\t\r\n\t\t\t\t\t\t\t\tthis.props.onCallbackFunc({value: changed, index: this.props.options.param[0].INDEX, type: 'new', spk: this.state.isCS ? 'A' : 'C'});\r\n\t\t\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t\t\t}});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['오인식 문장을 저장 하시겠습니까?'], checked => { if (checked === true) {\t\t\r\n\t\t\t\t\t\t\t\tthis.props.onCallbackFunc({value: changed, index: this.props.options.param[0].INDEX, type: 'update', spk: this.state.isCS ? 'A' : 'C'});\r\n\t\t\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t\t\t}});\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'btnDel':\r\n\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['문장을 삭제 하시겠습니까?'], checked => { if (checked === true) {\t\r\n\t\r\n\t\t\t\t\t\tthis.props.onCallbackFunc({value: \"[문장 삭제]\", index: this.props.options.param[0].INDEX, type: 'delete'});\r\n\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t}});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'btnCanc':\r\n\t\t\t\t\tlet param = this.props.options.param[0];\r\n\t\t\t\t\tif (param.TYPE === 'd') {\r\n\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['문장 삭제를 취소 하시겟습니까?'], checked => { if (checked === true) {\t\r\n\r\n\t\t\t\t\t\t\tthis.props.onCallbackFunc({value: this.state.org, index: this.props.options.param[0].INDEX, type: 'reset'});\r\n\t\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t\t}});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['문장 등록를 취소 하시겟습니까?'], checked => { if (checked === true) {\t\r\n\r\n\t\t\t\t\t\t\tthis.props.onCallbackFunc({value: this.state.org, index: this.props.options.param[0].INDEX, type: 'reset'});\r\n\t\t\t\t\t\t\tthis.props.onClose();\r\n\t\t\t\t\t\t}});\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'btnCanc2':\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnAddNew':\r\n\t\t\t\t\tlet params = this.props.options.param[0]\r\n\r\n\t\t\t\t\tthis.setState({...this.state, isAddNew : true, changed : \"\"}, () => {\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tif (this.state.isCS) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdocument.getElementById('changeTo_' + params.INDEX).style.backgroundColor = \"#ffec99\";\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} \t\t\t\r\n\t\t\t\t\t})\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\tlet param = this.props.options.param[0];\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t{this.state.isAddNew ?\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Label value=\"작성문장\"/>\r\n\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\twidth       = {280}\r\n\t\t\t\t\t\t\t\t\tid          = {'changeTo_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\tname        = {'changeTo_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.changed}\r\n\t\t\t\t\t\t\t\t\tplaceholder\t= {this.state.org}\r\n\t\t\t\t\t\t\t\t\tminLength\t= {0}\r\n\t\t\t\t\t\t\t\t\tmaxLength\t= {2000}\r\n\t\t\t\t\t\t\t\t\treadOnly\t= {false}\r\n\t\t\t\t\t\t\t\t\tdisabled\t= {false}\r\n\t\t\t\t\t\t\t\t\trows\t\t= {3}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tonChange\t= {(e) => this.onChange(e)}\r\n\t\t\t\t\t\t\t\t\tonKeyPress\t= {(e) => this.onKeyPress(e)}\r\n\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t<Label value=\"상담원 발화\"/>\r\n\t\t\t\t\t\t\t\t<Switch id={\"swchAnswerArea\"} onChange={this.event.switch.onChange} checked={this.state.isCS}/>\r\n\t\t\t\t\t\t\t\t<div style={{height: \"95px\"}}></div>\r\n\t\t\t\t\t\t\t\t<SubFullPanel>  \r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnSave\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"저장\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\r\n\t\t\t\t\t\t\t\t\t\ttooltip ={\"신규 오인식 문장 등록\"}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t:\t\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t{param.TYPE === 'c' ? \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Label value=\"상담원문\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\t\t\twidth       = {280}\r\n\t\t\t\t\t\t\t\t\t\t\tid          = {'org_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\t\t\tname        = {'org_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.org}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder\t= {\"\"}\r\n\t\t\t\t\t\t\t\t\t\t\tminLength\t= {0}\r\n\t\t\t\t\t\t\t\t\t\t\tmaxLength\t= {2000}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly\t= {true}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\t= {false}\r\n\t\t\t\t\t\t\t\t\t\t\trows\t\t= {3}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tonChange\t= {(e) => this.onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\tonKeyPress\t= {(e) => this.onKeyPress(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{param.TYPE === 'd' ? \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Label value=\"작성문장\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\t\t\twidth       = {280}\r\n\t\t\t\t\t\t\t\t\t\t\tid          = {'changeTo_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\t\t\tname        = {'changeTo_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.changed}\r\n\t\t\t\t\t\t\t\t\t\t\tplaceholder\t= {this.state.org}\r\n\t\t\t\t\t\t\t\t\t\t\tminLength\t= {0}\r\n\t\t\t\t\t\t\t\t\t\t\tmaxLength\t= {2000}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly\t= {false}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled\t= {false}\r\n\t\t\t\t\t\t\t\t\t\t\trows\t\t= {3}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tonChange\t= {(e) => this.onChange(e)}\r\n\t\t\t\t\t\t\t\t\t\t\tonKeyPress\t= {(e) => this.onKeyPress(e)}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{param.TYPE !== 'd' ? \r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<Label value=\"상담원 발화\"/>\r\n\t\t\t\t\t\t\t\t\t\t<Switch id={\"swchAnswerArea\"} onChange={this.event.switch.onChange} checked={this.state.isCS}/>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{param.TYPE === 'r' || param.TYPE === 'u' ? \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\tparam.TYPE === 'd' ? \r\n\t\t\t\t\t\t\t\t\t\t<div style={{height: \"120px\"}}></div>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t<div style={{height: \"90px\"}}></div>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = \"btnAddNew\" \r\n\t\t\t\t\t\t\t\t\tvalue = {\"신규\"} \r\n\t\t\t\t\t\t\t\t\tinnerImage={true} \r\n\t\t\t\t\t\t\t\t\ticon = {'down'}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\r\n\t\t\t\t\t\t\t\t\ttooltip = {\"신규 오인식 문장 추가\"}  \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t{param.TYPE === 'd' ? \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnSave\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"저장\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\ttooltip = {param.TYPE === 'r' ? \"오인식 문장 등록\" : \"오인식 문장 수정\"}  \t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{param.TYPE === 'r' ? \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnCanc\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"취소\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\r\n\t\t\t\t\t\t\t\t\t\ttooltip = {param.TYPE === 'd' ? \"오인식 문장 삭제 취소\" : \"오인식 문장 등록 취소\"}  \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{param.TYPE !== 'd' && param.TYPE !== 'c' ? \r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnDel\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"삭제\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\r\n\t\t\t\t\t\t\t\t\t\ttooltip = {\"오인식 문장 삭제\"}  \t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\tnull\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t}\r\n{/* \r\n\r\n\r\n\t\t\t\t\t\t{ !this.state.isAddNew && param.TYPE !== 'c' ?\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Label value=\"상담원문\"/>\r\n\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\twidth       = {280}\r\n\t\t\t\t\t\t\t\t\tid          = {'org_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\tname        = {'org_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.org}\r\n\t\t\t\t\t\t\t\t\tplaceholder\t= {\"\"}\r\n\t\t\t\t\t\t\t\t\tminLength\t= {0}\r\n\t\t\t\t\t\t\t\t\tmaxLength\t= {2000}\r\n\t\t\t\t\t\t\t\t\treadOnly\t= {true}\r\n\t\t\t\t\t\t\t\t\tdisabled\t= {false}\r\n\t\t\t\t\t\t\t\t\trows\t\t= {3}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tonChange\t= {(e) => this.onChange(e)}\r\n\t\t\t\t\t\t\t\t\tonKeyPress\t= {(e) => this.onKeyPress(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ param.TYPE !== 'd' || this.state.isAddNew ?\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Label value=\"작성문장\"/>\r\n\t\t\t\t\t\t\t\t<Textarea\r\n\t\t\t\t\t\t\t\t\twidth       = {280}\r\n\t\t\t\t\t\t\t\t\tid          = {'changeTo_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\tname        = {'changeTo_' + param.INDEX}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.changed}\r\n\t\t\t\t\t\t\t\t\tplaceholder\t= {this.state.org}\r\n\t\t\t\t\t\t\t\t\tminLength\t= {0}\r\n\t\t\t\t\t\t\t\t\tmaxLength\t= {2000}\r\n\t\t\t\t\t\t\t\t\treadOnly\t= {false}\r\n\t\t\t\t\t\t\t\t\tdisabled\t= {false}\r\n\t\t\t\t\t\t\t\t\trows\t\t= {3}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tonChange\t= {(e) => this.onChange(e)}\r\n\t\t\t\t\t\t\t\t\tonKeyPress\t= {(e) => this.onKeyPress(e)}\r\n\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\t\t\r\n\t\t\t\t\t\t\t<div style={{height: '92px'}}></div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ this.state.isAddNew || param.TYPE === 'c'?\r\n\t\t\t\t\t\t\t<div style={{height: '92px'}}>\r\n\t\t\t\t\t\t\t<Label value=\"상담원 발화\"/>\r\n\t\t\t\t\t\t\t<Switch id={\"swchAnswerArea\"} onChange={this.event.switch.onChange} checked={this.state.isCS}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\t\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t{ param.TYPE === 'd' ?\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = \"btnCanc\" \r\n\t\t\t\t\t\t\t\t\tvalue = {\"삭제 취소\"} \r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\tml={5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = \"btnAddNew\" \r\n\t\t\t\t\t\t\t\t\tvalue = {\"신규 문장\"} \r\n\t\t\t\t\t\t\t\t\tinnerImage={true} \r\n\t\t\t\t\t\t\t\t\ticon = {'down'}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\tml={5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid = \"btnSave\" \r\n\t\t\t\t\t\t\t\t\tvalue = {param.TYPE === 'u' || param.TYPE === 'c' ? \"문장 수정\" : \"문장 등록\"} \r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\r\n\t\t\t\t\t\t\t\t\ttooltip ={\"테스트트트트트트트트트트\"}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t{this.state.isAddNew || param.TYPE === 'c' ?\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnAddNew\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"신규 문장\"} \r\n\t\t\t\t\t\t\t\t\t\tinnerImage={true} \r\n\t\t\t\t\t\t\t\t\t\ticon = {'down'}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tml={5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tparam.TYPE === 'u' || param.TYPE === 'c' ? \r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnCanc2\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"등록 취소\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tml={5}\r\n\t\t\t\t\t\t\t\t\t\tmr={5}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t} \t\r\n\t\t\t\t\t\t\t\t{this.state.isAddNew || param.TYPE === 'c'?\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t: \t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnDel\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"문장 삭제\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t\tml={5}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t} */}\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</RelativeGroup>\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AnswerArea;","import { createAction, handleActions} from 'redux-actions';\r\n\r\nconst ADD_POP = 'base/ADD_POP';\r\nconst DELETE_POP = 'base/DELETE_POP';\r\nconst DELETE_ALL_POP = 'base/DELETE_ALL_POP';\r\nconst SELECT_POP = 'base/SELECT_POP';\r\nconst ADD_TRAY = 'base/ADD_TRAY';\r\nconst DELETE_TRAY = 'base/DELETE_TRAY';\r\nconst DELETE_ALL_TRAY = 'base/DELETE_ALL_TRAY';\r\nconst SELECT_TRAY = 'base/SELECT_TRAY';\r\nconst PREVIOUS_TRAY = 'base/PREVIOUS_TRAY';\r\nconst NEXT_TRAY = 'base/NEXT_TRAY';\r\n\r\nexport const addTray\t= createAction(ADD_TRAY);\r\nexport const delTray\t= createAction(DELETE_TRAY);\r\nexport const delAllTray\t= createAction(DELETE_ALL_TRAY);\r\nexport const selectTray\t= createAction(SELECT_TRAY);\r\nexport const prevTray\t= createAction(PREVIOUS_TRAY);\r\nexport const nextTray\t= createAction(NEXT_TRAY);\r\n\r\nexport const addPop\t\t= createAction(ADD_POP);\r\nexport const delPop\t\t= createAction(DELETE_POP);\r\nexport const delAllPop\t= createAction(DELETE_ALL_POP);\r\nexport const selectPop\t= createAction(SELECT_POP);\r\n\r\nconst initState = {\r\n\tselected : '',\r\n\ttray : [],\r\n\tpopupList : []\r\n}\r\n\r\nexport default handleActions ({\r\n\t[ADD_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.concat(popup) };\r\n\t},\r\n\t[DELETE_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.filter(item => item.id !== popup.id) };\r\n\t},\r\n\t[DELETE_ALL_POP] : (state, action) => {\r\n\t\treturn { ...state , popupList : [] };\r\n\t},\r\n\t[SELECT_POP] : (state, { payload : popup }) => {\r\n\t\treturn { ...state, popupList : state.popupList.filter(item => item.id !== popup.id) };\r\n\t},\r\n\t[ADD_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (state.tray.indexOf(state.tray.filter(item => item.MNU_ID === menu.MNU_ID)[0]) < 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray.concat(menu),\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[DELETE_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (parseInt(state.tray.findIndex(element => element === menu)) !== 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray : state.tray.filter(item => item.MNU_ID !== menu.MNU_ID),\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element.MNU_ID === menu.MNU_ID)) - 1]\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t},\r\n\t[DELETE_ALL_TRAY] : (state, action) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttray : [state.tray[0]],\r\n\t\t\tselected : state.tray[0]\r\n\t\t};\r\n\t},\r\n\t[SELECT_TRAY] : (state, { payload : menu }) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\ttray: state.tray,\r\n\t\t\tselected : menu\r\n\t\t}\r\n\t},\r\n\t[PREVIOUS_TRAY] : (state, { payload : menu }) => {\r\n\t\tif (parseInt(state.tray.findIndex(element => element === menu)) === 0) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element === menu)) - 1]\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t[NEXT_TRAY] : (state, { payload : menu }) => {\r\n\t\tif(parseInt(state.tray.findIndex(element => element === menu)) === state.tray.length-1) {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : menu\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttray: state.tray,\r\n\t\t\t\tselected : state.tray[parseInt(state.tray.findIndex(element => element === menu)) + 1]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}, initState);\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {popRoute} from 'routes/popupRoute.js';\r\nimport Draggable from 'react-draggable';\r\nimport DialogBox from 'react-modeless';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\nimport {BasicButton as Button} from 'components';\r\n\r\nclass AlertDialog extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmessage : '',\r\n\t\tonClose : () => {return false;}\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\r\n\tonClose = () => { this.props.onClose();};\r\n\r\n\trender () {\r\n\t\tlet span = this.props.message[0].split(\"\\n\").map((item, key) => {\r\n\t\t\tif (key + 1 !== this.props.message[0].split(\"\\n\").length) {\r\n\t\t\t\treturn <div className=\"scrm-label-div-div\" key={key}><span>{item}</span><br/></div>;\r\n\t\t\t} else {\r\n\t\t\t\treturn <div className=\"scrm-label-div-div\" key={key}><span>{item}</span></div>;\r\n\t\t\t}\t\t\t\t\t\t\t\r\n\t\t})\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tonClose={this.onClose}\r\n\t\t\t\tstyle  = {{backgroundColor : \"rgba(0, 0, 0, 0.3)\", borderRadius: '4px', zIndex : '9994'}}\r\n\t\t\t\tbackdropStyle = {{ zIndex : '9993' }}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t\tclickBackdropToClose={true}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button className=\"scrm-btn xs grey-o\" style={{float: 'right'}} onClick ={this.onClose}><i className=\"xi-close\"></i></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<div className=\"scrm-label-div\">\r\n\t\t\t\t\t\t\t{this.props.message[0].split(\"\\n\").length > 1 ?\r\n\t\t\t\t\t\t\t\tspan\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<span>{this.props.message}</span>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ConfirmDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\treturnVal : false\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false ,\r\n\t\tmessage :  '',\r\n\t\tonReturnVal : () =>  { return false; } ,\r\n\t\tonClose: () =>  { return false; }\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tmessage :  PropTypes.string.isRequired,\r\n\t\tonReturnVal : PropTypes.func.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClick = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase 'btnConfirm' :  this.setState({...this.state, returnVal : true}, () => this.onClose()); break;\r\n\t\t\tcase 'btnCancel' : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t\tdefault : this.setState({...this.state, returnVal : false}, () => this.onClose()); break;\r\n\t\t}\r\n\t}\r\n\tonClose = () => {\r\n\t\tthis.props.onClose();\r\n\t\tthis.props.onReturnVal(this.state.returnVal);\r\n\t};\r\n\r\n\trender () {\r\n\t\tlet span = this.props.message[0].split(\"\\n\").map((item, key) => {\r\n\t\t\tif (key + 1 !== this.props.message[0].split(\"\\n\").length) {\r\n\t\t\t\treturn <div className=\"scrm-label-div-div\" key={key}><span>{item}</span><br/></div>;\r\n\t\t\t} else {\r\n\t\t\t\treturn <div className=\"scrm-label-div-div\" key={key}><span>{item}</span></div>;\r\n\t\t\t}\t\t\t\t\t\t\t\r\n\t\t})\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tnoBackdrop={false}\r\n\t\t\t\tstyle  = {{backgroundColor : \"rgba(0, 0, 0, 0.3)\", borderRadius: '4px', zIndex : '9994'}}\r\n\t\t\t\tbackdropStyle = {{ zIndex : '9993' }}\r\n\t\t\t>\r\n\t\t\t\t<div className = \"scrm-alert-modal-content\">\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-header\">\r\n\t\t\t\t\t\t<button class=\"scrm-btn xs grey-o\" style={{float: 'right'}} onClick ={this.onClick.bind(this)}><i className=\"xi-close\"></i></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className = \"scrm-alert-modal-content-body\">\r\n\t\t\t\t\t\t<div className=\"scrm-label-div\">\r\n\t\t\t\t\t\t\t{this.props.message[0].split(\"\\n\").length > 1 ?\r\n\t\t\t\t\t\t\t\tspan\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t<span>{this.props.message}</span>\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{position: 'absolute', bottom: '5px', textAlign: 'center', width: '100%', padding: '5px'}}>\r\n\t\t\t\t\t\t<Button id='btnConfirm'\tcolor={'purple'} onClick ={this.onClick.bind(this)} value={'예'} mr = {10}/>\r\n\t\t\t\t\t\t<Button id='btnCancel'\tcolor={'purple'} onClick ={this.onClick.bind(this)} value={'아니오'} ml = {10}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass PopupDialog extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false ,\r\n\t\t\tmodal : true,\r\n\t\t\tbound : { top: 0, left : 0, right : 0, bottom : 0}\r\n\t\t}\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onMinimize = this.onMinimize.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tmodaless : false,\r\n\t\tposition : {x : 0, y: 0}\r\n\t};\r\n\tstatic propTypes = { onClose: PropTypes.func };\r\n\tcomponentDidMount () {\r\n\t\tlet bound = { \r\n\t\t\ttop: -(document.getElementById(this.props.popupdivid + \"_inner_div\").getBoundingClientRect().top),\r\n\t\t\tleft: -(document.getElementById(this.props.popupdivid + \"_inner_div\").getBoundingClientRect().left)-400,\r\n\t\t\tright: document.getElementById(this.props.popupdivid + \"_inner_div\").getBoundingClientRect().left+400,\r\n\t\t\tbottom: document.getElementById(this.props.popupdivid + \"_inner_div\").getBoundingClientRect().top+400\r\n\t\t}\r\n\t\tReactDOM.findDOMNode(this).scrollIntoView();\r\n\t\tif (!this.props.modaless) {\r\n\t\t\tdocument.body.addEventListener('keydown', this.onKeyDown);\r\n\t\t}\r\n\t\tthis.setState({bound : bound});\r\n\t}\r\n\tcomponentWillUnmount () {\r\n\t\tif (!this.props.modaless) {\r\n\t\t\tdocument.body.removeEventListener('keydown', this.onKeyDown);\r\n\t\t}\r\n\t}\r\n\tonFocus = (e) => {\r\n\t\tlet current = e.target.parentElement.parentElement;\r\n\t\tcurrent.style.zIndex = '9992'\r\n\t\r\n\t}\r\n\tonBlur = (e) => {\r\n\t\tlet current = e.target.parentElement.parentElement;\r\n\t\tcurrent.style.zIndex = '9991'\r\n\t}\r\n\tonKeyDown = (e) => {\r\n\t\tif (e.code === 'Tab' || e.key === 'Tab' || e.keyCode === 9) {\r\n\t\t\tif (e.shiftKey) {\r\n\t\t\t\tif (document.activeElement === document.getElementById(this.props.popupdivid + \"_first_div\")) {\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid + \"_last_div\").focus();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (document.activeElement === document.getElementById(this.props.popupdivid + \"_last_div\")) {\r\n\t\t\t\t\tdocument.getElementById(this.props.popupdivid + \"_first_div\").focus();\r\n\t\t\t\t\te.preventDefault();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tonClose = (e) => {\r\n\t\tthis.props.onClose(e);\r\n\t}\r\n\tonMinimize = (e) => {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\tAppModuleAction.addPop({id : this.props.popupdivid, name : this.props.name});\r\n\t\tdocument.getElementById(this.props.popupdivid).hidden = true;\r\n\r\n\t}\r\n\tonCallbackFunc = (data) => {this.props.onCallbackFunc(data);}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<DialogBox\r\n\t\t\t\tisOpen={this.props.open}\r\n\t\t\t\tnoBackdrop={this.props.modaless}\r\n\t\t\t\tclickBackdropToClose = {this.props.modaless}\r\n\t\t\t\tstyle={{ zIndex : '9991' }}\r\n\t\t\t\tbackdropStyle = {{ zIndex : '9990' }}\r\n\t\t\t>\r\n\t\t\t\t<Draggable\r\n\t\t\t\t\tbounds={this.state.bound}\r\n\t\t\t\t\tdefaultPosition = {this.props.position}\r\n\t\t\t\t\tpositionOffset = {{x: '-50%', y: 0}}\r\n\t\t\t\t\tallowAnyClick ={false}\r\n\t\t\t\t\thandle = {'.scrm-popup-modal-content-header'}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div id={this.props.popupdivid + \"_inner_div\"} onFocus={this.onFocus} onBlur={this.onBlur} className = \"scrm-popup-modal-content\" style={{width: this.props.options.width, height: this.props.options.height}}>\r\n\t\t\t\t\t\t<div id={this.props.popupdivid + \"_first_div\"} tabIndex={0} className = \"scrm-popup-modal-content-header\">\r\n\t\t\t\t\t\t\t<div style={{float: 'left'}}>\r\n\t\t\t\t\t\t\t\t{this.props.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<button className=\"scrm-btn xs grey-o\" id={'_btnClose'}  style={{float: 'right'}} onClick ={this.onClose}> <i className=\"xi-close\"></i> </button>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t(this.props.modaless)\r\n\t\t\t\t\t\t\t\t\t?\t<button className=\"scrm-btn xs grey-o\"  style={{float: 'right'}} onClick ={this.onMinimize}>\r\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"xi-minus\"/>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className = \"scrm-popup-modal-content-body\" style={{overflow: 'visible'}}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tpopRoute.filter(item => item.id === this.props.url).map((comp, key) => {\r\n\t\t\t\t\t\t\t\t\treturn <comp.component popupdivid={this.props.popupdivid} onCallbackFunc={this.onCallbackFunc} key={'pop_' + comp.id + '_' + key} onClose={this.onClose} options = {this.props.options}/>\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div id={this.props.popupdivid + \"_last_div\"} tabIndex={0}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Draggable>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nclass ModalLoading extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = { isOpen: false }\r\n\t};\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<DialogBox\tisOpen = {this.props.isOpen} defaultPosition = {{x: 0, y: 0}} backdropStyle={{background: 'transparent'}} noBackdrop = {false}\r\n\t\t\t\t\t\tstyle = {{backgroundColor : \"rgba(0, 0, 0, 0)\", borderRadius: '90px'}}\r\n\t\t\t> \r\n\t\t\t\t<div style={{position: 'fixed', zIndex: '9999', top: '40%', fontSize: '14px', fontWeight: 'bold', fontFamily: 'dotum', color: 'black', width: '100%', textAlign: 'center'}}>\r\n\t\t\t\t\t{'Loading'}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={'scrm-loader-div'}>\r\n\t\t\t\t</div>\r\n\t\t\t</DialogBox>\r\n\t\t);\r\n\t}\r\n}\r\nexport default {\r\n\tAlertDialog, ConfirmDialog, ModalLoading,\r\n\tPopupDialog : connect(\r\n\t\t(state) => ({\r\n\t\t\tpopupList : state.appModule.popupList,\r\n\t\t}),\r\n\t\t(dispatch) => ({\r\n\t\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t\t})\r\n\t)(PopupDialog)\r\n}","import React from 'react';\r\nimport Dropzone from 'react-dropzone-uploader';\r\nimport 'react-dropzone-uploader/dist/styles.css';\r\n\r\nimport { Progress } from \"react-sweet-progress\";\r\nimport \"react-sweet-progress/lib/style.css\";\r\n\r\n\r\nimport { TransManager, ComLib } from \"common\";\r\nimport {BasicButton as Button } from 'components';\r\n\r\nclass InputFileUpload extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.allFiles = null;\r\n\t\tthis.index = 0;\r\n\t\tthis.page = 50;\r\n\t\tthis.state = {\r\n\t\t\tid : this.props.id || '',\r\n\t\t\tfiles : null,\r\n\t\t\tuploadPercent: 0,\r\n\t\t\tuploadStatus: \"\",\r\n\t\t\tshowProgressbar: false\r\n\t\t}\r\n\t\tthis.getUploadParams = this.getUploadParams.bind(this);\r\n\t\tthis.onChangeStatus = this.onChangeStatus.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.setProgressPercent = this.setProgressPercent.bind(this);\r\n\t\tthis.callback = this.callback.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\theight : 200,\r\n\t\tonChangeStatus : () => { return; },\r\n\t\thandleSubmit : () => { return; },\r\n\t\tonUploadComplete  : () => { return; },\r\n\t\tuploadValidation  : () => { return true; }\r\n\t}\r\n\tgetUploadParams = () => {\r\n\t\treturn { url: 'https://httpbin.org/post' }\r\n\t}\r\n\tonChangeStatus = ({ meta }, status) => { this.props.onChangeStatus({ id : this.state.id, data : {status : status, mete: meta}}) }\r\n\tonUploadComplete = (res, files, savedFileList) => { this.props.onUploadComplete({id : this.props.id, msg : res, files: files, savedFileList}); }\r\n\tsetProgressPercent = (progressEvent) => {\r\n\t\tthis.setState({...this.state, uploadPercent: Math.floor((progressEvent.loaded * 100) / progressEvent.total)});\r\n\t\tif (this.state.uploadPercent === 100) {\r\n\t\t\tthis.setState({ ...this.state, uploadStatus: \"success\" });\r\n\t\t}\r\n\t}\r\n\thandleSubmit = (files, allFiles) => {\r\n\t\tif (this.validate(files, allFiles)) {\r\n\t\t\tthis.allFiles = allFiles;\r\n\t\t\tthis.setState({...this.state, showProgressbar: false, files: files\r\n\t\t\t}, () => {\r\n\t\t\t\t// let formData = new FormData();\r\n\t\t\t\t// Array.from(this.state.files).forEach((f, index) => {\r\n\t\t\t\t// \tif (index >= this.index && index < this.index + 10) {\r\n\t\t\t\t// \t\tformData.append(\"files\", f.file)\r\n\t\t\t\t// \t}\r\n\t\t\t\t// });\r\n\t\t\t\t// this.index = this.index + 10;\r\n\r\n\t\t\t\t// let transManager = new TransManager();\r\n\t\t\t\t// transManager.setTransId(\"_FILEUPLOAD\");\r\n\t\t\t\t// transManager.setTransUrl(transManager.constants.url.upload);\r\n\t\t\t\t// transManager.setCallBack(this.callback);\r\n\t\t\t\t// transManager.setTimeout(1000 * 60 * 10);\r\n\t\t\t\t// transManager.addConfig({\r\n\t\t\t\t// \tcrudh: transManager.constants.crudh.upload,\r\n\t\t\t\t// \tdatasetsend:\"fileupload\",\r\n\t\t\t\t// });\r\n\t\t\t\t// formData.append(\"transdata\", JSON.stringify({transdata: transManager.transdata}));\r\n\t\t\t\t// transManager.addDataset('fileupload', formData);\r\n\t\t\t\t// transManager.agent();\r\n\t\t\t\tthis.index = 0;\r\n\t\t\t\tthis.transaction(\"_FILEUPLOAD\");\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\ttransaction = (serviceId) => {\r\n\t\tswitch (serviceId) {\r\n\t\tcase \"_FILEUPLOAD\" :\r\n\t\t\tlet formData = new FormData();\r\n\t\t\tArray.from(this.state.files).forEach((f, index) => {\r\n\t\t\t\tif (index >= this.index && index < this.index + this.page) {\t\t\t\t\t\r\n\t\t\t\t\tformData.append(\"files\", f.file)\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId(\"_FILEUPLOAD\");\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.upload);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\ttransManager.setTimeout(1000 * 60 * 10);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tcrudh: transManager.constants.crudh.upload,\r\n\t\t\t\tdatasetsend:\"fileupload\",\r\n\t\t\t\tdatasetrecv: \"savedFileList\",\r\n\t\t\t});\r\n\t\t\tformData.append(\"transdata\", JSON.stringify({transdata: transManager.transdata}));\r\n\t\t\ttransManager.addDataset('fileupload', formData);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\r\n\t}\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase \"_FILEUPLOAD\":\r\n\t\t\t\tif (res.result === '0') {\r\n\t\t\t\t\tif ((this.index + this.page) < Array.from(this.state.files).length) {\r\n\t\t\t\t\t\tthis.allFiles.forEach((f, index) => { if (index < this.page) { f.remove() } });\r\n\t\t\t\t\t\tthis.index = this.index + this.page;\r\n\t\t\t\t\t\tthis.transaction(res.id);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.allFiles.forEach((f) => { f.remove(); });\r\n\t\t\t\t\t\tthis.index = 0;\r\n\t\t\t\t\t\tthis.onUploadComplete(res.result, this.state.files, res.data.savedFileList);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\tvalidate = (files, allFiles) => {\r\n\t\tif (files.length > 50) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['첨부파일의 갯수는 최대 50개로 제한됩니다.']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet Allsize = 0;\r\n\t\tfor (let i = 0; i < files.length; i ++) {\r\n\t\t\tAllsize += files.size;\r\n\t\t}\r\n\t\tif (Allsize > (1024 * 1024 * 1024)) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['전체 파일 용량이 1GB를 초과 할수 없습니다.']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tif (!this.props.uploadValidation(files)) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\tvalTest = (e) => {\r\n\t\tconsole.log(e)\r\n\t\tconsole.log(e.meta.status)\r\n\t\t\r\n\t\tvar reader = new FileReader();\r\n\t\treader.onload = function(event) {\r\n\t\t\tconsole.log('File content:', event.target.result);\r\n\t\t};\r\n\t\treader.readAsText(e.file);\r\n\t\t\r\n\t\tconsole.log(reader)\r\n\t\treturn false;\r\n\t}\r\n\r\n\t  \r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{ this.state.showProgressbar ? <Progress percent={this.state.uploadPercent} status={this.state.uploadStatus}/> : null }\r\n\t\t\t\t<Dropzone\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tinputContent=\"클릭 또는 파일을 드래그 하세요.\"\r\n\t\t\t\t\tinputWithFilesContent = \"파일추가\"\r\n\t\t\t\t\tsubmitButtonContent = \"업로드\"\r\n\t\t\t\t\tgetUploadParams={this.getUploadParams}\r\n\t\t\t\t\tonChangeStatus={this.onChangeStatus}\r\n\t\t\t\t\tLayoutComponent = {Layout}\r\n\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\taccept = {\".wav, .mp3, .PCM\"}\r\n\t\t\t\t\tmaxFiles = {50}\r\n\t\t\t\t\tmaxSizeBytes = {1024 * 1024 * 100}\r\n\t\t\t\t\tvalidate={this.valTest}\r\n\t\t\t\t\tstyles={{\r\n\t\t\t\t\t\tdropzone: { height: (this.props.height) ? this.props.height + 'px' : '400px', display: 'block', overflow: 'hidden'} ,\r\n\t\t\t\t\t\tinputLabel : { fontColor: 'black'}\r\n\t\t\t\t\t}}\t\t\t\t\t\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }) => {\r\n\tconst dzHeight = Number(dropzoneProps.style.height.substring(0, dropzoneProps.style.height.length-2));\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<div {...dropzoneProps}>\r\n\t\t\t\t<div style={{overflow: 'auto', height : (dzHeight > 100 && files.length > 0) ? (dzHeight - 100) + 'px'  : 'auto'}}>\r\n\t\t\t\t\t{previews}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style={{display: (files.length > 0) ? 'flex' : 'block', width: '100%'}}>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{files.length < maxFiles && input}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{position:'absolute', display:'flex', float:'right', bottom: '0px', width: '100%'}}>\r\n\t\t\t\t\t\t<div className=\"dzu-submitButtonContainer\" style={{ right: '100px'}}>\r\n\t\t\t\t\t\t\t{files.length > 0 && <Button mt={24} mr={10} value='전체삭제' onClick={(e) => {files.forEach(f => f.remove())}}/>}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{files.length > 0 && submitButton}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t)\r\n}\r\nclass MultiFileUpload extends React.Component {\r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<React.Fragment></React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass IconFileUpload extends React.Component {\r\n\trender () {\r\n\t\treturn  (\r\n\t\t\t<React.Fragment></React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nexport {InputFileUpload, MultiFileUpload, IconFileUpload}","import React from 'react';\r\n// import DatePicker from 'react-date-picker';\r\nimport TimePicker from 'react-time-picker';\r\nimport {StrLib, DateLib} from 'common';\r\nimport {InputCalendar, RangeInputCalendar} from 'components'\r\n\r\nclass DateComponent extends React.Component {\r\n\tstate = { date: null }\r\n\tcomponentDidMount() {\r\n\t\tthis.setState({ date:this.props.value});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.setState({ date: e.target.value });\r\n\t}\r\n\tgetValue () {\r\n\t\treturn this.state.date;\r\n\t}\r\n\tisPopup() {return true;}\r\n\r\n\trender() {\r\n\t\tlet rangeBottom = this.props.api.getVerticalPixelRange().bottom;\r\n\t\tlet rtn = \"down\";\r\n\t\t\r\n\t\tif ((rangeBottom - this.props.node.rowTop + this.props.bottom) < 330) {\r\n\t\t\trtn = \"up\"\r\n\t\t} \r\n\r\n\t\treturn (<InputCalendar\r\n\t\t\t\t\tid={\"gridCal\"}\r\n\t\t\t\t\tvalue={this.state.date}\r\n\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\tdirection={rtn}\r\n\t\t\t\t/>);\r\n\t}\r\n}\r\nclass TimeComponent extends React.Component {\r\n\tstate = { time: '00:00'}\r\n\tonChange = time => this.setState({ time })\r\n\tgetValue () {return this.state.time;}\r\n\tisPopup() {return true;}\r\n\trender() {\r\n\t\treturn ( <TimePicker onChange={this.onChange} value={this.state.time} format=\"HH:m\" disableClock={true} maxTime={'23:59:59'}/> );\r\n\t}\r\n}\r\nclass RangeDateComponent extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { startDate: null, endDate : null, oldStartDate: null, oldEndDate: null }\r\n\t}\r\n\t\r\n\t\r\n\tisPopup() {return true;}\r\n\t// onStrtDtChange = date => this.setState({ ...this.state, startDate : date });\r\n\t// onEndDtChange = date => this.setState({ ...this.state, endDate : date });\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.setState({startDate   : this.props.data[this.props.sColId]\r\n\t\t\t\t\t , endDate     : this.props.data[this.props.eColId]\r\n\t\t\t\t\t , oldStartDate: this.props.data[this.props.sColId]\r\n\t\t\t\t\t , oldEndDate  : this.props.data[this.props.eColId]});\r\n\t}\r\n\r\n\tonChangeDate= (e) => {\r\n\t\tthis.setState({startDate : e.startDate, endDate : e.endDate});\r\n\t}\r\n\r\n\tgetValue () {\r\n\t\tlet startDate = this.state.startDate;\r\n\t\tlet endDate   = this.state.endDate;\r\n\r\n\t\tlet node = this.props.node;\r\n\t\tlet sCol = this.props.sColId;\r\n\t\tlet eCol = this.props.eColId;\r\n\r\n\t\tif (this.props.outputCheckFn) {\r\n\t\t\t\r\n\t\t\tlet oldStartDate = this.state.oldStartDate;\r\n\t\t\tlet oldEndDate   = this.state.oldEndDate;\r\n\r\n\t\t\tlet rtn = this.props.outputCheckFn(node, startDate, endDate, oldStartDate, oldEndDate);\r\n\t\t\r\n\t\t\tstartDate = rtn.startDate;\r\n\t\t\tendDate   = rtn.endDate;\r\n\t\t\t\r\n\t\t\tnode.setDataValue(sCol,startDate);\r\n\t\t\tnode.setDataValue(eCol,endDate);\r\n\t\r\n\t\t\tif (this.props.curState) {\r\n\t\t\t\tlet today = Number(DateLib.getToday());\r\n\t\t\t\tlet sDate = Number(startDate);\r\n\t\t\t\tlet eDate = Number(endDate);\r\n\t\t\t\tlet nowState = \"NOW\";\r\n\t\r\n\t\t\t\tif (sDate > today) {\r\n\t\t\t\t\tnowState = \"BEFORE\";\r\n\t\t\t\t} else if (eDate < today) {\r\n\t\t\t\t\tnowState = \"AFTER\";\r\n\t\t\t\t}\r\n\t\t\t\tnode.setDataValue(this.props.curState, nowState);\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\treturn DateLib.getStringYymmdd(startDate) + \" ~ \" + DateLib.getStringYymmdd(endDate);\r\n\t\t} else {\r\n\t\t\tnode.setDataValue(sCol,startDate);\r\n\t\t\tnode.setDataValue(eCol,endDate);\r\n\t\r\n\t\t\tif (this.props.curState) {\r\n\t\t\t\tlet today = Number(DateLib.getToday());\r\n\t\t\t\tlet sDate = Number(startDate);\r\n\t\t\t\tlet eDate = Number(endDate);\r\n\t\t\t\tlet nowState = \"NOW\";\r\n\t\r\n\t\t\t\tif (sDate > today) {\r\n\t\t\t\t\tnowState = \"BEFORE\";\r\n\t\t\t\t} else if (eDate < today) {\r\n\t\t\t\t\tnowState = \"AFTER\";\r\n\t\t\t\t}\r\n\t\t\t\tnode.setDataValue(this.props.curState, nowState);\r\n\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\treturn DateLib.getStringYymmdd(startDate) + \" ~ \" + DateLib.getStringYymmdd(endDate);\r\n\t\t}\r\n\t}\r\n\tafterGuiAttached() {\r\n\t\tdocument.getElementsByClassName(\"ag-react-container\")[0].children[0].children[0].children[0].children[0].children[0].focus();\r\n\r\n\t}\r\n\r\n\trender () {\r\n\t\tlet rangeBottom = this.props.api.getVerticalPixelRange().bottom;\r\n\t\tlet rtn = \"down\";\r\n\t\t\r\n\t\tif ((rangeBottom - this.props.node.rowTop + this.props.bottom) < 330) {\r\n\t\t\trtn = \"up\"\r\n\t\t} \r\n\r\n\t\treturn (\r\n\t\t\t<RangeInputCalendar\r\n\t\t\t\tid             = {\"calGridRangeDate\"} \r\n\t\t\t\tstrtId         = {\"calGridRangeDateStr\"}\r\n\t\t\t\tendId          = {\"calGridRangeDateEnd\"}\r\n\t\t\t\tstartDate      = {this.state.startDate} \r\n\t\t\t\tendDate        = {this.state.endDate} \r\n\t\t\t\twidth          = {200}\r\n\t\t\t\tshowClearDates = {false}\r\n\t\t\t\tonChange       = {this.onChangeDate}\r\n\t\t\t\tdirection={rtn}\r\n\t\t\t/>\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\nclass RangeTimeComponent extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { strtTime: '00:00', endTime: '23:59'}\r\n\t\tthis.onStrtTmChange = this.onStrtTmChange.bind(this);\r\n\t\tthis.onEndTmChange = this.onEndTmChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tSTRT_TM : '', END_TM : ''\r\n\t}\r\n\tonStrtTmChange = time => this.setState({ ...this.state, strtTime : time });\r\n\tonEndTmChange = time => this.setState({ ...this.state, endTime : time });\r\n\tgetValue () {\r\n\t\tif (StrLib.isNull(this.state.endTime) && StrLib.isNull(this.state.strtTime)) {\r\n\t\t\tthis.props.data.STRT_TM = '';\r\n\t\t\tthis.props.data.END_TM = '';\r\n\t\t\treturn '';\r\n\t\t} else {\r\n\t\t\tif (StrLib.isNull(this.state.strtTime)) {\r\n\t\t\t\tthis.props.data.END_TM = this.state.endTime.replace(':', '');\r\n\t\t\t\treturn this.state.endTime.replace(':', '');\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.endTime)) {\r\n\t\t\t\tthis.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n\t\t\t\treturn this.state.strtTime.replace(':', '');\r\n\t\t\t}\r\n\t\t\tthis.props.data.STRT_TM = this.state.strtTime.replace(':', '');\r\n\t\t\tthis.props.data.END_TM = this.state.endTime.replace(':', '');\r\n\t\t\treturn this.state.strtTime.replace(':', '') + this.state.endTime.replace(':', '');\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.setState({strtTime : StrLib.getFormatterTime(this.props.data.STRT_TM), endTime : StrLib.getFormatterTime(this.props.data.END_TM)});\r\n\t}\r\n\tisPopup() {return true;}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div style={{display : 'flex'}}>\r\n\t\t\t\t<span style={{marginRight : '5px'}}><b> 시작시간 : </b></span>\r\n\t\t\t\t<TimePicker onChange={this.onStrtTmChange} value={this.state.strtTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n\t\t\t\t<span style={{marginLeft: '5px', marginRight : '5px'}}> ~ </span>\r\n\t\t\t\t<span style={{marginRight : '5px'}}><b> 종료시간 :  </b></span>\r\n\t\t\t\t<TimePicker onChange={this.onEndTmChange} value={this.state.endTime} format=\"HH:mm\" disableClock={true} maxTime={'23:59:59'}/> \r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport {DateComponent, TimeComponent, RangeDateComponent, RangeTimeComponent}","import React from 'react';\r\nclass CheckboxRenderer extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.checkedHandler = this.checkedHandler.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tvalue : 'N'\r\n\t};\r\n\tcheckedHandler(event) {\r\n\t\tlet value = 'N'\r\n\t\tif (event.target.checked) {\r\n\t\t\tvalue = 'Y'\r\n\t\t}\r\n\t\tlet colId = this.props.column.colId;\r\n\t\tthis.props.node.setDataValue(colId, value);\r\n\t\t\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<input type=\"checkbox\"  onClick={this.checkedHandler} checked={(this.props.value === 'Y') ? true : false} />\r\n\t\t)\r\n\t}\r\n}\r\nexport default CheckboxRenderer;","import React from 'react';\r\nimport {BasicButton as Button} from 'components';\r\nimport {StrLib} from 'common';\r\n \r\nclass DelRowButton extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.context.componentParent.onDeleteRow(this.props);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Button value='삭제' onClick={this.onClick}/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass ActionButton extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.context.componentParent.onActionCellClicked(this.props);\r\n\t}\r\n\trender () {\r\n\t\tlet colDef = this.props.colDef;\r\n\t\tlet data   = this.props.data\r\n\r\n\t\tlet id     = colDef['colId'] + '_' + data[colDef['colId']] + '_' + data['recid']\r\n\t\tlet iconClass;\r\n\t\t\r\n\t\tlet color = 'blue';\r\n\r\n\t\tif (!StrLib.isNull(colDef.color)) {\r\n\t\t\tcolor = colDef.color;\r\n\t\t}\r\n\r\n\t\tswitch (data[colDef['colId']]) {\r\n\t\t\tcase \"save\"       : iconClass = 'xi-diskette xi-2x'; break;\r\n\t\t\tcase \"add\"        : iconClass = 'xi-plus xi-2x';     break;\r\n\t\t\tcase \"del\"        : iconClass = 'xi-minus xi-2x';    break;\r\n\t\t\tcase \"check\"      : iconClass = 'xi-check xi-2x';    break;\r\n\t\t\tcase \"trash\"      : iconClass = 'xi-trash-o xi-2x';  break;\t\t\t\t\r\n\t\t\tcase \"undo\"       : iconClass = 'xi-undo';           break;\r\n\t\t\tcase \"redo\"       : iconClass = 'xi-redo';           break;\r\n\t\t\tcase \"arrowUp\"    : iconClass = 'xi-arrow-up';       break;\r\n\t\t\tcase \"arrowDn\"    : iconClass = 'xi-arrow-down';     break;\r\n\t\t\tcase \"close\"      : iconClass = 'xi-close';          break;\r\n\t\t\tcase \"play\"       : iconClass = 'xi-play xi-2x';     break;\r\n\t\t\tcase \"pause\"      : iconClass = 'xi-pause xi-2x';    break;\t\t\t\t\t\t\r\n\t\t\tcase \"left\"       : iconClass = 'xi-arrow-left xi-2x c-grey-6';   break;\r\n\t\t\tcase \"right\"      : iconClass = 'xi-arrow-right xi-2x c-grey-6';  break;\t\t\r\n\t\t\tcase \"message\"    : iconClass = (colDef.fiiled) ? 'xi-message xi-2x'    : 'xi-message-o xi-2x';     break;\r\n\t\t\tcase \"fileCheck\"  : iconClass = (colDef.fiiled) ? 'xi-file-check xi-2x' : 'xi-file-check-o xi-2x';  break;\r\n\t\t\tcase \"fileCode\"   : iconClass = (colDef.fiiled) ? 'xi-file-code xi-2x'  : 'xi-file-code-o xi-2x';   break;\r\n\t\t\tcase \"fileImage\"  : iconClass = (colDef.fiiled) ? 'xi-file-image xi-2x' : 'xi-file-image-o xi-2x';  break;\r\n\t\t\tcase \"fileText\"   : iconClass = (colDef.fiiled) ? 'xi-file-text xi-2x'  : 'xi-file-text-o xi-2x';   break;\r\n\t\t\tcase \"fileFolder\" : iconClass = (colDef.fiiled) ? 'xi-folder xi-2x'     : 'xi-folder-o xi-2x';      break;\r\n\t\t\tcase \"sitemap\"    : iconClass = (colDef.fiiled) ? 'xi-sitemap xi-2x'    : 'xi-sitemap-o xi-2x';     break;\r\n\t\t\tcase \"tint\"       : iconClass = (colDef.fiiled) ? 'xi-tint xi-2x'       : 'xi-tint-o xi-2x';        break;\r\n\t\t\tcase \"down\"       : iconClass = (colDef.fiiled) ? 'xi-download xi-2x'   : 'xi-download-o xi-2x';    break;\r\n\t\t\tcase \"srch\"       : iconClass = (colDef.fiiled) ? 'xi-search xi-2x'     : 'xi-search-o xi-2x';      break;\r\n\t\t\tcase \"copy\"       : iconClass = (colDef.fiiled) ? 'xi-documents xi-2x'  : 'xi-documents-o xi-2x';   break;\r\n\t\t\tdefault           : iconClass = null; break;\r\n\t\t}\r\n\t\ticonClass += ' ' + 'action_icon' + ' ' + color;\r\n\r\n\t\treturn (\r\n\t\t\t!StrLib.isNull(data[colDef['colId']]) ? \r\n\t\t\t<div style={{textAlign: 'center'}}>\t\r\n\t\t\t\t<i style={{cursor: 'pointer'}} onClick= {(e) => { e.stopPropagation(); this.onClick(); }} className={ iconClass }></i>\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t: \r\n\t\t\tnull\r\n\t\t) \r\n\t}\r\n}\r\n\r\nexport {DelRowButton, ActionButton}","import React from 'react';\r\n\r\nclass SelectboxRenderer extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<select onChange = {(e) => console.log(1)}>\r\n\t\t\t\t<option value='Y'>사용</option>\r\n\t\t\t\t<option value='N'>사용안함</option>\r\n\t\t\t</select>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default SelectboxRenderer","import React from 'react';\r\nconst KEY_BACKSPACE = 8;\r\nconst KEY_DELETE = 46;\r\nconst KEY_F2 = 113;\r\nconst KEY_ENTER = 13;\r\nconst KEY_TAB = 9;\r\n\r\nclass CustomEditor extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\t\r\n\t\tthis.state = this.createInitialState(props);\r\n\t\r\n\t\tthis.onKeyDown = this.onKeyDown.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t  }\r\n\t\r\n\t  createInitialState(props) {\r\n\t\tlet startValue = '';\r\n\t\tlet highlightAllOnFocus = true;\r\n\t\r\n\t\tif (props.keyPress === KEY_BACKSPACE || props.keyPress === KEY_DELETE) {\r\n\t\t  // if backspace or delete pressed, we clear the cell\r\n\t\t  startValue = '';\r\n\r\n\t\t} else if (props.charPress) {\r\n\t\t  // if a letter was pressed, we start with the letter\r\n\t\t  startValue = props.charPress;\r\n\t\t  highlightAllOnFocus = false;\r\n\r\n\t\t} else if (props.value === undefined || props.value === null) {\r\n\t\t\tstartValue = '';\r\n\r\n\t\t\tif (props.keyPress === KEY_F2) {\r\n\t\t\t  highlightAllOnFocus = false;\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\t\t  // otherwise we start with the current value\r\n\t\t  startValue = props.value;\r\n\t\t  \r\n\t\t  if (props.keyPress === KEY_F2) {\r\n\t\t\thighlightAllOnFocus = false;\r\n\t\t  }\r\n\t\t}\r\n\r\n\t\tlet inputType  = 'none';\r\n\r\n\t\tif (this.props.colDef['inputType'] !== null || this.props.colDef['inputType'] !== undefined) {\r\n\t\t\tinputType = this.props.colDef['inputType'];\r\n\t\t}\r\n\r\n\t\tif (inputType !== 'none') {\r\n\t\t\tif (inputType === 'num') {\r\n\t\t\t\tstartValue = Number(startValue.toString().replace(new RegExp(\"[^0-9]\", \"g\"), \"\"))\r\n\r\n\t\t\t} else if (inputType === 'alpha') {\r\n\t\t\t\tstartValue = startValue.toString().replace(new RegExp(\"[^A-Za-z]\", \"g\"), \"\")\r\n\t\t\t\t\r\n\t\t\t} else if (inputType === 'alNum') {\r\n\t\t\t\tstartValue = startValue.toString().replace(new RegExp(\"[^A-Za-z0-9]\", \"g\"), \"\")\r\n\r\n\t\t\t} else if (inputType === 'code') {\r\n\t\t\t\tstartValue = startValue.toString().replace(new RegExp(\"[^A-Za-z0-9_-]\", \"g\"), \"\")\r\n\r\n\t\t\t} \r\n\t\t}\t\t\r\n\r\n\t\treturn {\r\n\t\t  value: startValue,\r\n\t\t  highlightAllOnFocus,\r\n\t\t};\r\n\t  }\r\n\t\r\n\t  componentDidMount() {\r\n\t\tthis.refs.input.addEventListener('keydown', this.onKeyDown);\r\n\t  }\r\n\t\r\n\t  componentWillUnmount() {\r\n\t\tthis.refs.input.removeEventListener('keydown', this.onKeyDown);\r\n\t  }\r\n\t\r\n\t  afterGuiAttached() {\r\n\t\t// get ref from React component\r\n\t\tconst eInput = this.refs.input;\r\n\t\teInput.focus();\r\n\t\tif (this.state.highlightAllOnFocus) {\r\n\t\t  eInput.select();\r\n\t\r\n\t\t  this.setState({\r\n\t\t\thighlightAllOnFocus: false,\r\n\t\t  });\r\n\t\t} else {\r\n\t\t  // when we started editing, we want the carot at the end, not the start.\r\n\t\t  // this comes into play in two scenarios: a) when user hits F2 and b)\r\n\t\t  // when user hits a printable character, then on IE (and only IE) the carot\r\n\t\t  // was placed after the first character, thus 'apply' would end up as 'pplea'\r\n\t\t  const length = eInput.value ? eInput.value.length : 0;\r\n\t\t  if (length > 0) {\r\n\t\t\teInput.setSelectionRange(length, length);\r\n\t\t  }\r\n\t\t}\r\n\t  }\r\n\t\r\n\t  getValue() {\r\n\t\treturn this.state.value;\r\n\t  }\r\n\t\t\t\r\n\t  onKeyDown(event) {\r\n\t\tif (this.isLeftOrRight(event) || this.deleteOrBackspace(event)) {\r\n\t\t  event.stopPropagation();\r\n\t\t  return;\r\n\t\t}\t\t\r\n\t  }\r\n\t\r\n\t  isLeftOrRight(event) {\r\n\t\treturn [37, 39].indexOf(event.keyCode) > -1;\r\n\t  }\r\n\t\r\n\t  handleChange(event) {\r\n\t\tlet inputType  = 'none';\r\n\t\tlet inputValue = event.target.value;\r\n\r\n\t\tif (this.props.colDef['inputType'] !== null || this.props.colDef['inputType'] !== undefined) {\r\n\t\t\tinputType = this.props.colDef['inputType'];\r\n\t\t}\r\n\r\n\t\tif (inputType !== 'none') {\r\n\t\t\tif (inputType === 'num') {\r\n\t\t\t\tinputValue = inputValue.replace(new RegExp(\"[^0-9]\", \"g\"), \"\")\r\n\r\n\t\t\t} else if (inputType === 'alpha') {\r\n\t\t\t\tinputValue = inputValue.replace(new RegExp(\"[^A-Za-z]\", \"g\"), \"\")\r\n\t\t\t\t\r\n\t\t\t} else if (inputType === 'alNum') {\r\n\t\t\t\tinputValue = inputValue.replace(new RegExp(\"[^A-Za-z0-9]\", \"g\"), \"\")\r\n\r\n\t\t\t} else if (inputType === 'code') {\r\n\t\t\t\tinputValue = inputValue.replace(new RegExp(\"[^A-Za-z0-9_-]\", \"g\"), \"\")\r\n\r\n\t\t\t} else if (inputType === 'kor') {\r\n\t\t\t\tinputValue = inputValue.replace(new RegExp(\"[^ㄱ-ㅎ|ㅏ-ㅣ|가-힣]\", \"g\"), \"\")\r\n\r\n\t\t\t} \r\n\t\t}\t\r\n\r\n\t\tthis.setState({ value: inputValue });\r\n\t  }\r\n\t\r\n\t  getCharCodeFromEvent(event) {\r\n\t\tevent = event || window.event;\r\n\t\treturn typeof event.which === 'undefined' ? event.keyCode : event.which;\r\n\t  }\r\n\t\t\r\n\t  render() {\t\r\n\t\tif (this.props.colDef['maxLength'] !== undefined && this.props.colDef['maxLength'] !== null) {\r\n\t\t\treturn (\r\n\t\t\t\t<input\r\n\t\t\t\t  ref=\"input\"\r\n\t\t\t\t  value={this.state.value}\r\n\t\t\t\t  onChange={this.handleChange}\r\n\t\t\t\t  style={{ width: '100%', borderStyle: 'none', outline: 'none'}}\r\n\t\t\t\t  maxLength={ this.props.colDef['maxLength'] }\r\n\t\t\t\t \r\n\t\t\t\t/>\r\n\t\t\t  );\r\n\t\t} else {\r\n\t\t\treturn (\r\n\t\t\t\t<input\r\n\t\t\t\t  ref=\"input\"\r\n\t\t\t\t  value={this.state.value}\r\n\t\t\t\t  onChange={this.handleChange}\r\n\t\t\t\t  style={{ width: '100%', borderStyle: 'none', outline: 'none'}}\r\n\t\t\t\t/>\r\n\t\t\t  );\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t  }\r\n\r\n\t  deleteOrBackspace(event) {\r\n\t\treturn [KEY_DELETE, KEY_BACKSPACE].indexOf(event.keyCode) > -1;\r\n\t  }\r\n\t\r\n\t  finishedEditingPressed(event) {\r\n\t\tconst charCode = this.getCharCodeFromEvent(event);\r\n\t\treturn charCode === KEY_ENTER || charCode === KEY_TAB;\r\n\t  }\r\n\r\n}\r\n\r\nexport default CustomEditor","import React, { forwardRef, useImperativeHandle, useState } from 'react';\r\n\r\nexport default forwardRef((props, ref) => {\r\n\tconst [data] = useState(\r\n\t\tprops.api.getDisplayedRowAtIndex(props.rowIndex).data\r\n\t);\r\n\r\n\tuseImperativeHandle(ref, () => {\r\n\t\treturn {\r\n\t\tgetReactContainerClasses() {\r\n\t\t\treturn ['custom-tooltip'];\r\n\t\t},\r\n\t\t};\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t\r\n\t\t<div\r\n\t\t\tclassName=\"custom-tooltip\"\r\n\t\t\tstyle={{ backgroundColor: props.color || 'white'}}\r\n\t\t\t\r\n\t\t>\r\n\t\t\t<div style={{display: \"inline-block\", width: \"300px\"}}>{data[props.colDef.tooltipField]}</div>\r\n\t\t</div>\r\n\t);\r\n});\r\n","/* ***************************************************\r\n *\texplain : 그리드 내부에서 필요한 util 정의\r\n *\twritten by hw.lee\r\n * ***************************************************/\r\n\r\n const rowSpan = (params) => {\r\n\tlet cnt = 0;\r\n\tlet api = params.api;\r\n\t// index 위의 데이터 찾기\r\n\tlet data  = [];\r\n\tapi.forEachNodeAfterFilterAndSort((node) => {\r\n\t\tdata.push({node : node, index : node['rowIndex']});\r\n\t});\r\n\tlet prevVal;\r\n\tlet presVal = params.data[params.column.colId];\r\n\tif (presVal === null || presVal === undefined) {\r\n\t\treturn 1;\r\n\t}\r\n\r\n\tif (params.node.rowIndex > 0) {\r\n\t\tprevVal = api.getValue(params.column.colId , data[params.node.rowIndex-1]['node']);\r\n\t\tif (prevVal === presVal) {\r\n\t\t\treturn 1;\r\n\t\t} else {\r\n\t\t\tfor (let intA = 0; intA < data.length; intA++) {\r\n\t\t\t\tif (data[intA]['index'] >= params.node.rowIndex) {\r\n\t\t\t\t\tif (data[intA]['node']['data'][params.column.colId] === params.data[params.column.colId]) {\r\n\t\t\t\t\t\tcnt ++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tfor (let intA = 0; intA < data.length; intA++) {\r\n\t\t\tif (data[intA]['index'] >= params.node.rowIndex) {\r\n\t\t\t\tif (data[intA]['node']['data'][params.column.colId] === presVal) {\r\n\t\t\t\t\tcnt ++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn cnt;\r\n}\r\nconst valueRowSpan = (params) => {\r\n\tif (params['node']['rowIndex'] > 0) {\r\n\t\tlet beforeData = params.api.getValue(params.column.colId, params.api.getDisplayedRowAtIndex(params['node']['rowIndex'] - 1));\r\n\t\tif (beforeData === null || beforeData === undefined) {\r\n\t\t\treturn params.data[params.column.colId];\r\n\t\t} else {\r\n\t\t\tif (beforeData === params.data[params.column.colId]) {\r\n\t\t\t\treturn '';\r\n\t\t\t} \r\n\t\t}\r\n\t}\r\n\treturn params.data[params.column.colId];\r\n}\r\nconst setColumnProperty = (ele) => {\r\n\tif (ele['rowSpan'] === true) {\r\n\t\tele['rowSpan'] = function (params) { return 1;};\r\n\t\tele['valueFormatter'] = valueRowSpan\r\n\t}\r\n\tif (ele['cellStyle'] === undefined || ele['cellStyle'] === null) ele['cellStyle'] = {};\r\n\tif (ele['autoHeight'] === true) {\r\n\t\tele['cellStyle']['white-space'] = \"normal\";\r\n\t}\r\n\tif (ele['textAlign'] === undefined || ele['textAlign'] === null) {\r\n\t\tele['textAlign'] = 'left';\r\n\t}\r\n\tele['cellStyle'][\"text-align\"] = ele['textAlign'];\r\n\r\n\tif (ele['req']) {\r\n\t\tele['headerName'] = ele['headerName'] + '*';\r\n\t}\r\n\treturn ele;\r\n}\r\n\r\nconst setGridHeader = (header, props) => {\r\n\tif (header === null || header === undefined) {\r\n\t\treturn null;\r\n\t}\r\n\tif (props === undefined || props === null) {\r\n\t\treturn header;\r\n\t}\r\n\tlet rtnHeader;\r\n\t\r\n\tlet _depthCol = [{headerName: '_HIERARCHY', field: '_HIERARCHY', colId: '_HIERARCHY', filter: false, resizable: false, lockPosition: true, cellStyle: {paddingLeft: '20px'}}];\r\n\tlet treeCol   = [{headerName: '_TREE', field: '_TREE', colId: '_TREE', filter: false, resizable: false, sortable: false, lockPosition: true, defaultWidth: 45, minWidth: 45, maxWidth: 45}];\r\n\tlet numCol =\t[{\theaderName: 'No.', field: '_No', colId: '_No', defaultWidth: 60, minWidth: 60, maxWidth: 70, sortable: false, filter: false, resizable: false, lockPosition: true,\r\n\t\t\t\t\t\tvalueGetter: function(params) { return params.node.rowIndex + 1;}, cellStyle: {'text-align' : 'right'}\r\n\t\t\t\t\t}];\r\n\tlet chkCol =\t[{\theaderName: '', field: '',\tcolId: '',\tsort: false, filter: false, resizable: false, headerCheckboxSelection: true, checkboxSelection: true, lockPosition: true, maxWidth : 30}];\r\n\tlet hideCol =\t[{\theaderName: 'CHK',\tfield: 'CHK',\tcolId: 'CHK',\thide: true }];\r\n\tlet dragCol =\t[{\theaderName: '', field: '',\tcolId: '',\tlockPosition: true, sort: false, filter: false, rowDrag: true, resizable: false, maxWidth : 30,\r\n\t\t\t\t\t\trowDragText : function (params) { return params.rowNode.rowIndex + 1 + '행'} \r\n\t\t\t\t\t}];\r\n\r\n\tif (typeof props.colPinned === 'number') {\r\n\t\tfor (let intA = 0; intA < props.colPinned - 1; intA ++) {\r\n\t\t\tif (header.length < intA) {\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\theader[intA]['pinned'] = 'left';\r\n\t\t\theader[intA]['suppressNavigable'] = true;\r\n\t\t\theader[intA]['lockPosition'] = true;\r\n\t\t}\r\n\t\t_depthCol[0]['pinned'] = 'left';\r\n\t\tnumCol[0]['pinned'] = 'left';\r\n\t\tchkCol[0]['pinned'] = 'left';\r\n\t\tdragCol[0]['pinned'] = 'left';\r\n\t}\r\n\r\n\trtnHeader = checkHeaderDepth(header, setColumnProperty);\r\n\t\r\n\tif (props.tree !== undefined && props.tree['isTree']) {\r\n\t\ttreeCol[0]['headerName']   = \"\";\r\n\t\ttreeCol[0]['cellRenderer'] = 'treeRenderer';\r\n\t\trtnHeader = treeCol.concat(rtnHeader);\r\n\t} else {\r\n\t\tif (props.rowNum) {\r\n\t\t\trtnHeader = numCol.concat(rtnHeader);\r\n\t\t}\r\n\t}\r\n\tif (props.infoCheckBox['use']) {\r\n\t\tif (props.infoCheckBox['colId'] !== undefined && props.infoCheckBox['colId'] !== null && props.infoCheckBox['colId'] !== '') {\r\n\t\t\thideCol[0]['headerName'] = props.infoCheckBox['colId'];\r\n\t\t\thideCol[0]['field'] = props.infoCheckBox['colId'];\r\n\t\t\thideCol[0]['colId'] = props.infoCheckBox['colId'];\r\n\t\t}\r\n\t\trtnHeader = chkCol.concat(rtnHeader).concat(hideCol);\r\n\t}\r\n\t\r\n\tif (props.rowDrag) {\r\n\t\trtnHeader = dragCol.concat(rtnHeader);\r\n\t}\r\n\treturn rtnHeader;\r\n}\r\n\r\nconst checkHeaderDepth = (arrData, _function) => {\r\n\tconst _func = _function;\r\n\tfor (let intA = 0; intA < arrData.length; intA ++) {\r\n\t\tif (arrData[intA].hasOwnProperty('children')) {\r\n\t\t\tarrData[intA]['children'] = checkHeaderDepth(arrData[intA]['children'], _func);\r\n\t\t} else {\r\n\t\t\tarrData[intA] = _func(arrData[intA]);\r\n\t\t}\r\n\t}\r\n\treturn arrData;\r\n}\r\n\r\nconst checkHeaderProp = (arrData, col) => {\r\n\tlet rtnVal = false;\r\n\tfor (let intA = 0; intA < arrData.length; intA ++) {\r\n\t\tif (arrData[intA].hasOwnProperty('children')) {\r\n\t\t\trtnVal = checkHeaderProp(arrData[intA]['children'], col);\r\n\t\t} else {\r\n\t\t\tif (arrData[intA][col] !== undefined && arrData[intA][col] !== null) {\r\n\t\t\t\trtnVal = true;\r\n\t\t\t\treturn rtnVal;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn rtnVal;\r\n}\r\n\r\nconst compareArray = (arr1, arr2) => {\r\n\tif (JSON.stringify(arr1) === JSON.stringify(arr2)) {\r\n\t\treturn true;\r\n\t} else {\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\nexport { rowSpan, setGridHeader, checkHeaderDepth, compareArray, checkHeaderProp };","import React from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport {ComLib, newScrmObj, StrLib, ExcelLib, DataLib} from 'common';\r\nimport {LFloatArea, RFloatArea, BasicButton as Button, Checkbox} from 'components';\r\nimport {DateComponent, TimeComponent, CheckboxRenderer, RangeDateComponent, RangeTimeComponent, DelRowButton, SelectboxRenderer, CustomEditor, ActionButton, CustomToolTip} from './components';\r\nimport _ from 'lodash';\r\nimport {setGridHeader, checkHeaderProp} from './utils';\r\nimport 'ag-grid-community/dist/styles/ag-grid.css';\r\nimport \"flatpickr/dist/themes/dark.css\";\r\n\r\nclass Grid extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.initFlag = false;\r\n\t\tthis.pageDataset = [];\r\n\t\tthis.propDataset = [];\r\n\t\tthis.pageHeader     = [];\r\n\t\tthis.orgPageHeader  =  _.cloneDeep(this.props.header);\r\n\t\tthis.gridDataset = DataLib.datalist.getInstance();\r\n\t\tthis.state = { gridApi : null, columnApi : {}, columnDefs: [], rowData: [] };\r\n\t\tthis.onActionCellClicked  = this.onActionCellClicked.bind(this);\r\n\t\tthis.onCellClicked\t\t  = this.onCellClicked.bind(this);\r\n\t\tthis.onCellDoubleClicked  = this.onCellDoubleClicked.bind(this);\r\n\t\tthis.onCellFocused\t\t  = this.onCellFocused.bind(this);\r\n\t\tthis.onRowClicked\t\t  = this.onRowClicked.bind(this);\r\n\t\tthis.onRowSelected\t\t  = this.onRowSelected.bind(this);\r\n\t\tthis.onRowDoubleClicked\t  = this.onRowDoubleClicked.bind(this);\r\n\t\tthis.onCellValueChanged\t  = this.onCellValueChanged.bind(this);\r\n\t\tthis.onGridReady\t\t  = this.onGridReady.bind(this);\r\n\t\tthis.onCellEditingStopped = this.onCellEditingStopped.bind(this);\r\n\t\tthis.onRowDataChanged\t  = this.onRowDataChanged.bind(this);\r\n\t\tthis.onSelectionChanged\t  = this.onSelectionChanged.bind(this);\r\n\t\tthis.onPaginationChanged  = this.onPaginationChanged.bind(this);\r\n\t\tthis.onBodyScroll\t\t  = this.onBodyScroll.bind(this);\r\n\t\tthis.onRowDataUpdated\t  = this.onRowDataUpdated.bind(this);\r\n\t\tthis.onSortChanged\t\t  = this.onSortChanged.bind(this);\r\n\t\tthis.onRowDragEnd\t\t  = this.onRowDragEnd.bind(this);\r\n\t\tthis.onGridSizeChanged\t  = this.onGridSizeChanged.bind(this);\r\n\t\tthis.onColumnResized\t  = this.onColumnResized.bind(this);\r\n\t\tthis.onColumnGroupOpened  = this.onColumnGroupOpened.bind(this);\r\n\t\tthis.onFilterHeadClick    = this.onFilterHeadClick.bind(this);\r\n\t\tthis.expandAllRow         = this.expandAllRow.bind(this);\r\n\t\tthis.contractAllRow       = this.contractAllRow.bind(this);\r\n\t}\r\n\t// checkboxSelection: false,\r\n\tstatic defaultProps = {\r\n\t\tid : null,\r\n\t\tdata : [],\r\n\t\theader : [],\r\n\t\trowDrag : false,\r\n\t\tdoNotScrollTop : true,\r\n\t\tsuppressMovableColumns : true,\r\n\t\tsuppressRowClickSelection : false,\r\n\t\tsort : true,\r\n\t\tfilter : false,\r\n\t\tfloatingFilter: false,\r\n\t\trowSelection : 'single',\r\n\t\taddRowBtn : true,\r\n\t\tdelRowBtn : true,\r\n\t\tdnlExcelBtn : false,\r\n\t\tinfoCheckBox : {\r\n\t\t\tuse : false,\r\n\t\t\tcolId : null,\r\n\t\t},\r\n\t\theaderToggle   : false,\r\n\t\tonGridReady : () => {return;},\r\n\t\tonGridSizeChanged : () => {return;},\r\n\t\tonRowClicked : () => {return;},\r\n\t\tonCellFocused : () => {return;},\r\n\t\tonActionCellClicked : () => {return;},\r\n\t\tonCellClicked : () => {return;},\r\n\t\tonCellDoubleClicked : () => {return;},\r\n\t\tonCellValueChanged : () => {return;},\r\n\t\tonRowDoubleClicked : () => {return;},\r\n\t\tonCellEditingStopped  : () => {return;},\r\n\t\tonSelectionChanged  : () => {return;},\r\n\t\tonRowSelected  : () => {return;},\r\n\t\tonDeleteRow : () => {return;},\r\n\t\tonInsertRow : () => {return;},\r\n\t\tonPaginationChanged : () => {return;},\r\n\t\tonBodyScroll : () => {return;},\r\n\t\tonScrollEnd : () => {return;},\r\n\t\tonRowDragEnd : () => {return ;},\r\n\t\tonBeforeInsertRow : () => {return { rtn : true, index : 0};},\r\n\t\tonBeforeDeleteRow : () => {return true;},\r\n\t\tonColumnGroupOpened : () => {return true;}\r\n\t};\r\n\tcomponentDidMount () { \r\n\t};\r\n\tshouldComponentUpdate (nextProps) {\t\t\r\n\t\tif (!this.props.infinite) {\r\n\t\t\t// 화면에서 setState시, 다른 컴포넌트의 데이터가 변경되는 경우에 prop 데이터의 변경이 없으면 render 하지 않음\r\n\t\t\tif (nextProps.data.records === this.propDataset && nextProps.data.records === this.props.data.records && this.props.data.records === this.propDataset && this.props.header === nextProps.header) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (nextProps.data.records === this.pageDataset && nextProps.data.records === this.props.data.records && this.props.data.records === this.pageDataset && this.props.header === nextProps.header) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (this.props.headerToggle && this.pageHeader !== nextProps.header) {\r\n\t\t\t\r\n\t\t\tthis.pageHeader = _.cloneDeep(nextProps.header);\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\t// gridApi가 없는 경우, 로직 pass 시킴\r\n\t\tif (this.state.gridApi === null) return;\r\n\r\n\t\tif (this.props.data.getRecords().length === 0) {\r\n\t\t\tthis.gridDataset.initRecords(this.props.data.getRecords());\r\n\t\t\tthis.propDataset = this.props.data.records;\r\n\t\t\tthis.state.gridApi.setRowData(null);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.props !== prevProps) {\r\n\t\t\tif (this.state.gridApi) {\r\n\t\t\t\tif (!this.props.infinite) {\r\n\t\t\t\t\t// infinite가 아닌 경우, 그냥 리셋\r\n\t\t\t\t\t// 문제점 : 행 추가 시, 데이터셋 리셋은 안됨 + 재조회시에는 데이터셋 리셋\r\n\t\t\t\t\t// 그리드가 여러개인 경우, 화면에서 setState를 할 때마다 render가 일어나기 때문에 state가 변경된 그리드를 제외하고는 update 하지 않도록 로직 필요\r\n\t\t\t\t\t// -> shouldComponentUpdate에서 판단하여 render\r\n\t\t\t\t\tthis.propDataset = this.props.data.records;\r\n\t\t\t\t\tif (this.props.tree !== undefined && this.props.tree.isTree) {\r\n\t\t\t\t\t\tthis.gridDataset.initRecords(this.makeTreeData(this.props.data.getRecords()));\r\n\t\t\t\t\t\tthis.state.gridApi.setRowData(this.getTreeData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.gridDataset.initRecords(this.props.data.getRecords());\r\n\t\t\t\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 최초 그리드 셋팅\r\n\t\t\t\t\tif (this.gridDataset.getRecords().length === 0 || this.propDataset.length === 0) {\r\n\t\t\t\t\t\tthis.setInfiniteGridData('R');\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// infinte 데이터 추가 시, 현재 페이지 데이터의 recid와 props recid 더 큰 경우에는 page 데이터 갱신\r\n\t\t\t\t\t\tif (this.propDataset[0]['recid'] === this.props.data.getRecords()[0]['recid']) {\r\n\t\t\t\t\t\t\tthis.setInfiniteGridData('R');\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (this.pageDataset[0]['recid'] === this.props.data.getRecords()[0]['recid']) {\r\n\t\t\t\t\t\t\t\t// recid가 같은 경우는 재조회로 간주하고 데이터 재 셋팅\r\n\t\t\t\t\t\t\t\tthis.setInfiniteGridData('R');\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.setInfiniteGridData('A');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/* Event Zone */\r\n\tonGridReady = (event) => {\r\n\t\tthis.setState({\r\n\t\t\t...this.state, gridApi: event.api, columnApi: event.columnApi\r\n\t\t}, () => {\r\n\t\t\tif (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) this.pageDataset = this.props.data.getRecords();\r\n\r\n\t\t\tthis.props.onGridReady({id : this.props.id, gridApi : this.state.gridApi, grid : this , columnApi : this.state.columnApi});\r\n\t\t})\r\n\t}\r\n\tonColumnResized = (e) => { }\r\n\tonGridSizeChanged = (e) => { \r\n\t\t//e.api.sizeColumnsToFit(); \r\n\t}\r\n\tonRowDataUpdated = (e) => {\r\n\t\t// e.api.sizeColumnsToFit(); \r\n\t}\r\n\tonBodyScroll = (e) => {\r\n\t\tif (this.props.infinite) {\r\n\t\t\tif (this.state.gridApi.getDisplayedRowAtIndex(this.state.gridApi.getDisplayedRowCount()-1)) {\r\n\t\t\t\tlet lastNode = this.state.gridApi.getDisplayedRowAtIndex(this.state.gridApi.getDisplayedRowCount()-1);\r\n\t\t\t\tif ((lastNode.rowHeight + lastNode.rowTop) <= this.state.gridApi.getVerticalPixelRange().bottom) {\r\n\t\t\t\t\tif (this.props.totalRowCnt > this.propDataset.length) {\r\n\t\t\t\t\t\tthis.props.onScrollEnd({ id : this.props.id, excelLoadAll: false});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tonPaginationChanged = (e) => {\r\n\r\n\t};\r\n\tonCellValueChanged = (e) => {\r\n\t\tlet _newValue = e.newValue;\r\n\t\tif (e.oldValue !== _newValue) {\r\n\t\t\tif (e.data['rowtype'] !== newScrmObj.constants.crud.create) {\r\n\t\t\t\tthis.gridDataset.setValue(this.gridDataset.indexOf('recid', e.data.recid), e.column.colId, _newValue);\r\n\t\t\t} else {\r\n\t\t\t\tlet rowData = this.gridDataset.getRecords();\r\n\t\t\t\tObject.assign(rowData.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)[e.rowIndex], e.data);\r\n\t\t\t\tthis.gridDataset.setRecords(rowData);\r\n\t\t\t}\r\n\t\t\tthis.props.onCellValueChanged({ \r\n\t\t\t\t\tid : this.props.id\r\n\t\t\t\t,\tdata : this.gridDataset.getRecords()\r\n\t\t\t\t,\tindex : e.node.id\r\n\t\t\t\t,\trow: e.rowIndex\r\n\t\t\t\t,\tcol: e.column.colId\r\n\t\t\t\t,\tnode : e.node\r\n\t\t\t\t,\tcellEditor : e.colDef.cellEditor\r\n\t\t\t\t,\tcellEditorParams : e.colDef.cellEditorParams\r\n\t\t\t\t,\toldValue : e.oldValue\r\n\t\t\t\t,\tnewValue : _newValue\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tdoDisplayChange = (e) => {\r\n\t\tlet gridDataset = e.gridDataset;\r\n\r\n\t\tfor (let intA = 0; intA < gridDataset.length; intA ++) {\r\n\t\t\tif(e.data['ID'] === gridDataset[intA]['ID'] && !e.isSub) {\r\n\t\t\t\tgridDataset[intA]['EXPAND'] = !gridDataset[intA]['EXPAND'];\r\n\r\n\t\t\t}\r\n\t\t\tif (gridDataset[intA]['PARENT_ID'] !== '0') {\r\n\t\t\t\tif (gridDataset[intA]['PARENT_ID'] === e.data['ID'] ) {\r\n\t\t\t\t\tgridDataset[intA]['_display'] = !gridDataset[intA]['_display'];\t\r\n\t\t\t\t\tif (gridDataset[intA]['EXPAND']) {\r\n\t\t\t\t\t\tgridDataset = this.doDisplayChange({gridDataset: gridDataset, data: gridDataset[intA], isSub: true});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn gridDataset;\r\n\t}\r\n\tonActionCellClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\r\n\t\tif (this.props.tree !== undefined && this.props.tree.isTree) {\r\n\t\t\tif (e.column.colId === '_TREE') {\t\t\t\t\r\n\t\t\t\tif (e.data.childCNT !== 0) {\t\t\r\n\t\t\t\t\tlet gridDataset = this.makeTreeData(this.props.data.records);\r\n\t\t\t\t\tlet newDataset  = this.doDisplayChange({gridDataset: gridDataset, data: e.data, isSub: false});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.gridDataset.setRecords(newDataset);\r\n\t\t\t\t\te.api.setRowData(this.getTreeData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)));\r\n\r\n\t\t\t\t\tif (this.props.rowSelection === \"multiple\") {\r\n\t\t\t\t\t\tthis.state.gridApi.forEachNode((node) => { \r\n\t\t\t\t\t\t\tif (node.data.CHK === 'Y') { \r\n\t\t\t\t\t\t\t\tnode.setSelected(true); \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.onActionCellClicked({ id : this.props.id, data : e.data, index : e.node.id, col : e.column.colId});\r\n\t};\r\n\tonCellClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\r\n\t\tif (this.props.tree !== undefined && this.props.tree.isTree) {\r\n\t\t\tif (e.column.colId === '_TREE') {\t\t\r\n\t\t\t\tif (e.data.childCNT !== 0) {\r\n\t\t\t\t\tlet gridDataset = this.makeTreeData(this.props.data.records);\r\n\t\t\t\t\tlet newDataset  = this.doDisplayChange({gridDataset: gridDataset, data: e.data, isSub: false});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.gridDataset.setRecords(newDataset);\r\n\t\t\t\t\te.api.setRowData(this.getTreeData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)));\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (this.props.rowSelection === \"multiple\") {\r\n\t\t\t\t\t\tthis.state.gridApi.forEachNode((node) => { \r\n\t\t\t\t\t\t\tif (node.data.CHK === 'Y') { \r\n\t\t\t\t\t\t\t\tnode.setSelected(true); \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.props.onCellClicked({ id : this.props.id, data : e.data, index : e.node.id, col : e.column.colId, node: e.node});\r\n\t};\r\n\tonCellDoubleClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id, col : e.column.colId});\r\n\t};\r\n\tonCellFocused = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellFocused({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowClicked({ id : this.props.id, data : e.data, index : e.node.id, node: e.node });\r\n\t};\r\n\tonRowDoubleClicked = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowDoubleClicked({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonCellEditingStopped = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onCellEditingStopped({ id : this.props.id, data : e.data, index : e.node.id });\r\n\t};\r\n\tonRowDataChanged = (e) => { \r\n\t\tif (this.state.gridApi !== undefined && this.state.gridApi !== null && Object.keys(this.state.gridApi).length !== 0) {\r\n\t\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t\t}\r\n\t};\r\n\tonSelectionChanged = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onSelectionChanged({ id : this.props.id, gridApi : e.api, columnApi : e.columnApi, event : e});\r\n\t};\r\n\tonRowSelected = (e) => {\r\n\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\tthis.props.onRowSelected({ id : this.props.id, data : e.data, index : e.node.id, event : e, node: e.node});\r\n\t}\r\n\tonSortChanged = (e) => {\r\n\t\tif (this.props.rowNum) {\r\n\t\t\te.api.refreshCells({ columns : ['_No'] });\r\n\t\t}\r\n\t}\r\n\tonColumnGroupOpened = (e) => {\r\n\t\tthis.props.onColumnGroupOpened({ id : this.props.id , gridApi : e.api, columnApi : e.columnApi, extended : e.columnGroup.expanded});\r\n\t}\r\n\tfindRowToMove =(e) => {\r\n\t\tlet rtnArr  = [];\r\n\t\tlet display = false;\r\n\r\n\t\tif (!e.isSub) {\r\n\t\t\tif (e.parentID === \"0\") {\r\n\t\t\t\tdisplay = true;\r\n\t\t\t} else {\r\n\t\t\t\tfor(let i = 0; i < e.org.length; i ++) {\r\n\t\t\t\t\tif (e.org[i][\"PARENT_ID\"] === e.parentID) {\r\n\t\t\t\t\t\tdisplay = e.org[i][\"_display\"];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < e.target.length; i ++) {\r\n\t\t\tlet temp;\r\n\t\t\tif (!e.isSub) {\r\n\t\t\t\ttemp = JSON.parse(JSON.stringify(e.target[i][\"data\"]));\r\n\t\t\t} else {\r\n\t\t\t\ttemp = JSON.parse(JSON.stringify(e.target[i]));\t\r\n\t\t\t}\r\n\t\t\ttemp[\"LEVEL\"] = e.parentLV + 1;\r\n\t\t\tif (!e.isSub) {\r\n\t\t\t\ttemp[\"PARENT_ID\"] = e.parentID;\r\n\t\t\t\tdisplay = (temp[\"_display\"] && display);\r\n\t\t\t} else {\r\n\t\t\t\tdisplay = (e.parnetOpen && temp['_display']);\t\r\n\t\t\t}\r\n\t\t\ttemp[\"_display\"]  = display;\r\n\t\t\tif (temp['rowtype'] !== newScrmObj.constants.crud.create) {\r\n\t\t\t\tif (temp['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\ttemp['rowtype'] = newScrmObj.constants.crud.update;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet temp2 = [];\r\n\t\t\tfor(let j = 0; j < e.org.length; j ++) {\r\n\t\t\t\tif (e.org[j][\"PARENT_ID\"] === temp[\"ID\"]) {\r\n\t\t\t\t\tlet needToMove = this.findRowToMove({org: e.org, target : [e.org[j]], parentLV: temp[\"LEVEL\"], parentID: temp[\"ID\"], isSub: true, parnetOpen: (display && e.org[j]['_display'])});\r\n\t\t\t\t\tfor(let k = 0; k < needToMove.length; k ++) {\r\n\t\t\t\t\t\ttemp2.push(needToMove[k])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (temp2.length > 0) {\r\n\t\t\t\ttemp[\"EXPAND\"]  = temp2[0]['_display'];\r\n\t\t\t\trtnArr.push(temp)\r\n\r\n\t\t\t\tfor(let k = 0; k < temp2.length; k ++) {\r\n\t\t\t\t\trtnArr.push(temp2[k])\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trtnArr.push(temp)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rtnArr;\r\n\t}\r\n\tmakeTreeData = (data) => {\r\n\t\tlet rtnVal = data;\r\n\t\tif (this.props.tree.isTree) {\r\n\t\t\tif ( this.props.tree.stndCol.length > 0 ) {\r\n\t\t\t\tfor ( let intA = 0; intA < rtnVal.length; intA++ ) {\r\n\t\t\t\t\tif (rtnVal[intA]['_display'] === undefined) {\r\n\t\t\t\t\t\tif (this.props.tree.open) {\r\n\t\t\t\t\t\t\trtnVal[intA]['_display'] = true;\r\n\t\t\t\t\t\t\trtnVal[intA]['EXPAND'] = true;\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (rtnVal[intA]['LEVEL'] !== \"1\") {\r\n\t\t\t\t\t\t\t\trtnVal[intA]['_display'] = false;\r\n\t\t\t\t\t\t\t\trtnVal[intA]['EXPAND'] = false;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\trtnVal[intA]['_display'] = true;\r\n\t\t\t\t\t\t\t\trtnVal[intA]['EXPAND'] = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet childCnt = 0;\r\n\r\n\t\t\t\t\t\tfor (let intB = 0; intB < rtnVal.length; intB++) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tif (rtnVal[intB]['PARENT_ID'] === rtnVal[intA]['ID']) {\r\n\t\t\t\t\t\t\t\tchildCnt ++;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\trtnVal[intA]['childCNT'] = childCnt;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rtnVal;\r\n\t};\r\n\tgetTreeData = (data) => {\r\n\t\tlet rtnVal = [];\r\n\t\tfor (let intA = 0; intA < data.length; intA++ ) {\r\n\t\t\tif (data[intA]['LEVEL'] > 1) {\r\n\t\t\t\tif (data[intA]['_display']) {\r\n\t\t\t\t\tif ( data.filter(item => item['ID'] === data[intA]['PARENT_ID'] && item['_display'] === true).length > 0) {\r\n\t\t\t\t\t\trtnVal.push(data[intA]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\trtnVal.push(data[intA]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rtnVal;\r\n\t};\r\n\tsetTreeOrder = (records, needTomove, parentID) => {\r\n\t\tlet changed = [];\r\n\r\n\t\tif (needTomove[0][\"PARENT_ID\"] === \"0\") {\r\n\t\t\tfor(let j = 0; j < needTomove.length; j ++) {\r\n\t\t\t\tchanged.push(needTomove[j]);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(let i = 0; i < records.length; i ++) {\r\n\t\t\tif (parentID === records[i][\"ID\"]) {\r\n\t\t\t\tchanged.push(records[i]);\r\n\r\n\t\t\t\tfor(let j = 0; j < needTomove.length; j ++) {\r\n\t\t\t\t\tchanged.push(needTomove[j]);\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if (parentID !== records[i][\"ID\"]) {\r\n\t\t\t\tlet isMoved = false;\r\n\t\t\t\t\r\n\t\t\t\tfor(let j = 0; j < needTomove.length; j ++) {\r\n\t\t\t\t\tif (records[i][\"ID\"] === needTomove[j][\"ID\"]) {\r\n\t\t\t\t\t\tisMoved = true;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!isMoved) {\r\n\t\t\t\t\tchanged.push(records[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor(let i = 0; i < changed.length; i ++) {\r\n\t\t\tlet cnt = 0;\r\n\t\t\tfor(let j = 0; j < changed.length; j ++) {\r\n\t\t\t\tif (changed[i][\"ID\"] === changed[j][\"PARENT_ID\"]) {\r\n\t\t\t\t\tcnt += 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tchanged[i]['childCNT'] = cnt;\r\n\t\t}\r\n\r\n\t\treturn changed;\r\n\t};\r\n\r\n\tonRowDragEnd = (e) => {\r\n\t\tlet gridData = this.gridDataset.getRecords();\r\n\t\tif (this.props.tree !== undefined && this.props.tree.isTree) {\r\n\t\t\tlet standardNode =  (e.overIndex !== -1) ? ((e.overNode.rowIndex > 0 ) ? e.api.getDisplayedRowAtIndex(e.overNode.rowIndex - 1) : '') : '';\r\n\t\t\t\t\r\n\t\t\tlet parentLV = standardNode === '' ? 0 : standardNode.data[\"LEVEL\"];\r\n\t\t\tlet parentID = standardNode === '' ? \"0\" : standardNode.data[\"ID\"];\r\n\r\n\t\t\tconst records = JSON.parse(JSON.stringify(gridData));\r\n\r\n\t\t\tlet needTomove = this.findRowToMove ({org: records, target: e.nodes, parentLV: parentLV, parentID: parentID, isSub: false})\r\n\r\n\t\t\tlet changed = this.setTreeOrder(records, needTomove, parentID);\r\n\r\n\t\t\tfor(let i = 0; i < changed.length; i ++) {\r\n\t\t\t\tObject.assign(gridData.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)[i], changed[i]);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\te.api.forEachNode((node, index) => {\r\n\t\t\t\tif (node['data']['rowtype'] !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\tif (node['data']['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tif (node['rowIndex'] !== Number(node['id'])) {\r\n\t\t\t\t\t\t\tnode['data']['rowtype'] = newScrmObj.constants.crud.update;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tObject.assign(gridData.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)[index], node['data']);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tif (this.gridDataset.orgrecords.length > 0) {\r\n\t\t\tthis.gridDataset.orgrecords.forEach(\r\n\t\t\t\t(item, index) => {\r\n\t\t\t\t\tfor (let intA=0; intA < gridData.length; intA++) {\r\n\t\t\t\t\t\tif (item['recid'] === gridData[intA]['recid']) {\r\n\t\t\t\t\t\t\tif (gridData[intA]['rowtype'] === newScrmObj.constants.crud.update) {\r\n\t\t\t\t\t\t\t\tif (intA === index) {\r\n\t\t\t\t\t\t\t\t\t// 두 json 데이터 비교 (row type 비교)\r\n\t\t\t\t\t\t\t\t\tlet tmpGrdData = JSON.parse(JSON.stringify(gridData[intA]));\r\n\t\t\t\t\t\t\t\t\tlet tmpOrgData = JSON.parse(JSON.stringify(item));\r\n\r\n\t\t\t\t\t\t\t\t\tdelete tmpGrdData.rowtype;\r\n\t\t\t\t\t\t\t\t\tdelete tmpOrgData.rowtype;\r\n\r\n\t\t\t\t\t\t\t\t\tif (JSON.stringify(tmpGrdData) === JSON.stringify(tmpOrgData)) {\r\n\t\t\t\t\t\t\t\t\t\tgridData[intA]['rowtype'] = newScrmObj.constants.crud.read;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tthis.gridDataset.setRecords(gridData);\r\n\r\n\t\t// // 데이터 재 배열 후, grid 재 셋팅\r\n\t\tif (this.props.tree !== undefined && this.props.tree.isTree) {\r\n\t\t\te.api.setRowData(this.getTreeData(gridData.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)));\r\n\r\n\t\t} else {\r\n\t\t\te.api.redrawRows();\r\n\t\t}\r\n\r\n\t\tthis.props.onRowDragEnd({ id : this.props.id, data : gridData,  dragData : e.nodes});\r\n\t}\r\n\t/* Method Zone */\r\n\tdoFilter = (value) => {\r\n\t\tthis.state.gridApi.setQuickFilter(value);\r\n\t};\r\n\tgetSelectedRowIndex = () => {\r\n\t\tif (this.state.gridApi.getSelectedNodes().length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn Number(this.state.gridApi.getSelectedNodes()[0].rowIndex);\r\n\t};\r\n\tgetSelectedRows = () => {\r\n\t\tif (this.state.gridApi.getSelectedRows().length === 0) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\t\treturn this.state.gridApi.getSelectedRows();\r\n\t};\r\n\tgetDeSelectedRows = () => {\r\n\t\tlet deSelectRows = [];\r\n\t\tthis.state.gridApi.forEachNode((node, index) => {\r\n\t\t\tif (!node.isSelected()) deSelectRows.push(node.data);\r\n\t\t});\r\n\t\treturn deSelectRows;\r\n\t};\r\n\teditStart = (row, col) => {\r\n\t\tthis.state.gridApi.setFocusedCell(row, col);\r\n\t\tthis.state.gridApi.startEditingCell({ rowIndex : row, colKey : col});\r\n\t};\r\n\tautoSizeFit = () => {\r\n\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t};\r\n\r\n\taddGridRow = () => {\r\n\t\tlet rtnJson = this.props.onBeforeInsertRow({ id : this.props.id });\r\n\r\n\t\tif (rtnJson['rtn'] !== false) rtnJson['rtn'] = true;\r\n\r\n\t\tif (rtnJson['rtn']) {\r\n\t\t\tlet index = this.gridDataset.length;\r\n\t\t\tif (typeof rtnJson['index'] !== 'number') {\r\n\t\t\t\tindex = (this.props.infinite) ? this.gridDataset.addRow(0) : this.gridDataset.addRow();\r\n\t\t\t} else {\r\n\t\t\t\tindex = (this.props.infinite) ? this.gridDataset.addRow(0) : this.gridDataset.addRow(rtnJson['index']);\r\n\t\t\t}\r\n\r\n\t\t\tif (this.props.header.filter(item => StrLib.isNull(item['defaultValue']) === false).map((ele) => { return { colId : ele['colId'], value : ele['defaultValue']}}).length > 0) {\r\n\t\t\t\tthis.props.header.filter(item => StrLib.isNull(item['defaultValue']) === false).map((ele) => { return { colId : ele['colId'], value : ele['defaultValue']}}).forEach(element => {\r\n\t\t\t\t\tthis.gridDataset.setValue(index, element['colId'], element['value']);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\tthis.moveRow(index, true);\r\n\r\n\t\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\t\tthis.props.onInsertRow({ \r\n\t\t\t\t\tid : this.props.id\r\n\t\t\t\t,\tdata : this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)\r\n\t\t\t\t,\tinsertData : this.gridDataset.getRow(index)\r\n\t\t\t\t,\tindex : index\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tdelGridRow = () => {\r\n\t\tif (this.state.gridApi.getSelectedNodes().length === 0) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['선택된 행이 없습니다.']);\r\n\t\t} else {\r\n\t\t\tlet rtn = this.props.onBeforeDeleteRow({  id : this.props.id });\r\n\t\t\tif (rtn !== false) rtn = true;\r\n\r\n\t\t\tif (rtn) {\r\n\t\t\t\tlet index = this.state.gridApi.getSelectedNodes()[this.state.gridApi.getSelectedNodes().length-1]['rowIndex'];\r\n\t\t\t\tlet lstRecid = this.state.gridApi.getSelectedNodes()[this.state.gridApi.getSelectedNodes().length-1]['data']['recid'];\r\n\t\t\t\tlet deleteData = this.state.gridApi.getSelectedNodes().map(item => item['data']);\r\n\t\t\t\tlet rtnVal = this.gridDataset.getRecords();\r\n\r\n\r\n\t\t\t\tfor (let intA = 0; intA < rtnVal.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy).length; intA++) {\r\n\t\t\t\t\tfor (let intB = 0; intB < this.state.gridApi.getSelectedNodes().length; intB++) {\r\n\t\t\t\t\t\tif (intA === this.state.gridApi.getSelectedNodes()[intB]['rowIndex']) {\r\n\t\t\t\t\t\t\tif (rtnVal.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)[intA]['rowtype'] === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\t\trtnVal.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy)[intA]['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['신규 행만 삭제가 가능합니다.']);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.gridDataset.setRecords(rtnVal.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove));\r\n\t\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\r\n\t\t\t\tthis.moveRow(index, true);\r\n\r\n\t\t\t\tif (this.props.id === null || this.props.id === undefined) { return; }\r\n\t\t\t\tthis.props.onDeleteRow({\r\n\t\t\t\t\t\tid : this.props.id\r\n\t\t\t\t\t,\tdata : rtnVal.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove)\r\n\t\t\t\t\t,\tdeleteData : deleteData\r\n\t\t\t\t\t,\tindex : index\r\n\t\t\t\t\t,\tlstRecid : lstRecid\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\tsetGridData = (data) => {\r\n\t\tif (data.length < 1) return;\r\n\t\tif (this.gridDataset.getRecords().length > 0) {\r\n\t\t\tthis.gridDataset.initRecords(data);\r\n\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t} else {\r\n\t\t\tthis.gridDataset.appendRecords(data);\r\n\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t}\r\n\r\n\t}\r\n\tdownExcelData = () => {\r\n\t\tlet exelData = [];\r\n\t\tthis.state.gridApi.forEachNode((item) => {\r\n\t\t\tif (item['data']['rowtype'] !== newScrmObj.constants.crud.destroy)  {\r\n\t\t\t\tlet data = item['data'];\r\n\t\t\t\tdata['node'] = item;\r\n\t\t\t\texelData.push(data);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet lengthCheck = this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.create)\r\n\r\n\t\tif (this.props.infinite && this.props.totalRowCnt <= lengthCheck.length) {\t\r\n\t\t\tExcelLib.exportToExcel(setGridHeader(this.props.header, this.props), exelData, true, this.props.areaName, this.state.gridApi);\r\n\r\n\t\t} else if (this.props.infinite) {\r\n\t\t\tthis.props.onScrollEnd({ id : this.props.id, excelLoadAll: true});\r\n\t\t} else {\r\n\r\n\t\t\tExcelLib.exportToExcel(setGridHeader(this.props.header, this.props), exelData, true, this.props.areaName, this.state.gridApi);\r\n\t\t}\r\n\t\t// ExcelLib.exportToExcel(setGridHeader(this.props.header, this.props), this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy), true, this.props.areaName);\r\n\t}\r\n\tmoveRow = (index, selected) => {\r\n\t\tlet data, rtnNode;\r\n\t\tthis.state.gridApi.forEachNode((node, idx) => {if (idx === index) data = node;});\r\n\r\n\t\tif (data === undefined) {\r\n\t\t\tthis.state.gridApi.forEachNode((node, idx) => {\r\n\t\t\t\tif (idx === (this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy).length-1)) rtnNode = node;\r\n\t\t\t});\r\n\t\t\tif (rtnNode) {\r\n\t\t\t\tif (selected) {\r\n\t\t\t\t\trtnNode.setSelected(true);\r\n\t\t\t\t}\r\n\t\t\t\tthis.state.gridApi.ensureIndexVisible(rtnNode['rowIndex'], 'top');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (selected) data.setSelected(true);\r\n\t\t\tthis.state.gridApi.ensureIndexVisible(index, 'top');\r\n\t\t}\r\n\t};\r\n\tundoCellEditng = () => {\r\n\t\tthis.state.gridApi.undoCellEditing();\r\n\t}\r\n\tredoCellEditng = () => {\r\n\t\tthis.state.gridApi.redoCellEditing();\r\n\t}\r\n\tsetInfiniteGridData = (type) => {\r\n\t\tif (type === 'A') {\r\n\t\t\tlet initPageIndex = this.gridDataset.getRecords().length - 1;\r\n\t\t\tthis.pageDataset = this.props.data.records;\r\n\t\t\tthis.propDataset = this.propDataset.concat(JSON.parse(JSON.stringify(this.pageDataset)));\r\n\t\t\tthis.gridDataset.initRecords(this.gridDataset.getRecords().concat(this.pageDataset));\r\n\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t// 페이지 이동\r\n\t\t\tthis.state.gridApi.ensureIndexVisible(initPageIndex, 'bottom');\r\n\t\t} else {\r\n\t\t\tthis.propDataset = this.props.data.records;\r\n\t\t\tthis.pageDataset = this.props.data.records;\r\n\t\t\tthis.gridDataset.initRecords(this.props.data.getRecords());\r\n\t\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\tthis.state.gridApi.ensureIndexVisible(0, 'top');\r\n\t\t}\r\n\t}\r\n\tonFilterHeadClick =(e) => {\r\n\t\tlet newHeader = _.cloneDeep(this.pageHeader);\r\n\t\t// this.propDataset = this.gridDataset.getRecords()\r\n\t\tnewHeader.map((header, key) => {\r\n\t\t\tif (header.filterToggle === 'Y') {\r\n\t\t\t\tif (key === e.index) {\t\t\t\t\t\r\n\t\t\t\t\tthis.state.columnApi.setColumnVisible(header.colId, !header.filterVal)\r\n\t\t\t\t\tthis.state.gridApi.sizeColumnsToFit();\r\n\t\t\t\t\theader.filterVal = !header.filterVal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t})\r\n\t\tthis.props.onHeaderChange({ id : this.props.id, newHeader: newHeader})\r\n\t}\r\n\texpandAllRow = () => {\r\n\t\tlet orgRecord = this.makeTreeData(this.props.data.records);\r\n\t\t\r\n\t\tfor (let i = 0; i < orgRecord.length; i ++) {\r\n\t\t\torgRecord[i].EXPAND = true;\r\n\t\t}\r\n\r\n\t\tthis.gridDataset.setRecords(orgRecord.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove));\r\n\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\tif (this.props.rowSelection === \"multiple\") {\r\n\t\t\tthis.state.gridApi.forEachNode((node) => { \r\n\t\t\t\tif (node.data.CHK === 'Y') { \r\n\t\t\t\t\tnode.setSelected(true); \r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\tcontractAllRow = () => {\r\n\t\tlet orgRecord = this.makeTreeData(this.props.data.records);\r\n\t\t\r\n\t\tfor (let i = 0; i < orgRecord.length; i ++) {\r\n\t\t\torgRecord[i].EXPAND = false;\r\n\r\n\t\t\tif (orgRecord[i].LEVEL !== \"1\") {\r\n\t\t\t\torgRecord[i]._display = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.gridDataset.setRecords(orgRecord.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove));\r\n\t\tthis.state.gridApi.setRowData(this.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy && item._display));\r\n\t\tif (this.props.rowSelection === \"multiple\") {\r\n\t\t\tthis.state.gridApi.forEachNode((node) => { \r\n\t\t\t\tif (node.data.CHK === 'Y') { \r\n\t\t\t\t\tnode.setSelected(true); \r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{\t(this.props.noName && !this.props.addRowBtn && !this.props.delRowBtn && !this.props.dnlExcelBtn && !this.props.infinite) ?\r\n\t\t\t\t\t\tnull\r\n\t\t\t\t\t:\t<div style={{display : 'block', width:'100%', height : '30px'}}>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(this.props.noName) \r\n\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\tnull \r\n\t\t\t\t\t\t\t\t\t:\t\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<div className = \"scrm-component-panel-namearea\">\r\n\t\t\t\t\t\t\t\t\t\t\t<span> {(this.props.areaName) ? this.props.areaName : '그리드'} </span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(this.props.infinite && this.props.totalRowCnt > 0) \r\n\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<div className = \"scrm-component-panel-namearea\">\t\t\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t\t\t\t\t\t<span> &nbsp;&nbsp;&nbsp;-&nbsp;전체&nbsp;:&nbsp;{this.props.totalRowCnt}&nbsp;건</span>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t(this.props.headerToggle && this.props.data.records.length > 0) \r\n\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t<div className=\"grid_RFloatArea\" style={{paddingLeft: \"10px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.props.header.map((header, key) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (header.filterToggle === 'Y') {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<Checkbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey = {'checkbox_' + this.props.id + \"_header_\"+ key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tid  = {'checkbox_' + this.props.id + \"_header_\"+ key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex = {key}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue = {header.headerName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkeyProp =  {header.field}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked = {header.filterVal? 'Y': 'N'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {this.onFilterHeadClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>)\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t{/* <button className=\"scrm-btn xs grey-o i\"onClick={this.undoCellEditng}><i className=\"xi-undo\"/></button>\r\n\t\t\t\t\t\t\t\t<button className=\"scrm-btn xs grey-o i\"onClick={this.redoCellEditng}><i className=\"xi-redo\"/></button> */}\r\n\t\t\t\t\t\t\t\t{(this.props.tree) ? <Button onClick={this.expandAllRow}   size=\"xs\" innerImage={true} icon = {'arrowDn'} ml=\"5px\"/> : null}\r\n\t\t\t\t\t\t\t\t{(this.props.tree) ? <Button onClick={this.contractAllRow} size=\"xs\" innerImage={true} icon = {'arrowUp'} ml=\"5px\"/> : null}\r\n\r\n\t\t\t\t\t\t\t\t{(this.props.addRowBtn) ? <Button onClick={this.addGridRow} size=\"xs\" innerImage={true} icon = {'add'} ml=\"5px\" tooltip={\"추가\"}/> : null}\r\n\t\t\t\t\t\t\t\t{(this.props.delRowBtn) ? <Button onClick={this.delGridRow} size=\"xs\" innerImage={true} icon = {'del'} ml=\"5px\" tooltip={\"삭제\"}/> : null}\r\n\t\t\t\t\t\t\t\t{(this.props.dnlExcelBtn) ? <Button onClick={this.downExcelData} size=\"xs\" innerImage={true} icon = {'save'} ml=\"5px\" tooltip={\"엑셀다운로드\"}/> : null}\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t\t<div className= {\"ag-theme-alpine\"} style={ {width:'100%', height: this.props.height} }>\r\n\t\t\t\t\t<AgGridReact \r\n\t\t\t\t\t\t// pagination = {true}\r\n\t\t\t\t\t\t// paginationPageSize = {3}\r\n\t\t\t\t\t\tonGridReady={this.onGridReady}\r\n\t\t\t\t\t\talwaysShowVerticalScroll = { false }\r\n\t\t\t\t\t\tframeworkComponents = {{\r\n\t\t\t\t\t\t\tdates : DateComponent,\r\n\t\t\t\t\t\t\trangeDate : RangeDateComponent,\r\n\t\t\t\t\t\t\trangeTime : RangeTimeComponent,\r\n\t\t\t\t\t\t\ttime : TimeComponent,\r\n\t\t\t\t\t\t\tcheckbox: CheckboxRenderer,\r\n\t\t\t\t\t\t\tselectbox : SelectboxRenderer,\r\n\t\t\t\t\t\t\tdelButton : DelRowButton,\r\n\t\t\t\t\t\t\tcustomEditor : CustomEditor,\r\n\t\t\t\t\t\t\tactionButton : ActionButton,\r\n\t\t\t\t\t\t\tcustomTooltip: CustomToolTip,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\ttooltipShowDelay={0}\r\n\t\t\t\t\t\t// cellRender 전용 추후 컴토후 컴포넌트화\r\n\t\t\t\t\t\t// domLayout = {'autoHeight'}\r\n\t\t\t\t\t\tcomponents = { this.props.components }\r\n\t\t\t\t\t\tcontext = {{ componentParent : this }}\r\n\t\t\t\t\t\tsuppressMovableColumns = {this.props.suppressMovableColumns}\r\n\t\t\t\t\t\tsuppressPropertyNamesCheck = {true}\r\n\t\t\t\t\t\tstopEditingWhenCellsLoseFocus={false}\r\n\t\t\t\t\t\tmultiSortKey = {'ctrl'}\r\n\t\t\t\t\t\theaderHeight = {30}\r\n\t\t\t\t\t\trowHeight = {30}\r\n\t\t\t\t\t\tdefaultColDef = {{\r\n\t\t\t\t\t\t\t\tresizable: true\r\n\t\t\t\t\t\t\t,\tsortable : this.props.sort\r\n\t\t\t\t\t\t\t,\teditable : false\r\n\t\t\t\t\t\t\t,\tfilter : this.props.filter\r\n\t\t\t\t\t\t\t,\tfloatingFilter: this.props.floatingFilter\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t// row drag props\r\n\t\t\t\t\t\trowDragManaged = {this.props.rowDrag}\r\n\t\t\t\t\t\tenableMultiRowDragging = {true}\r\n\r\n\t\t\t\t\t\tsuppressDragLeaveHidesColumns={true}\r\n\t\t\t\t\t\tsuppressRowClickSelection = {this.props.suppressRowClickSelection}\r\n\t\t\t\t\t\tsuppressRowDeselection = {(this.props.suppressRowDeselection) ? this.props.suppressRowDeselection : false}\r\n\t\t\t\t\t\tstopEditingWhenGridLosesFocus = {true}\r\n\r\n\t\t\t\t\t\tcolumnDefs = { setGridHeader(this.orgPageHeader, this.props) }\r\n\t\t\t\t\t\trowBuffer = {100}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tundoRedoCellEditing = {true}\r\n\t\t\t\t\t\tenableCellChangeFlash = {false}\r\n\t\t\t\t\t\tundoRedoCellEditingLimit = {10}\r\n\r\n\t\t\t\t\t\tlocaleText = {{noRowsToShow: '조회된 결과가 존재하지 않습니다.'}}\r\n\t\t\t\t\t\trowSelection= {this.props.rowSelection}\r\n\t\t\t\t\t\tcolResizeDefault= {'shift'}\r\n\r\n\t\t\t\t\t\t// 로우 스판\r\n\t\t\t\t\t\tsuppressRowTransform={checkHeaderProp(this.orgPageHeader, 'rowSpan')}\r\n\t\t\t\t\t\t// 로우 스크롤 시, 신규 데이터에 대한 Scroll Top이동을 막을 건지 설정\r\n\t\t\t\t\t\tsuppressScrollOnNewData={this.props.doNotScrollTop}\r\n\r\n\r\n\t\t\t\t\t\t// event\r\n\t\t\t\t\t\tonGridSizeChanged    = {this.onGridSizeChanged}\r\n\t\t\t\t\t\tonRowClicked         = {this.onRowClicked}\r\n\t\t\t\t\t\tonActionCellClicked  = {this.onActionCellClicked}\r\n\t\t\t\t\t\tonCellClicked        = {this.onCellClicked}\r\n\t\t\t\t\t\tonCellDoubleClicked  = {this.onCellDoubleClicked}\r\n\t\t\t\t\t\tonCellValueChanged   = {this.onCellValueChanged}\r\n\t\t\t\t\t\tonCellEditingStopped = {this.onCellEditingStopped}\r\n\t\t\t\t\t\tonRowDataChanged     = {this.onRowDataChanged}\r\n\t\t\t\t\t\tonSelectionChanged   = {this.onSelectionChanged}\r\n\t\t\t\t\t\tonRowSelected        = {this.onRowSelected}\r\n\t\t\t\t\t\tonBodyScroll         = {this.onBodyScroll}\r\n\t\t\t\t\t\tonRowDataUpdated     = {this.onRowDataUpdated}\r\n\t\t\t\t\t\tonSortChanged        = {this.onSortChanged}\r\n\t\t\t\t\t\tonRowDragEnd         = {this.onRowDragEnd}\r\n\t\t\t\t\t\tonRowDoubleClicked   = {this.onRowDoubleClicked}\r\n\t\t\t\t\t\tonColumnResized      = {this.onColumnResized}\r\n\t\t\t\t\t\tonColumnGroupOpened  = {this.onColumnGroupOpened}\r\n\r\n\t\t\t\t\t\trowMultiSelectWithClick = {true}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Grid;","import React from 'react';\r\nimport Style from 'style-it';\r\n\r\nimport ReactQuill from 'react-quill';\r\nimport 'react-quill/dist/quill.snow.css'; \r\n\r\nclass HtmlEditor extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { }\r\n\t\tthis.onChange  = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\ttoolbarHidden : false,\r\n\t\treadOnly : false,\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tmodules = {\r\n\t\ttoolbar : (!this.props.toolbarHidden) ? [\r\n\t\t\t[\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n\t\t\t[{ size: [\"small\", false, \"large\", \"huge\"] }, { font: [] }, { color: [] }, { background: [] }],\r\n\t\t\t[{ list: \"ordered\" }, { list: \"bullet\" }, { indent: \"-1\" }, { indent: \"+1\" }, { align: [] }],\r\n\t\t\t[\"clean\"]\r\n\t\t] : false,\r\n\t\tclipboard: { matchVisual: false }\r\n\t};\r\n\tformats = [ \"header\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"size\", \"color\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\", \"align\", \"background\", \"code\"];\r\n\r\n\tonChange = (e) => { this.props.onChange({ id: this.props.id, value : e}); }\r\n\trender (){\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Style>\r\n\t\t\t\t\t{`\r\n\t\t\t\t\t\t.scrm-editor-contnents { width: 100%; box-sizing: border-box; }\r\n\t\t\t\t\t\t.scrm-editor-contnents .ql-editor{ width:  100%; height: ${this.props.height}px; overflow-y: auto; overflow-x: auto; }\r\n\t\t\t\t\t`}\r\n\t\t\t\t</Style>\r\n\t\t\t\t<ReactQuill theme = 'snow'\r\n\t\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t\tmodules={this.modules}\r\n\t\t\t\t\t\t\tformats={this.formats}\r\n\t\t\t\t\t\t\tplaceholder={'내용을 입력하세요.'}\r\n\t\t\t\t\t\t\treadOnly={this.props.readOnly}\r\n\t\t\t\t\t\t\tclassName = 'scrm-editor-contnents'\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default HtmlEditor;","import React from 'react';\r\nimport {  StrLib } from 'common';\r\nimport { DateRangePicker, SingleDatePicker } from 'react-dates';\r\nimport 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport moment from 'moment';\r\n\r\nclass Checkbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tindex : 0,\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id : this.props.id, target : e.target, index : this.props.index, checked : document.getElementById(e.target.id).checked });\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-checkbox-div'>\r\n\t\t\t\t<input\tclassName = \"scrm-input-checkbox-input\"\r\n\t\t\t\t\t\ttype = \"checkbox\"\r\n\t\t\t\t\t\tid = {'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.keyProp}\r\n\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\tname = {this.props.id}\r\n\t\t\t\t\t\tchecked = { this.props.checked === 'Y'}\r\n\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<label className = \"scrm-input-checkbox-label\" htmlFor={'chk_' + this.props.id + '_' + this.props.index + '_' + this.props.keyProp} readOnly = {this.props.readOnly}> {this.props.value} </label>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass MultiCheckBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonClick : () => {return;},\r\n\t\tonChange : () => {return;}\r\n\t}\r\n\tonClick = (e) => {\r\n\t\tthis.props.onClick({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target: e.target, id : this.props.id, index : e.index, checked: Array.from(document.getElementsByName(e.target.name))[e.index].checked});\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t{\r\n\t\t\t\tthis.props.dataset.map((item, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Checkbox\r\n\t\t\t\t\t\t\tkey = {'checkbox_' + this.props.id + \"_\"+ i}\r\n\t\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\t\tindex = {i}\r\n\t\t\t\t\t\t\tvalue = {item[this.props.value]}\r\n\t\t\t\t\t\t\tkeyProp =  {item[this.props.keyProp]}\r\n\t\t\t\t\t\t\tchecked = {item['value']}\r\n\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t\tonClick = {this.onClick}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nclass Radio extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state  = {\r\n\t\t\tselectedOption : this.props.selected || this.props.dataset[this.props.defaultSelected][this.props.keyProp]\r\n\t\t}\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonChange : () => { return; }\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({ id: this.props.id, value : e.target.value});\r\n\t}\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\tsetRadio = (props) => {\r\n\t\treturn (\r\n\t\t\tprops.dataset.map((item, i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={'radio_div_' + i} className ='scrm-input-radio-div'>\r\n\t\t\t\t\t\t<input\tclassName ='scrm-input-radio-input'\r\n\t\t\t\t\t\t\t\tkey={'radio_'+ i}\r\n\t\t\t\t\t\t\t\tid = {'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\tname={props.id}\r\n\t\t\t\t\t\t\t\tvalue={item[props.keyProp]}\r\n\t\t\t\t\t\t\t\tchecked = {\r\n\t\t\t\t\t\t\t\t\t(props.selected === null)\r\n\t\t\t\t\t\t\t\t\t? props.defaultSelected === i\r\n\t\t\t\t\t\t\t\t\t: props.selected === item[props.keyProp]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label\tclassName ='scrm-input-radio-label'\r\n\t\t\t\t\t\t\t\tkey={'radio_label_' + i}\r\n\t\t\t\t\t\t\t\thtmlFor={'rdo_' + i + '_' + props.keyProp}\r\n\t\t\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{item[props.value]}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t{ this.setRadio(this.props) }\r\n\t\t\t </div>\r\n\t\t);\r\n\t}\r\n}\r\nclass Textfield extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tonKeyPress : () => {return;},\r\n\t\tonChange : () => {return;},\r\n\t\tonBlur : () => {return;},\r\n\t\ttooltip : false\r\n\t}\r\n\trtnVal = (value) => {\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase 'onlyNum' :\r\n\t\t\t\tif(StrLib.isNull(value)) return value;\r\n\t\t\t\treturn typeof value === 'string' ? value.replace(/[^0-9]/g,\"\") : value.toString().replace(/[^0-9]/g,\"\");\r\n\t\t\tcase 'onlyKor' :\r\n\t\t\t\tif(StrLib.isNull(value)) return value;\r\n\t\t\t\treturn value.replace(/[a-z0-9]|[ \\]{}()<>?|`~!@#$%^&*-_+=,.;:'\\\\]/g,\"\");\r\n\t\t\tcase 'onlyEng' :\r\n\t\t\t\tif(StrLib.isNull(value)) return value;\r\n\t\t\t\treturn value.replace(/[^a-zA-Z]/g,\"\");\r\n\t\t\tdefault :\r\n\t\t\t\tif (StrLib.isNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-div' style={{width: this.props.width}}>\r\n\t\t\t\t<input\tclassName = \"scrm-input-text\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\t\tvalue = {this.rtnVal(this.props.value)}\r\n\t\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\t\tminLength =  {this.props.minLength}\r\n\t\t\t\t\t\tmaxLength = {this.props.maxLength}\r\n\t\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}\r\n\t\t\t\t\t\tonKeyPress= {(e) => this.props.onKeyPress(e)}\r\n\t\t\t\t\t\tonBlur = {(e) => {this.props.onBlur(e)}}\r\n\t\t\t\t\t\tautoComplete  = 'off'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass TextPasswdfield extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-input-div'>\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName = \"scrm-input-password\"\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tname = {this.props.name}\r\n\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\tplaceholder = {this.props.placeholder}\r\n\t\t\t\t\tmaxlength = {this.props.maxlength}\r\n\t\t\t\t\tminlength =  {this.props.minlength}\r\n\t\t\t\t\treadOnly = {this.props.readOnly}\r\n\t\t\t\t\tonChange = {(e) => this.props.onChange(e)}\r\n\t\t\t\t\tonKeyPress= {(e) => this.props.onKeyPress(e)}\r\n\t\t\t\t\tautoComplete  = 'off'\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nclass InputCalendar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfocused: null,\r\n\t\t};\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tallowTextEdit: false,\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t\t\t\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SingleDatePicker\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tdate = {convertDate(this.props.value)}\r\n\t\t\t\t\tnumberOfMonths = {1}\r\n\t\t\t\t\tplaceholder = {'일자'}\r\n\t\t\t\t\tmonthFormat = {\"YYYY년 MM월\"}\r\n\t\t\t\t\tisOutsideRange = {(e) => {return ;}}\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tshowClearDate = {false}\r\n\t\t\t\t\tshowDefaultInputIcon\r\n\t\t\t\t\topenDirection = {this.props.direction ? this.props.direction : 'down'}\r\n\t\t\t\t\tverticalSpacing={0}\r\n\t\t\t\t\tappendToBody={false}\r\n  \t\t\t\t\tinputIconPosition=\"after\"\r\n\t\t\t\t\tdisplayFormat = {'YYYY-MM-DD'}\r\n\t\t\t\t\tkeepOpenOnDateSelect={false}\r\n\t\t\t\t\treadOnly={!this.props.allowTextEdit}\r\n\t\t\t\t\tonDateChange={(date) => {\r\n\t\t\t\t\t\tthis.props.onChange({\r\n\t\t\t\t\t\t\ttarget : {\r\n\t\t\t\t\t\t\t\tid : this.props.id,\r\n\t\t\t\t\t\t\t\tvalue : (date) ? date.format('YYYYMMDD') : null,\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tsmall={true}\r\n\t\t\t\t\tfocused={this.state.focused}\r\n\t\t\t\t\tonFocusChange={({ focused }) => this.setState({ focused })}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nclass RangeInputCalendar extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfocusedInput: null,\r\n\t\t};\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tstartDate: null,\r\n\t\tendDate: null,\r\n\t\tallowTextEdit: false,\r\n\t\tshowClearDates: true\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<DateRangePicker\r\n\t\t\t\t\tenableOutsideDays = {true}\r\n\t\t\t\t\tdisabled = {this.props.disabled}\r\n\t\t\t\t\tshowClearDates = {this.props.showClearDates}\r\n\t\t\t\t\tshowDefaultInputIcon\r\n\t\t\t\t\tisOutsideRange = {(e) => {return ;}}\r\n\t\t\t\t\tminimumNights={0}\r\n\t\t\t\t\tverticalSpacing={0}\r\n\t\t\t\t\tinputIconPosition=\"after\"\r\n\t\t\t\t\topenDirection = {this.props.direction ? this.props.direction : 'down'} \r\n\t\t\t\t\tdisplayFormat = {'YYYY-MM-DD'}\r\n\t\t\t\t\tmonthFormat = {\"YYYY년 MM월\"}\r\n\t\t\t\t\tstartDateId=\"startDate\"\r\n\t\t\t\t\tendDateId=\"endDate\"\r\n\t\t\t\t\tstartDatePlaceholderText = {\"시작일자\"}\r\n\t\t\t\t\tendDatePlaceholderText = {\"종료일자\"}\r\n\t\t\t\t\tstartDate={convertDate(this.props.startDate)}\r\n\t\t\t\t\tendDate={convertDate(this.props.endDate)}\r\n\t\t\t\t\treadOnly={!this.props.allowTextEdit}\r\n\t\t\t\t\tonDatesChange={({ startDate, endDate }) => {\r\n\t\t\t\t\t\tthis.props.onChange({\r\n\t\t\t\t\t\t\ttarget : {\r\n\t\t\t\t\t\t\t\tid : this.props.id,\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tstartDate : (startDate) ? startDate.format('YYYYMMDD') : null,\r\n\t\t\t\t\t\t\tendDate : (endDate) ? endDate.format('YYYYMMDD') : null,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tfocusedInput={this.state.focusedInput}\r\n\t\t\t\t\tonFocusChange={(focusedInput) => { this.setState({ focusedInput })}}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nconst convertDate = (date) => {\r\n\tif (date !== null && date !== undefined) {\r\n\t\treturn moment(date);\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n}\r\nexport { MultiCheckBox, Checkbox, Radio, Textfield, InputCalendar, TextPasswdfield, RangeInputCalendar}","import React from 'react';\r\n\r\nclass Label extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tcolor : 'black'\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-label-div\">\r\n\t\t\t\t{(this.props.content === undefined || !this.props.content)  \t\t\t\t\t\r\n\t\t\t\t\t? <span style={{color : this.props.color}}>{this.props.value}</span>\r\n\t\t\t\t\t: <span style={{color : 'gray'}}>{this.props.value}</span>\r\n\t\t\t\t}\r\n\t\t\t\t{\r\n\t\t\t\t\t(this.props.req)\r\n\t\t\t\t\t? <span style={{color : 'red'}}>{'*'}</span>\r\n\t\t\t\t\t: null\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Label;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport 'assets/styles/component.css';\r\n\r\nclass AppPanel extends React.Component {\r\n\tstatic defaultProps = { width: '100%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-app-panel\"> {this.props.children} </div>); }\r\n}\r\nclass HeadPanel extends React.Component {\r\n\tstatic defaultProps = { width: '100%'}\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-head-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MiddlePanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-middle-panel\"> {this.props.children} </div>); }\r\n}\r\nclass SidePanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-side-panel\"> {this.props.children} </div>); }\r\n}\r\nclass MainPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-main-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass ComponentPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { \r\n\t\tlet className = \"\";\r\n\t\t(this.props.sizeVar) ? className=\"scrm-component-size-var-panel\" : className=\"scrm-component-panel\";\t\t\r\n\t\treturn (\r\n\t\t\t<div className ={className} style={{width: this.props.width, height: this.props.height}}>\r\n\t\t\t\t{this.props.children}\r\n\t\t\t</div>\r\n\t\t); \r\n\t}\r\n}\r\nclass FooterPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return ( <div className = \"scrm-footer-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FlexPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-flex-panel\"> {this.props.children} </div>); }\r\n}\r\nclass FullPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-full-panel\" style={{width: this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass SubFullPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-subfull-panel\" style={{width: this.props.width, height: this.props.height}}> {this.props.children} </div>); }\r\n}\r\nclass LFloatArea extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-lfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RFloatArea extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-rfloat-div\"> {this.props.children} </div>); }\r\n}\r\nclass RelativeGroup extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-relative-div\" style={{width : this.props.width}}> {this.props.children} </div>); }\r\n}\r\nclass TrayPanel extends React.Component {\r\n\tstatic defaultProps = { }\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { \r\n\t\treturn (<div className=\"scrm-tray-panel\" id={this.props.id}> {this.props.children} </div>); }\r\n}\r\nclass SearchPanel extends React.Component {\r\n\tstatic propTypes = { children: PropTypes.oneOfType([PropTypes.element, PropTypes.func, PropTypes.array, PropTypes.object]).isRequired };\r\n\trender () { return (<div className = \"scrm-search-div\"> {this.props.children} </div>); }\r\n}\r\nexport { AppPanel, HeadPanel, MiddlePanel, SearchPanel, SidePanel, MainPanel, ComponentPanel, FooterPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, TrayPanel} ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {StrLib} from 'common';\r\n\r\nclass HeaderMenu extends React.Component {\r\n\tconstructor(props)  {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\topen : false\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\thandleClickOutside = (e) => {\r\n\t\tconst domNode = ReactDOM.findDOMNode(this);\r\n\t\tif ( !domNode || !domNode.contains(e.target) ) this.closeMenuList();\r\n\t}\r\n\tcloseMenuList = () => { this.setState({...this.state, open : false});}\r\n\tsetMenuDivOpen = () => { this.setState({...this.state, open : !this.state.open});}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"scrm-header-menu-container\">\r\n\t\t\t\t\t<ul className=\"scrm-header-menu-ul\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.menu.filter(item => StrLib.isNull(item.PARE_MNU_ID) ).map((item, key) => {\r\n\t\t\t\t\t\t\t\treturn <li className=\"scrm-header-menu-li\" key={'menu_' + key} onClick={this.setMenuDivOpen}>{item.MNU_NM}</li>\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div id=\"_scrm_menu_area\" className= {(this.state.open) ? \"scrm-header-menu-active\" : \"scrm-header-menu-nested\"}>\r\n\t\t\t\t\t\t<ul className=\"scrm-header-menu-ul\">\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.menu.filter(item => StrLib.isNull(item.PARE_MNU_ID)).map((item, key) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li className=\"scrm-header-menu-li\" key={'div_menu_' + key} onClick={this.closeMenuList}>\r\n\t\t\t\t\t\t\t\t\t\t\t<ul className=\"scrm-header-submenu-ul\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.menu.filter(menu => menu.PARE_MNU_ID === item.MNU_ID).map((subMenu, subKey) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <li  className=\"scrm-header-submenu-li\" key={'submenu_' + subKey} id={'subMenu_' + subMenu.MNU_ID}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick = {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.props.openMenu(subMenu);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({...this.state, open : false});\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t> {subMenu.MNU_NM} </li>;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport { HeaderMenu};","import React from 'react';\r\nimport {ComLib, TransManager, StrLib, DataLib, newScrmObj} from 'common';\r\nimport {Selectbox, Textfield, Textarea, LFloatArea, RFloatArea, RelativeGroup, ComponentPanel, FlexPanel, SubFullPanel, BasicButton, Grid, Switch} from 'components';\r\nimport { Howl } from 'howler';\r\n\r\nconst playerConstants = {\r\n\titemBgColor :\t{ default : \"\", selected : 'rgb(233, 233, 233)' },\r\n\tlistItemDivId :\t{ container :'player_list_container_id', container2 :'player_list_container_id2', item : 'player_list_item_id', ans :'player_list_ans_id' },\r\n\tmarkColor :\t\t{ default : '', marked : '' }\r\n}\r\n\r\nclass Player extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.howler = null;\r\n\t\tthis.grdPlayerList = null;\r\n\t\tthis.grdPlayerListApi = null;\r\n\t\tthis.state = {\r\n\t\t\thowler : null,\r\n\t\t\tlistOpen : false,\r\n\t\t\tdsRcvSttData : [],\r\n\t\t\tdsRcvSttJobData : [],\r\n\t\t\tdsRcvSttAnsData : [],\r\n\t\t\tdsRcvSttAnsDataOrg : [],\r\n\t\t\tdsNewMissSen : [],\r\n\t\t\tdsUpdateMissSen : [],\r\n\t\t\tdsDeleteMissSen : [],\r\n\t\t\tdsKeywordList : [],\r\n\t\t\tsrc : '',\r\n\t\t\tplaying : false,\r\n\t\t\tbuffer : null,\r\n\t\t\tplayable : false,\r\n\t\t\tvolume: '0.5',\r\n\t\t\trate : 1,\r\n\t\t\tseek : 0,\r\n\t\t\tduration : 0,\r\n\t\t\tsrchText : '',\r\n\t\t\tsearchText : '',\r\n\t\t\tsearchedIndex : [],\r\n\t\t\tcurrentIndex : 0,\r\n\t\t\tselKeyword : '',\r\n\t\t\tselKeywordData: [{value : '', name : '선택'}],\r\n\t\t\tselKeywordType: '',\r\n\t\t\topenId: '',\r\n\t\t\topenAnswerArea : false,\r\n\t\t\tloadingBuffer : true,\r\n\t\t\tmissSenEdited : false,\r\n\t\t\tdsRcvCallList : DataLib.datalist.getInstance(),\r\n\t\t\tnewPath: \"\"\r\n\t\t};\r\n\t\tthis.event.player.onLoad = this.event.player.onLoad.bind(this);\r\n\t\tthis.event.player.onLoadError = this.event.player.onLoadError.bind(this);\r\n\t\tthis.event.player.onPlay = this.event.player.onPlay.bind(this);\r\n\t\tthis.event.player.onPause = this.event.player.onPause.bind(this);\r\n\t\tthis.event.player.onStop = this.event.player.onStop.bind(this);\r\n\t\tthis.event.player.onEnd = this.event.player.onEnd.bind(this);\r\n\t\tthis.event.player.onClickListTime = this.event.player.onClickListTime.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.input.onKeyPress = this.event.input.onKeyPress.bind(this);\r\n\t\tthis.event.select.onChange = this.event.select.onChange.bind(this);\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.switch.onChange = this.event.switch.onChange.bind(this);\r\n\t\tthis.event.waveform.onChange = this.event.waveform.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tctrNo : '_default',\r\n\t\tcallId : '_default',\r\n\t\tbodyHeight : '405px',\r\n\t}\r\n\tcomponentDidMount () {\t\t\r\n\t\tthis.handler.initialize();\r\n\t}\r\n\tcomponentDidUpdate (prevProps, prevState) {\r\n\t\tif (prevState === this.state) {\r\n\t\t\tif (this.props.optionalTime !== undefined && this.props.optionalTime !== null) {\r\n\t\t\t\tif (prevProps.optionalTime !== this.props.optionalTime) {\r\n\t\t\t\t\tthis.optionalTime = this.props.optionalTime;\r\n\t\t\t\t\tthis.handler.setDs('PLAYER_R01', this.props.callId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount () {\r\n\t\tif (this.howler) {\r\n\t\t\tthis.howler.stop();\r\n\t\t\tthis.howler.unload();\r\n\t\t\tthis.howler = null;\r\n\t\t}\r\n\t\t\r\n\t\t// 데모 시연용 실시간도 24 번 서버에 올라가있음 \r\n\t\t// if (this.props.options.JOB_TP === 'C') {\r\n\t\tif (this.props.options.JOB_TP === 'C' || this.props.options.JOB_TP === 'R' ) {\r\n\t\t\tthis.transaction(\"PLAYER_D01\");\r\n\t\t}\t\t\r\n\t}\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PLAYER_R00': \r\n\t\t\tif (StrLib.isNull(this.props.ctrNo)) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['계약번호가 존재하지 않습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tcase 'PLAYER_R01':\r\n\t\t\tif (!this.props.options.useUuid) {\r\n\t\t\t\tif (StrLib.isNull(this.state.dsRcvCallList.getValue(0, 'STT_UNQ')) || this.state.dsRcvCallList.size() < 1) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['콜데이터가 존재하지 않습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\ttransaction = (...params) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\tlet serviceid = params[0];\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'PLAYER_R00': \r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\r\n\t\t\t// call_id에 대한 Call list 가져오기\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid: \"STT.R_getCallList\",\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsRcvCallList\",\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\ttransManager.addDataset('dsSrchData', [{ CALL_ID : this.props.callId }]);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\tcase 'PLAYER_R01':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t// UUID 대한 STT Job Data 가져오기\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:  \"STT.R_getSttJobData\",\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsRcvSttJobData\",\r\n\t\t\t});\r\n\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:  \"STT.R_getMissSenData\",\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsRcvMissSenData\",\r\n\t\t\t});\r\n\r\n\t\t\t// 키워드 리스트 가져오기\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid: \"STT.R_getKeyword\",\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsKeywordList\",\r\n\t\t\t});\r\n\r\n\t\t\tif (!this.props.options.useUuid) {\r\n\t\t\t\ttransManager.addDataset('dsSrchData', [{ UUID : this.grdPlayerListApi.getSelectedRows()[0]['STT_UNQ'] }]);\r\n\t\t\t} else {\r\n\t\t\t\ttransManager.addDataset('dsSrchData', [{ UUID : this.props.options.UUID }]);\r\n\t\t\t}\r\n\r\n\t\t\ttransManager.agent();\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'PLAYER_C01':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\t\tlet newMS    = this.state.dsNewMissSen;\r\n\t\t\tlet updateMS = this.state.dsUpdateMissSen;\r\n\t\t\tlet deleteMS = this.state.dsDeleteMissSen;\r\n\t\t\t\r\n\t\t\tif (newMS.length > 0) {\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:  \"STT.C_setMissSenData\",\r\n\t\t\t\t\tdatasetsend:\"dsNewMissSen\",\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\ttransManager.addDataset('dsNewMissSen', newMS);\r\n\t\t\t}\r\n\t\t\tif (updateMS.length > 0) {\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:  \"STT.U_setMissSenData\",\r\n\t\t\t\t\tdatasetsend:\"dsUpdateMissSen\",\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\ttransManager.addDataset('dsUpdateMissSen', updateMS);\r\n\t\t\t}\r\n\t\t\tif (deleteMS.length > 0) {\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:  \"STT.D_delMissSenData\",\r\n\t\t\t\t\tdatasetsend:\"dsDeleteMissSen\",\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\ttransManager.addDataset('dsDeleteMissSen', deleteMS);\r\n\t\t\t}\r\n\r\n\t\t\ttransManager.agent();\r\n\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase 'PLAYER_C02':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\tcrudh      : transManager.constants.crudh.create,\r\n\t\t\t\tsqlmapid   : \"SUP.C_setFileLog\",\r\n\t\t\t\tdatasetsend: \"dsFileLog\",\r\n\t\t\t});\r\n\t\t\tlet tp = params[1];\r\n\t\t\tlet nm = params[2];\r\n\t\t\ttransManager.addDataset('dsFileLog', [{MNU_ID:\"PLAYER\",TP_CD:tp, FILE_NM: nm}]);\r\n\t\t\t\r\n\t\t\ttransManager.agent();\r\n\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase 'PLAYER_R02':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.sftp);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.sttSearch,\r\n\t\t\t\tdatasetsend: \"dsInfo\",\r\n\t\t\t\tdatasetrecv:\"newPath\",\r\n\t\t\t});\r\n\r\n\t\t\ttransManager.addDataset('dsInfo', [{PATH: this.state.dsRcvSttJobData[0].FILE_PATH, USR_ID: ComLib.getSession(\"gdsUserInfo\")[0].USR_ID, ACT_TP: \"DOWNLOAD\"}]);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\tcase 'PLAYER_D01':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.sftp);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.sttSearch,\r\n\t\t\t\tdatasetsend: \"dsInfo\",\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsInfo', [{PATH: this.state.newPath, USR_ID: ComLib.getSession(\"gdsUserInfo\")[0].USR_ID, ACT_TP: \"D\"}]);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\ttransManager = null;\r\n\t}\r\n\tcallback = (res) => {\r\n\t\tswitch(res.id) {\r\n\t\tcase 'PLAYER_R00':\r\n\t\t\tif (res.data.dsRcvCallList.length < 1) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['콜데이터가 존재하지 않습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\tComLib.setStateRecords(this, \"dsRcvCallList\", res.data.dsRcvCallList, function (obj) {\r\n\t\t\t\tlet dsRcvCallList = res.data.dsRcvCallList;\r\n\t\t\t\tlet uuid = '';\r\n\t\t\t\tfor (let i = 0; i < dsRcvCallList.length; i ++) {\r\n\t\t\t\t\tif (dsRcvCallList[i].CALL_ID === obj.props.callId) {\r\n\t\t\t\t\t\tuuid = dsRcvCallList[i].STT_UNQ;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (obj.validation('PLAYER_R01')) {\r\n\t\t\t\t\tobj.handler.setDs('PLAYER_R01', uuid); \r\n\t\t\t\t}\r\n\t\t\t});\t\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\tcase 'PLAYER_R01':\r\n\t\t\tif (res.data.dsRcvSttJobData.length < 1) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['콜데이터가 존재하지 않습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (res.data.dsRcvSttJobData.length > 0) {\r\n\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\tthis.howler.stop();\r\n\t\t\t\t\tthis.howler = null;\r\n\t\t\t\t}\r\n\t\t\t\tlet srchText = \"\";\r\n\r\n\t\t\t\tif (!StrLib.isNull(this.props.options.srchText)) {\r\n\t\t\t\t\tsrchText = this.props.options.srchText.split(\" \")[0];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet dsRcvSttAnsData = JSON.parse(res.data.dsRcvSttJobData[0].STT_RSLT);\r\n\t\t\t\tlet maxIndex = 0;\r\n\t\t\t\tlet dsRcvMissSenData = res.data.dsRcvMissSenData\r\n\t\t\t\t\r\n\t\t\t\tif (StrLib.isNull(dsRcvSttAnsData)) {\r\n\t\t\t\t\tdsRcvSttAnsData= [];\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\tdsRcvSttAnsData[i].ACT_TP    = 'r';\r\n\t\t\t\t\tdsRcvSttAnsData[i].NEW_VALUE = \"\";\r\n\t\t\t\t\tdsRcvSttAnsData[i].NEW_SPK   = \"\";\r\n\t\t\t\t\tdsRcvSttAnsData[i].STT_UNQ   = res.data.dsRcvSttJobData[0].STT_UNQ;\r\n\t\t\t\t\tif (dsRcvSttAnsData[i].IDX > maxIndex ) {\r\n\t\t\t\t\t\tmaxIndex = dsRcvSttAnsData[i].IDX;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\tfor (let j = 0; j < dsRcvMissSenData.length; j ++) {\t\t\t\t\t\r\n\t\t\t\t\tlet rcvMissMatched = false;\r\n\t\t\t\t\tlet rcvMiss = dsRcvMissSenData[j];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\t\tif (dsRcvSttAnsData[i].IDX === rcvMiss.SORT_ORD) {\r\n\t\t\t\t\t\t\tdsRcvSttAnsData[i].NEW_VALUE = rcvMiss.ANS_SENT_CONT;\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tdsRcvSttAnsData[i].NEW_SPK   = rcvMiss.ANS_SPK_TP;\r\n\t\t\t\t\t\t\tdsRcvSttAnsData[i].ACT_TP    = rcvMiss.ACT_TP;\r\n\t\t\t\t\t\t\tdsRcvSttAnsData[i].UNQ       = rcvMiss.UNQ;\r\n\r\n\t\t\t\t\t\t\trcvMissMatched = true;\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!rcvMissMatched) {\r\n\t\t\t\t\t\tlet missStartLocation = rcvMiss.SENT_ST_TM;\r\n\t\t\t\t\t\tlet missIndex = 0\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\t\t\tif (dsRcvSttAnsData[i].POS_START > missStartLocation) {\r\n\t\t\t\t\t\t\t\tmissIndex = i;\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdsRcvSttAnsData.splice(missIndex, 0, {UNQ: rcvMiss.UNQ, IDX: rcvMiss.SORT_ORD, VALUE: '',NEW_VALUE: rcvMiss.ANS_SENT_CONT, ACT_TP: rcvMiss.ACT_TP, POS_START: rcvMiss.SENT_ST_TM, POS_END: rcvMiss.SENT_ED_TM, SPK:'', NEW_SPK: rcvMiss.ANS_SPK_TP, STT_UNQ: rcvMiss.STT_UNQ });\r\n\t\t\t\t\t\tmaxIndex = rcvMiss.SORT_ORD + 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet dsKeywordList = res.data.dsKeywordList;\r\n\r\n\t\t\t\tfor (let i = 0; i < dsKeywordList.length; i ++) {\r\n\t\t\t\t\tlet cnt = 0;\r\n\t\t\t\t\tlet regexAll = new RegExp(dsKeywordList[i].KWD, \"g\");\r\n\r\n\t\t\t\t\tfor (let j = 0; j < dsRcvSttAnsData.length; j ++) {\r\n\t\t\t\t\t\tlet text = dsRcvSttAnsData[j].VALUE\r\n\t\t\t\t\t\tlet results = text.match(regexAll); \r\n\t\t\t\t\t\tif (results !== null) {\r\n\t\t\t\t\t\t\tcnt += results.length;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdsKeywordList[i].KWD = dsKeywordList[i].KWD + \"(\" + cnt + \")\";\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t//howler : sound\r\n\t\t\t\t\t// \tdsKeywordList : res.data.dsKeywordList\r\n\t\t\t\t\t// ,\tdsRcvSttData : res.data.dsRcvSttData\r\n\t\t\t\t\tplayable : false,\r\n\t\t\t\t\tplaying : false,\r\n\t\t\t\t\tdsRcvSttJobData : res.data.dsRcvSttJobData,\r\n\t\t\t\t\tdsRcvSttAnsData : dsRcvSttAnsData,\r\n\t\t\t\t\tdsRcvSttAnsDataOrg : JSON.parse(JSON.stringify(dsRcvSttAnsData)),\r\n\t\t\t\t\tmissSenEdited : false,\r\n\t\t\t\t\tnewIndex: maxIndex + 1,\r\n\t\t\t\t\tdsKeywordList: dsKeywordList,\r\n\t\t\t\t\tselKeywordData: [{value : '', name : '선택'}],\r\n\t\t\t\t\tsrchText : srchText\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t// 데모 시연용 실시간도 24 번 서버에 올라가있음 \r\n\t\t\t\t\tif (this.props.options.JOB_TP === 'C' || this.props.options.JOB_TP === 'R' ) {\r\n\t\t\t\t\t// if (this.props.options.JOB_TP === 'C') {\r\n\t\t\t\t\t\tthis.transaction(\"PLAYER_R02\");\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// src : [res.data.dsRcvSttJobData[0].FILE_PATH],\r\n\t\t\t\t\t\t// src : [\"http://172.16.0.30:8080/home/vrm/work/2019010110151000270.wav\"]\r\n\t\t\t\t\t\tthis.howler = new Howl({\r\n\t\t\t\t\t\t\tsrc : [res.data.dsRcvSttJobData[0].FILE_PATH],\r\n\t\t\t\t\t\t\tformat : ['mp3', 'wav', 'mp4'],\r\n\t\t\t\t\t\t\thtml5: true,\r\n\t\t\t\t\t\t\t// preload : true,\r\n\t\t\t\t\t\t\tonplay : this.event.player.onPlay,\r\n\t\t\t\t\t\t\tonload : this.event.player.onLoad,\r\n\t\t\t\t\t\t\tonloaderror  : this.event.player.onLoadError,\r\n\t\t\t\t\t\t\tonpause: this.event.player.onPause,\r\n\t\t\t\t\t\t\tonend: this.event.player.onEnd,\r\n\t\t\t\t\t\t\tonstop : this.event.player.onStop\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tif (!StrLib.isNull(this.state.srchText)) {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t});\t\t\t\t\r\n\t\t\t} \r\n\t\t\t\t\t\t\r\n\t\t\t// this.setWaveForm(res.data.dsRcvSttData[0].FILE_PATH);\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'PLAYER_R02':\t\t\r\n\t\t\tthis.howler = new Howl({\r\n\t\t\t\tsrc : [res.data.newPath],\r\n\t\t\t\tformat : ['mp3', 'wav', 'mp4'],\r\n\t\t\t\t// html5: true,\r\n\t\t\t\t// preload : true,\r\n\t\t\t\tonplay : this.event.player.onPlay,\r\n\t\t\t\tonload : this.event.player.onLoad,\r\n\t\t\t\tonloaderror  : this.event.player.onLoadError,\r\n\t\t\t\tonpause: this.event.player.onPause,\r\n\t\t\t\tonend: this.event.player.onEnd,\r\n\t\t\t\tonstop : this.event.player.onStop\r\n\t\t\t});\r\n\t\t\tif (!StrLib.isNull(this.state.srchText)) {\r\n\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t}\r\n\t\t\tthis.setState({...this.state, newPath : res.data.newPath});\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'PLAYER_C01':\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['오인신 문장이 제출 되었습니다.']);\r\n\t\t\tthis.howler.stop();\r\n\t\t\tthis.transaction('PLAYER_R01'); \r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\tevent = {\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptPlayerBar' :\r\n\t\t\t\t\tif (!this.howler) return;\r\n\t\t\t\t\tlet time = (e.target.value * this.state.duration / 100);\r\n\t\t\t\t\tif (!this.state.playing) {\r\n\t\t\t\t\t\tthis.setState({playing : true}, () => {\r\n\t\t\t\t\t\t\tthis.howler.seek(time);\r\n\t\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.howler.seek(time);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptSrchText' :\r\n\t\t\t\t\tif (this.state.dsKeywordList.filter(item => item['KWD'] === e.target.value).length === 0) {\r\n\t\t\t\t\t\tthis.setState({srchText : e.target.value , selKeyword : ''});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({srchText : e.target.value , selKeyword : e.target.value});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'iptVolumBar' :\r\n\t\t\t\t\tif (!this.howler) return;\r\n\t\t\t\t\tthis.setState({ volume: parseFloat(e.target.value) }, () => this.howler.volume(this.state.volume));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSrchText' :\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\t\tif (this.state.currentIndex < this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex+1);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (this.state.currentIndex === this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'selKeywordType' :\r\n\t\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['정지 후 플레이어를 검색하기 바랍니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({ selKeywordType : e.target.value, selKeywordColor: ComLib.getComCodeCdVal('STT_SYS_KWD', e.target.value, 'KWD_TP')}, () => {\r\n\t\t\t\t\t\t\tlet keywordList = this.state.dsKeywordList;\r\n\r\n\t\t\t\t\t\t\tlet selKeywordData = [{value : '', name : '선택'}].concat(keywordList.map((item) => {\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!StrLib.isNull(e.target.value)) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (item.KWD_TP === e.target.value) {\r\n\t\t\t\t\t\t\t\t\t\treturn { value : item['KWD'], name : item['KWD']}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({...this.state, selKeywordData : selKeywordData.filter(item=> item !== null && item !== undefined)})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selVolume' :\r\n\t\t\t\t\tif (!this.howler) return;\r\n\t\t\t\t\tthis.setState({rate : e.target.value}, () => this.howler.rate(this.state.rate));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'selKewordList' :\r\n\t\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['정지 후 플레이어를 검색하기 바랍니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet text = e.target.value.substring(0, e.target.value.indexOf('('));\r\n\r\n\t\t\t\t\t\tthis.setState({ selKeyword : e.target.value, srchText : text }, () => {\r\n\t\t\t\t\t\t\tdocument.getElementById('iptSrchText').focus();\r\n\t\t\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\t\t\tif (this.state.currentIndex < this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex+1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (this.state.currentIndex === this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnCommitMisSen' :\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet ansData = this.state.dsRcvSttAnsData;\r\n\t\t\t\t\tlet orgAnsData = this.state.dsRcvSttAnsDataOrg\r\n\t\t\t\t\tlet newAnsData = [];\r\n\t\t\t\t\tlet updateAnsData = [];\r\n\t\t\t\t\tlet deleteAnsData = [];\r\n\r\n\t\t\t\t\tfor (let i = 0; i < ansData.length; i ++) {\r\n\t\t\t\t\t\tlet orgExist = false;\r\n\t\t\t\t\t\tlet newData  = false;\r\n\t\t\t\t\t\tlet chagned  = false;\r\n\t\t\t\t\t\tlet deleted  = false;\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < orgAnsData.length; j ++) {\t\t\r\n\t\t\t\t\t\t\tif (ansData[i].IDX === orgAnsData[j].IDX) {\r\n\t\t\t\t\t\t\t\torgExist = true;\r\n\r\n\t\t\t\t\t\t\t\tif (orgAnsData[j].ACT_TP !== 'r' && (orgAnsData[j].NEW_VALUE !== ansData[i].NEW_VALUE || orgAnsData[j].NEW_SPK !== ansData[i].NEW_SPK))\t{\r\n\t\t\t\t\t\t\t\t\tif (ansData[i].ACT_TP === 'e') {\r\n\t\t\t\t\t\t\t\t\t\tdeleted = true;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tchagned = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t} else if (orgAnsData[j].NEW_VALUE !== ansData[i].NEW_VALUE || orgAnsData[j].NEW_SPK !== ansData[i].NEW_SPK) {\r\n\t\t\t\t\t\t\t\t\tnewData = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (deleted) {\r\n\t\t\t\t\t\t\tdeleteAnsData.push(ansData[i]);\r\n\r\n\t\t\t\t\t\t} else if (chagned) {\r\n\t\t\t\t\t\t\tupdateAnsData.push(ansData[i]);\r\n\r\n\t\t\t\t\t\t} else if (!orgExist || (orgExist && newData)) {\r\n\t\t\t\t\t\t\tnewAnsData.push(ansData[i])\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (newAnsData.length > 0 || updateAnsData.length > 0 || deleteAnsData.length > 0) {\r\n\t\t\t\t\t\tthis.setState({...this.state, dsNewMissSen : newAnsData, dsUpdateMissSen : updateAnsData, dsDeleteMissSen : deleteAnsData}, () => {\r\n\t\t\t\t\t\t\tthis.transaction('PLAYER_C01');\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t \r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnPlayerPrev' :\r\n\t\t\t\t\tif (!this.howler) return;\r\n\t\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\t\tif (this.howler.seek() < 10) {\r\n\t\t\t\t\t\t\tthis.howler.seek(0);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.howler.seek(this.howler.seek() - 10);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({playing : true}, () => {\r\n\t\t\t\t\t\t\tif (this.howler.seek() < 10) {\r\n\t\t\t\t\t\t\t\tthis.howler.seek(this.howler.seek() - 10);\r\n\t\t\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.howler.seek(this.howler.seek() - 10);\r\n\t\t\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnPlayerPlay' : \r\n\t\t\t\t\tif (!this.howler) return;\r\n\t\t\t\t\tthis.setState({ playing : !this.state.playing }, () => (this.state.playing) ? this.howler.play() : this.howler.pause()); break;\r\n\t\t\t\tcase 'btnPlayerAfter' :\r\n\t\t\t\t\tif (!this.howler) return;\r\n\t\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\t\tif (this.howler.seek() + 10 > this.state.duration) {\r\n\t\t\t\t\t\t\tthis.howler.seek(this.state.duration);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.howler.seek(this.howler.seek() + 10);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({playing : true}, () => {\r\n\t\t\t\t\t\t\tif (this.howler.seek()+ 10 > this.state.duration) {\r\n\t\t\t\t\t\t\t\tthis.howler.seek(this.state.duration);\r\n\t\t\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.howler.seek(this.howler.seek() + 10);\r\n\t\t\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSrchTextUp' :\r\n\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\tif (this.state.currentIndex > 0) {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex-1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (this.state.currentIndex === 0) {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.searchedIndex.length-1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSrchTextDown' :\r\n\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\tif (this.state.currentIndex < this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex+1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (this.state.currentIndex === this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnClearText' :\r\n\t\t\t\t\tthis.setState({srchText : '', searchText : null, searchedIndex : [], currentIndex: 0});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnCopyAllText' :\r\n\t\t\t\t\tif (this.state.dsRcvSttJobData.length === 0) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['표시된 대화가 없습니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet txtArr = this.state.dsRcvSttJobData[0]['STT_RSLT'];\r\n\t\t\t\t\t\tif (txtArr === undefined || txtArr.length === 0) return false;\t\t\r\n\r\n\t\t\t\t\t\tComLib.copyText(JSON.parse(txtArr).map((item, key) => {\r\n\t\t\t\t\t\t\tlet text = \"\";\r\n\t\t\t\t\t\t\ttext += (item[\"SPK\"] === \"A\" ? \"[상담사]\" : \"[고객]\");\r\n\t\t\t\t\t\t\ttext += \"[\" + this.handler.format(item[\"POS_START\"]/100) + \"]\";\r\n\t\t\t\t\t\t\ttext += item['VALUE'];\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t\tif (!this.props.options.useUuid) {\r\n\t\t\t\t\t\t\tthis.transaction(\"PLAYER_C02\",\"CP\",\"CALL_ID_\" + this.props.options.callId);\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.transaction(\"PLAYER_C02\",\"CP\",\"UUID_\" + this.props.options.UUID);\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSaveAllText' :\r\n\t\t\t\t\tif (this.state.dsRcvSttJobData.length === 0) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['표시된 대화가 없습니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet txtArr = this.state.dsRcvSttJobData[0]['STT_RSLT'];\r\n\t\t\t\t\t\tif (txtArr === undefined || txtArr.length === 0) return false;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (!this.props.options.useUuid) {\r\n\t\t\t\t\t\t\tComLib.writeTxtFile(JSON.parse(txtArr).map((item, key) => {\r\n\t\t\t\t\t\t\t\tlet text = \"\";\r\n\t\t\t\t\t\t\t\ttext += (item[\"SPK\"] === \"A\" ? \"[상담사]\" : \"[고객]\");\r\n\t\t\t\t\t\t\t\ttext += \"[\" + this.handler.format(item[\"POS_START\"]/100) + \"]\";\r\n\t\t\t\t\t\t\t\ttext += item['VALUE'];\r\n\t\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t\t}).join(\"\\r\\n\"), \"CALL_ID_\" + this.props.options.callId + \".txt\" )\r\n\t\t\t\t\t\t\tthis.transaction(\"PLAYER_C02\",\"DL\",\"CALL_ID_\" + this.props.options.callId + '.txt');\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tComLib.writeTxtFile(JSON.parse(txtArr).map((item, key) => {\r\n\t\t\t\t\t\t\t\tlet text = \"\";\r\n\t\t\t\t\t\t\t\ttext += (item[\"SPK\"] === \"A\" ? \"[상담사]\" : \"[고객]\");\r\n\t\t\t\t\t\t\t\ttext += \"[\" + this.handler.format(item[\"POS_START\"]/100) + \"]\";\r\n\t\t\t\t\t\t\t\ttext += item['VALUE'];\r\n\t\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t\t}).join(\"\\r\\n\"), \"UUID_\" + this.props.options.UUID + \".txt\" )\r\n\t\t\t\t\t\t\tthis.transaction(\"PLAYER_C02\",\"DL\",\"UUID_\" + this.props.options.UUID + '.txt');\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// 텍스트 파일 저장 DB 추가\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnOpenGrid' :\r\n\t\t\t\t\tthis.setState({ listOpen : !this.state.listOpen });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tplayer : {\r\n\t\t\tonLoad : () => {\r\n\t\t\t\tthis.setState({playable: true, duration : this.howler.duration()} , () => {\r\n\t\t\t\t\tif (this.props.optionalTime !== undefined && this.props.optionalTime !== null && this.props.optionalTime !== -1) {\r\n\t\t\t\t\t\tif (!this.state.playing) {\r\n\t\t\t\t\t\t\tthis.setState({ playing : true }, () => {\r\n\t\t\t\t\t\t\t\tthis.howler.seek(this.props.optionalTime/100);\r\n\t\t\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.howler.seek(this.props.optionalTime/100);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tonLoadError : (id, code) => {\r\n\t\t\t\tconsole.log(\"howler onLoadError\");\r\n\t\t\t\tconsole.log(this.howler)\r\n\t\t\t\tconsole.log(id)\r\n\t\t\t\tconsole.log(code)\r\n\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['녹취파일 다운로드에 실패하였습니다.']);\r\n\t\t\t\tthis.setState({playable: false, duration : this.howler.duration()});\r\n\t\t\t},\r\n\t\t\tonPlay : () => {\r\n\t\t\t\tif (this.state.playable) {\r\n\t\t\t\t\tthis.setState({playing : true});\r\n\t\t\t\t\tthis.handler.renderSeekPos();\r\n\t\t\t\t}\r\n\t\t\t}, \r\n\t\t\tonPause : () => {\r\n\t\t\t\tthis.setState({playing : false});\r\n\t\t\t},\r\n\t\t\tonStop : () => {\r\n\t\t\t\t//this.setState({ playing : false });\r\n\t\t\t},\r\n\t\t\tonEnd : () => {\r\n\t\t\t\tthis.setState({ playing: false, loadingFinish : true });\r\n\t\t\t},\r\n\t\t\tonClickListTime : (idx, pos, e) => {\r\n\t\t\t\te.stopPropagation();\r\n\t\t\t\tif (!this.howler || !this.state.playable) return;\r\n\t\t\r\n\t\t\t\tif (!this.state.playing) {\r\n\t\t\t\t\tthis.setState({playing : true}, () => {\r\n\t\t\t\t\t\tthis.howler.seek(pos/100);\r\n\t\t\t\t\t\tthis.howler.play();\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.howler.seek(pos/100);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonClickListValue : (idx, value, newValue, ACT_TP, spk) => {\r\n\t\t\t\tif (this.props.options.disAllowEdit) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif (!StrLib.isNull(this.state.openId)) {\r\n\t\t\t\t\tdocument.body.removeChild(document.getElementById(this.state.openId));\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet chagned = StrLib.isNull(newValue) ? value : newValue;\r\n\t\t\t\tlet option = { width: '500px', height: '350px', modaless: false,\r\n\t\t\t\t\t\t\tparam: [{\r\n\t\t\t\t\t\t\t\tINDEX: idx,\r\n\t\t\t\t\t\t\t\tVALUE: value,\r\n\t\t\t\t\t\t\t\tNEW_VALUE: chagned,\r\n\t\t\t\t\t\t\t\tTYPE: ACT_TP,\r\n\t\t\t\t\t\t\t\tSPK: spk\r\n\t\t\t\t\t\t\t}],\r\n\t\t\t\t\t\t};\r\n\t\t\t\tlet openId = ComLib.openPop('AnswerArea', '오인식 문장 등록 : ' + this.props.callId, option, this.handler.setMissSen);\r\n\r\n\t\t\t\tthis.setState({...this.state, openId: openId})\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid : {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase \"grdPlayerList\":\r\n\t\t\t\t\t\tthis.grdPlayerList = e.grid;\r\n\t\t\t\t\t\tthis.grdPlayerListApi = e.gridApi;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdPlayerList\":\r\n\t\t\t\t\tthis.howler.stop();\r\n\t\t\t\t\tthis.handler.setDs('PLAYER_R01', e.data['STT_UNQ']);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tswitch : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'swchAnswerArea' :\r\n\t\t\t\t\tthis.setState({ openAnswerArea : !this.state.openAnswerArea}, () => {\r\n\t\t\t\t\t\t// 화면 조정\r\n\t\t\t\t\t\tif (this.props.popupdivid) {\r\n\t\t\t\t\t\t\tif (this.state.openAnswerArea) {\r\n\t\t\t\t\t\t\t\tlet numberWidth = Number(this.props.options.width.split('px')[0]);\r\n\t\t\t\t\t\t\t\tnumberWidth = numberWidth * 2;\r\n\t\t\t\t\t\t\t\tdocument.getElementById(this.props.popupdivid + \"_inner_div\").style.width = numberWidth.toString() + 'px';\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdocument.getElementById(this.props.popupdivid + \"_inner_div\").style.width = this.props.options.width;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\twaveform : {\r\n\t\t\tonChange: (pos) => {\r\n\t\t\t\tif (!this.howler) return;\r\n\t\t\t\tthis.howler.seek(Math.round(pos * this.state.duration));\r\n\t\t\t\tif (!this.state.playing) {\r\n\t\t\t\t\tthis.setState({ playing: true }, () => this.howler.play());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\thandler = {\r\n\t\tinitialize : () => {\r\n\t\t\tif (this.props.options.useUuid) {\r\n\t\t\t\tif (this.validation('PLAYER_R01')) {\r\n\t\t\t\t\tthis.transaction('PLAYER_R01'); \r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\t\t\t\t\r\n\t\t\t\tthis.transaction('PLAYER_R00');\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetDs : (serviceid, uuid) => {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'PLAYER_R01' :\r\n\t\t\t\tif (!this.props.options.useUuid) {\r\n\t\t\t\t\tthis.grdPlayerListApi.forEachNode((node, index) => {\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (StrLib.isNull(uuid)) {\r\n\t\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\t\tnode.setSelected(true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (node['data']['STT_UNQ'] === uuid) {\r\n\t\t\t\t\t\t\t\tnode.setSelected(true);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tthis.transaction('PLAYER_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t},\r\n\t\trenderSeekPos : () => {\r\n\t\t\tif (this.howler === null ) {\r\n\t\t\t\tcancelAnimationFrame(requestAnimationFrame(this.handler.renderSeekPos));\r\n\t\t\t} else {\r\n\t\t\t\tlet index, item, location, matched;\r\n\t\t\r\n\t\t\t\tmatched  = JSON.parse(this.state.dsRcvSttJobData[0]['STT_RSLT']).filter(item => ((item.POS_START/100) <= this.howler.seek()) && ((item.POS_END/100) > this.howler.seek()));\r\n\t\t\t\tif (matched.length === 0) {\r\n\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tindex = matched[0]['IDX'];\r\n\t\t\t\t\titem = document.getElementById(playerConstants.listItemDivId.item + index.toString() + this.props.ctrNo);\r\n\t\t\r\n\t\t\t\t\tif (item.style.backgroundColor === playerConstants.itemBgColor.default) {\r\n\t\t\t\t\t\t// bgcolor 초기화\r\n\t\t\t\t\t\tJSON.parse(this.state.dsRcvSttJobData[0]['STT_RSLT']).forEach(item => {\r\n\t\t\t\t\t\t\tif (document.getElementById(playerConstants.listItemDivId.item + item['IDX'].toString() + this.props.ctrNo).style.backgroundColor !== playerConstants.itemBgColor.default) {\r\n\t\t\t\t\t\t\t\tdocument.getElementById(playerConstants.listItemDivId.item + item['IDX'].toString() + this.props.ctrNo).style.backgroundColor = playerConstants.itemBgColor.default;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t// matching 된 list만 색변경\r\n\t\t\t\t\t\titem.style.backgroundColor = playerConstants.itemBgColor.selected;\r\n\t\t\r\n\t\t\t\t\t\t// matched된 list의 scroll위치 조정\r\n\t\t\t\t\t\tlocation = item.offsetTop - document.getElementById(playerConstants.listItemDivId.container + this.props.ctrNo).offsetTop - 200;\r\n\t\t\t\t\t\tif (location < 0 ) location = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// scroll 이동\r\n\t\t\t\t\t\tdocument.getElementById(playerConstants.listItemDivId.container + this.props.ctrNo).scrollTop = location;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\t\tif (this.howler.seek() === this.state.duration || !this.state.playing) {\r\n\t\t\t\t\tcancelAnimationFrame(requestAnimationFrame(this.handler.renderSeekPos));\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({ seek: this.howler.seek() });\r\n\t\t\t\t\trequestAnimationFrame(this.handler.renderSeekPos);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tformat : (seconds) => {\r\n\t\t\tconst date = new Date(seconds * 1000)\r\n\t\t\tconst hh = date.getUTCHours();\r\n\t\t\tconst mm = date.getUTCMinutes();\r\n\t\t\tconst ss = this.handler.pad(date.getUTCSeconds());\r\n\t\t\tif (hh) {\r\n\t\t\t  return `${hh}:${this.handler.pad(mm)}:${ss}`;\r\n\t\t\t}\r\n\t\t\treturn `${mm}:${ss}`;\r\n\t\t},\r\n\t\tpad : (string) => { return ('0' + string).slice(-2); },\r\n\t\tgetSrchMarker : (txt, srchTxt) => {\r\n\t\t\tlet txtArr;\r\n\t\t\tif (StrLib.isNull(srchTxt)) {\r\n\t\t\t\treturn txt;\r\n\t\t\t}\r\n\t\t\tif (txt.includes(srchTxt)) {\r\n\t\t\t\ttxtArr = txt.replaceAll(srchTxt, '$' + srchTxt + '$').split('$');\r\n\t\t\t\treturn ( \r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{txtArr.map((item, index) => { return ((item === srchTxt) ? <mark key={index} style={{color: 'white', backgroundColor: 'black'}}>{item}</mark> : item);})}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn txt;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetKewordMark : (txt) => {\r\n\t\t\tif (this.state.dsKeywordList.length === 0) return txt;\r\n\t\t\tlet txtArr, tmpText;\r\n\t\r\n\t\t\ttmpText = txt;\r\n\r\n\t\t\tthis.state.dsKeywordList.forEach( item => {\r\n\t\t\t\tlet testKwd = item['KWD'].substring(0, item['KWD'].indexOf('('));\r\n\r\n\t\t\t\tif (tmpText.includes(testKwd)) {\r\n\t\t\t\t\ttmpText = tmpText.replaceAll(testKwd, '$' + testKwd + '$');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\ttxtArr = tmpText.split('$');\r\n\t\r\n\t\t\treturn txtArr.map(\r\n\t\t\t\ttext => {\r\n\r\n\t\t\t\t\tif (this.state.dsKeywordList.filter(item => item['KWD'].substring(0, item['KWD'].indexOf('(')) === text).length > 0) {\r\n\t\t\t\t\t\treturn this.state.dsKeywordList.filter(item => item['KWD'].substring(0, item['KWD'].indexOf('(')) === text).map(\r\n\t\t\t\t\t\t\t(ele, index) => {\r\n\t\t\t\t\t\t\t\tlet selectBoxClass = \" scrm-react-custom-selectbox-\" + ComLib.getComCodeCdVal('STT_SYS_KWD', ele['KWD_TP'], 'KWD_TP');\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn <font key={index} className={selectBoxClass}> { this.handler.getSrchMarker(text, this.state.searchText) } </font>;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.handler.getSrchMarker(text, this.state.searchText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t},\r\n\t\tgetKeywords : () => {\r\n\t\t\tif (this.state.dsRcvSttJobData.length === 0 )return null;\r\n\t\t\tif (this.state.dsKeywordList.length === 0) return null;\r\n\t\r\n\t\t\tlet kewordList = [];\r\n\t\t\tJSON.parse(this.state.dsRcvSttJobData[0]['STT_RSLT']).forEach(\r\n\t\t\t\t(item) => {\r\n\t\t\t\t\treturn this.state.dsKeywordList.forEach(ele => {\r\n\t\t\t\t\t\tif (item['VALUE'].includes(ele['KWD'])) {\r\n\t\t\t\t\t\t\tkewordList.push({ keyword: ele['KWD'], type : ele['KWD_TP'] });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>{\r\n\t\t\t\t\tkewordList.map(\r\n\t\t\t\t\t\t(item, index) => {\r\n\t\t\t\t\t\t\tswitch (item['type']) {\r\n\t\t\t\t\t\t\t\tcase \"P\": return <span key={index} className=\"scrm-player-kewords-list-item warn\"> {item['keyword']} </span>;\r\n\t\t\t\t\t\t\t\tcase \"I\": return <span key={index} className=\"scrm-player-kewords-list-item issue\"> {item['keyword']} </span>;\r\n\t\t\t\t\t\t\t\tdefault: return <span key={index} className=\"scrm-player-kewords-list-item default\"> {item['keyword']} </span>;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}</React.Fragment>\r\n\t\t\t);\r\n\t\t},\r\n\t\tsearchText : (txt, idx) => {\r\n\t\t\t// 플레이어가 재생중인 지 확인\r\n\t\t\tif (this.state.playing) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['정지 후 플레이어를 검색하기 바랍니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// 텍스트 초기화\r\n\t\t\tif (StrLib.isNull(txt)) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['텍스트가 없습니다.']);\r\n\t\t\t\tthis.setState({ searchText: txt, searchedIndex : 0, currentIndex : 0})\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// 선택된 텍스트만 마킹\r\n\t\t\tlet searched  = JSON.parse(this.state.dsRcvSttJobData[0]['STT_RSLT']).filter(item => item['VALUE'].includes(txt));\t\t\t\r\n\t\t\tif (searched.length === 0) {\r\n\t\t\t\tthis.setState({searchText: txt, searchedIndex : 0, currentIndex : 0});\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['일치하는 텍스트가 없습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tlet cntDupSearched = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < searched.length; i ++) {\r\n\t\t\t\t\tlet regexAll = new RegExp(txt, \"g\");\r\n\t\t\t\t\tlet cnt = searched[i].VALUE.match(regexAll); \r\n\r\n\t\t\t\t\tfor (let j = 0; j < cnt.length; j ++) {\r\n\t\t\t\t\t\tcntDupSearched.push(searched[i]);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ searchText: txt, searchedIndex : cntDupSearched, currentIndex : idx }, () => this.handler.moveListItem());\r\n\t\t\t}\r\n\t\t},\r\n\t\tmoveListItem : () => {\r\n\t\t\tlet location, item;\r\n\t\t\titem = document.getElementById(playerConstants.listItemDivId.item + this.state.searchedIndex[this.state.currentIndex]['IDX'].toString() + this.props.ctrNo);\r\n\t\t\tlocation = item.offsetTop - document.getElementById(playerConstants.listItemDivId.container + this.props.ctrNo).offsetTop - 10;\r\n\t\r\n\t\t\tif (location < 0 ) location = 0;\r\n\t\r\n\t\t\tdocument.getElementById(playerConstants.listItemDivId.container + this.props.ctrNo).scrollTop = location;\r\n\t\t},\r\n\t\tsetMissSen : (e) => {\r\n\t\t\tlet state = this.state;\r\n\t\t\tif (e.type === 'noChange') {\r\n\t\t\t\tstate.openId = '';\r\n\t\t\t} else if (e.type === 'update') {\r\n\t\t\t\tfor (let i = 0; i < state.dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\tif (state.dsRcvSttAnsData[i].IDX === e.index) {\r\n\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_VALUE = e.value;\r\n\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_SPK   = e.spk;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (state.dsRcvSttAnsData[i].ACT_TP !== 'c') {\r\n\t\t\t\t\t\t\tlet ACT_TP = 'c'\r\n\t\t\t\t\t\t\tfor (let j = 0; j < state.dsRcvSttAnsDataOrg.length; j ++) {\r\n\t\t\t\t\t\t\t\tif (state.dsRcvSttAnsDataOrg[j].IDX === e.index) {\r\n\t\t\t\t\t\t\t\t\tif (state.dsRcvSttAnsDataOrg[j].VALUE === e.value && state.dsRcvSttAnsDataOrg[j].NEW_SPK === e.spk ) {\r\n\t\t\t\t\t\t\t\t\t\tACT_TP = 'r'\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tACT_TP = 'u'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tstate.dsRcvSttAnsData[i].ACT_TP = ACT_TP;\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (e.type === 'reset') {\r\n\t\t\t\tif (StrLib.isNull(e.value)) {\r\n\t\t\t\t\tfor (let i = 0; i < state.dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\t\tif (state.dsRcvSttAnsData[i].IDX === e.index) { \r\n\t\t\t\t\t\t\tlet orgExist = false;\r\n\r\n\t\t\t\t\t\t\tfor (let j = 0; j < state.dsRcvSttAnsDataOrg.length; j ++) {\t\t\r\n\t\t\t\t\t\t\t\tif (state.dsRcvSttAnsData[i].IDX === state.dsRcvSttAnsDataOrg[j].IDX) {\r\n\t\t\t\t\t\t\t\t\torgExist = true;\r\n\t\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\tif (orgExist) {\r\n\t\t\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_VALUE = \"\";\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tstate.dsRcvSttAnsData[i].ACT_TP = 'e';\t\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tstate.dsRcvSttAnsData.splice(i, 1);\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (let i = 0; i < state.dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\t\tif (state.dsRcvSttAnsData[i].IDX === e.index) {\r\n\t\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_VALUE = \"\";\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_SPK   = state.dsRcvSttAnsData[i].SPK;\t\t\t\t\t\r\n\t\t\t\t\t\t\tstate.dsRcvSttAnsData[i].ACT_TP = 'r';\t\t\r\n\t\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else if (e.type === 'new') {\r\n\t\t\t\tfor (let i = 0; i < state.dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\tif (state.dsRcvSttAnsData[i].IDX === e.index) {\r\n\t\t\t\t\t\tstate.dsRcvSttAnsData.splice(i + 1, 0, {IDX: state.newIndex, VALUE: '',NEW_VALUE: e.value, ACT_TP: 'c', POS_START: state.dsRcvSttAnsData[i].POS_START + 1, POS_END: state.dsRcvSttAnsData[i].POS_END + 2, NEW_SPK: e.spk, STT_UNQ: state.dsRcvSttAnsData[i].STT_UNQ });\r\n\t\t\t\t\t\tstate.newIndex += 1;\r\n\t\t\t\t\t\tbreak;\t\t\t\t\t\r\n\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tfor (let i = 0; i < state.dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\tif (state.dsRcvSttAnsData[i].IDX === e.index) {\r\n\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_VALUE = e.value;\r\n\t\t\t\t\t\tstate.dsRcvSttAnsData[i].NEW_SPK   = e.spk;\r\n\t\t\t\t\t\tstate.dsRcvSttAnsData[i].ACT_TP = 'd';\t\t\t\r\n\t\t\t\t\t\tbreak;\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState(state, () => {\r\n\t\t\t\tlet dsRcvSttAnsData = this.state.dsRcvSttAnsData;\r\n\t\t\t\tlet dsRcvSttAnsDataOrg = this.state.dsRcvSttAnsDataOrg;\r\n\t\t\t\tlet changed = false;\r\n\r\n\t\t\t\tfor (let i = 0; i < dsRcvSttAnsData.length; i ++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (JSON.stringify(dsRcvSttAnsData[i]) !== JSON.stringify(dsRcvSttAnsDataOrg[i])) {\r\n\t\t\t\t\t\tchanged = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tthis.setState({...this.state, openId: '', missSenEdited: changed}, () =>{\r\n\r\n\t\t\t\t})\r\n\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t}\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div style={{display: 'flex', width: '100%'}}>\r\n\t\t\t\t\t<div className=\"scrm-player-wrap\" style={{width : (this.state.openAnswerArea) ? '50%' : '100%'}}>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t{!this.props.options.useUuid ?\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnOpenGrid\"} onClick={this.event.button.onClick} size=\"xs\" innerImage={true} icon = {(this.state.listOpen) ? 'arrowUp' : 'arrowDn'} />\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t{!this.props.options.useUuid ?\r\n\t\t\t\t\t\t\t\t<div style = {{display : (this.state.listOpen) ? 'block' : 'none' }}>\r\n\t\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\t\tid={'grdPlayerList'} height= {\"140px\"}\r\n\t\t\t\t\t\t\t\t\t\tnoName = {true}\r\n\t\t\t\t\t\t\t\t\t\theader = {[\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\t\tfield: 'CONST_NM',\t\tcolId: 'CONST_NM', width : '100', textAlign : 'center'},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '등록일시',\t\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM', textAlign : 'center', width : '180'}, \r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '통화시간',\t\tfield: 'REC_TM',\t\tcolId: 'REC_TM', textAlign : 'center', width : '130'},\r\n\t\t\t\t\t\t\t\t\t\t\t{headerName: '통화종류',\t\tfield: 'CALL_TP',\t\tcolId: 'CALL_TP', textAlign : 'center', width : '130', valueFormatter : (params) => { return ComLib.getComCodeName('CMN', params.value,'CALL_TP')}, resizable : false},\r\n\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\trowNum = {false}\r\n\t\t\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsRcvCallList}\r\n\t\t\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\t\t\t// paging = {true}\r\n\t\t\t\t\t\t\t\t\t\t// infinite = {true}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\t\t\t\t\t\t\t\t\t\t// infoCheckBox = {{ use : true }}\r\n\t\t\t\t\t\t\t\t\t\trowSelection = 'single'\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\tnull\t\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t<input\tclassName='scrm-player-playbar' type='range' min={0} max={100} step='any'\r\n\t\t\t\t\t\t\t\t\tid = \"iptPlayerBar\" value = {(this.state.duration) ? (this.state.seek / this.state.duration * 100) : 0}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnPlayerPrev\"} onClick={this.event.button.onClick} color={\"blue\"} size=\"xs\" innerImage={true} icon = {'undo'} ml=\"5px\" tooltip={\"10초 이전\"} disabled = {!this.state.playable}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnPlayerPlay\"} onClick={this.event.button.onClick} color={\"green\"} size=\"xs\" innerImage={true} icon = {(!this.state.playing) ? 'play': 'pause'} ml=\"5px\" tooltip={(!this.state.playing) ? '재생': '정지'} disabled = {!this.state.playable}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnPlayerAfter\"} onClick={this.event.button.onClick} color={\"blue\"} size=\"xs\" innerImage={true} icon = {'redo'} ml=\"5px\" tooltip={\"10초 이후\"} disabled = {!this.state.playable}/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tid = {'selVolume'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.rate}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {[\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value : 0.5, name : 'x0.5'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value : 1.0, name : 'x1'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value : 1.5, name : 'x1.5'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{value : 2.0, name : 'x2.0'},\r\n\t\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {50}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {!this.state.playable}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected = {1}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange= {this.event.select.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<input id={'iptVolumBar'} className = \"scrm-player-volumebar\" type='range' min='0' max='1' step='.05' value={this.state.volume} onChange={this.event.input.onChange} disabled = {!this.state.playable}/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<time dateTime={`P${Math.round(this.state.seek)}S`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.handler.format(this.state.seek)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</time>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{' / '}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<time dateTime={`P${Math.round(this.state.duration)}S`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{this.handler.format(Math.round(this.state.duration))}\r\n\t\t\t\t\t\t\t\t\t\t\t\t</time>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield width={140} id={\"iptSrchText\"} value={this.state.srchText} onChange={this.event.input.onChange} onKeyPress={this.event.input.onKeyPress}/>\r\n\t\t\t\t\t\t\t\t\t\t\t{ this.state.searchedIndex.length > 0  && ( \r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{alignItems:\"center\", display:\"flex\"}}> {this.state.currentIndex+1} / {this.state.searchedIndex.length} </div> \r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{alignSelf : \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnSrchTextUp\"} onClick={this.event.button.onClick} color={\"purple\"} size=\"xs\" innerImage={true} icon = {'arrowUp'} ml=\"5px\" tooltip={\"위로\"}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnSrchTextDown\"} onClick={this.event.button.onClick} color={\"purple\"} size=\"xs\" innerImage={true} icon = {'arrowDn'} ml=\"5px\" tooltip={\"아래로\"}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnClearText\"} onClick={this.event.button.onClick} color={\"red\"} size=\"xs\" innerImage={true} icon = {'close'} ml=\"5px\" mr=\"5px\" tooltip={\"초기화\"}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tid = {'selKeywordType'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selKeywordType}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList(\"STT_SYS_KWD\", \"KWD_TP\"), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {80}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected = {0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange= {this.event.select.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tid = {'selKewordList'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selKeyword}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selKeywordData}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected = {0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange= {this.event.select.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={this.state.selKeywordColor}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnCopyAllText\"} onClick={this.event.button.onClick} size=\"xs\" innerImage={true} icon = {'copy'} mt=\"5px\" tooltip={\"텍스트 복사\"}/>\r\n\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnSaveAllText\"} onClick={this.event.button.onClick} size=\"xs\" innerImage={true} icon = {'save'} mt=\"5px\" tooltip={\"텍스트 저장\"}/>\r\n\t\t\t\t\t\t\t\t\t\t{/* <Switch id={\"swchAnswerArea\"} onChange = {this.event.switch.onChange} checked = {this.state.openAnswerArea}/> */}\r\n\t\t\t\t\t\t\t\t\t\t{/* <button>{'정답지작성'}</button> */}\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t{this.state.missSenEdited ? \r\n\t\t\t\t\t\t\t\t\t<div style={{position: \"absolute\", zIndex: \"100\", marginTop: \"10px\", marginLeft: \"200px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnCommitMisSen\"} onClick={this.event.button.onClick} innerImage={true} fiiled=\"o\" color=\"purple\" icon = {'save'} value={'오인식 문장 제출'}/>\r\n\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<div className=\"scrm-player-body\" id={playerConstants.listItemDivId.container + this.props.ctrNo} style={{height : parseInt(this.props.bodyHeight.split('px')[0]) + ((this.state.listOpen) ? 0 : 125) + 'px', marginTop : '10px'}}>\r\n\t\t\t\t\t\t\t\t\t{this.state.missSenEdited ? \r\n\t\t\t\t\t\t\t\t\t\t<div style={{height: \"43px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t{this.state.dsRcvSttAnsData.filter(item => item['ACT_TP'] !== 'e').map((ele, index) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<div key={index} id={playerConstants.listItemDivId.item + (index+1).toString() + this.props.ctrNo} className=\"scrm-player-list-item-container\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className={StrLib.isNull(ele['NEW_SPK']) ? (ele['SPK'] !== 'A') ?  'scrm-player-list-item-client' : 'scrm-player-list-item-caller' : (ele['NEW_SPK'] !== 'A') ?  'scrm-player-list-item-client' : 'scrm-player-list-item-caller'}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-img-div\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span><i className=\"xi-message-o\"></i></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-contents\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-time-div\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='scrm-player-list-item-time' onClick={(e)=> {this.event.player.onClickListTime(ele.IDX, ele.POS_START, e)}}>{ this.handler.format(ele.POS_START/100) }</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-text-div\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span className='scrm-player-list-item-text' onClick={(e)=> {this.event.player.onClickListValue(ele.IDX, ele.VALUE, ele.NEW_VALUE, ele.ACT_TP, StrLib.isNull(ele.NEW_SPK) ? ele.SPK : ele.NEW_SPK)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.handler.getKewordMark(ele.VALUE)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ ele.ACT_TP === 'r'\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tele.ACT_TP !== 'd' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tele.VALUE !== ele.NEW_VALUE\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{color : 'red'}}>{'[오인식 문장]'}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span style={{color : 'red'}}>{'[발화자 변경]'}</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{ StrLib.isNull(ele.NEW_VALUE) \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div><span style={{color : 'red'}}>{ele.NEW_VALUE}</span></div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(!this.state.openAnswerArea)\r\n\t\t\t\t\t\t\t\t?\t\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t:\t\t\r\n\t\t\t\t\t\t\t\t<div className=\"scrm-player-wrap\" style={{width : (this.state.openAnswerArea) ? '50%' : '100%'}}>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<div style = {{width : this.props.options.width}}>\r\n\t\t\t\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-player-body\" id={playerConstants.listItemDivId.container2 + this.props.ctrNo} style={{height : parseInt(this.props.bodyHeight.split('px')[0]) + ((this.state.listOpen) ? 0 : 125) + 'px', marginTop : '10px'}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default Player;","import React from 'react';\r\nimport {ComLib, TransManager, StrLib, DataLib, newScrmObj} from 'common';\r\nimport {Selectbox, Textfield, LFloatArea, RFloatArea, RelativeGroup, ComponentPanel, FlexPanel, SubFullPanel, BasicButton, Checkbox, Label} from 'components';\r\nimport { indexOf } from 'lodash';\r\n\r\n\r\nconst playerConstants = {\r\n\titemBgColor :\t{ default : \"\", selected : 'rgb(233, 233, 233)' },\r\n\tlistItemDivId :\t{ container :'realTime_list_container_id', item : 'realTime_list_item_id' },\r\n\tmarkColor :\t\t{ default : '', marked : '' }\r\n}\r\n\r\nclass RealTimeViewer extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsRealTimeSentence : [],\r\n\t\t\tcsState: \"I\",\r\n\t\t\tsttUnq: \"\",\r\n\t\t\ttimeoutID: null,\r\n\t\t\tdsKeywordList : [],\r\n\t\t\tsrchText : '',\r\n\t\t\tsearchText : '',\r\n\t\t\tsearchedIndex : [],\r\n\t\t\tcurrentIndex : 0,\t\t\t\r\n\t\t\tselKeyword : '',\r\n\t\t\tselKeywordData: [{value : '', name : '선택'}],\r\n\t\t\tselKeywordType: '',\r\n\t\t\ttypeSelectedIndex: 0,\r\n\t\t\tlistSelectedIndex: 0,\r\n\t\t\tcheckboxProps : {\t\t\t\r\n\t\t\t\tchkAutoScroll : {\r\n\t\t\t\t\tid : 'chkAutoScroll',\r\n\t\t\t\t\tindex : 0,\r\n\t\t\t\t\tkeyProp : 'scVsCode',\r\n\t\t\t\t\tvalue : '자동 스크롤',\r\n\t\t\t\t\tchecked : 'Y',\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t};\t\t\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.input.onKeyPress = this.event.input.onKeyPress.bind(this);\r\n\t\tthis.event.select.onChange = this.event.select.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tconstCd : '_default',\r\n\t\tsttUnq : '_default',\r\n\t\tbodyHeight : '605px'\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.handler.initialize();\r\n\t}\r\n\tcomponentDidUpdate (prevProps, prevState) {\r\n\t\t// if (prevState === this.state) {\r\n\t\t// \tif (this.props.optionalTime !== undefined && this.props.optionalTime !== null) {\r\n\t\t// \t\tif (prevProps.optionalTime !== this.props.optionalTime) {\r\n\t\t// \t\t\tthis.optionalTime = this.props.optionalTime;\r\n\t\t// \t\t\tthis.handler.setDs('REAL_R01', this.props.callId);\r\n\t\t// \t\t}\r\n\t\t// \t}\r\n\t\t// }\r\n\t}\r\n\tcomponentWillUnmount () {\r\n\t\tclearTimeout(this.state.timeoutID);\r\n\t}\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'REAL_R00': \r\n\r\n\t\t\treturn true;\r\n\r\n\t\tcase 'REAL_R01':\r\n\r\n\t\t\treturn true;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'REAL_R00': \r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid: \"STT.R_getKeyword\",\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsKeywordList\",\r\n\t\t\t});\r\n\r\n\t\t\t// transManager.addConfig({\r\n\t\t\t// \tdao: transManager.constants.dao.base,\r\n\t\t\t// \tcrudh: transManager.constants.crudh.read,\r\n\t\t\t// \tsqlmapid: \"STT.R_getRealTimeSentence\",\r\n\t\t\t// \tdatasetsend:\"dsSrchData\",\r\n\t\t\t// \tdatasetrecv:\"dsRealTimeSentence\",\r\n\t\t\t// });\r\n\r\n\t\t\ttransManager.addDataset('dsSrchData', [{ EMPTY : \"\" }]);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'REAL_R01':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.realTime);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.realTime,\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsRealTimeSentence\",\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchData', [{ CONST_CD : this.props.constCd\r\n\t\t\t\t                                   , CONST_NM : this.props.constNm\r\n\t\t\t\t                                   , STT_UNQ  : this.props.sttUnq }]);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\tcase 'REAL_R02':\r\n\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\ttransManager.setProgress(false);\t\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.realTime);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.realTime,\r\n\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\tdatasetrecv:\"dsRealTimeSentence\",\r\n\t\t\t});\r\n\r\n\t\t\ttransManager.addDataset('dsSrchData', [{ CONST_CD : this.props.constCd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, CONST_NM : this.props.constNm\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, STT_UNQ  : this.state.sttUnq }]);\r\n\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\ttransManager = null;\r\n\t}\r\n\tcallback = (res) => {\r\n\t\tlet dsKeywordList = \"\";\r\n\t\tlet dsRealTimeSentence = \"\";\r\n\t\tlet lastSpk   = \"none\";\r\n\t\tlet lastIndex = this.state.lastIndex;\r\n\t\tlet sttUnq = \"\";\r\n\t\tlet timeoutID = \"\";\r\n\r\n\t\tswitch(res.id) {\r\n\t\tcase 'REAL_R00':\r\n\r\n\t\t\tdsKeywordList = res.data.dsKeywordList;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tdsKeywordList: dsKeywordList,\r\n\t\t\t\tselKeywordData: [{value : '', name : '선택'}],\r\n\t\t\t}, () => {this.transaction(\"REAL_R01\")});\t\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'REAL_R01':\r\n\t\t\tdsKeywordList      = this.state.dsKeywordList;\r\n\t\t\tdsRealTimeSentence = res.data.dsRealTimeSentence;\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < dsKeywordList.length; i ++) {\r\n\t\t\t\tlet cnt = 0;\r\n\t\t\t\tlet regexAll = new RegExp(dsKeywordList[i].KWD, \"g\");\r\n\t\t\t\t\r\n\t\t\t\tfor (let j = 0; j < dsRealTimeSentence.length; j ++) {\r\n\t\t\t\t\tlet text = dsRealTimeSentence[j].SENT_CONT\r\n\t\t\t\t\tlet results = text.match(regexAll); \r\n\r\n\t\t\t\t\tif (results !== null) {\r\n\t\t\t\t\t\tcnt += results.length;\r\n\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tdsKeywordList[i].KWD = dsKeywordList[i].KWD + \"(\" + cnt + \")\";\r\n\t\t\t}\r\n\r\n\t\t\ttimeoutID = setTimeout(() => {\r\n\t\t\t\tthis.transaction('REAL_R02');\r\n\t\t\t}, 3000);\r\n\r\n\t\t\tsttUnq = (this.props.sttUnq === res.data.sttUnq ? this.props.sttUnq : res.data.sttUnq);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\tdsKeywordList: dsKeywordList,\r\n\t\t\t\tsttUnq: sttUnq,\r\n\t\t\t\ttimeoutID : timeoutID,\r\n\t\t\t\tdsRealTimeSentence : dsRealTimeSentence,\r\n\t\t\t}, () => { \tif (this.state.checkboxProps.chkAutoScroll.checked === 'Y') {\r\n\t\t\t\t\t\t\tif (dsRealTimeSentence.length > 0) {\r\n\t\t\t\t\t\t\t\tthis.handler.moveToLastItem();\t\t\r\n\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t});\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\tcase 'REAL_R02':\r\n\t\t\tdsRealTimeSentence = res.data.dsRealTimeSentence;\r\n\t\t\tdsKeywordList      = this.state.dsKeywordList;\r\n\t\t\t\r\n\t\t\tif (dsRealTimeSentence.length !== this.state.dsRealTimeSentence.length || this.state.sttUnq !== res.data.sttUnq) {\r\n\t\t\t\tfor (let i = 0; i < dsKeywordList.length; i ++) {\r\n\t\t\t\t\tlet cnt = 0;\r\n\t\t\t\t\tlet regexAll = new RegExp(dsKeywordList[i].KWD.substring(0, dsKeywordList[i].KWD.indexOf(\"(\")), \"g\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let j = 0; j < dsRealTimeSentence.length; j ++) {\r\n\t\t\t\t\t\tlet text = dsRealTimeSentence[j].SENT_CONT\r\n\t\t\t\t\t\tlet results = text.match(regexAll); \r\n\t\r\n\t\t\t\t\t\tif (results !== null) {\r\n\t\t\t\t\t\t\tcnt += results.length;\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tdsKeywordList[i].KWD = dsKeywordList[i].KWD.substring(0, dsKeywordList[i].KWD.indexOf(\"(\")) + \"(\" + cnt + \")\";\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tsttUnq = this.state.sttUnq === res.data.sttUnq ? this.state.sttUnq : res.data.sttUnq;\r\n\r\n\t\t\ttimeoutID = setTimeout(() => {\r\n\t\t\t\tthis.transaction('REAL_R02');\r\n\t\t\t}, 3000);\r\n\r\n\t\t\tlet selKeywordTypeDataSet = ComLib.convComboList(ComLib.getCommCodeList(\"STT_SYS_KWD\", \"KWD_TP\"), newScrmObj.constants.select.argument.select);\r\n\t\t\tlet selKeywordData = [{value : '', name : '선택'}].concat(dsKeywordList.map((item) => {\t\r\n\t\t\t\tif (item.KWD_TP === selKeywordTypeDataSet[this.state.typeSelectedIndex].value) {\r\n\t\t\t\t\treturn { value : item['KWD'], name : item['KWD']}\r\n\t\t\t\t}\r\n\t\t\t}))\r\n\t\t\t\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tdsKeywordList: dsKeywordList,\r\n\t\t\t\tsttUnq: sttUnq,\r\n\t\t\t\ttimeoutID : timeoutID,\r\n\t\t\t\tcsState: res.data.csState,\r\n\t\t\t\tselKeywordData: selKeywordData.filter(item=> item !== null && item !== undefined),\r\n\t\t\t\tdsRealTimeSentence : dsRealTimeSentence }, () => { \t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.handler.refreshSearch();\t\r\n\t\t\t\t\tif (this.state.checkboxProps.chkAutoScroll.checked === 'Y') {\r\n\t\t\t\t\t\tif (dsRealTimeSentence.length > 0) {\r\n\t\t\t\t\t\t\tthis.handler.moveToLastItem();\t\t\r\n\r\n\t\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t});\r\n\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\tevent = {\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSrchText' :\r\n\t\t\t\t\tif (this.state.dsKeywordList.filter(item => item['KEY_WORD'] === e.target.value).length === 0) {\r\n\t\t\t\t\t\tthis.setState({srchText : e.target.value});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({srchText : e.target.value});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSrchText' :\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\t\tif (this.state.currentIndex < this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex+1);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (this.state.currentIndex === this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselect : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'selKeywordType' :\r\n\t\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['플래이어 정지 후 내용을 검색하기 바랍니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({ selKeywordType : e.target.value, typeSelectedIndex: e.target.selectedIndex, selKeywordColor: ComLib.getComCodeCdVal('STT_SYS_KWD', e.target.value, 'KWD_TP')}, () => {\r\n\t\t\t\t\t\t\tlet keywordList = this.state.dsKeywordList;\r\n\r\n\t\t\t\t\t\t\tlet selKeywordData = [{value : '', name : '선택'}].concat(keywordList.map((item) => {\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tif (!StrLib.isNull(e.target.value)) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (item.KWD_TP === e.target.value) {\r\n\t\t\t\t\t\t\t\t\t\treturn { value : item['KWD'], name : item['KWD']}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}))\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState({...this.state, selKeywordData : selKeywordData.filter(item=> item !== null && item !== undefined)})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selKewordList' :\r\n\t\t\t\t\tif (this.state.playing) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['정지 후 플레이어를 검색하기 바랍니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet text = e.target.value.substring(0, e.target.value.indexOf('('));\r\n\r\n\t\t\t\t\t\tthis.setState({ selKeyword : e.target.value, srchText : text, listSelectedIndex: e.target.selectedIndex}, () => {\r\n\t\t\t\t\t\t\tdocument.getElementById('iptSrchText').focus();\r\n\t\t\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\t\t\tif (this.state.currentIndex < this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex+1);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (this.state.currentIndex === this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnSrchTextUp' :\r\n\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\tif (this.state.currentIndex > 0) {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex-1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (this.state.currentIndex === 0) {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.searchedIndex.length-1);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSrchTextDown' :\r\n\t\t\t\t\tif (this.state.searchText === this.state.srchText) {\r\n\t\t\t\t\t\tif (this.state.currentIndex < this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, this.state.currentIndex+1);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (this.state.currentIndex === this.state.searchedIndex.length-1) {\r\n\t\t\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.handler.searchText(this.state.srchText, 0);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnClearText' :\r\n\t\t\t\t\tthis.setState({srchText : '', searchText : null, searchedIndex : [], currentIndex: 0});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnCopyAllText' :\r\n\t\t\t\t\tif (this.state.dsRealTimeSentence.length === 0) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['표시된 대화가 없습니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.copyText(this.state.dsRealTimeSentence.map((item, key) => {\r\n\t\t\t\t\t\t\tlet text = \"\";\r\n\t\t\t\t\t\t\ttext += (item[\"SPK_TP\"] === \"C\" ? \"[상담사]\" : \"[고객]\");\r\n\t\t\t\t\t\t\ttext += item['SENT_CONT'];\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}))\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSaveAllText' :\r\n\t\t\t\t\tif (this.state.dsRealTimeSentence.length === 0) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['표시된 대화가 없습니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.writeTxtFile(this.state.dsRealTimeSentence.map((item, key) => {\r\n\t\t\t\t\t\t\tlet text = \"\";\r\n\t\t\t\t\t\t\ttext += (item[\"SPK_TP\"] === \"C\" ? \"[상담사]\" : \"[고객]\");\r\n\t\t\t\t\t\t\ttext += item['SENT_CONT'];\r\n\t\t\t\t\t\t\treturn text;\r\n\t\t\t\t\t\t}).join(\"\\r\\n\"), this.props.constNm + \".txt\" )\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'chkAutoScroll' :\r\n\t\t\t\t\tif(e.checked) {\r\n\t\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t\t, checkboxProps: {...this.state.checkboxProps, chkAutoScroll : {...this.state.checkboxProps.chkAutoScroll,checked : (e.checked) ? 'Y' : 'N'}}\r\n\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t} else {\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t\t, checkboxProps: {...this.state.checkboxProps, chkAutoScroll : {...this.state.checkboxProps.chkAutoScroll, checked : (e.checked) ? 'Y' : 'N'}}\r\n\r\n\t\t\t\t\t\t});\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\thandler = {\r\n\t\t// method zone\r\n\t\tinitialize : () => {\r\n\t\t\tthis.transaction('REAL_R00');\r\n\t\t},\r\n\t\tsetDs : (serviceid, data) => {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'REAL_R01' :\r\n\t\t\t\tthis.grdPlayerListApi.forEachNode((node, index) => {\r\n\t\t\t\t\tif (StrLib.isNull(data)) {\r\n\t\t\t\t\t\tif (index === 0) {\r\n\t\t\t\t\t\t\tnode.setSelected(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (node['data']['CALL_ID'] === data) {\r\n\t\t\t\t\t\t\tnode.setSelected(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.transaction('REAL_R01');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetContents : (data) => {\r\n\t\t\tif (data.length === 0) return null;\r\n\t\t\treturn this.handler.getListItem(data);\r\n\t\t},\r\n\t\tgetListItem : (item) => {\r\n\r\n\t\t\treturn item.map((ele, index) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={index} id={playerConstants.listItemDivId.item + (index).toString()} className=\"scrm-player-list-item-container\">\r\n\t\t\t\t\t\t<div className={(ele['SPK_TP'] !== 'A') ?  'scrm-player-list-item-client' : 'scrm-player-list-item-caller'}>\r\n\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-img-div\">\r\n\t\t\t\t\t\t\t\t<span><i className=\"xi-message-o\"></i></span>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-contents\">\r\n\t\t\t\t\t\t\t\t{/* <div className=\"scrm-player-list-item-time-div\">\r\n\t\t\t\t\t\t\t\t\t<span className='scrm-player-list-item-time'>{ this.handler.format(ele.POS_START/100) }</span>\r\n\t\t\t\t\t\t\t\t</div> */}\r\n\t\t\t\t\t\t\t\t<div className=\"scrm-player-list-item-text-div\">\r\n\t\t\t\t\t\t\t\t\t<span className='scrm-player-list-item-text'>\r\n\t\t\t\t\t\t\t\t\t\t{ this.handler.getKewordMark(ele.SENT_CONT) }\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t\t}) ;\r\n\t\t},\r\n\t\tgetSrchMarker : (txt, srchTxt) => {\r\n\t\t\tlet txtArr;\r\n\t\t\tif (StrLib.isNull(srchTxt)) {\r\n\t\t\t\treturn txt;\r\n\t\t\t}\r\n\t\t\tif (txt.includes(srchTxt)) {\r\n\t\t\t\ttxtArr = txt.replace(srchTxt, '$' + srchTxt + '$').split('$');\r\n\t\t\t\treturn ( \r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t{txtArr.map((item, index) => { return ((item === srchTxt) ? <mark key={index} style={{color: 'white', backgroundColor: 'black'}}>{item}</mark> : item);})}\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\treturn txt;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetKewordMark : (txt) => {\r\n\t\t\tif (this.state.dsKeywordList.length === 0) return txt;\r\n\t\t\tlet txtArr, tmpText;\r\n\t\r\n\t\t\ttmpText = txt;\r\n\t\t\tthis.state.dsKeywordList.forEach( item => {\r\n\t\t\t\tif (tmpText.includes(item['KEY_WORD'])) {\r\n\t\t\t\t\ttmpText = tmpText.replace(item['KEY_WORD'], '$' + item['KEY_WORD'] + '$');\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttxtArr = tmpText.split('$');\r\n\t\r\n\t\t\treturn txtArr.map(\r\n\t\t\t\ttext => {\r\n\t\t\t\t\tif (this.state.dsKeywordList.filter(item => item['KEY_WORD'] === text).length > 0) {\r\n\t\t\t\t\t\treturn this.state.dsKeywordList.filter(item => item['KEY_WORD'] === text).map(\r\n\t\t\t\t\t\t\t(ele, index) => {\r\n\t\t\t\t\t\t\t\tif (ele['KEY_TYPE'] === 'P') {\r\n\t\t\t\t\t\t\t\t\treturn <font key={index} color=\"red\"> { this.handler.getSrchMarker(text, this.state.searchText) } </font>;\r\n\t\t\t\t\t\t\t\t} else if (ele['KEY_TYPE'] === 'I') {\r\n\t\t\t\t\t\t\t\t\treturn <font key={index} color=\"gray\"> {this.handler.getSrchMarker(text, this.state.searchText)} </font>;\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn <font key={index} color=\"green\"> {this.handler.getSrchMarker(text, this.state.searchText)} </font>;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.handler.getSrchMarker(text, this.state.searchText);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t},\r\n\t\tgetKeywords : () => {\r\n\t\t\tif (this.state.dsRcvSttJobData.length === 0 )return null;\r\n\t\t\tif (this.state.dsKeywordList.length === 0) return null;\r\n\t\r\n\t\t\tlet kewordList = [];\r\n\t\t\tJSON.parse(this.state.dsRcvSttJobData[0]['TEXT']).forEach(\r\n\t\t\t\t(item) => {\r\n\t\t\t\t\treturn this.state.dsKeywordList.forEach(ele => {\r\n\t\t\t\t\t\tif (item['VALUE'].includes(ele['KEY_WORD'])) {\r\n\t\t\t\t\t\t\tkewordList.push({ keyword: ele['KEY_WORD'], type : ele['KEY_TYPE'] });\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t\treturn (\r\n\t\t\t\t<React.Fragment>{\r\n\t\t\t\t\tkewordList.map(\r\n\t\t\t\t\t\t(item, index) => {\r\n\t\t\t\t\t\t\tswitch (item['type']) {\r\n\t\t\t\t\t\t\t\tcase \"P\": return <span key={index} className=\"scrm-player-kewords-list-item warn\"> {item['keyword']} </span>;\r\n\t\t\t\t\t\t\t\tcase \"I\": return <span key={index} className=\"scrm-player-kewords-list-item issue\"> {item['keyword']} </span>;\r\n\t\t\t\t\t\t\t\tdefault: return <span key={index} className=\"scrm-player-kewords-list-item default\"> {item['keyword']} </span>;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t)\r\n\t\t\t\t}</React.Fragment>\r\n\t\t\t);\r\n\t\t},\r\n\t\trefreshSearch : () => {\r\n\t\t\tif (StrLib.isNull(this.state.searchText)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t// 선택된 텍스트만 마킹\t\t\t\r\n\t\t\tlet searched  = this.state.dsRealTimeSentence.filter(item => item['SENT_CONT'].includes(this.state.searchText));\r\n\t\t\t\r\n\t\t\tif (searched.length === 0) {\r\n\t\t\t\tthis.setState({searchedIndex : 0, currentIndex : 0});\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tlet cntDupSearched = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < searched.length; i ++) {\r\n\t\t\t\t\tlet regexAll = new RegExp(this.state.searchText, \"g\");\r\n\t\t\t\t\tlet cnt = searched[i].SENT_CONT.match(regexAll); \r\n\r\n\t\t\t\t\tfor (let j = 0; j < cnt.length; j ++) {\r\n\t\t\t\t\t\tcntDupSearched.push(searched[i]);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({searchedIndex : cntDupSearched, currentIndex : ((cntDupSearched.length -1 < this.state.currentIndex) ? cntDupSearched.length : this.state.currentIndex)});\r\n\t\t\t}\r\n\t\t},\r\n\t\tsearchText : (txt, idx) => {\r\n\t\t\t// if (this.state.checkboxProps.chkAutoScroll.checked === 'Y') {\r\n\t\t\t// \tComLib.openDialog('A', 'SYSI0010', ['자동 스크롤 해체후 검색하기 바랍니다.']);\r\n\t\t\t// \treturn false;\r\n\t\t\t// }\r\n\t\t\t// 텍스트 초기화\r\n\t\t\tif (StrLib.isNull(txt)) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['텍스트가 없습니다.']);\r\n\t\t\t\tthis.setState({ searchText: txt, searchedIndex : 0, currentIndex : 0})\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\t// 선택된 텍스트만 마킹\t\t\t\r\n\t\t\tlet searched  = this.state.dsRealTimeSentence.filter(item => item['SENT_CONT'].includes(txt));\r\n\t\t\t\r\n\t\t\tif (searched.length === 0) {\r\n\t\t\t\tthis.setState({searchText: txt, searchedIndex : 0, currentIndex : 0});\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['일치하는 텍스트가 없습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t} else {\r\n\t\t\t\tlet cntDupSearched = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < searched.length; i ++) {\r\n\t\t\t\t\tlet regexAll = new RegExp(txt, \"g\");\r\n\t\t\t\t\tlet cnt = searched[i].SENT_CONT.match(regexAll); \r\n\r\n\t\t\t\t\tfor (let j = 0; j < cnt.length; j ++) {\r\n\t\t\t\t\t\tcntDupSearched.push(searched[i]);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({ searchText: txt, searchedIndex : cntDupSearched, currentIndex : idx }, () => {if (this.state.checkboxProps.chkAutoScroll.checked !== 'Y') {this.handler.moveListItem()}});\r\n\t\t\t}\r\n\t\t},\r\n\t\tmoveListItem : () => {\r\n\t\t\tlet location, item;\r\n\t\t\titem = document.getElementById(playerConstants.listItemDivId.item + this.state.searchedIndex[this.state.currentIndex]['IDX'].toString());\r\n\t\t\tlocation = item.offsetTop - document.getElementById(playerConstants.listItemDivId.container + this.props.constCd).offsetTop - 10;\r\n\t\r\n\t\t\tif (location < 0 ) location = 0;\r\n\t\r\n\t\t\tdocument.getElementById(playerConstants.listItemDivId.container + this.props.constCd).scrollTop = location;\r\n\t\t},\r\n\t\tmoveToLastItem : () => {\r\n\t\t\tlet item = document.getElementById(playerConstants.listItemDivId.item + this.state.dsRealTimeSentence[this.state.dsRealTimeSentence.length - 1]['IDX'].toString());\r\n\t\t\t// console.log(document.getElementById(playerConstants.listItemDivId.container + this.props.constCd) === null)\r\n\t\t\tdocument.getElementById(playerConstants.listItemDivId.container + this.props.constCd).scrollTop = item.offsetTop;\r\n\t\t}\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<div style={{display: 'flex', width: '100%'}}>\r\n\t\t\t\t\t<div className=\"scrm-player-wrap\" style={{width : '100%'}}>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t{this.state.csState === 'I' \r\n\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"통화중\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Label value=\"통화 종료\"/>\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox   \r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.checkboxProps.chkAutoScroll.id}\r\n\t\t\t\t\t\t\t\t\t\t\tkeyProp  = {this.state.checkboxProps.chkAutoScroll.keyProp}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.checkboxProps.chkAutoScroll.value}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked  = {this.state.checkboxProps.chkAutoScroll.checked}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.checkboxProps.chkAutoScroll.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.checkbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Textfield width={140} id={\"iptSrchText\"} value={this.state.srchText} onChange={this.event.input.onChange} onKeyPress={this.event.input.onKeyPress}/>\r\n\t\t\t\t\t\t\t\t\t\t\t{ this.state.searchedIndex.length > 0  && ( \r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{alignItems:\"center\", display:\"flex\"}}> {this.state.currentIndex+1} / {this.state.searchedIndex.length} </div> \r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t<div style={{alignSelf : \"center\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnSrchTextUp\"} onClick={this.event.button.onClick} color={\"purple\"} size=\"xs\" innerImage={true} icon = {'arrowUp'} ml=\"5px\" tooltip={\"위로\"}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnSrchTextDown\"} onClick={this.event.button.onClick} color={\"purple\"} size=\"xs\" innerImage={true} icon = {'arrowDn'} ml=\"5px\" tooltip={\"아래로\"}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnClearText\"} onClick={this.event.button.onClick} color={\"red\"} size=\"xs\" innerImage={true} icon = {'close'} ml=\"5px\" mr=\"5px\" tooltip={\"초기화\"}/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tid = {'selKeywordType'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selKeywordType}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList(\"STT_SYS_KWD\", \"KWD_TP\"), newScrmObj.constants.select.argument.select)}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {80}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected = {0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange= {this.event.select.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\tid = {'selKewordList'}\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selKeyword}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selKeywordData}\r\n\t\t\t\t\t\t\t\t\t\t\t\twidth = {100}\r\n\t\t\t\t\t\t\t\t\t\t\t\tselected = {0}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange= {this.event.select.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor={this.state.selKeywordColor}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnCopyAllText\"} onClick={this.event.button.onClick} size=\"xs\" innerImage={true} icon = {'copy'} mt=\"5px\" tooltip={\"텍스트 복사\"}/>\r\n\t\t\t\t\t\t\t\t\t\t<BasicButton id={\"btnSaveAllText\"} onClick={this.event.button.onClick} size=\"xs\" innerImage={true} icon = {'save'} mt=\"5px\" tooltip={\"텍스트 저장\"}/>\t\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t\t\t<div className=\"scrm-player-body\" id={playerConstants.listItemDivId.container + this.props.constCd} style={{height : this.props.bodyHeight, marginTop : '10px'}}>\r\n\t\t\t\t\t\t\t\t\t{this.handler.getContents(this.state.dsRealTimeSentence)}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* {\r\n\t\t\t\t\t\t(!this.state.openAnswerArea)\r\n\t\t\t\t\t\t?\tnull\r\n\t\t\t\t\t\t:\t<div style = {{width : this.props.options.width}}>\r\n\t\t\t\t\t\t\t\t<AnswerArea data = {JSON.parse(this.state.dsRcvSttJobData[0]['TEXT'])}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t} */}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default RealTimeViewer;","import React from 'react';\r\nimport { Progress } from \"react-sweet-progress\";\r\n\r\nclass ProgressBar extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-progress-div\">\r\n\t\t\t\t<Progress\ttype={this.props.options.type} percent={this.props.data} status={this.props.options.status}\r\n\t\t\t\t\t\t\ttheme={\r\n\t\t\t\t\t\t\t\t{ \r\n\t\t\t\t\t\t\t\t\tdefault : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'blue'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\terror : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'red'\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tsuccess : {\r\n\t\t\t\t\t\t\t\t\t\tsymbol: this.props.data + '%',\r\n\t\t\t\t\t\t\t\t\t\tcolor : 'green'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport default ProgressBar","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {TransManager, ComLib, StrLib} from 'common';\r\nimport {Checkbox, MultiCheckBox} from 'components';\r\nimport DropdownTreeSelect from 'react-dropdown-tree-select'\r\n\r\nclass TreeSelectbox extends React.Component {\t\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onAction = this.onAction.bind(this);\r\n\t\tthis.onNodeToggle = this.onNodeToggle.bind(this);\r\n\t\tthis.state = {\r\n\t\t\tdisabled: true,\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonChange : () => {return;},\r\n\t\tonAction : () => {return;},\r\n\t\tonNodeToggle : () => {return;},\r\n\t\tshowPartiallySelected: false,\r\n\t\tnoMatches: \"조회된 결과가 존재하지 않습니다.\",\r\n\t\tdisabled: false,\r\n\t\treadOnly: false,\r\n\t\tmode: \"radioSelect\",\r\n\t\twidth: \"200px\"\r\n\t}\r\n\t\r\n\tonChange = (e) => {\r\n\t\tlet rowId = \"\";\r\n\r\n\t\tif (e.checked) {\r\n\t\t\trowId = e.value;\r\n\t\t}\r\n\r\n\t\tthis.props.onChange({id: this.props.id, event: e, rowId: rowId});\r\n\t}\r\n\tonAction = (e) => {\r\n\t\tthis.props.onAction({id: this.props.id, event: e});\r\n\t\t\r\n\t}\r\n\tonNodeToggle = (e) => {\r\n\t\tthis.props.onNodeToggle({id: this.props.id, event: e});\r\n\t\t\r\n\t}\r\n\tchangeToTreeSelectData = (data, parentId, expandArr) => {\r\n\t\tconst records = data;\r\n\t\tlet newTreeData = [];\r\n\r\n\t\tfor (let i = 0; i < records.length; i ++) {\r\n\t\t\tif (records[i].PARENT_ID === parentId) {\r\n\t\t\t\tlet expand = false;\r\n\r\n\t\t\t\tfor (let j = 0; j < expandArr.length; j ++) {\r\n\t\t\t\t\tif (records[i].ID === expandArr[j] && records[i].ID !== this.props.value) {\r\n\t\t\t\t\t\texpand = true;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet checked = records[i].ID === this.props.value;\r\n\t\t\t\tlet temp = {label: records[i].LABEL, value: records[i].ID, children: [], isDefaultValue: records[i].DEFAULT, disabled: records[i].DISABLED, checked: checked, expanded: expand}\r\n\t\t\t\tnewTreeData.push(temp)\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < newTreeData.length; i ++) {\r\n\t\t\tlet tempChild = [];\r\n\r\n\t\t\tfor (let j = 0; j < records.length; j ++) {\r\n\t\t\t\tif (records[j].PARENT_ID === newTreeData[i].value) {\r\n\t\t\t\t\ttempChild = this.changeToTreeSelectData(data, newTreeData[i].value, expandArr)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\tnewTreeData[i].children\t= tempChild;\t\t\t\t\t\t\r\n\t\t}\r\n\r\n\t\treturn newTreeData;\r\n\t}\r\n\tmakeData = (data) => {\r\n\t\tlet parentArr = [];\r\n\r\n\t\tif (this.props.value !== \"\") {\r\n\t\t\tparentArr = ComLib.findParentOrg(this.props.value, [], data);\r\n\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tlet treeData = this.changeToTreeSelectData(data, null, parentArr)\r\n\t\t\t\r\n\t\treturn treeData;\r\n\t}\r\n\r\n\r\n\trender () {\t\t\r\n\t\tconst {noMatches, placeholder, data, showPartiallySelected, disabled, readOnly, mode, value} = this.props;\r\n\t\tlet text = {noMatches: noMatches};\r\n\r\n\t\tif (value === \"\") {\r\n\t\t\ttext.placeholder = placeholder;\r\n\t\t} else {\r\n\t\t\ttext.placeholder = \" \";\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t\r\n\t\t\t<div style={{width: this.props.width, height: \"31px\", paddingRight: \"5px\"}}>\r\n\t\t\t\t<DropdownTreeSelect\r\n\t\t\t\t\tdata = {data.length > 0 ? this.makeData(data) : []} \r\n\t\t\t\t\tonChange = {this.onChange} \r\n\t\t\t\t\tonAction = {this.onAction} \r\n\t\t\t\t\tonNodeToggle = {this.onNodeToggle} \r\n\t\t\t\t\tshowPartiallySelected = {showPartiallySelected}\r\n\t\t\t\t\tdisabled={disabled}\r\n\t\t\t\t\treadOnly={readOnly}\r\n\t\t\t\t\ttexts = {text}\r\n\t\t\t\t\tmode={mode} \r\n\t\t\t\t\tinlineSearchInput = {true}\r\n\t\t\t\t\tshowDropdown={true}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass Selectbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tselected : 0,\r\n\t\tcolor: null,\r\n\t\tonChange : () => {return;},\r\n\t\ttooltip : false\r\n\t\t}\r\n\tonChange = (e) => {\r\n\t\tthis.props.onChange({target : e.target, id : this.props.id});\r\n\t}\r\n\trender () {\r\n\t\tlet selectBoxClass = \"\";\r\n\t\t\r\n\t\tif (this.props.color !== null) {\r\n\t\t\tselectBoxClass = \"scrm-react-custom-selectbox-\" + this.props.color;\r\n\t\t}\r\n\t\t\r\n\t\treturn (\r\n\r\n\t\t\t!this.props.tooltip ?\r\n\t\t\t\t<div className=\"scrm-select-div\" style={{width : this.props.width}}>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\tvalue = {this.props.value} \r\n\t\t\t\t\t\tdisabled = {\r\n\t\t\t\t\t\t\t(StrLib.isNull(this.props.controlOrgCombo))\r\n\t\t\t\t\t\t\t? this.props.disabled\r\n\t\t\t\t\t\t\t: ComLib.setDisableByAuth(this.props.controlOrgCombo, this.props.isQaCombo)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tclassName={selectBoxClass}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t> \r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tthis.props.dataset.filter(item=> item.value !== null && item.value !== undefined).map((prop, key) => {\r\n\t\t\t\t\t\t\t\treturn (<option value={prop.value} key={prop.value + '_' + key} >{prop.name}</option>);\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</div>\r\n\t\t\t\t:\r\n\t\t\t\t<div data-tip={this.props.tooltipCont}>\r\n\t\t\t\t\t<div className=\"scrm-select-div\" style={{width : this.props.width}}>\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\t\t\tvalue = {this.props.value} \r\n\t\t\t\t\t\t\tdisabled = {\r\n\t\t\t\t\t\t\t\t(StrLib.isNull(this.props.controlOrgCombo))\r\n\t\t\t\t\t\t\t\t? this.props.disabled\r\n\t\t\t\t\t\t\t\t: ComLib.setDisableByAuth(this.props.controlOrgCombo, this.props.isQaCombo)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tclassName={selectBoxClass}\r\n\t\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\t> \r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.dataset.filter(item=> item.value !== null && item.value !== undefined).map((prop, key) => {\r\n\t\t\t\t\t\t\t\t\treturn (<option value={prop.value} key={prop.value + '_' + key} >{prop.name}</option>);\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t);\r\n\t}\r\n}\r\nclass CentListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = { type : 'A' }\r\n\tcomponentDidMount () {\r\n\t\tthis.getCentList();\r\n\t}\r\n\tgetCentList = async() => {\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('CENTLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getCentComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsCentComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ SRCH_YN : 'Y' }]);\r\n\t\t\tconst res = await transManager.agent();\r\n\r\n\t\t\tif ( res.data.dsCentComboInfo.length === 0 ) {\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({...this.state, comboItem : res.data.dsCentComboInfo.map((item) => { return { value : item.CENT_CD , name : item.CENT_NM }; })});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/>);\r\n\t}\r\n}\r\nclass TeamListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { comboItem : [] }\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getTeamList(this.props.centCd);\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd) {\r\n\t\t\tthis.getTeamList(this.props.centCd);\r\n\t\t}\r\n\t}\r\n\tgetTeamList = async() => {\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('TEAMLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getTeamComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsTeamComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\r\n\t\t\tif (res.data.dsTeamComboInfo.length === 0) {\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsTeamComboInfo.map((item) => { return { value : item.TEAM_CD , name : item.TEAM_NM }; })});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange={this.props.onChange}/> );\r\n\t}\r\n}\r\nclass UsrListSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomboItem : []\r\n\t\t}\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tthis.getUserList();\r\n\t}\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (prevProps.centCd !== this.props.centCd || prevProps.teamCd !== this.props.teamCd) {\r\n\t\t\tthis.getTeamList();\r\n\t\t}\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tcentCd : '',\r\n\t\tteamCd : '',\r\n\t\ttype : 'A'\r\n\t}\r\n\tgetUserList = async() => {\r\n\t\ttry {\r\n\t\t\tlet transManager = new TransManager();\r\n\t\t\ttransManager.setTransId('USERLIST_R01');\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\tsqlmapid:\"COM.R_getUsrComboInfo\",\r\n\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\tdatasetrecv:\"dsUsrComboInfo\"\r\n\t\t\t});\r\n\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ CENT_CD : this.props.centCd, TEAM_CD : this.props.teamCd }]);\r\n\t\t\tlet res = await transManager.agent();\r\n\r\n\t\t\tif (res.data.dsUsrComboInfo.length === 0) {\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({ ...this.state, comboItem : res.data.dsUsrComboInfo.map((item) => { return { value : item.USR_CD , name : item.USR_NM }; })});\r\n\t\t\t}\r\n\t\t} catch (e) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn ( <Selectbox type={this.props.type} id = {this.props.id} value = {this.props.value} options = {this.state.comboItem} onChange = {this.props.onChange}/> );\r\n\t}\r\n}\r\nclass MulitSelectBox extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tlet text = '...';\r\n\t\tif (this.props.dataset.length !== 0) {\r\n\t\t\tif (this.props.dataset.filter(item => item['value'] === 'Y').length === this.props.dataset.length) {\r\n\t\t\t\ttext = '전체선택';\r\n\t\t\t} else {\r\n\t\t\t\ttext = this.props.dataset.filter(item => item['value'] === 'Y').map(element => { return element[this.props.value]}).toString();\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.state = {\r\n\t\t\texpended : false,\r\n\t\t\ttext : text,\r\n\t\t\tbaseOption : {\r\n\t\t\t\tkeyProp : 'all_check',\r\n\t\t\t\tvalue : '전체선택',\r\n\t\t\t\tchecked : 'N'\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.onCheckAll = this.onCheckAll.bind(this);\r\n\t\tthis.onCheckboxClick = this.onCheckboxClick.bind(this);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tdocument.addEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tdocument.removeEventListener('click', this.handleClickOutside, true);\r\n\t}\r\n\thandleClickOutside = (e) => {\r\n\t\tconst domNode = ReactDOM.findDOMNode(this);\r\n\t\tif ( !domNode || !domNode.contains(e.target) ) {\r\n\t\t\tdocument.getElementById(this.props.id).style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended : false});\r\n\t\t}\r\n\t}\r\n\topenCheckbox = () => {\r\n\t\tlet checkboxes = document.getElementById(this.props.id);\r\n\t\tif (!this.state.expended) {\r\n\t\t\tcheckboxes.style.display = \"block\";\r\n\t\t\tthis.setState({...this.state, expended: true});\r\n\t\t} else {\r\n\t\t\tcheckboxes.style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended: false});\r\n\t\t}\r\n\t}\r\n\tonCheckAll = (e) => {\r\n\t\tthis.setState({...this.state\r\n\t\t\t, text: (e.checked) ? '전체선택' : '...'\r\n\t\t\t, baseOption : {...this.state.baseOption, checked : (e.checked) ? 'Y' : 'N'}\r\n\t\t}, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\tdataset : this.props.dataset.map((item) =>{ item['value'] = (e.checked) ? 'Y' : 'N'; return item;})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\tonChange = (e) => {\r\n\t\tswitch (e.target.id) {\r\n\t\t\tcase  \"multiselect_\" + this.props.id + '_head' :\r\n\t\t\t\tconsole.log('all check box');\r\n\t\t\t\tbreak;\r\n\t\t\tcase  \"multiselect_\" + this.props.id :\r\n\t\t\t\tconsole.log('single check box');\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\tonCheckboxClick = (e) => {\r\n\t\tlet rtnText = null;\r\n\t\tlet checkedList = null;\r\n\t\tif (e.target.checked) {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' || item === this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t} else {\r\n\t\t\tcheckedList = this.props.dataset.filter(item => item['value'] === 'Y' && item !== this.props.dataset[e.index]).map((item) => { return item[this.props.value] });\r\n\t\t}\r\n\t\tif (checkedList.length === this.props.dataset.length) {\r\n\t\t\trtnText  = '전체선택';\r\n\t\t} else {\r\n\t\t\tif (checkedList.length === 0) {\r\n\t\t\t\trtnText  = '...';\r\n\t\t\t} else {\r\n\t\t\t\trtnText = checkedList.toString();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({ ...this.state,  text :  rtnText,  baseOption : {...this.state.baseOption, checked : (checkedList.length === this.props.dataset.length) ? 'Y' : 'N'}}\r\n\t\t, () => {\r\n\t\t\tthis.props.onChange({\r\n\t\t\t\tid : this.props.id,\r\n\t\t\t\ttarget : e.target,\r\n\t\t\t\tdataset : this.props.dataset.map((item, index) => {\r\n\t\t\t\t\tif (index === e.index) {\r\n\t\t\t\t\t\titem['value'] = (e.checked) ? 'Y' : 'N';\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn item;\r\n\t\t\t\t})\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className=\"scrm-react-mulitlselect\">\r\n\t\t\t\t<div className= { (this.props.disabled) ? \"scrm-react-mulitlselect-selectbox-disabled\" : \"scrm-react-mulitlselect-selectbox\"}\r\n\t\t\t\t\t onClick={(this.props.disabled) ? (e) => { return null; } : this.openCheckbox} style={{width: this.props.width, display: 'flex'}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"scrm-react-mulitlselect-selectbox-label\" style={{width: this.props.width}}>\r\n\t\t\t\t\t\t<span>{this.state.text}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width:'10px', float: 'right', marginRight: '5px', verticalAlign: \"middle\"}}>\r\n\t\t\t\t\t\t<i className={(this.state.expended) ? \"arrow up\" : \"arrow down\"}></i>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"scrm-react-mulitselect-checkbox\" id= {this.props.id} style={{width: this.props.width, height: this.props.displayCount * 20 + 'px'}}>\r\n\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\tid = {\"multiselect_\" + this.props.id + '_head'}\r\n\t\t\t\t\t\tkeyProp = {\"multiselect_baseOpt_\" + this.props.id}\r\n\t\t\t\t\t\tvalue = {this.state.baseOption.value}\r\n\t\t\t\t\t\tchecked = {this.state.baseOption.checked}\r\n\t\t\t\t\t\tonClick = {this.onCheckAll}\r\n\t\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MultiCheckBox\r\n\t\t\t\t\t\tid= {\"multiselect_\" + this.props.id}\r\n\t\t\t\t\t\tdataset = {this.props.dataset}\r\n\t\t\t\t\t\tkeyProp = {this.props.keyProp}\r\n\t\t\t\t\t\tvalue = {this.props.value}\r\n\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\tonClick = {this.onCheckboxClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {Selectbox, MulitSelectBox, CentListSelectBox, TeamListSelectBox, UsrListSelectBox, TreeSelectbox};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Slider from \"react-slick\";\r\nimport axios from 'axios';\r\n\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport {newScrmObj, ComLib} from 'common';\r\n\r\nclass SlidePreview extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\topen: false,\r\n\t\tfilepath : '',\r\n\t\tonClose : () => {return false;}\r\n\t};\r\n\tstatic propTypes = {\r\n\t\topen : PropTypes.bool.isRequired,\r\n\t\tonClose: PropTypes.func.isRequired\r\n\t};\r\n\tonClick = () => { this.props.onClose();};\r\n\trender () {\r\n\t\treturn (\r\n\t\t   <div className='scrm-slide-preview modal' style={{display: (this.props.open) ? 'block' : 'none'}}>\r\n\t\t\t\t<span className=\"scrm-slide-preview close\" onClick ={this.onClick}>&times;</span>\r\n\t\t\t\t<img className=\"scrm-slide-preview img\" src={process.env.API_URL + '/img/' + this.props.name} alt=''/>\r\n\t\t\t\t<div id=\"scrm-slide-preview caption\">{}</div>\r\n\t\t   </div> \r\n\t\t)\r\n\t}\r\n}\r\n\r\nclass SlideContainer extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\text : {\r\n\t\t\t\tdoc : ['doc', 'docx', 'hwp', 'txt'],\r\n\t\t\t\txls : ['xls', 'xlsx'],\r\n\t\t\t\tppt : ['ppt', 'pptx'],\r\n\t\t\t\tpdf : ['pdf'],\r\n\t\t\t\timg : ['gif', 'bmp', 'png', 'jpg', 'jpeg', 'jp2', 'j2c', 'jpx', 'jpf', 'jpc', 'j2k', 'tif']\r\n\t\t\t}\r\n\t\t}\r\n\t\tthis.onDownload = this.onDownload.bind(this);\r\n\t\tthis.onPreview = this.onPreview.bind(this);\r\n\t}\r\n\tonDownload = async() => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'get',\r\n\t\t\turl: process.env.API_URL + '/scrm/mfu/files/' + this.props.name,\r\n\t\t\theaders: { \r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t},\r\n\t\t\tresponseType: 'blob'\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = await axios(reqOptions);\r\n\t\t\tconst url = window.URL.createObjectURL(new Blob([resData.data]));\r\n\t\t\tconst link = document.createElement('a');\r\n\t\t\tlink.href = url;\r\n\t\t\tlink.setAttribute('download', this.props.name); //or any other extension\r\n\t\t\tdocument.body.appendChild(link);\r\n\t\t\tlink.click();\r\n\t\t\tdocument.body.removeChild(link);\r\n\t\t} catch (err) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\tonPreview = () => {\r\n\t\tif ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n\t\t\tlet dialog = document.createElement('div');\r\n\t\t\tdialog.id = newScrmObj.constants.mdi.DIALOG;\r\n\t\t\tdocument.body.appendChild(dialog);\r\n\t\t}\r\n\t\tReactDOM.render(\r\n\t\t\t<SlidePreview   open={true} url={this.props.url} name={this.props.name} onClose={ () => { ReactDOM.unmountComponentAtNode(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t\t\t\t,   document.getElementById(newScrmObj.constants.mdi.DIALOG) \r\n\t\t);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className ='scrm-slide-container' style={{padding: '1px', width: (this.props.height * 0.9)+ 'px', height: (this.props.height * 0.9)+ 'px'}}>\r\n\t\t\t\t\t<div className ='scrm-slide-main'  onClick = {this.onPreview} style={{height: ((this.props.height * 0.9) - 20)+ 'px'}}>\r\n\t\t\t\t\t\t<span>{this.props.name}</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"scrm-slider-download\" onClick = {this.onDownload} style={{height: '20px'}}>\r\n\t\t\t\t\t\t<img id='imgDownload' src={'/images/download.png'} alt='' width=\"20px\"/>\r\n\t\t\t\t\t\t<span>DOWNLOAD</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass CustomSlide extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.onSelectPrev = this.onSelectPrev.bind(this);\r\n\t\tthis.onSelectNext = this.onSelectNext.bind(this);\r\n\t}\r\n\tstatic defaultProps = { height: 200 }\r\n\tsetSlideInfo = (props) => {\r\n\t\tlet info = [];\r\n\t\treturn info;\r\n\t}\r\n\tsetSlideContent = (item) => {\r\n\t\treturn (\r\n\t\t\titem.map((data, idx) => {\r\n\t\t\t\treturn <SlideContainer key={'_slidsContainer_' + idx} name={data.FILE_NM} url={ process.env.API_URL + 'img/' + data.FILE_NM } height={this.props.height}/>\r\n\t\t\t})\r\n\t\t);\r\n\t}\r\n\tonDownloadAll = () => {\r\n\t}\r\n\tonSelectPrev = () => { this.slider.slickPrev(); }\r\n\tonSelectNext = () => { this.slider.slickNext(); }\r\n\trender() {\r\n\t\tconst settings = {\r\n\t\t\t\tdots: true\r\n\t\t\t,   slidesToShow: Number(this.props.data.length) <= 5 ? this.props.data.length : 5\r\n\t\t\t,   slidesToScroll: 1\r\n\t\t\t,   initialSlide: 0\r\n\t\t\t,   speed: 500 \r\n\t\t\t,   responsive: [\r\n\t\t\t\t\t{ breakpoint: 1024, settings: { slidesToShow: 3, slidesToScroll: 1, infinite: true, dots: true}}\r\n\t\t\t\t,   { breakpoint: 600, settings: { slidesToShow: 2, slidesToScroll: 1 }}\r\n\t\t\t\t,   { breakpoint: 480, settings: { slidesToShow: 1, slidesToScroll: 1 }}\r\n\t\t\t  ]\r\n\t\t};\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div style={{display : 'flex', width: '100%', height: this.props.height + 'px'}}>\r\n\t\t\t\t\t<div className='scrm-slide-prev' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectPrev}>\r\n\t\t\t\t\t\t<h1>&#10094;</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div style={{width : \"80%\"}}>\r\n\t\t\t\t\t\t<Slider ref={c => (this.slider = c)} {...settings}>\r\n\t\t\t\t\t\t\t{this.setSlideContent(this.props.data)}\r\n\t\t\t\t\t\t</Slider>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='scrm-slide-next' style={{width : \"10%\", textAlign: 'center', top: '50%', left: '50%'}} onClick = {this.onSelectNext}>\r\n\t\t\t\t\t\t<h1>&#10095;</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default CustomSlide;","import React from 'react';\r\n\r\nclass Switch extends React.Component {\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<label className=\"scrm-switch-label\">\r\n\t\t\t\t<input className=\"scrm-switch-input\" id={this.props.id} type=\"checkbox\" onChange ={this.props.onChange.bind(this)} checked = {this.props.checked}/>\r\n\t\t\t\t<span className=\"scrm-switch-span\"/>\r\n\t\t\t</label>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Switch;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Tabs extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tonClick : PropTypes.func.isRequired,\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\tactive: (React.Children.toArray(this.props.children).length === 0) \r\n\t\t\t\t\t? 0 \r\n\t\t\t\t\t: React.Children.toArray(this.props.children).filter(child => child.props.display !== 'none')[0].props.index };\r\n\t}\r\n\tstatic defaultProps = {\r\n\t\tonClick : (e) => {return false;}\r\n\t}\r\n\tonClickTab = (index) => {\r\n\t\tthis.setState({ active: index });\r\n\t\tthis.props.onClick(index);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div style={{marginBottom: '50px'}}>\r\n\t\t\t\t\t<ul className ='scrm-tabs-ul'>\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tReact.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((tab) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Tab id={this.props.id} tabWidth= {this.props.tabWidth} active ={this.state.active} key ={tab.props.index} index= {tab.props.index} label = {tab.props.label} onClick = {this.onClickTab}/>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t\t\r\n\t\t\t\t\t{   \r\n\t\t\t\t\t\tReact.Children.toArray(this.props.children).filter(child => child.props.display !== 'none').map((child, index) => {\r\n\t\t\t\t\t\t\tlet display = \"block\";\r\n\t\t\t\t\t\t\tif (child.props.index !== this.state.active) {\r\n\t\t\t\t\t\t\t\tdisplay = \"none\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn <div key={index} className='scrm-tab-container' style={{height: this.props.height, display: display}}>{child.props.children}</div>;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n} \r\nclass Tab extends React.Component {\r\n\tstatic propTypes = {\r\n\t\tactive: PropTypes.number.isRequired,\r\n\t\tlabel: PropTypes.string.isRequired,\r\n\t\tonClick: PropTypes.func.isRequired,\r\n\t\ttabWidth: PropTypes.string.isRequired\r\n\t};\r\n\tonClick = () => {\r\n\t\tthis.props.onClick(this.props.index);\r\n\t}\r\n\trender () {\r\n\t\tlet className = 'scrm-tabs-ul-li';\r\n\t\tif (this.props.active === this.props.index) {\r\n\t\t\tclassName += ' scrm-tabs-ul-li-active'\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<li className ={className} style={{width: this.props.tabWidth}} onClick ={this.onClick}> {this.props.label} </li>\r\n\t\t);\r\n\t}\r\n}\r\nclass TabPanel extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tindex : 0,\r\n\t\tlabel : 'TAB'\r\n\t}; \r\n\trender () {\r\n\t\treturn ( <div id={this.props.id} className='scrm-tab-panel'> {this.props.children} </div> )\r\n\t}\r\n}\r\nexport { Tabs, Tab, TabPanel };","import React from 'react';\r\nimport 'assets/styles/component.css';\r\n\r\nclass Table extends React.Component {\r\n\tsetColGroup = (colGrp) => {\r\n\t\tif (colGrp === undefined) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\tif (colGrp.length === 0) {\r\n\t\t\t\treturn null;\r\n\t\t\t}  else {\r\n\t\t\t\treturn colGrp.map((colGrp, index) => {\r\n\t\t\t\t\treturn (<col key={'col_' + index} style={{width: colGrp.width}}></col>)\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tsetBody = (body) => {\r\n\t\tif (body === undefined)  {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn this.setRow(body);\r\n\t\t}\r\n\t}\r\n\tsetRow = (rowArray) => {\r\n\t\treturn rowArray.map((colArray, index) => {\r\n\t\t\treturn (<tr key={'tr_' + index}>{this.setColumn(colArray)}</tr>)\r\n\t\t});\r\n\t\t\r\n\t}\r\n\tsetColumn = (colArray) => {\r\n\t\treturn colArray.map((colJson, index) => {\r\n\t\t\treturn (\r\n\t\t\t  (colJson.type === 'T') ?  <th className='scrm-table-th' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</th>\r\n\t\t\t\t\t\t\t\t\t :  <td className='scrm-table-td' key={'cobody_' + index} colSpan = {colJson.colSpan} rowSpan = {colJson.rowSpan}>{colJson.value}</td>\r\n\t\t\t)\r\n\t\t});\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<table className = 'scrm-table' id = {this.props.id} style={{width: this.props.width}}>\r\n\t\t\t\t<colgroup>\r\n\t\t\t\t\t{ this.setColGroup(this.props.colGrp) }\r\n\t\t\t\t</colgroup>\r\n\t\t\t\t{ (this.props.head === null || this.props.head === undefined) ? <thead>{this.props.head}</thead> : <thead/> }\r\n\t\t\t\t<tbody>\r\n\t\t\t\t\t{ this.setBody(this.props.tbData) }\r\n\t\t\t\t</tbody>\r\n\t\t\t\t{ (this.props.footer === null || this.props.footer === undefined) ? <tfoot>{this.props.footer}</tfoot> : <tfoot></tfoot> }\r\n\t\t\t</table>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Table;","import React from 'react';\r\nimport { StrLib } from 'common';\r\n\r\nclass Textarea extends React.Component {\r\n\tstatic defaultProps = {\r\n\t\tonKeyPress : () => {return;},\r\n\t\tonChange : () => {return;},\r\n\t}\r\n\trtnVal = (value) => {\r\n\t\tswitch (this.props.type) {\r\n\t\t\tcase 'onlyNum' :\r\n\t\t\t\tif(StrLib.isNull(value)) return value;\r\n\t\t\t\treturn typeof value === 'string' ? value.replace(/[^0-9]/g,\"\") : value.toString().replace(/[^0-9]/g,\"\");\r\n\t\t\tcase 'onlyKor' :\r\n\t\t\t\tif(StrLib.isNull(value)) return value;\r\n\t\t\t\treturn value.replace(/[a-z0-9]|[ \\]{}()<>?|`~!@#$%^&*-_+=,.;:'\\\\]/g,\"\");\r\n\t\t\tcase 'onlyEng' :\r\n\t\t\t\tif(StrLib.isNull(value)) return value;\r\n\t\t\t\treturn value.replace(/[^a-zA-Z]/g,\"\");\r\n\t\t\tdefault :\r\n\t\t\t\tif (StrLib.isNull(value)) {\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn value;\r\n\t\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-textarea-div'>\r\n\t\t\t\t<textarea className=\"scrm-textarea-input\"\r\n\t\t\t\t\ttype\t\t=\"text\"\r\n\t\t\t\t\tid\t\t\t= {this.props.id}\r\n\t\t\t\t\tname\t\t= {this.props.name}\r\n\t\t\t\t\tvalue\t\t= {this.rtnVal(this.props.value)}\r\n\t\t\t\t\tplaceholder\t= {this.props.placeholder}\r\n\t\t\t\t\tminLength\t= {this.props.minLength}\r\n\t\t\t\t\tmaxLength\t= {this.props.maxLength}\r\n\t\t\t\t\treadOnly\t= {this.props.readOnly}\r\n\t\t\t\t\tdisabled\t= {this.props.disabled}\r\n\t\t\t\t\trows\t\t= {this.props.rows}\r\n\t\t\t\t\tonChange\t= {(e) => this.props.onChange(e)}\r\n\t\t\t\t\tonKeyPress\t= {(e) => this.props.onKeyPress(e)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Textarea;","import React from 'react';\r\nimport {IconButton, LFloatArea} from 'components';\r\n\r\nclass TrayDiv extends React.Component {\r\n  constructor(props)  {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t}\r\n\t}\r\n\tselectMenu = (props) => {\r\n\t\tthis.props.data.forEach((key, i) => {\r\n\t\t\tif (props.MNU_ID === key.MNU_ID) {\r\n\t\t\t\tif (document.getElementById(props.MNU_ID) !== null) {\r\n\t\t\t\t\tdocument.getElementById(props.MNU_ID).style.display = 'block';\r\n\t\t\t\t\t// tray selected 변경 처리\r\n\t\t\t\t\tthis.props.onSelect(props);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (document.getElementById(key.MNU_ID) !== null && document.getElementById(key.MNU_ID) !== undefined) {\r\n\t\t\t\t\tdocument.getElementById(key.MNU_ID).style.display = 'none';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tremoveMenu = (props) => { this.props.onClose(props);}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div className='scrm-tray-div' id = {this.props.id}>\r\n\t\t\t\t\t\t<ul id = { '_ul' + this.props.id}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.props.data.map((item, key) => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<li className = {(item.MNU_ID === this.props.selected.MNU_ID) ? 'scrm-tray-div-li-selected' : null}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={'scrm-tray-div' + key} id={'tray_li_' + item.MNU_ID} onClick={(e) => { this.selectMenu(item)}}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t<div className='scrm-tray-div-li-div' id={'tray_div_item_' + item.MNU_ID}>{item.MNU_NM}</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<IconButton classes='scrm-tray-div-btn-close' id='btnClose' onClick={(e) => {e.stopPropagation(); this.removeMenu(item)}}/>\r\n\t\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport {TrayDiv};","import React from 'react';\r\nimport {\r\n\tIconButton, Table, Label, CsButton\r\n} from 'components';\r\nimport { RFloatArea } from '../Layout';\r\n\r\nclass CsState extends React.Component {\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = { \r\n\t\t\tcolGrp  : [],\r\n\t\t\ttbData  : [],\r\n\t\t\tlistOpen: [],\r\n\r\n\t\t\ttotalCs: 0,\r\n\t\t\topenCs : 0\r\n\t\t}\r\n\t}\t\r\n\r\n\tstatic defaultProps = {\r\n\t\ttbllm: '40px',\r\n\t\ttblrm: '40px',\r\n\t\ticonbm: '10px',\r\n\t\theight: '640px',\r\n\t\ticonSize: '50px',\r\n\t\tcolCount: 1,\r\n\t\ttblData: [],\t\t\r\n\t\tonClickCs : (e) => {return;},\r\n\t\ttoggleCenter: (e) => {return;}\r\n\t}\r\n\tdoMakeTable() {\r\n\t\tlet colGrp = [];\r\n\t\tlet csPerCenterList = [];\r\n\t\t\r\n\t\tlet totalCsAll    = 0;\r\n\t\tlet openCsAll     = 0;\r\n\r\n\t\tlet colLen = Math.floor(100/this.props.colLeng)\r\n\t\t\t\t\r\n\t\tfor (let i = 0; i < this.props.colLeng; i ++) {\r\n\t\t\tcolGrp.push({width: colLen + '%'});\r\n\r\n\t\t}\r\n\r\n\t\tlet csList = this.props.csList;\r\n\r\n\t\tcsPerCenterList = Object.keys(this.props.centerList).map(key => {\r\n\t\t\t\r\n\t\t\tlet item        = this.props.centerList[key];\r\n\t\t\tlet csListItems = [];\t\r\n\r\n\t\t\tif (item.CHK === 'Y') {\r\n\t\t\t\tcsListItems = Object.keys(this.props.csList).map(keys => {\r\n\t\t\t\t\tlet cs       = this.props.csList[keys];\r\n\t\t\t\t\tlet callType = cs.CONS_STATE;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif (cs.CENT_CD === item.CENT_CD) {\r\n\t\t\t\t\t\treturn ({type: 'D', value:\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\tkey={cs.CONST_CD}\r\n\t\t\t\t\t\t\t\tstyle={{textAlign: 'center', marginBottom: this.props.iconbm}}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonClick = {callType === 'E' ? null : () => {this.props.onClickCs({ CONST_CD: cs.CONST_CD, CONST_NM: cs.CONST_NM, STT_UNQ: cs.STT_UNQ})}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<CsButton\t\t\r\n\t\t\t\t\t\t\t\t\tid       = {cs.CONST_CD}\r\n\t\t\t\t\t\t\t\t\tname     = {cs.CONST_NM}\r\n\t\t\t\t\t\t\t\t\tcallType = {callType}\r\n\t\t\t\t\t\t\t\t\tcolor    = 'blue' \r\n\t\t\t\t\t\t\t\t\tcolor2   = 'red' \r\n\t\t\t\t\t\t\t\t\tsize\t = {'xi-4x'} // xi-5x, xi-4x, xi-3x, xi-2x, xi-x\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t });\r\n\t\t\t\t\t} \r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet totalCs;\r\n\t\t\t\tlet openCs;\r\n\t\t\t\t\r\n\t\t\t\tlet tempCnt = 0;\r\n\t\t\t\tlet tempCnt2 = 0;\r\n\r\n\t\t\t\tfor (let j = 0; j < csList.length; j ++){\r\n\t\t\t\t\tif (csList[j].CENT_CD === item.CENT_CD ) {\r\n\t\t\t\t\t\ttempCnt += 1;       \r\n\r\n\t\t\t\t\t\tif (csList[j].CONS_STATE !== 'E') {\r\n\t\t\t\t\t\t\ttempCnt2 += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (j + 1 === csList.length) {\r\n\t\t\t\t\t\ttotalCs = tempCnt;\r\n\t\t\t\t\t\topenCs = tempCnt2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttotalCsAll += totalCs;\r\n\t\t\t\topenCsAll  += openCs;\r\n\r\n\t\t\t\tlet title = \"\";\r\n\r\n\t\t\t\ttitle += item.CENT_NM;\r\n\t\t\t\ttitle += \" (\" + openCs + \" / \" + totalCs + \")\";\r\n\t\t\t\t\r\n\t\t\t\treturn (\r\n\t\t\t\t\t[[{type: 'D', value: <div style={{marginBottom: this.props.iconbm, marginTop: \"30px\" }}><Label value={title}/></div>, colSpan: this.props.colLeng}],\r\n\t\t\t\t\t[csListItems.filter(items => items !== undefined)]]\r\n\r\n\t\t\t\t)\r\n\t\t\t}\t\t\t\r\n\t\t})\r\n\r\n\t\tlet tbData = [];\r\n\r\n\t\tfor (let i = 0; i < csPerCenterList.length; i ++) {\r\n\t\t\tif (csPerCenterList[i] !== undefined) {\r\n\t\t\t\ttbData.push([csPerCenterList[i][0][0]]);\r\n\t\t\t\r\n\t\t\t\tlet rowCnt = 1;\r\n\t\t\t\tlet csRow  = [];\t\r\n\t\t\t\t\r\n\t\t\t\tfor (let j = 0; j < csPerCenterList[i][1][0].length; j ++) {\t\t\r\n\t\t\t\t\tif (rowCnt * this.props.colLeng > Math.ceil(j + 1 / this.props.colLeng) && j + 1 !== csPerCenterList[i][1][0].length) {\r\n\t\t\t\t\t\tcsRow.push(csPerCenterList[i][1][0][j])\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcsRow.push(csPerCenterList[i][1][0][j])\r\n\t\t\t\t\t\ttbData.push(csRow);\r\n\t\t\t\t\t\trowCnt ++;\r\n\t\t\t\t\t\tcsRow = [];\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn ({colGrp: colGrp, tbData: tbData})\r\n\t}\r\n\r\n\trender () {\r\n\t\tlet { tbData, colGrp} = this.doMakeTable();\r\n\t\treturn (\r\n\t\t\t<div style={{marginLeft: this.props.tbllm, marginRight: this.props.tblrm, height: this.props.height, overflow: 'auto'}}>\t\t\t\t\r\n\t\t\t\t<Table  \r\n\t\t\t\t\tid={this.props.id} \r\n\t\t\t\t\tcolGrp = {colGrp}\r\n\t\t\t\t\ttbData = {tbData}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CsState;","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport class PortWidget extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: false\r\n    };\r\n  }\r\n\r\n  onClick =() => {    \r\n    _.map(this.props.port.links, link => {\r\n      link.remove();\r\n      this.props.diagramEngine.forceUpdate();\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { name, node } = this.props;\r\n    let cnt = 0;\r\n    _.map(this.props.port.links, link => {\r\n      cnt ++;\r\n    })\r\n    return (\r\n      <div\r\n        className={`port${(this.state.selected ? ' selected' : '')}`}\r\n        onMouseEnter={() => this.setState({ selected: true })}\r\n        onMouseLeave={() => this.setState({ selected: false })}\r\n        data-name={name}\r\n        data-nodeid={node.getID()}\r\n        onClick={this.onClick.bind(this)}\r\n      >\r\n        {cnt > 0 ? \r\n            \"링크삭제\"\r\n          : \r\n            name\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { PortWidget } from '../widgets/PortWidget';\r\nimport { Label } from 'components';\r\nimport {BasicButton as Button} from 'components';\r\nimport {ComLib} from 'common';\r\n\r\nexport class DefaultPortLabel extends React.Component {\r\n  static defaultProps = {\r\n    in: true,\r\n    label: 'port'\r\n  };\r\n\r\n  event = {\r\n    button: {\r\n      onClick: (e) => {\r\n        const { model } = this.props;\r\n        // console.log(model.getParent().id)\r\n        // console.log(model)\r\n        // console.log(model.getParent().getOutPorts())\r\n        // 저장이 되있는 경우에만 할수 있도로 validation 추가 필요\r\n        let param = {id:model.getParent().id, name: model.getParent().name, kwdSco: model.getParent().kwdSco, port: model.id};\r\n        let option2 = { width: '600px', height: '830px', modaless: false, callback :  () => {} , param: param}\r\n        ComLib.openPop('BOT010101', '키워드 등록 : ' + model.getParent().name + \" \" + model.label, option2)\r\n      }\r\n    },\r\n  }\r\n\r\n  render() {\r\n    const { model, portOrd } = this.props;\r\n    const port = (\r\n      <PortWidget name={model.name} node={model.getParent()} port={model} diagramEngine={this.props.diagramEngine}/>\r\n    );\r\n\r\n    const label = (\r\n      (model.getParent().tp === 'S') && (!model.in)\r\n        ?\r\n          <Button\r\n              color='purple' \r\n              fiiled= {true} innerImage={true} icon = {'eye'}\r\n              id = {model.getParent().id}\r\n              value = {\"키워드\"}\r\n              disabled = {false}\r\n              hidden = {false}\r\n              onClick = {this.event.button.onClick}\r\n              ml={5}\r\n          />\r\n        :\r\n          model.getParent().tp === 'B'\r\n            ?\r\n              null\r\n            :\r\n              <Label value={model.label}/>\r\n    );\r\n    \r\n    return (\r\n      \r\n      <div className={`${(model.in ? 'in' : 'out')}-port`}>\r\n        {model.in ? port : label}\r\n        {model.in ? null : port}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { DefaultPortLabel } from './DefaultPortLabelWidget';\r\n\r\nexport class DefaultNodeWidget extends React.Component {\r\n  static defaultProps = {\r\n    node: null,\r\n  };\r\n\r\n  onRemove() {\r\n    const { node, diagramEngine } = this.props;\r\n    node.remove();\r\n    diagramEngine.forceUpdate();\r\n  }\r\n\r\n  getInPorts() {\r\n    const { node } = this.props;\r\n    return node.getInPorts().map((port, i) => <DefaultPortLabel model={port} key={`in-port-${i}`} />);\r\n  }\r\n\r\n  getOutPorts() {\r\n    const { node } = this.props;\r\n    return node.getOutPorts().map((port, i) => <DefaultPortLabel model={port} key={`out-port-${i}`} />);\r\n  }\r\n\r\n  render() {\r\n    const { node } = this.props;\r\n    return (\r\n      <div className='basic-node' style={{ background: node.color }}>\r\n        <div className='title'>\r\n          <div className='name'>\r\n            {node.name}\r\n          </div>\r\n          <div className='fa fa-close' onClick={this.onRemove.bind(this)} />\r\n        </div>\r\n        <div className='ports'>\r\n          <div className='in'>\r\n            {this.getInPorts()}\r\n          </div>\r\n          <div className='out'>\r\n            {this.getOutPorts()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export class Toolkit {\r\n  /**\r\n   * Generats a unique ID (thanks Stack overflow :3)\r\n   * @returns {String}\r\n   */\r\n  static UID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\r\n      var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\r\n      return v.toString(16);\r\n    });\r\n  }\r\n}\r\n","import { Toolkit } from './Toolkit';\r\n\r\nexport class BaseEntity {\r\n  constructor() {\r\n    this.listeners = {};\r\n    this.id = Toolkit.UID();\r\n  }\r\n\r\n  getID() {\r\n    return this.id;\r\n  }\r\n\r\n  clearListeners() {\r\n    this.listeners = {};\r\n  }\r\n\r\n  deSerialize(data) {\r\n    this.id = data.id;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      id: this.id,\r\n    };\r\n  }\r\n\r\n  itterateListeners(cb) {\r\n    for (const key in this.listeners) {\r\n      cb(this.listeners[key]);\r\n    }\r\n  }\r\n\r\n  removeListener(listener) {\r\n    if (this.listeners[listener]) {\r\n      delete this.listeners[listener];\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  addListener(listener) {\r\n    const uid = Toolkit.UID();\r\n    this.listeners[uid] = listener;\r\n    return uid;\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport { BaseEntity } from './BaseEntity';\r\n\r\nexport class BaseModel extends BaseEntity {\r\n  constructor() {\r\n    super();\r\n    this.selected = false;\r\n  }\r\n\r\n  deSerialize(ob) {\r\n    super.deSerialize(ob);\r\n    this.selected = ob.selected;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      _class: this.constructor.name,\r\n      selected: this.selected\r\n    };\r\n  }\r\n\r\n  getID() {\r\n    return this.id;\r\n  }\r\n\r\n  isSelected() {\r\n    return this.selected;\r\n  }\r\n\r\n  setSelected(selected) {\r\n    this.selected = selected;\r\n    this.itterateListeners(listener => {\r\n      if (listener.selectionChanged) {\r\n        listener.selectionChanged(this, selected);\r\n      }\r\n    });\r\n  }\r\n\r\n  remove() {\r\n    this.itterateListeners(listener => {\r\n      if (listener.entityRemoved) {\r\n        listener.entityRemoved(this);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport class PointModel extends BaseModel {\r\n  constructor(link, points) {\r\n    super();\r\n    this.x = points.x;\r\n    this.y = points.y;\r\n    this.link = link;\r\n  }\r\n\r\n  deSerialize(ob) {\r\n    super.deSerialize(ob);\r\n    this.x = ob.x;\r\n    this.y = ob.y;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      x: this.x,\r\n      y: this.y\r\n    };\r\n  }\r\n\r\n  remove() {\r\n    super.remove();\r\n\r\n    // Clear references\r\n    if (this.link) {\r\n      this.link.removePoint(this);\r\n    }\r\n  }\r\n\r\n  updateLocation(points) {\r\n    this.x = points.x;\r\n    this.y = points.y;\r\n  }\r\n\r\n  getX() {\r\n    return this.x;\r\n  }\r\n\r\n  getY() {\r\n    return this.y;\r\n  }\r\n\r\n  getLink() {\r\n    return this.link;\r\n  }\r\n}\r\n\r\nexport class LinkModel extends BaseModel {\r\n  constructor(linkType = 'default') {\r\n    super();\r\n    this.linkType = linkType;\r\n    this.points = this.getDefaultPoints();\r\n    this.extras = {};\r\n    this.sourcePort = null;\r\n    this.targetPort = null;\r\n    this.rowtype    = 'c';\r\n  }\r\n\r\n  deSerialize(ob) {\r\n    super.deSerialize(ob);\r\n    this.linkType = ob.type;\r\n    this.points = ob.points.map(point => {\r\n      var p = new PointModel(this, { x: point.x, y:point.y });\r\n      p.deSerialize(point);\r\n      return p;\r\n    });\r\n    this.rowtype = ob.rowtype\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      type: this.linkType,\r\n      source: this.sourcePort ? this.sourcePort.getParent().id : null,\r\n      sourcePort: this.sourcePort ? this.sourcePort.id : null,\r\n      target: this.targetPort ? this.targetPort.getParent().id : null,\r\n      targetPort: this.targetPort ? this.targetPort.id : null,\r\n      points: this.points.map(point => point.serialize()),\r\n      extras: this.extras,\r\n      rowtype: this.rowtype\r\n    };\r\n  }\r\n\r\n  remove() {\r\n    super.remove();\r\n    if (this.sourcePort) {\r\n      this.sourcePort.removeLink(this);\r\n    }\r\n    if (this.targetPort) {\r\n      this.targetPort.removeLink(this);\r\n    }\r\n  }\r\n\r\n  isLastPoint(point) {\r\n    return this.getPointIndex(point) === this.points.length - 1;\r\n  }\r\n\r\n  getDefaultPoints() {\r\n    return [\r\n      new PointModel(this,{ x: 0, y: 0 }),\r\n      new PointModel(this,{ x: 0, y: 0 }),\r\n    ];\r\n  }\r\n\r\n  getPointIndex(point) {\r\n    return this.points.indexOf(point);\r\n  }\r\n\r\n  getPointModel(id) {\r\n    for (let i = 0; i < this.points.length; i++) {\r\n      if (this.points[i].id === id) {\r\n        return this.points[i];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getFirstPoint() {\r\n    return this.points[0];\r\n  }\r\n\r\n  getLastPoint() {\r\n    return this.points[this.points.length - 1];\r\n  }\r\n\r\n  setSourcePort(port) {\r\n    port.addLink(this);\r\n    this.sourcePort = port;\r\n  }\r\n\r\n  getSourcePort() {\r\n    return this.sourcePort;\r\n  }\r\n\r\n  getTargetPort() {\r\n    return this.targetPort;\r\n  }\r\n\r\n  setTargetPort(port) {\r\n    port.addLink(this);\r\n    this.targetPort = port;\r\n  }\r\n\r\n  getPoints() {\r\n    return this.points;\r\n  }\r\n\r\n  setPoints(points) {\r\n    this.points = points;\r\n  }\r\n\r\n  removePoint(pointModel) {\r\n    this.points.splice(this.getPointIndex(pointModel), 1);\r\n  }\r\n\r\n  addPoint(pointModel, index = 1) {\r\n    this.points.splice(index, 0, pointModel);\r\n  }\r\n\r\n  getType() {\r\n    return this.linkType;\r\n  }\r\n}\r\n\r\nexport class PortModel extends BaseModel {\r\n  constructor(name) {\r\n    super();\r\n    this.name = name;\r\n    this.links = {};\r\n    this.parentNode = null;\r\n  }\r\n\r\n  deSerialize(ob) {\r\n    super.deSerialize(ob);\r\n    this.name = ob.name;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      name: this.name,\r\n      parentNode: this.parentNode.id,\r\n      links: _.map(this.links, link => link.id)\r\n    };\r\n  }\r\n\r\n  getName() {\r\n    return this.name;\r\n  }\r\n\r\n  getParent() {\r\n    return this.parentNode;\r\n  }\r\n\r\n  setParentNode(node) {\r\n    this.parentNode = node;\r\n  }\r\n\r\n  removeLink(link) {\r\n    delete this.links[link.getID()];\r\n  }\r\n\r\n  addLink(link) {\r\n    this.links[link.getID()] = link;\r\n  }\r\n\r\n  getLinks() {\r\n    return this.links;\r\n  }\r\n}\r\n\r\nexport class NodeModel extends BaseModel {\r\n  constructor(nodeType = 'default') {\r\n    super();\r\n    this.nodeType = nodeType;\r\n    this.x = 0;\r\n    this.y = 0;\r\n    this.kwdSco = \"\";\r\n    this.extras = {};\r\n    this.ports = {};\r\n  }\r\n\r\n  deSerialize(ob) {\r\n    super.deSerialize(ob);\r\n    this.nodeType = ob.type;\r\n    this.x = ob.x;\r\n    this.y = ob.y;\r\n    this.kwdSco = ob.kwdSco;\r\n    this.extras = ob.extras;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      type: this.nodeType,\r\n      x: this.x,\r\n      y: this.y,\r\n      kwdSco: this.kwdSco,\r\n      extras: this.extras,\r\n      ports: _.map(this.ports, port => port.serialize())\r\n    };\r\n  }\r\n\r\n  remove() {\r\n    super.remove();\r\n    for (const key in this.ports) {\r\n      _.forEach(this.ports[key].getLinks(), link => link.remove());\r\n    }\r\n  }\r\n\r\n  getPortFromID(id) {\r\n    for (const key in this.ports) {\r\n      if (this.ports[key].id === id) {\r\n        return this.ports[key];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  getPort(name) {\r\n    return this.ports[name];\r\n  }\r\n\r\n  getPorts() {\r\n    return this.ports;\r\n  }\r\n\r\n  removePort(port) {\r\n    // Clear the parent node reference\r\n    if (this.ports[port.name]) {\r\n      this.ports[port.name].setParentNode(null);\r\n      delete this.ports[port.name];\r\n    }\r\n  }\r\n\r\n  addPort(port) {\r\n    port.setParentNode(this);\r\n    this.ports[port.name] = port;\r\n    return port;\r\n  }\r\n\r\n  getType() {\r\n    return this.nodeType;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { PointModel } from '../Common';\r\n\r\nexport class DefaultLinkWidget extends React.Component {\r\n  static defaultProps = {\r\n    color: 'black',\r\n    width: 3,\r\n    link:null,\r\n    engine: null,\r\n    smooth: false,\r\n    diagramEngine: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selected: false\r\n    };\r\n  }\r\n\r\n  generatePoint(pointIndex) {\r\n    const { link } = this.props;\r\n    const uiCircleProps = {\r\n      className: `point pointui${(link.points[pointIndex].isSelected() ? ' selected' : '')}`,\r\n      cx: link.points[pointIndex].x,\r\n      cy: link.points[pointIndex].y,\r\n      r: 5,\r\n    };\r\n    const circleProps = {\r\n      className: 'point',\r\n      'data-linkid': link.id,\r\n      'data-id': link.points[pointIndex].id,\r\n      cx: link.points[pointIndex].x,\r\n      cy: link.points[pointIndex].y,\r\n      r: 15,\r\n      opacity: 0,\r\n      onMouseLeave: () => this.setState({ selected: false }),\r\n      onMouseEnter: () => this.setState({ selected: true }),\r\n    };\r\n\r\n    return (\r\n      <g key={`point-${link.points[pointIndex].id}`}>\r\n        <circle {...uiCircleProps}/>\r\n        <circle {...circleProps}/>\r\n      </g>\r\n    );\r\n  }\r\n\r\n  generateLink(extraProps) {\r\n    const { link, width, color } = this.props;\r\n    const { selected } = this.state;\r\n    const bottom = (\r\n      <path\r\n        className={(selected || link.isSelected()) ? 'selected' : ''}\r\n        strokeWidth={width}\r\n        stroke={color}\r\n        {...extraProps}\r\n      />\r\n    );\r\n\r\n    const top = (\r\n      <path\r\n        strokeLinecap={'round'}\r\n        data-linkid={link.getID()}\r\n        stroke={color}\r\n        strokeOpacity={selected ? 0.1 : 0}\r\n        strokeWidth={20}\r\n        onMouseLeave={() => this.setState({ selected: false })}\r\n        onMouseEnter={() => this.setState({ selected: true })}\r\n        onContextMenu={event => {\r\n          event.preventDefault();\r\n          this.props.link.remove();\r\n        }}\r\n        {...extraProps}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <g key={`link-${extraProps.id}`}>\r\n        {bottom}\r\n        <div>close btn</div>\r\n        {top}\r\n      </g>\r\n    );\r\n  }\r\n\r\n  drawLine() {\r\n    const { link, diagramEngine, pointAdded } = this.props;\r\n    const { points } = link;\r\n    const paths = [];\r\n\r\n    // If the points are too close, just draw a straight line\r\n    const margin = (Math.abs(points[0].x - points[1].x) < 50) ? 5 : 50;\r\n\r\n    let pointLeft = points[0];\r\n    let pointRight = points[1];\r\n\r\n    // Some defensive programming to make sure the smoothing is\r\n    // Always in the right direction\r\n    if (pointLeft.x > pointRight.x) {\r\n      pointLeft = points[1];\r\n      pointRight = points[0];\r\n    }\r\n\r\n    paths.push(this.generateLink({\r\n      id: 0,\r\n      onMouseDown: (event) => {\r\n        if (!event.shiftKey) {\r\n          var point = new PointModel(link, diagramEngine.getRelativeMousePoint(event));\r\n          point.setSelected(true);\r\n          this.forceUpdate();\r\n          link.addPoint(point, 1);\r\n          pointAdded(point, event);\r\n        }\r\n      },\r\n      d: ` M${pointLeft.x} ${pointLeft.y} C${pointLeft.x + margin} ${pointLeft.y} ${pointRight.x - margin} ${pointRight.y} ${pointRight.x} ${pointRight.y}` // eslint-disable-line\r\n    }));\r\n\r\n    if (link.targetPort === null) {\r\n      paths.push(this.generatePoint(1));\r\n    }\r\n\r\n    return paths;\r\n  }\r\n\r\n  drawAdvancedLine() {\r\n    const { link, smooth, diagramEngine, pointAdded } = this.props;\r\n    const { points } = link;\r\n    const ds = [];\r\n        \r\n    if (smooth) {\r\n      ds.push(\r\n        ` M${points[0].x} ${points[0].y} C ${points[0].x + 50} ${points[0].y} ${points[1].x} ${points[1].y} ${points[1].x} ${points[1].y}` // eslint-disable-line\r\n      );\r\n\r\n      let i;\r\n      for (i = 1; i < points.length - 2; i++) {\r\n        ds.push(` M ${points[i].x} ${points[i].y} L ${points[i + 1].x} ${points[i + 1].y}`);\r\n      }\r\n\r\n      ds.push(\r\n        ` M${points[i].x} ${points[i].y} C ${points[i].x} ${points[i].y} ${points[i + 1].x - 50} ${points[i + 1].y} ${points[i + 1].x} ${points[i + 1].y}` // eslint-disable-line\r\n      );\r\n    } else {\r\n      for (let i = 0; i < points.length - 1; i++) {\r\n        ds.push(` M ${points[i].x} ${points[i].y} L ${points[i + 1].x} ${points[i + 1].y}`);\r\n      }\r\n    }\r\n\r\n    const paths = ds.map((data, index) => this.generateLink({\r\n      id: index,\r\n      d: data,\r\n      'data-linkid': link.id,\r\n      'data-point': index,\r\n      onMouseDown: event => {\r\n        if (!event.shiftKey) {\r\n          const point = new PointModel(link, diagramEngine.getRelativeMousePoint(event));\r\n          point.setSelected(true);\r\n          link.addPoint(point, index + 1);\r\n          pointAdded(point, event);\r\n        }\r\n      }\r\n    }));\r\n    \r\n    // Render the circles\r\n    for (let i = 1; i < points.length - 1; i++) {\r\n      paths.push(this.generatePoint(i));\r\n    }\r\n\r\n    if (link.targetPort === null) {\r\n      paths.push(this.generatePoint(points.length - 1));\r\n    }\r\n    return paths;\r\n  }\r\n\r\n  render() {\r\n    const { points } = this.props.link;\r\n    let paths = [];\r\n\r\n    // Draw the line\r\n    if (points.length === 2) {\r\n      paths = this.drawLine();\r\n    } else {\r\n      paths = this.drawAdvancedLine();\r\n    }\r\n\r\n    return (\r\n      <g>\r\n        {paths}\r\n      </g>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { DefaultNodeWidget } from './defaults/DefaultNodeWidget';\r\nimport { DefaultLinkWidget } from './defaults/DefaultLinkWidget';\r\n\r\nexport class WidgetFactory {\r\n  constructor(name) {\r\n    this.type = name;\r\n  }\r\n\r\n  getType() {\r\n    return this.type;\r\n  }\r\n}\r\n\r\nexport class NodeWidgetFactory extends WidgetFactory {\r\n  generateReactWidget(diagramEngine, node) {\r\n    return <DefaultNodeWidget node={node} diagramEngine={diagramEngine} />;\r\n  }\r\n}\r\n\r\nexport class LinkWidgetFactory extends WidgetFactory {\r\n  generateReactWidget(diagramEngine, link) {\r\n    return <DefaultLinkWidget link={link} diagramEngine={diagramEngine} />;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { LinkWidgetFactory } from '../WidgetFactories';\r\nimport { DefaultLinkWidget } from './DefaultLinkWidget';\r\n\r\nexport class DefaultLinkFactory extends LinkWidgetFactory {\r\n  constructor() {\r\n    super('default');\r\n  }\r\n\r\n  generateReactWidget(diagramEngine, link) {\r\n    return (\r\n      <DefaultLinkWidget link={link} diagramEngine={diagramEngine} />\r\n    );\r\n  }\r\n}\r\n","import { BaseEntity } from './BaseEntity';\r\n\r\nexport class AbstractInstanceFactory extends BaseEntity {\r\n  constructor(className) {\r\n    super(className);\r\n    this.className = className;\r\n  }\r\n\r\n  getName() {\r\n    return this.className;\r\n  }\r\n}\r\n","import { PortModel } from '../Common';\r\nimport { AbstractInstanceFactory } from '../AbstractInstanceFactory';\r\n\r\nexport class DefaultPortInstanceFactory extends AbstractInstanceFactory {\r\n  constructor() {\r\n    super('DefaultPortModel');\r\n  }\r\n\r\n  getInstance() {\r\n    return new DefaultPortModel(true, 'unknown');\r\n  }\r\n}\r\n\r\nexport class DefaultPortModel extends PortModel {\r\n  constructor(isInput, name, label, data = null) {\r\n    super(name);\r\n    this.in = isInput;\r\n    this.label = label || name;\r\n    this.data = data;\r\n  }\r\n\r\n  deSerialize(object) {\r\n    super.deSerialize(object);\r\n    this.in = object.in;\r\n    this.label = object.label;\r\n    this.data  = object.data;\r\n  }\r\n\r\n  serialize() {\r\n    return {\r\n      ...super.serialize(),\r\n      in: this.in,\r\n      label: this.label,\r\n      data: this.data\r\n    };\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport { LinkModel, NodeModel } from './Common';\r\nimport { BaseEntity } from './BaseEntity';\r\n\r\nexport class DiagramModel extends BaseEntity {\r\n  constructor() {\r\n    super();\r\n    this.links = {};\r\n    this.nodes = {};\r\n    this.offsetX = 0;\r\n    this.offsetY = 0;\r\n    this.zoom = 100;\r\n    this.rendered = false;\r\n  }\r\n\r\n  deSerializeDiagram(object, diagramEngine) {\r\n    this.deSerialize(object);\r\n    this.offsetX = object.offsetX;\r\n    this.offsetY = object.offsetY;\r\n    this.zoom = object.zoom;\r\n\r\n\r\n    // Deserialize nodes\r\n    _.forEach(object.nodes, node => {\r\n      \r\n      // const nodeOb = diagramEngine.getInstanceFactory(node._class).getInstance(); \r\n      // production 에서  Cannot read property 'getInstance' of undefined \r\n      // _class and uglify.js 에서 class 명을 전부 deserialize 하면서 임의값으로 바꾸어 버려서\r\n      // 실제 사용하는 걸로 강제로 집어 넣어 해결, 클래스가 하나 이상일 경우는 문제가 있으나\r\n      // 현제 클래스를 하나만 쓰기에 문제 없음\r\n      const nodeOb = diagramEngine.getInstanceFactory(\"CustomNodeModel\").getInstance();\r\n      \r\n      nodeOb.deSerialize(node);\r\n\r\n      // Deserialize ports\r\n      _.forEach(node.ports, port => {        \r\n        // const portOb = diagramEngine.getInstanceFactory(port._class).getInstance();\r\n        const portOb = diagramEngine.getInstanceFactory(\"DefaultPortModel\").getInstance();\r\n        portOb.deSerialize(port);\r\n        nodeOb.addPort(portOb);\r\n      });\r\n\r\n      this.addNode(nodeOb);\r\n    });\r\n\r\n    \r\n    _.forEach(object.links, link => {\r\n      // const linkOb = diagramEngine.getInstanceFactory(link._class).getInstance();      \r\n      const linkOb = diagramEngine.getInstanceFactory(\"LinkModel\").getInstance();\r\n      linkOb.deSerialize(link);\r\n\r\n      if (link.target) {\r\n        linkOb.setTargetPort(this.getNode(link.target).getPortFromID(link.targetPort));\r\n      }\r\n\r\n      if (link.source) {\r\n        linkOb.setSourcePort(this.getNode(link.source).getPortFromID(link.sourcePort));\r\n      }\r\n\r\n      this.addLink(linkOb);\r\n    });\r\n    // 링크 랜더링 안되는 버스 수정 \r\n    // setTimeout(() => {\r\n\t\t// \t_.forEach(object.links,(link) => {\r\n\t\t// \t\tlet linkOb = diagramEngine.getInstanceFactory(link._class).getInstance();\r\n\t\t// \t\tlinkOb.deSerialize(link);\r\n\r\n    //     if (link.target) {\r\n    //       linkOb.setTargetPort(this.getNode(link.target).getPortFromID(link.targetPort));\r\n    //     }\r\n    //     if (link.source) {\r\n    //       linkOb.setSourcePort(this.getNode(link.source).getPortFromID(link.sourcePort));\r\n    //     }\r\n\r\n    //     this.addLink(linkOb);\r\n    //   });\r\n    // }, 100)\r\n  }\r\n\r\n  serializeDiagram() {\r\n    return {\r\n      ...this.serialize(),\r\n      offsetX: this.offsetX,\r\n      offsetY: this.offsetY,\r\n      zoom: this.zoom,\r\n      links: _.map(this.links, link => link.serialize()),\r\n      nodes: _.map(this.nodes, link => link.serialize())\r\n    };\r\n  }\r\n\r\n  clearSelection(ignore, supressListener) {\r\n    if (ignore) ignore.setSelected(true);\r\n    _.forEach(this.getSelectedItems(), element => {\r\n      if (ignore && ignore.getID() === element.getID()) {\r\n        \r\n        return;\r\n      } \r\n      element.setSelected(false); //TODO dont fire the listener\r\n    });\r\n\r\n    \r\n    if (supressListener) {\r\n      \r\n      return;\r\n    }\r\n\r\n    this.itterateListeners(listener => {\r\n      if (listener.selectionCleared) {\r\n        listener.selectionCleared();\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedItems() {\r\n    // console.log(\"getSelectedItems\")\r\n    // console.log(_.flatMap(this.links, node => node.points))\r\n    return [\r\n      // Nodes\r\n      ..._.filter(this.nodes, node => node.isSelected()),\r\n      // Points\r\n      ..._.filter(_.flatMap(this.links, node => node.points), port => port.isSelected()),\r\n      // Links\r\n      ..._.filter(this.links, link => link.isSelected())\r\n    ];\r\n  }\r\n\r\n  setZoomLevel(zoom) {\r\n    this.zoom = zoom;\r\n    this.itterateListeners(listener => {\r\n      if (listener.controlsUpdated) {\r\n        listener.controlsUpdated();\r\n      }\r\n    });\r\n  }\r\n\r\n  setOffset(offsetX, offsetY) {\r\n    this.offsetX = offsetX;\r\n    this.offsetY = offsetY;\r\n    this.itterateListeners(listener => {\r\n      if (listener.controlsUpdated) {\r\n        listener.controlsUpdated();\r\n      }\r\n    });\r\n  }\r\n\r\n  setOffsetX(offsetX) {\r\n    this.offsetX = offsetX;\r\n    this.itterateListeners(listener => {\r\n      if (listener.controlsUpdated) {\r\n        listener.controlsUpdated();\r\n      }\r\n    });\r\n  }\r\n\r\n  setOffsetY(offsetY) {\r\n    this.offsetX = offsetY;\r\n    this.itterateListeners(listener => {\r\n      if (listener.controlsUpdated) {\r\n        listener.controlsUpdated();\r\n      }\r\n    });\r\n  }\r\n\r\n  getOffsetY() {\r\n    return this.offsetY;\r\n  }\r\n\r\n  getOffsetX() {\r\n    return this.offsetX;\r\n  }\r\n\r\n  getZoomLevel() {\r\n    return this.zoom;\r\n  }\r\n\r\n  getNode(node) {\r\n    if (node instanceof NodeModel) {\r\n      return node;\r\n    }\r\n    if (!this.nodes[node]) {\r\n      return null;\r\n    }\r\n    return this.nodes[node];\r\n  }\r\n\r\n  getLink(link) {\r\n    if (link instanceof LinkModel) {\r\n      return link;\r\n    }\r\n    if (!this.links[link]) {\r\n      return null;\r\n    }\r\n    return this.links[link];\r\n  }\r\n\r\n  addLink(link) {\r\n    link.addListener({\r\n      entityRemoved: () => {\r\n        this.removeLink(link);\r\n      }\r\n    });\r\n    this.links[link.getID()] = link;\r\n    this.itterateListeners(listener => {\r\n      if (listener.linksUpdated) {\r\n        listener.linksUpdated();\r\n      }\r\n    });\r\n    return link;\r\n  }\r\n\r\n  addNode(node) {\r\n    node.addListener({\r\n      entityRemoved: () => {\r\n        this.removeNode(node);\r\n      }\r\n    });\r\n    this.nodes[node.getID()] = node;\r\n    this.itterateListeners(listener => {\r\n      if (listener.nodesUpdated) {\r\n        listener.nodesUpdated();\r\n      }\r\n    });\r\n    return node;\r\n  }\r\n\r\n  removeLink(link) {\r\n    if (link instanceof LinkModel) {\r\n      delete this.links[link.getID()];\r\n      this.itterateListeners(listener => {\r\n        if (listener.linksUpdated) {\r\n          listener.linksUpdated();\r\n        }\r\n      });\r\n      return;\r\n    }\r\n    delete this.links[_.toString(link)];\r\n    this.itterateListeners(listener => {\r\n      if (listener.linksUpdated) {\r\n        listener.linksUpdated();\r\n      }\r\n    });\r\n  }\r\n\r\n  removeNode(node) {\r\n    if (node instanceof NodeModel) {\r\n      delete this.nodes[node.getID()];\r\n      this.itterateListeners(listener => {\r\n        if (listener.nodesUpdated) {\r\n          listener.nodesUpdated();\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    delete this.nodes[_.toString(node)];\r\n    this.itterateListeners(listener => {\r\n      if (listener.nodesUpdated) {\r\n        listener.nodesUpdated();\r\n      }\r\n    });\r\n  }\r\n\r\n  nodeSelected(node) {\r\n    this.itterateListeners(listener => {\r\n      if (listener.selectionChanged) {\r\n        listener.selectionChanged(node);\r\n      }\r\n    });\r\n  }\r\n\r\n  getLinks() {\r\n    return this.links;\r\n  }\r\n\r\n  getNodes() {\r\n    return this.nodes;\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport { NodeModel, PointModel, LinkModel } from './Common';\r\nimport { BaseEntity } from './BaseEntity';\r\nimport { DiagramModel } from './DiagramModel';\r\n\r\n/**\r\n * Passed as a parameter to the DiagramWidget\r\n */\r\nexport class DiagramEngine extends BaseEntity {\r\n  constructor() {\r\n    super();\r\n    this.diagramModel = new DiagramModel();\r\n    this.nodeFactories = {};\r\n    this.linkFactories = {};\r\n    this.instanceFactories = {};\r\n    this.linkInstanceFactory = null;\r\n    this.canvas = null;\r\n    this.paintableWidgets = null;\r\n    this.forceUpdate = () => {};\r\n  }\r\n\r\n  clearRepaintEntities() {\r\n    this.paintableWidgets = null;\r\n  }\r\n\r\n  enableRepaintEntities(entities) {\r\n    this.paintableWidgets = {};\r\n    entities.forEach(entity => {\r\n      // If a node is requested to repaint, add all of its links\r\n      if (entity instanceof NodeModel) {\r\n        _.forEach(entity.getPorts(), port => {\r\n          _.forEach(port.getLinks(), link => {\r\n            this.paintableWidgets[link.getID()] = true;\r\n          });\r\n        });\r\n      }\r\n\r\n      if (entity instanceof PointModel) {\r\n        this.paintableWidgets[entity.getLink().getID()] = true;\r\n      }\r\n\r\n      this.paintableWidgets[entity.getID()] = true;\r\n    });\r\n  }\r\n\r\n  canEntityRepaint(baseModel) {\r\n    // No rules applied, allow repaint\r\n    if (this.paintableWidgets === null) {\r\n      return true;\r\n    }\r\n\r\n    return this.paintableWidgets[baseModel.getID()] !== undefined;\r\n  }\r\n\r\n  setCanvas(canvas) {\r\n    this.canvas = canvas;\r\n  }\r\n\r\n  setDiagramModel(model) {\r\n    this.diagramModel = model;\r\n  }\r\n\r\n  setForceUpdate(forceUpdate) {\r\n    this.forceUpdate = forceUpdate;\r\n  }\r\n\r\n  getDiagramModel() {\r\n    return this.diagramModel;\r\n  }\r\n\r\n  getNodeFactories() {\r\n    return this.nodeFactories;\r\n  }\r\n\r\n  getLinkFactories() {\r\n    return this.linkFactories;\r\n  }\r\n\r\n  getInstanceFactory(className) {\r\n    return this.instanceFactories[className];\r\n  }\r\n\r\n  registerInstanceFactory(factory) {\r\n    this.instanceFactories[factory.getName()] = factory;\r\n    // Check for a link instance factory to be used when creating new links via drag\r\n    if (factory.getInstance() instanceof LinkModel) {\r\n      this.linkInstanceFactory = factory;\r\n    }\r\n  }\r\n\r\n  registerNodeFactory(factory) {\r\n    this.nodeFactories[factory.getType()] = factory;\r\n    this.itterateListeners(listener => {\r\n      listener.nodeFactoriesUpdated();\r\n    });\r\n  }\r\n\r\n  registerLinkFactory(factory) {\r\n    this.linkFactories[factory.getType()] = factory;\r\n    this.itterateListeners(listener => {\r\n      listener.linkFactoriesUpdated();\r\n    });\r\n  }\r\n\r\n  getFactoryForNode(node) {\r\n    if (this.nodeFactories[node.getType()]) {\r\n      return this.nodeFactories[node.getType()];\r\n    }\r\n    console.log(`Cannot find widget factory for node of type: [${node.getType()}]`); // eslint-disable-line\r\n    return null;\r\n  }\r\n\r\n  getFactoryForLink(link) {\r\n    if (this.linkFactories[link.getType()]) {\r\n      return this.linkFactories[link.getType()];\r\n    }\r\n    console.log(`Cannot find widget factory for link of type: [${link.getType()}]`); // eslint-disable-line\r\n    return null;\r\n  }\r\n\r\n  generateWidgetForLink(link) {\r\n    const linkFactory = this.getFactoryForLink(link);\r\n    if (!linkFactory) {\r\n      throw `Cannot find link factory for link: ${link.getType()}`;\r\n    }\r\n    return linkFactory.generateReactWidget(this, link);\r\n  }\r\n  \r\n  generateWidgetForNode(node, tts) {\r\n    const nodeFactory = this.getFactoryForNode(node);\r\n    if (!nodeFactory) {\r\n      throw `Cannot find widget factory for node: ${node.getType()}`;\r\n    }\r\n    return nodeFactory.generateReactWidget(this, node, tts);\r\n  }\r\n\r\n  getRelativeMousePoint(event) {\r\n    const point = this.getRelativePoint(event.pageX, event.pageY);\r\n    return {\r\n      x: (point.x / (this.diagramModel.getZoomLevel() / 100.0)) - this.diagramModel.getOffsetX(),\r\n      y: (point.y / (this.diagramModel.getZoomLevel() / 100.0)) - this.diagramModel.getOffsetY()\r\n    };\r\n  }\r\n\r\n  getRelativePoint(x, y) {\r\n    const canvasRect = this.canvas.getBoundingClientRect();\r\n    return { x: x - canvasRect.left, y: y - canvasRect.top };\r\n  }\r\n\r\n  getNodePortElement(port) {\r\n    const selector = this.canvas.querySelector(\r\n      `.port[data-name=\"${port.getName()}\"][data-nodeid=\"${port.getParent().getID()}\"]`\r\n    );\r\n    if (selector === null) {\r\n      throw `Cannot find Node Port element with nodeID: [${port.getParent().getID()}] and name: [${port.getName()}]`;\r\n    }\r\n    return selector;\r\n  }\r\n\r\n  getPortCenter(port) {\r\n    const sourceElement = this.getNodePortElement(port);\r\n    const sourceRect = sourceElement.getBoundingClientRect();\r\n    const rel = this.getRelativePoint(sourceRect.left,sourceRect.top);\r\n    const x = (sourceElement.offsetWidth / 2) + rel.x / (this.diagramModel.getZoomLevel() / 100.0) -\r\n      this.diagramModel.getOffsetX();\r\n    const y = (sourceElement.offsetHeight / 2) + rel.y / (this.diagramModel.getZoomLevel() / 100.0) -\r\n      this.diagramModel.getOffsetY();\r\n\r\n    return {\r\n      x,\r\n      y\r\n    };\r\n  }\r\n}\r\n","import { LinkModel } from './Common';\r\nimport { AbstractInstanceFactory } from './AbstractInstanceFactory';\r\n\r\nexport class LinkInstanceFactory extends AbstractInstanceFactory {\r\n  constructor() {\r\n    super('LinkModel');\r\n  }\r\n  \r\n  getInstance() {\r\n    return new LinkModel();\r\n  }\r\n}\r\n","export class BaseAction {\r\n  constructor(mouseX, mouseY) {\r\n    this.mouseX = mouseX;\r\n    this.mouseY = mouseY;\r\n    this.ms = (new Date()).getTime();\r\n  }\r\n}\r\n","import { BaseAction } from './BaseAction';\r\n\r\nexport class SelectingAction extends BaseAction {\r\n  constructor(mouseX, mouseY) {\r\n    super(mouseX, mouseY);\r\n    this.mouseX2 = mouseX;\r\n    this.mouseY2 = mouseY;\r\n  }\r\n\r\n  containsElement(x, y, diagramModel) {\r\n    const { mouseX, mouseX2, mouseY, mouseY2 } = this;\r\n    const z = diagramModel.getZoomLevel() / 100;\r\n    const elX = (x + diagramModel.getOffsetX()) * z;\r\n    const elY = (y + diagramModel.getOffsetY()) * z;\r\n\r\n    return (\r\n      ((mouseX2 < mouseX) ? elX < mouseX : elX > mouseX) &&\r\n      ((mouseX2 < mouseX) ? elX > mouseX2 : elX < mouseX2) &&\r\n      ((mouseY2 < mouseY) ? elY < mouseY : elY > mouseY) &&\r\n      ((mouseY2 < mouseY) ? elY > mouseY2 : elY < mouseY2)\r\n    );\r\n  }\r\n}\r\n","import { BaseAction } from './BaseAction';\r\n\r\nexport class MoveCanvasAction extends BaseAction {\r\n  constructor(mouseX, mouseY, diagramModel) {\r\n    super(mouseX, mouseY);\r\n    this.initialOffsetX = diagramModel.getOffsetX();\r\n    this.initialOffsetY = diagramModel.getOffsetY();\r\n  }\r\n}\r\n","import { BaseAction } from './BaseAction';\r\n\r\nexport class MoveItemsAction extends BaseAction {\r\n  constructor(mouseX, mouseY, diagramEngine) {\r\n    super(mouseX, mouseY);\r\n    this.moved = false;\r\n    diagramEngine.enableRepaintEntities(diagramEngine.getDiagramModel().getSelectedItems());\r\n    this.selectionModels = diagramEngine.getDiagramModel().getSelectedItems().map(item => ({\r\n      model: item,\r\n      initialX: item.x,\r\n      initialY: item.y,\r\n    }));\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport class LinkWidget extends React.Component {\r\n  shouldComponentUpdate() {\r\n    return this.props.diagramEngine.canEntityRepaint(this.props.link);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { LinkWidget } from './LinkWidget';\r\n\r\nexport class LinkLayerWidget extends React.Component {\r\n  generateLinks() {\r\n    const diagramModel = this.props.diagramEngine.getDiagramModel();\r\n\r\n    return _.map(diagramModel.getLinks(), link => {\r\n      // TODO: just improve this vastly x_x\r\n      if (link.sourcePort !== null) {\r\n        try {\r\n          //generate a point\r\n          link.points[0].updateLocation(this.props.diagramEngine.getPortCenter(link.sourcePort));\r\n        }\r\n        // Remove the link because its problematic (TODO implement this rather at an engine level)\r\n        catch (ex) {\r\n          diagramModel.removeLink(link);\r\n          return;\r\n        }\r\n      }\r\n      if (link.targetPort !== null) {\r\n        try {\r\n          _.last(link.points).updateLocation(this.props.diagramEngine.getPortCenter(link.targetPort));\r\n        }\r\n        //remove the link because its problematic (TODO implement this rather at an engine level)\r\n        catch (ex) {\r\n          diagramModel.removeLink(link);\r\n          return;\r\n        }\r\n      }\r\n\r\n      // Generate the links\r\n      const generatedLink = this.props.diagramEngine.generateWidgetForLink(link);\r\n      if (!generatedLink) {\r\n        return null;\r\n      }\r\n\r\n      const props = {\r\n        key: link.getID(),\r\n        link,\r\n        diagramEngine: this.props.diagramEngine,\r\n      };\r\n\r\n      return (\r\n        <LinkWidget {...props}>          \r\n          {React.cloneElement(generatedLink, { pointAdded: this.props.pointAdded })}\r\n        </LinkWidget>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const diagramModel = this.props.diagramEngine.getDiagramModel();\r\n    const zoom = diagramModel.getZoomLevel();\r\n    const offsetX = diagramModel.getOffsetX();\r\n    const offsetY = diagramModel.getOffsetY();\r\n    const svgStyle = {\r\n      transform: `scale(${zoom / 100.0}) translate(${offsetX}px, ${offsetY}px)`,\r\n      width: '100%',\r\n      height: '100%'\r\n    };\r\n\r\n    return (\r\n      <svg style={svgStyle}>        \r\n        {this.generateLinks()}\r\n      </svg>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\n\r\nexport class NodeWidget extends React.Component {\r\n  shouldComponentUpdate() {\r\n    return this.props.diagramEngine.canEntityRepaint(this.props.node);\r\n  }\r\n\r\n  render() {\r\n    const { node, children, diagramEngine } = this.props;\r\n    const props = {\r\n      'data-nodeid': node.id,\r\n      className: `node${(this.props.node.isSelected() ? ' selected' : '')}`,\r\n      style:{\r\n        top: this.props.node.y,\r\n        left: this.props.node.x,\r\n      },\r\n    };\r\n    \r\n    // Pass the diagramEngine to the node\r\n    const items = _.isArray(children) ?\r\n      children.map(child => (React.cloneElement(child, { diagramEngine }))) :\r\n      React.cloneElement(children, { diagramEngine });\r\n\r\n    return (\r\n      <div {...props}>\r\n        {items}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { NodeWidget } from './NodeWidget';\r\n\r\nexport class NodeLayerWidget extends React.Component {\r\n  render() {\r\n    const { diagramEngine } = this.props;\r\n    const diagramModel = diagramEngine.getDiagramModel();\r\n    const props = {\r\n      className:'node-view',\r\n      style:{\r\n        transform: `scale(${diagramModel.getZoomLevel() / 100.0}) translate(${diagramModel.getOffsetX()}px, ${diagramModel.getOffsetY()}px)`, // eslint-disable-line\r\n        width: '10000%',\r\n        height: '100%'\r\n      }\r\n    };\r\n\r\n    // Create children\r\n    const children = _.map(diagramModel.getNodes(), node => {\r\n      return (\r\n        <NodeWidget\r\n          key={node.id}\r\n          node={node}\r\n          diagramEngine={diagramEngine}\r\n        >\r\n          {this.props.diagramEngine.generateWidgetForNode(node, this.props.tts)}\r\n        </NodeWidget>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div {...props}>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { DiagramModel } from '../DiagramModel';\r\nimport { PointModel, NodeModel, LinkModel, PortModel } from '../Common';\r\nimport { SelectingAction, MoveCanvasAction, MoveItemsAction } from './actions';\r\nimport { LinkLayerWidget } from './LinkLayerWidget';\r\nimport { NodeLayerWidget } from './NodeLayerWidget';\r\nimport { Toolkit } from '../Toolkit';\r\nimport * as RJD from '../main';\r\n\r\nconst DEFAULT_ACTIONS = {\r\n  deleteItems: true,\r\n  selectItems: true,\r\n  moveItems: true,\r\n  multiselect: true,\r\n  multiselectDrag: true,\r\n  canvasDrag: true,\r\n  zoom: true,\r\n  copy: true,\r\n  paste: true,\r\n  selectAll: true,\r\n  deselectAll: true\r\n};\r\n\r\nexport class DiagramWidget extends React.Component {\r\n  static defaultProps = {\r\n    onChange: () => {},\r\n    actions: DEFAULT_ACTIONS\r\n  };\r\n\r\n  getActions() {\r\n    if (this.props.actions === null) {\r\n      return {};\r\n    }\r\n    return { ...DEFAULT_ACTIONS, ...(this.props.actions || {}) };\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      action: null,\r\n      actionType: 'unknown',\r\n      renderedNodes: false,\r\n      windowListener: null,\r\n      clipboard: null\r\n    };\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.diagramEngine.setCanvas(null);\r\n    window.removeEventListener('keydown', this.state.windowListener);\r\n  }\r\n\r\n  componentWillUpdate(nextProps) {\r\n    if (this.props.diagramEngine.diagramModel.id !== nextProps.diagramEngine.diagramModel.id) {\r\n      this.setState({ renderedNodes: false });\r\n      nextProps.diagramEngine.diagramModel.rendered = true;\r\n    }\r\n    if (!nextProps.diagramEngine.diagramModel.rendered) {\r\n      this.setState({ renderedNodes: false });\r\n      nextProps.diagramEngine.diagramModel.rendered = true;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (!this.state.renderedNodes) {\r\n      this.setState({...this.state,\r\n        renderedNodes: true\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { diagramEngine, onChange } = this.props;\r\n    diagramEngine.setCanvas(this.refs['canvas']);\r\n    diagramEngine.setForceUpdate(this.forceUpdate.bind(this));\r\n    const { selectAll, deselectAll, copy, paste, deleteItems } = this.getActions();\r\n\r\n    // Add a keyboard listener\r\n    this.setState({\r\n      renderedNodes: true,\r\n      windowListener: window.addEventListener('keydown', event => {\r\n        const selectedItems = diagramEngine.getDiagramModel().getSelectedItems();\r\n        const ctrl = (event.metaKey || event.ctrlKey);\r\n\r\n        // Select all\r\n        if (event.keyCode === 65 && ctrl && selectAll) {\r\n          this.selectAll(true);\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n\r\n        // Deselect all\r\n        if (event.keyCode === 68 && ctrl && deselectAll) {\r\n          this.selectAll(false);\r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n        }\r\n\r\n        // Copy selected\r\n        if (event.keyCode === 67 && ctrl && selectedItems.length && copy) {\r\n          this.copySelectedItems(selectedItems);\r\n        }\r\n\r\n        // Paste from clipboard\r\n        if (event.keyCode === 86 && ctrl && this.state.clipboard && paste) {\r\n          this.pasteSelectedItems(selectedItems);\r\n        }\r\n\r\n        if ([8, 46].indexOf(event.keyCode) !== -1 && selectedItems.length ) {\r\n          selectedItems.forEach(element => {\r\n            // 포인트 모델인 경우만 삭제 되도록 변경\r\n            // 노드는 버튼으로 링크는 포트의 X 로 삭제 하도록 변경\r\n            if (element instanceof PointModel) {\r\n              if (!(element.link.getLastPoint().id === element.id) && !(element.link.getFirstPoint().id === element.id)) {\r\n                element.remove();\r\n              }\r\n            }\r\n          });\r\n          onChange(diagramEngine.getDiagramModel().serializeDiagram(), { type: 'items-deleted', items: selectedItems });\r\n          this.forceUpdate();\r\n        }\r\n      })\r\n    });\r\n    window.focus();\r\n  }\r\n\r\n  copySelectedItems(selectedItems) {\r\n    const { diagramEngine, onChange } = this.props;\r\n\r\n    // Cannot copy anything without a node, so ensure some are selected\r\n    const nodes = _.filter(selectedItems, item => item instanceof NodeModel);\r\n\r\n    // If there are no nodes, do nothing\r\n    if (!nodes.length) {\r\n      return;\r\n    }\r\n\r\n    // Deserialize the existing diagramModel\r\n    const flatModel = diagramEngine.diagramModel.serializeDiagram();\r\n\r\n    // Create a new diagramModel to hold clipboard data\r\n    const newModel = new DiagramModel();\r\n\r\n    // Create map of GUIDs for replacement\r\n    const gMap = {};\r\n\r\n    // Track what was copied to send back to onChange\r\n    const copied = [];\r\n\r\n    // Iterate the nodes\r\n    _.forEach(flatModel.nodes, node => {\r\n      if (node.selected) {\r\n        // Get the node instance, updated the GUID and deserialize\r\n        const nodeOb = diagramEngine.getInstanceFactory(\"CustomNodeModel\").getInstance();\r\n        node.id = gMap[node.id] = Toolkit.UID();\r\n        nodeOb.deSerialize(node);\r\n\r\n        // Deserialize ports\r\n        _.forEach(node.ports, port => {\r\n          const portOb = diagramEngine.getInstanceFactory(\"DefaultPortModel\").getInstance();\r\n          port.id = gMap[port.id] = Toolkit.UID();\r\n          port.links = [];\r\n          portOb.deSerialize(port);\r\n          nodeOb.addPort(portOb);\r\n        });\r\n\r\n        nodeOb.setSelected(true);\r\n        newModel.addNode(nodeOb);\r\n        copied.push(nodeOb);\r\n      }\r\n    });\r\n\r\n    // Iterate the links\r\n    _.forEach(flatModel.links, link => {\r\n      if (link.selected) {\r\n        const linkOb = diagramEngine.getInstanceFactory(\"LinkModel\").getInstance();\r\n        link.id = gMap[link.id] = Toolkit.UID();\r\n\r\n        // Change point GUIDs and set selected\r\n        link.points.forEach(point => {\r\n          point.id = Toolkit.UID();\r\n          point.selected = true;\r\n        });\r\n\r\n        // Deserialize the link\r\n        linkOb.deSerialize(link);\r\n\r\n        // Only add the target if the node was copied and the target exists\r\n        if (gMap[link.target] && gMap[link.source]) {\r\n          linkOb.setTargetPort(newModel.getNode(gMap[link.target]).getPortFromID(gMap[link.targetPort]));\r\n        }\r\n\r\n        // Add the source if it exists\r\n        if (gMap[link.source]) {\r\n          linkOb.setSourcePort(newModel.getNode(gMap[link.source]).getPortFromID(gMap[link.sourcePort]));\r\n          newModel.addLink(linkOb);\r\n          copied.push(linkOb);\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState({ clipboard: newModel });\r\n    onChange(diagramEngine.getDiagramModel().serializeDiagram(), { type: 'items-copied', items: copied });\r\n  }\r\n\r\n  pasteSelectedItems() {\r\n    const { diagramEngine, onChange } = this.props;\r\n    const { clipboard } = this.state;\r\n    const pasted = [];\r\n\r\n    // Clear existing selections\r\n    diagramEngine.diagramModel.clearSelection();\r\n    this.forceUpdate();\r\n\r\n    // Add the nodes to the existing diagramModel\r\n    _.forEach(clipboard.nodes, node => {\r\n      diagramEngine.diagramModel.addNode(node);\r\n      pasted.push(node);\r\n    });\r\n    this.forceUpdate();\r\n\r\n    // Add links to the existing diagramModel\r\n    _.forEach(clipboard.links, link => {\r\n      diagramEngine.diagramModel.addLink(link);\r\n      pasted.push(link);\r\n    });\r\n    this.setState({ clipboard: null });\r\n\r\n    onChange(diagramEngine.getDiagramModel().serializeDiagram(), { type: 'items-pasted', items: pasted });\r\n  }\r\n\r\n  selectAll(select) {\r\n    const { diagramEngine, onChange } = this.props;\r\n    const { nodes, links } = diagramEngine.diagramModel;\r\n    const selected = [];\r\n\r\n    // Select all nodes\r\n    _.forEach(nodes, node => {\r\n      node.setSelected(select);\r\n      selected.push(node);\r\n    });\r\n\r\n    // Select all links\r\n    _.forEach(links, link => {\r\n      link.setSelected(select);\r\n      // Select all points\r\n      link.points.forEach(point => point.setSelected(select));\r\n      selected.push(link);\r\n    });\r\n\r\n    // Repaint\r\n    this.forceUpdate();\r\n\r\n    const type = select ? 'items-select-all' : 'items-deselect-all';\r\n    onChange(diagramEngine.getDiagramModel().serializeDiagram(), { type, items: selected });\r\n  }\r\n\r\n  /**\r\n   * Gets a model and element under the mouse cursor\r\n   */\r\n  getMouseElement(event) {\r\n    const { diagramModel } = this.props.diagramEngine;\r\n    const { target } = event;\r\n\r\n    // Look for a port\r\n    let element = target.closest('.port[data-name]');\r\n    if (element) {\r\n      const nodeElement = target.closest('.node[data-nodeid]');\r\n      return {\r\n        model: diagramModel.getNode(nodeElement.getAttribute('data-nodeid')).getPort(element.getAttribute('data-name')),\r\n        element\r\n      };\r\n    }\r\n\r\n    \r\n    // Look for a point\r\n    element = target.closest('.point[data-id]');\r\n    if (element) {\r\n      return {\r\n        model: diagramModel.getLink(element.getAttribute('data-linkid')).getPointModel(element.getAttribute('data-id')),\r\n        element\r\n      };\r\n    }\r\n\r\n    // Look for a link\r\n    element = target.closest('[data-linkid]');\r\n    if (element) {\r\n      return {\r\n        model: diagramModel.getLink(element.getAttribute('data-linkid')),\r\n        element\r\n      };\r\n    }\r\n\r\n    // Look for a node\r\n    element = target.closest('.node[data-nodeid]');\r\n    if (element) {\r\n      return {\r\n        model: diagramModel.getNode(element.getAttribute('data-nodeid')),\r\n        element\r\n      };\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  onWheel(event) {\r\n    const { diagramEngine } = this.props;\r\n    const actions = this.getActions();\r\n    if (!actions.zoom) {\r\n      return;\r\n    }\r\n    const diagramModel = diagramEngine.getDiagramModel();\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    diagramModel.setZoomLevel(diagramModel.getZoomLevel() + (event.deltaY / 60));\r\n    diagramEngine.enableRepaintEntities([]);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  onMouseMove(event) {\r\n    const { diagramEngine } = this.props;\r\n    const { action, actionType: currentActionType } = this.state;\r\n    const diagramModel = diagramEngine.getDiagramModel();\r\n    const { left, top } = this.refs.canvas.getBoundingClientRect();\r\n    const { multiselectDrag, canvasDrag, moveItems } = this.getActions();\r\n\r\n    // Select items so draw a bounding box\r\n    if (action instanceof SelectingAction && multiselectDrag) {      \r\n      const relative = diagramEngine.getRelativePoint(event.pageX, event.pageY);\r\n\r\n      _.forEach(diagramModel.getNodes(), node => {\r\n        if (action.containsElement(node.x, node.y, diagramModel)) {\r\n          node.setSelected(true);\r\n        }\r\n      });\r\n\r\n      _.forEach(diagramModel.getLinks(), link => {\r\n        let allSelected = true;\r\n        link.points.forEach(point => {\r\n          if (action.containsElement(point.x, point.y, diagramModel)) {\r\n            point.setSelected(true);\r\n          } else {\r\n            allSelected = false;\r\n          }\r\n        });\r\n\r\n        if (allSelected) {\r\n          link.setSelected(true);\r\n        }\r\n      });\r\n\r\n      action.mouseX2 = relative.x;\r\n      action.mouseY2 = relative.y;\r\n      this.setState({ action, actionType: 'items-drag-selected' });\r\n    } else if (action instanceof MoveItemsAction && moveItems) {\r\n      // Translate the items on the canvas\r\n      action.selectionModels.forEach(model => {\r\n        if (model.model instanceof NodeModel) {\r\n          model.model.x = Math.round((model.initialX + ((event.pageX - this.state.action.mouseX) / (diagramModel.getZoomLevel() / 100)))/50) * 50;\r\n          model.model.y = Math.round((model.initialY + ((event.pageY - this.state.action.mouseY) / (diagramModel.getZoomLevel() / 100)))/50) * 50;\r\n         \r\n        } else if (model.model instanceof PointModel) {\r\n          model.model.x = Math.round((model.initialX + ((event.pageX - this.state.action.mouseX) / (diagramModel.getZoomLevel() / 100)))/5) * 5;\r\n          model.model.y = Math.round((model.initialY + ((event.pageY - this.state.action.mouseY) / (diagramModel.getZoomLevel() / 100)))/5) * 5;\r\n\r\n        }\r\n      });\r\n\r\n      // Determine actionType, do not override some mouse down\r\n      const disallowed = ['link-created'];\r\n      let actionType = disallowed.indexOf(currentActionType) === -1 ? 'items-moved' : currentActionType;\r\n      if (action.selectionModels.length === 1 && action.selectionModels[0].model instanceof NodeModel) {\r\n        actionType = 'node-moved';\r\n      }\r\n      this.setState({ actionType });\r\n      \r\n    } else if (this.state.action instanceof MoveCanvasAction && canvasDrag) {\r\n      // Translate the actual canvas\r\n      diagramModel.setOffset(\r\n        action.initialOffsetX + (\r\n          (event.pageX - left - this.state.action.mouseX) / (diagramModel.getZoomLevel() / 100)\r\n        ),\r\n        action.initialOffsetY + (\r\n          (event.pageY - top - this.state.action.mouseY) / (diagramModel.getZoomLevel() / 100)\r\n        )\r\n      );\r\n      this.setState({ action, actionType: 'canvas-drag' });\r\n    }\r\n  }\r\n\r\n  onMouseDown(event) {\r\n    const { diagramEngine } = this.props;\r\n    const diagramModel = diagramEngine.getDiagramModel();\r\n    const model = this.getMouseElement(event);\r\n    const { selectItems, multiselect, multiselectDrag } = this.getActions();\r\n    \r\n    diagramEngine.clearRepaintEntities();\r\n    // Check if this is the canvas\r\n    if (model === null) {\r\n      // Check for a multiple selection\r\n      if (event.shiftKey && multiselectDrag) {\r\n        const relative = diagramEngine.getRelativePoint(event.pageX, event.pageY);\r\n        this.setState({\r\n          action: new SelectingAction(\r\n            relative.x, relative.y\r\n          ),\r\n          actionType: 'canvas-shift-select'\r\n        });\r\n      } else {\r\n        // This is a drag canvas event\r\n        const relative = diagramEngine.getRelativePoint(event.pageX, event.pageY);\r\n        diagramModel.clearSelection();\r\n\r\n        this.setState({\r\n          action: new MoveCanvasAction(relative.x, relative.y, diagramModel),\r\n          actionType: 'canvas-click'\r\n        });\r\n        \r\n      }\r\n      \r\n    } else if (model.model instanceof PortModel) {\r\n      const { linkInstanceFactory } = diagramEngine;\r\n\r\n      // This is a port element, we want to drag a link\r\n      const relative = diagramEngine.getRelativeMousePoint(event);\r\n      const link = linkInstanceFactory && linkInstanceFactory.getInstance() || new LinkModel();\r\n   \r\n      link.setSourcePort(model.model);\r\n\r\n      link.getFirstPoint().updateLocation(relative);\r\n      link.getLastPoint().updateLocation(relative);\r\n\r\n      diagramModel.clearSelection();\r\n      link.getLastPoint().setSelected(true);\r\n\r\n      diagramModel.addLink(link);\r\n      \r\n      this.setState({\r\n        action: new MoveItemsAction(event.pageX, event.pageY, diagramEngine),\r\n        actionType: 'link-created'\r\n      });\r\n          \r\n    } else if (selectItems && model.model !== null) {\r\n      // It's a direct click selection\r\n      let deselect = false;\r\n      const isSelected = model.model.isSelected();\r\n\r\n      // Clear selections if this wasn't a shift key or a click on a selected element\r\n      if (!event.shiftKey && !isSelected || !multiselect && !isSelected) {\r\n        diagramModel.clearSelection(false, true);\r\n      }\r\n\r\n      // Is this a deselect or select?\r\n      if (event.shiftKey && model.model.isSelected()) {\r\n        model.model.setSelected(false);\r\n        deselect = true;\r\n      } else {\r\n        model.model.setSelected(true);\r\n        diagramModel.nodeSelected(model);\r\n      }\r\n\r\n      // Get the selected items and filter out point model\r\n      const selected = diagramEngine.getDiagramModel().getSelectedItems();\r\n      const filtered = _.filter(selected, item => !(item instanceof PointModel));\r\n      const isLink = model.model instanceof LinkModel; \r\n      const isNode = model.model instanceof NodeModel;\r\n      const isPoint = model.model instanceof PointModel;\r\n\r\n      // Determine action type\r\n      let actionType = 'items-selected';\r\n      if (deselect && isLink) {\r\n        actionType = 'link-deselected';\r\n      } else if (deselect && isNode) {\r\n        actionType = 'node-deselected';\r\n      } else if (deselect && isPoint) {\r\n        actionType = 'point-deselected';\r\n      } else if ((selected.length === 1 || selected.length === 2 && filtered.length === 1) && isLink) {\r\n        actionType = 'link-selected';\r\n      } else if (selected.length === 1 && isNode) {\r\n        actionType = 'node-selected';\r\n      } else if (selected.length === 1 && isPoint) {\r\n        actionType = 'point-selected';\r\n        return\r\n      }\r\n\r\n      this.setState({\r\n        action: new MoveItemsAction(event.pageX, event.pageY, diagramEngine),\r\n        actionType\r\n      });\r\n    }\r\n  }\r\n\r\n  onMouseUp(event) {    \r\n    const { diagramEngine, onChange } = this.props;\r\n    const { action, actionType } = this.state;\r\n    const element = this.getMouseElement(event);\r\n    const actionOutput = {\r\n      type: actionType\r\n    };\r\n\r\n    console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\")\r\n    console.log(\"onMouseUp\")\r\n    console.log(action)\r\n    console.log(actionType)\r\n    console.log(element)\r\n    console.log(event)\r\n\r\n    if (element === null) {\r\n      // No element, this is a canvas event\r\n      // actionOutput.type = 'canvas-event';\r\n      actionOutput.event = event;\r\n    } else if (action instanceof MoveItemsAction) {\r\n      // Add the node model to the output\r\n      actionOutput.model = element.model;\r\n\r\n      // Check if we going to connect a link to something\r\n      action.selectionModels.forEach(model => {\r\n        // Only care about points connecting to things or being created\r\n        if (model.model instanceof PointModel) {\r\n          // Check if a point was created\r\n          let link = model.model.getLink();\r\n\r\n          let pointDelete = false;\r\n          if (element.element.tagName === 'circle' && actionOutput.type !== 'link-created') {           \r\n            pointDelete = true;\r\n            \r\n          } \r\n\r\n          // 타겟 포트가 없는 링크 생성시 삭제\r\n          if (element.element.tagName === 'circle' && actionOutput.type === 'link-created') {     \r\n            if (link.targetPort === null) {\r\n              model.model.getLink().remove();\r\n            }            \r\n          }\r\n       \r\n          if (element.model instanceof PortModel && !pointDelete) {\r\n            let links = diagramEngine.diagramModel.links;\r\n            let ignoreLink = false;\r\n            \r\n            // 동일 노드 내에서 링크 생성 확인\r\n            if (link.sourcePort.parentNode.id === element.model.parentNode.id) {\r\n              ignoreLink = true; \r\n            }\r\n\r\n            // Connect the link\r\n            model.model.getLink().setTargetPort(element.model);\r\n\r\n            if (!ignoreLink) {\r\n              // 동일한 링크가 생기는것 막기    \r\n              _.forEach(links, links => {              \r\n                if (((links.sourcePort.id === link.sourcePort.id && links.targetPort.id === link.targetPort.id)\r\n                || (links.targetPort.id === link.sourcePort.id && links.sourcePort.id === link.targetPort.id))\r\n                &&  links.id !== link.id){\r\n                  ignoreLink = true;  \r\n                  return false;\r\n                }\r\n              });\r\n              \r\n              let oPid = \"\";\r\n              if (!element.model.in) {\r\n                oPid = element.model.id;\r\n              } else {\r\n                oPid = link.sourcePort.id;\r\n\r\n              }\r\n              \r\n              // out 포트 1개만 생기게 막기\r\n              if (!ignoreLink) {\r\n                let eleLinks = links;\r\n\r\n                _.forEach(eleLinks, links => {    \r\n                  if (link.id !== links.id) {\r\n                    let sP = links.sourcePort;\r\n                    let tP = links.targetPort;\r\n                    \r\n                    if (oPid === sP.id) {\r\n                      if (!sP.in) {\r\n                        ignoreLink = true;  \r\n                        \r\n                        return false;\r\n                      }\r\n                    } else if (oPid === tP.id) {\r\n                      if (!tP.in) {\r\n                        ignoreLink = true;  \r\n\r\n                        return false;\r\n                      }\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }\r\n            \r\n\r\n            // in <-> out 만 연결 되도록 수정 + 동일한 링크가 생기는것 막기 + 동일 노드내 링크 막기\r\n            if (ignoreLink || model.model.getLink().sourcePort.in === model.model.getLink().targetPort.in) {\r\n              model.model.getLink().remove();\r\n              this.setState({ action: null, actionType: 'unknown' });\r\n\r\n            } else {\r\n              // Link was connected to a port, update the output\r\n              actionOutput.type = 'link-connected';\r\n              delete actionOutput.model;\r\n              actionOutput.linkModel = model.model.getLink();\r\n              actionOutput.portModel = element.model;\r\n\r\n              // 링크 생성후 바로 del 키 입력시 포인트가 삭제되는 에러 막기\r\n              model.model.setSelected(false);\r\n\r\n            }            \r\n          }\r\n          \r\n          if (element.model instanceof NodeModel) {\r\n             // 포트끼리가 아니라 노드에 연결 시도시 삭제\r\n            if (actionOutput.type === 'link-created') {\r\n              model.model.getLink().remove();\r\n            } \r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    const attachItems = ['items-selected', 'items-drag-selected', 'items-moved', 'node-deselected', 'link-deselected'];\r\n    if (attachItems.indexOf(actionType) !== -1) {\r\n      actionOutput.items = _.filter(diagramEngine.getDiagramModel().getSelectedItems(),\r\n        item => !(item instanceof PointModel));\r\n    }\r\n    \r\n    // if (actionType === 'items-moved') {\r\n    //   delete actionOutput.model;\r\n    // }\r\n    console.log(actionOutput.items)\r\n    console.log(\"@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\")\r\n\r\n    diagramEngine.clearRepaintEntities();\r\n    \r\n    if (actionOutput.type !== 'unknown' && event !== null) {\r\n      onChange(diagramEngine.getDiagramModel().serializeDiagram(), actionOutput);\r\n    }\r\n    this.setState({ action: null, actionType: 'unknown' });\r\n  }\r\n\r\n  renderLinkLayerWidget() {\r\n    const { diagramEngine } = this.props;\r\n    const diagramModel = diagramEngine.getDiagramModel();\r\n\r\n    return (\r\n      <LinkLayerWidget\r\n        diagramEngine={diagramEngine}\r\n        pointAdded={(point, event) => {\r\n\r\n          event.stopPropagation();\r\n          diagramModel.clearSelection(point);\r\n          this.setState({\r\n            action: new MoveItemsAction(event.pageX, event.pageY, diagramEngine)\r\n          });\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderSelector() {\r\n    const { action } = this.state;\r\n    const offsetWidth = this.refs.canvas && this.refs.canvas.offsetWidth || window.innerWidth;\r\n    const offsetHeight = this.refs.canvas && this.refs.canvas.offsetHeight || window.innerHeight;\r\n\r\n    if (!(action instanceof SelectingAction)) {\r\n      return null;\r\n    }\r\n\r\n    const style = {\r\n      width: Math.abs(action.mouseX2 - action.mouseX),\r\n      height: Math.abs(action.mouseY2 - action.mouseY),\r\n    };\r\n\r\n    if ((action.mouseX2 - action.mouseX) < 0) {\r\n      style.right = offsetWidth - action.mouseX;\r\n    } else {\r\n      style.left = action.mouseX;\r\n    }\r\n\r\n    if ((action.mouseY2 - action.mouseY) < 0) {\r\n      style.bottom = offsetHeight - action.mouseY;\r\n    } else {\r\n      style.top = action.mouseY;\r\n    }\r\n\r\n    return (\r\n      <div\r\n        className='selector'\r\n        style={style}\r\n      />\r\n    );\r\n  }\r\n\r\n  createNode(options) {\r\n    const { name, color, x, y, tp, tts } = options;\r\n    var node = new RJD.CustomNodeModel(name, color, tp, tts);\r\n    node.x = x;\r\n    node.y = y;\r\n    node.tp = tp;\r\n    node.tts = tts\r\n    return node;\r\n  }\r\n\r\n  createPort(node, options) {\r\n    const { isInput, name, label, data } = options;\r\n\r\n    return node.addPort(new RJD.DefaultPortModel(isInput, name, label, data));\r\n  }\r\n\r\n  onDrop(event) {\r\n    event.preventDefault();\r\n\r\n    const { diagramEngine, onChange } = this.props;\r\n    const relative = diagramEngine.getRelativePoint(event.pageX, event.pageY);\r\n    const diagramModel = diagramEngine.getDiagramModel();\r\n    \r\n    let nodeTp    = event.dataTransfer.getData('Type');\r\n    let nodeName  = event.dataTransfer.getData('title');\r\n    let nodeColor = event.dataTransfer.getData('color');\r\n    let nodeOutpt = event.dataTransfer.getData('port');\r\n    \r\n    let nodeOption = {\r\n      color: nodeColor,\r\n      kwdSco: 0,\r\n      name: nodeName,\r\n      tp: nodeTp,\r\n      tts: \"0\",\r\n      x: (relative.x / (diagramModel.getZoomLevel() / 100))  - diagramModel.offsetX,\r\n      y: (relative.y / (diagramModel.getZoomLevel() / 100))  - diagramModel.offsetY\r\n    }\r\n\r\n    const nextNode =  this.createNode(nodeOption)\r\n    \r\n    if (nodeTp === \"F\") {\r\n      this.createPort(nextNode, {\r\n        isInput: false,\r\n        name: \"네\"\r\n      })\r\n      this.createPort(nextNode, {\r\n        isInput: false,\r\n        name: \"아니요\"\r\n      })            \r\n    } else if (nodeTp === \"B\") {\r\n      this.createPort(nextNode, {\r\n        isInput: false,\r\n        name: \"인식\"\r\n      });\r\n    } else if (nodeTp === \"D\") {\r\n      this.createPort(nextNode, {\r\n        isInput: false,\r\n        name: \"날짜검출\"\r\n      });\r\n    } else {\r\n      for (let i = 0; i < nodeOutpt; i ++) {  \r\n        this.createPort(nextNode, {\r\n          isInput: false,\r\n          name: (i + 1) + \"번 인식\"\r\n        });              \r\n      }\r\n    }\r\n\r\n    \r\n\r\n    this.createPort(nextNode, {\r\n      isInput: true,\r\n      name: 'In'\r\n    });\r\n\r\n    diagramEngine.diagramModel.addNode(nextNode);\r\n\r\n    diagramEngine.clearRepaintEntities();\r\n    onChange(diagramEngine.getDiagramModel().serializeDiagram(), { type: 'items-added', items: nextNode });\r\n    this.setState({ action: null, actionType: 'unknown' });\r\n\r\n  }\r\n  render() {\r\n    const { diagramEngine } = this.props;\r\n    return (\r\n      <div       \r\n        onDrop={this.onDrop.bind(this)}\r\n        onDragOver={(event) => { event.preventDefault();}}\r\n      >\r\n        <div\r\n          ref='canvas'\r\n          className='react-js-diagrams-canvas'\r\n          onWheel={this.onWheel.bind(this)}\r\n          onMouseMove={this.onMouseMove.bind(this)}\r\n          onMouseDown={this.onMouseDown.bind(this)}\r\n          onMouseUp={this.onMouseUp.bind(this)}\r\n          style={{width:this.props.width, height:this.props.height}}\r\n        >\r\n          {\r\n            !this.state.renderedNodes ?\r\n            null\r\n            :\r\n            this.renderLinkLayerWidget()\r\n          }\r\n          <NodeLayerWidget diagramEngine={diagramEngine} tts={this.props.tts}/>        \r\n          {this.renderSelector()}\r\n        </div>\r\n      </div>      \r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { DefaultPortLabel } from './defaults/DefaultPortLabelWidget';\r\nimport {BasicButton as Button} from 'components';\r\nimport { Selectbox, Label, Textfield } from 'components';\r\nimport {ComLib} from 'common';\r\n\r\nexport class CustomNodeWidget extends React.Component { \r\n  constructor() {\r\n    super();\r\n    this.state ={      \r\n      ttsCont: \"\",\r\n      name: undefined,\r\n      arrTts: []\r\n    }\r\n  }\r\n  static defaultProps = {\r\n    node: null,\r\n  };\r\n\r\n  onRemove() {\r\n    const { node, diagramEngine } = this.props;\r\n    node.remove();\r\n    diagramEngine.forceUpdate();\r\n  }\r\n  addPort() {\r\n    const { node, diagramEngine } = this.props;\r\n    let lastLabel   = node.getOutPorts()[node.getOutPorts().length -1].label;\r\n    let indexOfCom  = lastLabel.indexOf('번');\r\n    let newLabel    = (node.getOutPorts().length + 1) + lastLabel.substring(indexOfCom, lastLabel.length);\r\n   \r\n    const portOb = diagramEngine.getInstanceFactory(\"DefaultPortModel\").getInstance();\r\n\r\n    portOb.in    = false;\r\n    portOb.label = newLabel;\r\n    portOb.name  = newLabel;\r\n\r\n    node.addPort(portOb);\r\n    \r\n    if (node.rowtype === 'r') {\r\n      node.rowtype = 'u';\r\n    } else if (node.rowtype === 'c') {\r\n      \r\n    } else if (node.rowtype === 'u') {\r\n\r\n    }\r\n    diagramEngine.forceUpdate();\r\n  }\r\n  delPort() {\r\n    const { node, diagramEngine } = this.props;\r\n    let port = node.getOutPorts()[node.getOutPorts().length -1];\r\n    node.removePort(port)\r\n\r\n    if (node.rowtype === 'r') {\r\n      node.rowtype = 'u';\r\n    } else if (node.rowtype === 'c') {\r\n      \r\n    } else if (node.rowtype === 'u') {\r\n\r\n    }\r\n\r\n    diagramEngine.forceUpdate();\r\n\r\n  }\r\n  componentDidMount () {\r\n\t\tlet { node } = this.props;\r\n    let arr = this.props.tts.filter(ele => ele['CODE'] === node.tts);\r\n    let arrTts = this.props.tts.filter(ele => (ele['CODE_TP'] === this.props.node.tp) || (ele['CODE_TP'] === 'N'))\r\n    \r\n    if (arr.length > 0) {      \r\n      this.setState({...this.state, ttsCont: arr[0]['CD_VAL'], name: node.name, arrTts: ComLib.convComboList(arrTts)});\r\n    } \r\n\t}\r\n  componentDidUpdate (prevProps, prevState) {\r\n    if (this.props.node.name !== this.state.name) {\r\n      this.setState({...this.state, name: this.props.node.name}, () => {\r\n        this.props.diagramEngine.getDiagramModel() ;\r\n      })\r\n    }\r\n  }\r\n\r\n  getInPorts() {\r\n    const { node } = this.props;\r\n    return node.getInPorts().map((port, i) => <DefaultPortLabel model={port} key={`in-port-${i}`} diagramEngine={this.props.diagramEngine}/>);\r\n  }\r\n\r\n  getOutPorts() {\r\n    const { node } = this.props;\r\n    return node.getOutPorts().map((port, i) => <DefaultPortLabel  model={port} key={`out-port-${i}`} portOrd={i} diagramEngine={this.props.diagramEngine}/>);\r\n  }\r\n\r\n  event = {\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n        let { node } = this.props;\r\n        node.tts = e.target.value;\r\n        \r\n        let arr = this.props.tts.filter(ele => ele['CODE'] === e.target.value);\r\n        \r\n        this.setState({...this.state, ttsCont: arr[0]['CD_VAL']});\r\n       \r\n      }\r\n    },\r\n    button: {\r\n      onClick: (e) => {\r\n        // 저장이 되있는 경우에만 할수 있도로 validation 추가 필요\r\n        let param = {id:this.props.node.id, port: \"IN\", snroTp:\"B\", name: this.props.node.name};\r\n        let option2 = { width: '600px', height: '830px', modaless: false, callback :  () => {} , param: param}\r\n        ComLib.openPop('BOT010101', '키워드 등록 : ' + this.props.node.name, option2)\r\n      }\r\n    },\r\n    input: {\r\n      onChange: (e) => {\r\n        let { node } = this.props;\r\n        \r\n        node.name = e.target.value;\r\n\r\n        if (node.rowtype == \"r\") {  \r\n          node.rowtype = \"u\";\r\n        }\r\n\r\n        this.setState({...this.state, name: e.target.value});\r\n        \r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { node } = this.props;\r\n    return (\r\n      node.tp === 'B' ?\r\n      <div className='basic-node' style={{ background: node.color }}>\r\n        <div className='title'>\r\n          <div className='name'>\r\n            <Textfield\r\n              width       = {200}\r\n              id          = {\"iptNdNM_\" + node.id}\r\n              name        = {\"iptNdNM_\" + node.id}\r\n              value       = {node.name}\r\n              placeholder = {\"\"}\r\n              minLength   = {0}\r\n              maxLength   = {20}\r\n              readOnly    = {false}\r\n              disabled    = {false}\r\n              onChange    = {this.event.input.onChange}\r\n              onKeyPress  = {this.event.input.onKeyPress}\r\n            />\r\n          </div>          \r\n          <Button\r\n            color='purple' \r\n            size ='xs'\r\n            fiiled= {true} innerImage={true} icon = {'trash'}\r\n            id = {\"btn_close_\" + node.id}\r\n            value = {\"\"}\r\n            disabled = {false}\r\n            hidden = {false}\r\n            onClick = {this.onRemove.bind(this)}\r\n            ml = {5}\r\n          />          \r\n        </div>\r\n        <div className='ports'>\r\n          <Button\r\n            color='purple' \r\n            fiiled= {true} innerImage={true} icon = {'eye'}\r\n            id = {\"btn_Kwd_\" + node.id}\r\n            value = {\"키워드 등록\"}\r\n            disabled = {false}\r\n            hidden = {false}\r\n            onClick = {this.event.button.onClick}\r\n          />\r\n          <Label value=\"TTS\"/>\r\n          <Selectbox\r\n            id       = {\"sel_TTS_\" + node.id}\r\n            value    = {node.tts}\r\n            dataset  = {this.state.arrTts}\r\n            width    = {\"200px\"}\r\n            disabled = {false}\r\n            onChange = {this.event.selectbox.onChange}            \r\n            tooltip     = {true}\r\n            tooltipCont = {this.state.ttsCont}\r\n          />\r\n          <div className='out'>\r\n            {this.getOutPorts()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      :\r\n      node.tp === 'S' ?\r\n      <div className='basic-node' style={{ background: node.color }}>\r\n        <div className='title'>\r\n          <div className='name'>\r\n            <Textfield\r\n              width       = {200}\r\n              id          = {\"iptNdNM_\" + node.id}\r\n              name        = {\"iptNdNM_\" + node.id}\r\n              value       = {node.name}\r\n              placeholder = {\"\"}\r\n              minLength   = {0}\r\n              maxLength   = {20}\r\n              readOnly    = {false}\r\n              disabled    = {false}\r\n              onChange    = {this.event.input.onChange}\r\n              onKeyPress  = {this.event.input.onKeyPress}\r\n            />\r\n          </div>\r\n          <Button\r\n            color='purple' \r\n            size ='xs'\r\n            fiiled= {true} innerImage={true} icon = {'add'}\r\n            id = {node.name + \"btn_add_\" + node.id}\r\n            value = {\"\"}\r\n            disabled = {false}\r\n            hidden = {false}\r\n            tooltip={\"선택지 추가\"}\r\n            onClick = {this.addPort.bind(this)}\r\n            ml = {5}\r\n          /> \r\n          <Button\r\n            color='purple' \r\n            size ='xs'\r\n            fiiled= {true} innerImage={true} icon = {'del'}\r\n            id = {node.name + \"btn_del_\" + node.id}\r\n            value = {\"\"}\r\n            disabled = {false}\r\n            hidden = {false}\r\n            tooltip={\"선택지 삭제\"}\r\n            onClick = {this.delPort.bind(this)}\r\n            ml = {5}\r\n          /> \r\n          <Button\r\n            color='purple' \r\n            size ='xs'\r\n            fiiled= {true} innerImage={true} icon = {'trash'}\r\n            id = {node.name + \"btn_close_\" + node.id}\r\n            value = {\"\"}\r\n            disabled = {false}\r\n            hidden = {false}\r\n            onClick = {this.onRemove.bind(this)}\r\n            ml = {5}\r\n          />   \r\n        </div>\r\n        <div className='ports'>\r\n          <div className='in'>\r\n            {this.getInPorts()}\r\n          </div>\r\n          <Label value=\"TTS\"/>\r\n          <Selectbox\r\n            id       = {node.name + \"sel_TTS_\" + node.id}\r\n            value    = {node.tts}\r\n            dataset  = {this.state.arrTts}\r\n            width    = {\"200px\"}\r\n            disabled = {false}\r\n            onChange = {this.event.selectbox.onChange}            \r\n            tooltip     = {true}\r\n            tooltipCont = {this.state.ttsCont}\r\n          />\r\n          <div className='out'>            \r\n            {this.getOutPorts()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      :\r\n      <div className='basic-node' style={{ background: node.color }}>\r\n        <div className='title'>\r\n          <div className='name'>\r\n            <Textfield\r\n              width       = {200}\r\n              id          = {\"iptNdNM_\" + node.id}\r\n              name        = {\"iptNdNM_\" + node.id}\r\n              value       = {node.name}\r\n              placeholder = {\"\"}\r\n              minLength   = {0}\r\n              maxLength   = {20}\r\n              readOnly    = {false}\r\n              disabled    = {false}\r\n              onChange    = {this.event.input.onChange}\r\n              onKeyPress  = {this.event.input.onKeyPress}\r\n            />\r\n          </div>\r\n          <Button\r\n            color='purple' \r\n            size ='xs'\r\n            fiiled= {true} innerImage={true} icon = {'trash'}\r\n            id = {node.name + \"btn_close_\" + node.id}\r\n            value = {\"\"}\r\n            disabled = {false}\r\n            hidden = {false}\r\n            onClick = {this.onRemove.bind(this)}\r\n            ml = {5}\r\n          />   \r\n        </div>\r\n        <div className='ports'>\r\n          <div className='in'>\r\n            {this.getInPorts()}\r\n          </div>\r\n          <Label value=\"TTS\"/>\r\n          <Selectbox\r\n            id       = {node.name + \"sel_TTS_\" + node.id}\r\n            value    = {node.tts}\r\n            dataset  = {this.state.arrTts}\r\n            width    = {\"200px\"}\r\n            disabled = {false}\r\n            onChange = {this.event.selectbox.onChange}            \r\n            tooltip     = {true}\r\n            tooltipCont = {this.state.ttsCont}\r\n          />\r\n          {node.tp === 'E'\r\n            ?\r\n              null\r\n            :\r\n              <div className='out'>\r\n                {this.getOutPorts()}\r\n              </div>\r\n          }          \r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { NodeWidgetFactory } from './WidgetFactories';\r\nimport { CustomNodeWidget } from './CustomNodeWidget';\r\n\r\nexport class CustomNodeFactory extends NodeWidgetFactory {\r\n  constructor() {\r\n    super('default');\r\n  }\r\n\r\n  generateReactWidget(diagramEngine, node, tts) {\r\n    return (\r\n      <CustomNodeWidget node={node} diagramEngine={diagramEngine} tts={tts}/>\r\n    );\r\n  }\r\n}\r\n","import _ from 'lodash';\r\nimport { NodeModel } from './Common';\r\nimport { AbstractInstanceFactory } from './AbstractInstanceFactory';\r\n\r\nexport class CustomNodeInstanceFactory extends AbstractInstanceFactory {\r\n  constructor() {\r\n    super('CustomNodeModel');\r\n  }\r\n\r\n  getInstance() {\r\n    return new CustomNodeModel();\r\n  }\r\n}\r\n\r\nexport class CustomNodeModel extends NodeModel {\r\n  constructor(name = 'Untitled', color = 'rgb(0,192,255)') {\r\n    super('default');\r\n    this.name = name;\r\n    this.color = color;\r\n    this.tp = \"\";\r\n    this.tts = \"\";\r\n    this.kwdSco = null;\r\n    this.rowtype = \"c\"\r\n  }\r\n\r\n  deSerialize(object) {\r\n    super.deSerialize(object);\r\n    this.name  = object.name;\r\n    this.color = object.color;\r\n    this.tp    = object.tp;\r\n    this.tts   = object.tts;\r\n    this.kwdSco= object.kwdSco;\r\n    this.rowtype= object.rowtype;\r\n  }\r\n\r\n  serialize() {\r\n    return _.merge(super.serialize(), {\r\n      name  : this.name,\r\n      color : this.color,\r\n      tp    : this.tp,\r\n      tts   : this.tts,\r\n      kwdSco: this.kwdSco,\r\n      rowtype: this.rowtype\r\n    });\r\n  }\r\n\r\n  getInPorts() {\r\n    return _.filter(this.ports,(portModel) => portModel.in);\r\n  }\r\n\r\n  getOutPorts() {\r\n    return _.filter(this.ports,(portModel) => !portModel.in);\r\n  }\r\n}\r\n","import React from 'react';\r\nimport * as RJD from './components/main';\r\nimport './components/sass.scss';\r\nimport {BasicButton as Button, ComponentPanel, FlexPanel} from 'components';\r\nimport _ from 'lodash';\r\n\r\nclass Diagram extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n            // Setup the diagram engine\r\n        this.engine = new RJD.DiagramEngine();\r\n        this.engine.registerNodeFactory(new RJD.CustomNodeFactory());\r\n        this.engine.registerLinkFactory(new RJD.DefaultLinkFactory());\r\n        this.engine.registerInstanceFactory(new RJD.CustomNodeInstanceFactory());\r\n        this.engine.registerInstanceFactory(new RJD.DefaultPortInstanceFactory());\r\n        this.engine.registerInstanceFactory(new RJD.LinkInstanceFactory());\r\n        // Setup the diagram model\r\n        this.model = new RJD.DiagramModel();\r\n        \r\n    }\r\n        \r\n    componentDidUpdate (prevProps, prevState) {\r\n        if (this.props.dsSnroNode.length !== 0 ) {\r\n            const { engine } = this;\r\n\r\n            let newModel =      new RJD.DiagramModel();\r\n            \r\n            let newNode = [];\r\n            let propsNode = this.props.dsSnroNode;\r\n\r\n            let newLink = []; \r\n            let propsLink = this.props.dsSnroLink;\r\n\r\n            for (let i = 0; i < propsNode.length; i ++) {\r\n                                \r\n                let ndPorts = propsNode[i].ND_PORTS;\r\n                \r\n                let portArray = ndPorts.split(\"||\");   \r\n                let jsonNdPort = [];\r\n                for (let j = 0; j < portArray.length; j ++) {\r\n                    \r\n                    let jsonString = JSON.parse(portArray[j])\r\n                    jsonNdPort.push({id: \"\", name: \"\", selected: false, _class: \"DefaultPortModel\", label: \"\", parentNode: \"\", links: [], data: null, in: false});\r\n                    jsonNdPort[j].id = jsonString.id;\r\n                    jsonNdPort[j].name = jsonString.name;\r\n                    jsonNdPort[j].label = jsonString.name;\r\n                    jsonNdPort[j].parentNode = propsNode[i].ND_UUID;\r\n                    jsonNdPort[j].links = jsonString.links;\r\n                    jsonNdPort[j].in = jsonString.in;\r\n                }\r\n\r\n                newNode.push({color:\"\", extras: {}, id: \"\", name: \"\", ports: \"\", selected: false, tp: \"\", tts: undefined, type: \"default\", x:0, y:0, _class: \"CustomNodeModel\", rowtype:'r'});\r\n                newNode[i].color  = propsNode[i].ND_COLOR;\r\n                newNode[i].id     = propsNode[i].ND_UUID;\r\n                newNode[i].name   = propsNode[i].ND_NM;\r\n                newNode[i].ports  = jsonNdPort;\r\n                newNode[i].tp     = propsNode[i].ND_TP;\r\n                newNode[i].tts    = propsNode[i].ND_TTS_ID;\r\n                newNode[i].x      = propsNode[i].ND_X;\r\n                newNode[i].y      = propsNode[i].ND_Y;\r\n                newNode[i].kwdSco = propsNode[i].ND_KWD_SCO;\r\n                newNode[i].rowtype= propsNode[i].rowtype;\r\n            }\r\n\r\n            for (let i = 0; i < propsLink.length; i ++) {\r\n                newLink.push({extras: {}, id: \"\", points: \"\", selected: false, source: \"\", sourcePort: \"\", target: \"\", targetPort: \"\", type: \"default\", _class: \"LinkModel\", rowtype:'r'});\r\n                newLink[i].id         = propsLink[i].LK_UUID;\r\n                newLink[i].points     = JSON.parse(propsLink[i].LK_POINT);\r\n                newLink[i].source     = propsLink[i].LK_ST_ND;\r\n                newLink[i].sourcePort = propsLink[i].LK_ST_ND_PORT;\r\n                newLink[i].target     = propsLink[i].LK_EN_ND;\r\n                newLink[i].targetPort = propsLink[i].LK_EN_ND_PORT;\r\n                newLink[i].rowtype    = propsLink[i].rowtype;\r\n            }\r\n         \r\n           \r\n            _.forEach(newNode, node => {\r\n                const nodeOb = engine.getInstanceFactory(\"CustomNodeModel\").getInstance();\r\n                nodeOb.deSerialize(node);\r\n                                \r\n                // Deserialize ports\r\n                _.forEach(node.ports, port => {\r\n                  const portOb = engine.getInstanceFactory(\"DefaultPortModel\").getInstance();\r\n                  portOb.deSerialize(port);\r\n                  nodeOb.addPort(portOb);\r\n                });\r\n          \r\n                newModel.addNode(nodeOb);\r\n            });\r\n\r\n            _.forEach(newLink, link => {\r\n                const linkOb = engine.getInstanceFactory(\"LinkModel\").getInstance();\r\n                linkOb.deSerialize(link);\r\n                \r\n                if (link.target && newModel.getNode(link.target)) {\r\n                  linkOb.setTargetPort(newModel.getNode(link.target).getPortFromID(link.targetPort));\r\n                }\r\n          \r\n                if (link.source && newModel.getNode(link.source)) {\r\n                  linkOb.setSourcePort(newModel.getNode(link.source).getPortFromID(link.sourcePort));\r\n                }\r\n          \r\n                newModel.addLink(linkOb);\r\n            });\r\n            newModel.setZoomLevel(newModel.getZoomLevel() + (-1000 / 60));\r\n            engine.setDiagramModel(newModel);      \r\n            this.model = newModel;\r\n           \r\n            // engine.enableRepaintEntities([]);\r\n            // this.forceUpdate();\r\n        }\r\n\t}\r\n\r\n    serializationSave = () => {\r\n        const { engine, model } = this;\r\n        // We need this to help the system know what models to create form the JSON\r\n       \r\n        // Serialize the model\r\n        const str = JSON.stringify(model.serializeDiagram());\r\n        // console.log(str);\r\n\r\n        let diagramNode  = JSON.parse(str).nodes;\r\n        let diagramlinks = JSON.parse(str).links;\r\n        let saveNode = [];\r\n        for (let i = 0; i < diagramNode.length; i ++) {\r\n            let jsonProts = diagramNode[i].ports;\r\n            let savePort = \"\";\r\n\r\n            for (let j = 0; j < jsonProts.length; j ++) {\r\n                savePort += `{\"id\":\"` + jsonProts[j].id + `\",`;\r\n                savePort += `\"name\":\"` + jsonProts[j].name + `\",`;\r\n                savePort += `\"links\":` + JSON.stringify(jsonProts[j].links) + `,`;\r\n                savePort += `\"in\":` + jsonProts[j].in +`}`;\r\n                if (j + 1 !== jsonProts.length) {\r\n                    savePort += \"||\";\r\n                }\r\n            }\r\n            saveNode.push({EXTRAS    : {}\r\n                         , ND_COLOR  : diagramNode[i].color\r\n                         , ND_UUID   : diagramNode[i].id\r\n                         , ND_KWD_SCO: diagramNode[i].kwdSco\r\n                         , ND_NM     : diagramNode[i].name \r\n                         , ND_PORTS  : savePort\r\n                         , ND_TP     : diagramNode[i].tp \r\n                         , ND_TTS_ID : diagramNode[i].tts \r\n                         , ND_X      : diagramNode[i].x   \r\n                         , ND_Y      : diagramNode[i].y  \r\n                         , rowtype   : diagramNode[i].rowtype   })\r\n        }\r\n\r\n\r\n        let saveLink = [];\r\n        for (let i = 0; i < diagramlinks.length; i ++) {\r\n\r\n            saveLink.push({LK_EN_ND     : diagramlinks[i].target\r\n                         , LK_EN_ND_PORT: diagramlinks[i].targetPort\r\n                         , LK_POINT     : JSON.stringify(diagramlinks[i].points) \r\n                         , LK_ST_ND     : diagramlinks[i].source \r\n                         , LK_ST_ND_PORT: diagramlinks[i].sourcePort \r\n                         , LK_TP        : diagramlinks[i].type \r\n                         , LK_UUID      : diagramlinks[i].id\r\n                         , rowtype      : diagramlinks[i].rowtype  })\r\n        }\r\n\r\n        this.props.onSave({node: saveNode, link: saveLink});\r\n    }\r\n\r\n    onChange(model, action) {\r\n        let propNode = this.props.dsSnroNode;\r\n        let propLink = this.props.dsSnroLink;\r\n        console.log(\"onChange\")\r\n        console.log(model)\r\n        console.log(action)\r\n        switch(action.type) {\r\n            case 'node-moved':\r\n                for (let i = 0; i < propNode.length; i ++) {\r\n                    if (action.model.id === propNode[i].ND_UUID) {                        \r\n                        if (action.model.x      === propNode[i].ND_X \r\n                         && action.model.y      === propNode[i].ND_Y\r\n                         && action.model.kwdSco === propNode[i].ND_KWD_SCO\r\n                         && action.model.name   === propNode[i].ND_NM\r\n                         && action.model.tp     === propNode[i].ND_TP\r\n                         && action.model.tts    === propNode[i].ND_TTS_ID\r\n                         && action.model.rowtype === \"r\") {\r\n                            action.model.rowtype = \"r\"\r\n\r\n                        } else {\r\n                            action.model.rowtype = \"u\"\r\n                            \r\n                        }\r\n                        break;\r\n                    }            \r\n                }\r\n                for (let i = 0; i < model.nodes.length; i ++) {\r\n                    if (action.model.id === model.nodes[i].id) {\r\n                        model.nodes[i].x       = action.model.x;\r\n                        model.nodes[i].y       = action.model.y;\r\n                        model.nodes[i].kwdSco  = action.model.kwdSco;\r\n                        model.nodes[i].name    = action.model.name;\r\n                        model.nodes[i].tp      = action.model.tp;\r\n                        model.nodes[i].tts     = action.model.tts;\r\n                        model.nodes[i].rowtype = action.model.rowtype;\r\n                        break;\r\n                    }            \r\n                }\r\n                \r\n                break;\r\n            case 'link-connected':\r\n                \r\n                for (let i = 0; i < propLink.length; i ++) {\r\n                    if (action.linkModel.id === propLink[i].LK_UUID) {\r\n                        // if (action.model.x      === propLink[i].LK_EN_ND \r\n                        //  && action.model.y      === propLink[i].LK_EN_ND_PORT\r\n                        //  && action.model.kwdSco === propLink[i].LK_POINT\r\n                        //  && action.model.name   === propLink[i].LK_ST_ND\r\n                        //  && action.model.tp     === propLink[i].LK_ST_ND_PORT) {\r\n                        //     action.model.rowtype = \"r\"\r\n                        // } else {\r\n                        //     action.model.rowtype = \"u\"\r\n                        // }\r\n                        break;\r\n                    }            \r\n                }\r\n                break;\r\n            case 'point-created':\r\n                \r\n                break;\r\n            \r\n            case 'items-moved': \r\n                // console.log(action.model.id);\r\n                // console.log(model)\r\n                // console.log(action.model.link.id)\r\n                \r\n                // for (let i = 0; i < propLink.length; i ++) {\r\n                //     if (action.model.link.id === propLink[i].LK_UUID) {\r\n                        \r\n                //         action.model.link.rowtype = \"u\"\r\n                //         break;\r\n                //     }            \r\n                // }\r\n                // for (let i = 0; i < model.nodes.length; i ++) {\r\n                //     if (action.model.id === model.nodes[i].id) {\r\n                //         model.nodes[i].x       = action.model.x;\r\n                //         model.nodes[i].y       = action.model.y;\r\n                //         model.nodes[i].kwdSco  = action.model.kwdSco;\r\n                //         model.nodes[i].name    = action.model.name;\r\n                //         model.nodes[i].tp      = action.model.tp;\r\n                //         model.nodes[i].tts     = action.model.tts;\r\n                //         model.nodes[i].rowtype = action.model.rowtype;\r\n                //         break;\r\n                //     }            \r\n                // }\r\n\r\n                break;\r\n            case 'items-deleted':\r\n\r\n                break;\r\n            default: break;\r\n        }\r\n        this.model.deSerializeDiagram(model,this.engine);\r\n        this.engine.setDiagramModel(this.model);\r\n    }\r\n\r\n    render() {      \r\n        const { engine, model } = this;\r\n        // Render the canvas\r\n        return ( \r\n                    <FlexPanel>\r\n                        <ComponentPanel>\r\n                            <RJD.DiagramWidget \r\n                                ref={\"test\"} \r\n                                diagramEngine={engine} \r\n                                width=\"100%\" \r\n                                height={this.props.height} \r\n                                tts={this.props.tts} \r\n                                actions={{deleteItems: false, canvasDrag: true, multiselect: true, multiselectDrag: true, selectAll: false}}                                \r\n                                onChange={this.onChange.bind(this)}\r\n                            />\r\n                        </ComponentPanel>\r\n                        <ComponentPanel width={'20%'}>\r\n                            <div className=\"basic-btn\" \r\n                                style={{background: \"rgb(238 89 78)\", marginTop: \"0px\"}} \r\n                                draggable \r\n                                id = \"B\"\r\n                                onDragStart={(event) => {\r\n                                    event.dataTransfer.setData(\"Type\", event.target.id);\r\n                                    event.dataTransfer.setData(\"title\", \"시나리오 추가\");\r\n                                    event.dataTransfer.setData(\"color\", \"rgb(238 89 78)\");\r\n                                    event.dataTransfer.setData(\"port\", 1);\r\n                                }}\r\n                            >\r\n                                <div className=\"title\">\r\n                                    <div className=\"name\">시나리오 추가</div>\r\n                                </div>                                \r\n                            </div>\r\n\r\n                            <div className=\"basic-btn\" \r\n                                style={{background: \"rgb(171 198 0)\"}} \r\n                                draggable \r\n                                id = \"F\"\r\n                                onDragStart={(event) => {\r\n                                    event.dataTransfer.setData(\"Type\", event.target.id);\r\n                                    event.dataTransfer.setData(\"title\", \"Y/N 프로세스\");\r\n                                    event.dataTransfer.setData(\"color\", \"rgb(171 198 0)\");\r\n                                    event.dataTransfer.setData(\"port\", 3);\r\n                                }}\r\n                            >\r\n                                <div className=\"title\">\r\n                                    <div className=\"name\">Y/N 프로세스</div>\r\n                                </div>                                \r\n                            </div>\r\n\r\n                            <div className=\"basic-btn\" \r\n                                style={{background: \"rgb(83, 116, 245)\"}} \r\n                                draggable \r\n                                id = \"S\"\r\n                                onDragStart={(event) => {\r\n                                    event.dataTransfer.setData(\"Type\", event.target.id);\r\n                                    event.dataTransfer.setData(\"title\", \"선택지 프로세스\");\r\n                                    event.dataTransfer.setData(\"color\", \"rgb(83, 116, 245)\");\r\n                                    event.dataTransfer.setData(\"port\", 4);  \r\n                                }}\r\n                            >\r\n                                <div className=\"title\">\r\n                                    <div className=\"name\">선택지 프로세스</div>\r\n                                </div>                                \r\n                            </div>\r\n                            <div className=\"basic-btn\" \r\n                                style={{background: \"rgb(251 185 0)\"}} \r\n                                draggable \r\n                                id = \"D\"\r\n                                onDragStart={(event) => {\r\n                                    event.dataTransfer.setData(\"Type\", event.target.id);\r\n                                    event.dataTransfer.setData(\"title\", \"날짜 검출\");\r\n                                    event.dataTransfer.setData(\"color\", \"rgb(251 185 0)\");\r\n                                    event.dataTransfer.setData(\"port\", 2);\r\n                                    \r\n\r\n                                }}\r\n                            >\r\n                                <div className=\"title\">\r\n                                    <div className=\"name\">날짜 검출</div>\r\n                                </div>                                \r\n                            </div>\r\n\r\n                            <div className=\"basic-btn\" \r\n                                style={{background: \"rgb(210 215 218)\"}} \r\n                                draggable \r\n                                id = \"E\"\r\n                                onDragStart={(event) => {\r\n                                    event.dataTransfer.setData(\"Type\", event.target.id);\r\n                                    event.dataTransfer.setData(\"title\", \"시나리오 종료\");\r\n                                    event.dataTransfer.setData(\"color\", \"rgb(210 215 218)\");\r\n                                    event.dataTransfer.setData(\"port\", 0);\r\n                                }}\r\n                            >\r\n                                <div className=\"title\">\r\n                                    <div className=\"name\">시나리오 종료</div>\r\n                                </div>                                \r\n                            </div>\r\n\r\n                        </ComponentPanel>\r\n                    </FlexPanel>\r\n                );\r\n    }\r\n}\r\n\r\nexport default Diagram;","/* ***************************************************\r\n *\texplain : 그리드 내부에서 필요한 util 정의\r\n *\twritten by sh.kwon\r\n * ***************************************************/\r\n\r\n/**\r\n * Generate a tree structure from flat data.\r\n *\r\n * @param {!Object[]} flatData\r\n * @param {!function=} getKey - Function to get the key from the nodeData\r\n * @param {!function=} getParentKey - Function to get the parent key from the nodeData\r\n * @param {string|number=} rootKey - The value returned by `getParentKey` that corresponds to the root node.\r\n *                                  For example, if your nodes have id 1-99, you might use rootKey = 0\r\n *\r\n * @return {Object[]} treeData - The flat data represented as a tree\r\n */\r\n\r\n  /**\r\n * Performs a depth-first traversal over all of the node descendants,\r\n * incrementing currentIndex by 1 for each\r\n */\r\nfunction getNodeDataAtTreeIndexOrNextIndex({\r\n\ttargetIndex,\r\n\tnode,\r\n\tcurrentIndex,\r\n\tgetNodeKey,\r\n\tpath = [],\r\n\tlowerSiblingCounts = [],\r\n\tignoreCollapsed = true,\r\n\tisPseudoRoot = false,\r\n  }) {\r\n\t// The pseudo-root is not considered in the path\r\n\tconst selfPath = !isPseudoRoot\r\n\t  ? [...path, getNodeKey({ node, treeIndex: currentIndex })]\r\n\t  : [];\r\n  \r\n\t// Return target node when found\r\n\tif (currentIndex === targetIndex) {\r\n\t  return {\r\n\t\tnode,\r\n\t\tlowerSiblingCounts,\r\n\t\tpath: selfPath,\r\n\t  };\r\n\t}\r\n  \r\n\t// Add one and continue for nodes with no children or hidden children\r\n\tif (!node.children || (ignoreCollapsed && node.expanded !== true)) {\r\n\t  return { nextIndex: currentIndex + 1 };\r\n\t}\r\n  \r\n\t// Iterate over each child and their descendants and return the\r\n\t// target node if childIndex reaches the targetIndex\r\n\tlet childIndex = currentIndex + 1;\r\n\tconst childCount = node.children.length;\r\n\tfor (let i = 0; i < childCount; i += 1) {\r\n\t  const result = getNodeDataAtTreeIndexOrNextIndex({\r\n\t\tignoreCollapsed,\r\n\t\tgetNodeKey,\r\n\t\ttargetIndex,\r\n\t\tnode: node.children[i],\r\n\t\tcurrentIndex: childIndex,\r\n\t\tlowerSiblingCounts: [...lowerSiblingCounts, childCount - i - 1],\r\n\t\tpath: selfPath,\r\n\t  });\r\n  \r\n\t  if (result.node) {\r\n\t\treturn result;\r\n\t  }\r\n  \r\n\t  childIndex = result.nextIndex;\r\n\t}\r\n  \r\n\t// If the target node is not found, return the farthest traversed index\r\n\treturn { nextIndex: childIndex };\r\n  }\r\n  \r\n  export function getDescendantCount({ node, ignoreCollapsed = true }) {\r\n\treturn (\r\n\t  getNodeDataAtTreeIndexOrNextIndex({\r\n\t\tgetNodeKey: () => {},\r\n\t\tignoreCollapsed,\r\n\t\tnode,\r\n\t\tcurrentIndex: 0,\r\n\t\ttargetIndex: -1,\r\n\t  }).nextIndex - 1\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Walk all descendants of the given node, depth-first\r\n   *\r\n   * @param {Object} args - Function parameters\r\n   * @param {function} args.callback - Function to call on each node\r\n   * @param {function} args.getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean} args.ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} args.isPseudoRoot - If true, this node has no real data, and only serves\r\n   *                                        as the parent of all the nodes in the tree\r\n   * @param {Object} args.node - A tree node\r\n   * @param {Object=} args.parentNode - The parent node of `node`\r\n   * @param {number} args.currentIndex - The treeIndex of `node`\r\n   * @param {number[]|string[]} args.path - Array of keys leading up to node to be changed\r\n   * @param {number[]} args.lowerSiblingCounts - An array containing the count of siblings beneath the\r\n   *                                             previous nodes in this path\r\n   *\r\n   * @return {number|false} nextIndex - Index of the next sibling of `node`,\r\n   *                                    or false if the walk should be terminated\r\n   */\r\n  function walkDescendants({\r\n\tcallback,\r\n\tgetNodeKey,\r\n\tignoreCollapsed,\r\n\tisPseudoRoot = false,\r\n\tnode,\r\n\tparentNode = null,\r\n\tcurrentIndex,\r\n\tpath = [],\r\n\tlowerSiblingCounts = [],\r\n  }) {\r\n\t// The pseudo-root is not considered in the path\r\n\tconst selfPath = isPseudoRoot\r\n\t  ? []\r\n\t  : [...path, getNodeKey({ node, treeIndex: currentIndex })];\r\n\tconst selfInfo = isPseudoRoot\r\n\t  ? null\r\n\t  : {\r\n\t\t  node,\r\n\t\t  parentNode,\r\n\t\t  path: selfPath,\r\n\t\t  lowerSiblingCounts,\r\n\t\t  treeIndex: currentIndex,\r\n\t\t};\r\n  \r\n\tif (!isPseudoRoot) {\r\n\t  const callbackResult = callback(selfInfo);\r\n  \r\n\t  // Cut walk short if the callback returned false\r\n\t  if (callbackResult === false) {\r\n\t\treturn false;\r\n\t  }\r\n\t}\r\n  \r\n\t// Return self on nodes with no children or hidden children\r\n\tif (\r\n\t  !node.children ||\r\n\t  (node.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t) {\r\n\t  return currentIndex;\r\n\t}\r\n  \r\n\t// Get all descendants\r\n\tlet childIndex = currentIndex;\r\n\tconst childCount = node.children.length;\r\n\tif (typeof node.children !== 'function') {\r\n\t  for (let i = 0; i < childCount; i += 1) {\r\n\t\tchildIndex = walkDescendants({\r\n\t\t  callback,\r\n\t\t  getNodeKey,\r\n\t\t  ignoreCollapsed,\r\n\t\t  node: node.children[i],\r\n\t\t  parentNode: isPseudoRoot ? null : node,\r\n\t\t  currentIndex: childIndex + 1,\r\n\t\t  lowerSiblingCounts: [...lowerSiblingCounts, childCount - i - 1],\r\n\t\t  path: selfPath,\r\n\t\t});\r\n  \r\n\t\t// Cut walk short if the callback returned false\r\n\t\tif (childIndex === false) {\r\n\t\t  return false;\r\n\t\t}\r\n\t  }\r\n\t}\r\n  \r\n\treturn childIndex;\r\n  }\r\n  \r\n  /**\r\n   * Perform a change on the given node and all its descendants, traversing the tree depth-first\r\n   *\r\n   * @param {Object} args - Function parameters\r\n   * @param {function} args.callback - Function to call on each node\r\n   * @param {function} args.getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean} args.ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} args.isPseudoRoot - If true, this node has no real data, and only serves\r\n   *                                        as the parent of all the nodes in the tree\r\n   * @param {Object} args.node - A tree node\r\n   * @param {Object=} args.parentNode - The parent node of `node`\r\n   * @param {number} args.currentIndex - The treeIndex of `node`\r\n   * @param {number[]|string[]} args.path - Array of keys leading up to node to be changed\r\n   * @param {number[]} args.lowerSiblingCounts - An array containing the count of siblings beneath the\r\n   *                                             previous nodes in this path\r\n   *\r\n   * @return {number|false} nextIndex - Index of the next sibling of `node`,\r\n   *                                    or false if the walk should be terminated\r\n   */\r\n  function mapDescendants({\r\n\tcallback,\r\n\tgetNodeKey,\r\n\tignoreCollapsed,\r\n\tisPseudoRoot = false,\r\n\tnode,\r\n\tparentNode = null,\r\n\tcurrentIndex,\r\n\tpath = [],\r\n\tlowerSiblingCounts = [],\r\n  }) {\r\n\tconst nextNode = { ...node };\r\n\t\r\n\t// The pseudo-root is not considered in the path\r\n\tconst selfPath = isPseudoRoot\r\n\t  ? []\r\n\t  : [...path, getNodeKey({ node: nextNode, treeIndex: currentIndex })];\r\n\tconst selfInfo = {\r\n\t  node: nextNode,\r\n\t  parentNode,\r\n\t  path: selfPath,\r\n\t  lowerSiblingCounts,\r\n\t  treeIndex: currentIndex,\r\n\t};\r\n  \r\n\t// Return self on nodes with no children or hidden children\r\n\tif (\r\n\t  !nextNode.children ||\r\n\t  (nextNode.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t) {\r\n\t  return {\r\n\t\ttreeIndex: currentIndex,\r\n\t\tnode: callback(selfInfo),\r\n\t  };\r\n\t}\r\n  \r\n\t// Get all descendants\r\n\tlet childIndex = currentIndex;\r\n\tconst childCount = nextNode.children.length;\r\n\tif (typeof nextNode.children !== 'function') {\r\n\t  nextNode.children = nextNode.children.map((child, i) => {\r\n\t\tconst mapResult = mapDescendants({\r\n\t\t  callback,\r\n\t\t  getNodeKey,\r\n\t\t  ignoreCollapsed,\r\n\t\t  node: child,\r\n\t\t  parentNode: isPseudoRoot ? null : nextNode,\r\n\t\t  currentIndex: childIndex + 1,\r\n\t\t  lowerSiblingCounts: [...lowerSiblingCounts, childCount - i - 1],\r\n\t\t  path: selfPath,\r\n\t\t});\r\n\t\tchildIndex = mapResult.treeIndex;\r\n  \r\n\t\treturn mapResult.node;\r\n\t  });\r\n\t}\r\n  \r\n\treturn {\r\n\t  node: callback(selfInfo),\r\n\t  treeIndex: childIndex,\r\n\t};\r\n  }\r\n  \r\n  /**\r\n   * Count all the visible (expanded) descendants in the tree data.\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   *\r\n   * @return {number} count\r\n   */\r\n  export function getVisibleNodeCount({ treeData }) {\r\n\tconst traverse = node => {\r\n\t  if (\r\n\t\t!node.children ||\r\n\t\tnode.expanded !== true ||\r\n\t\ttypeof node.children === 'function'\r\n\t  ) {\r\n\t\treturn 1;\r\n\t  }\r\n  \r\n\t  return (\r\n\t\t1 +\r\n\t\tnode.children.reduce(\r\n\t\t  (total, currentNode) => total + traverse(currentNode),\r\n\t\t  0\r\n\t\t)\r\n\t  );\r\n\t};\r\n  \r\n\treturn treeData.reduce(\r\n\t  (total, currentNode) => total + traverse(currentNode),\r\n\t  0\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Get the <targetIndex>th visible node in the tree data.\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!number} targetIndex - The index of the node to search for\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   *\r\n   * @return {{\r\n   *      node: Object,\r\n   *      path: []string|[]number,\r\n   *      lowerSiblingCounts: []number\r\n   *  }|null} node - The node at targetIndex, or null if not found\r\n   */\r\n  export function getVisibleNodeInfoAtIndex({\r\n\ttreeData,\r\n\tindex: targetIndex,\r\n\tgetNodeKey,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return null;\r\n\t}\r\n  \r\n\t// Call the tree traversal with a pseudo-root node\r\n\tconst result = getNodeDataAtTreeIndexOrNextIndex({\r\n\t  targetIndex,\r\n\t  getNodeKey,\r\n\t  node: {\r\n\t\tchildren: treeData,\r\n\t\texpanded: true,\r\n\t  },\r\n\t  currentIndex: -1,\r\n\t  path: [],\r\n\t  lowerSiblingCounts: [],\r\n\t  isPseudoRoot: true,\r\n\t});\r\n  \r\n\tif (result.node) {\r\n\t  return result;\r\n\t}\r\n  \r\n\treturn null;\r\n  }\r\n  \r\n  /**\r\n   * Walk descendants depth-first and call a callback on each\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {function} callback - Function to call on each node\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return void\r\n   */\r\n  export function walk({\r\n\ttreeData,\r\n\tgetNodeKey,\r\n\tcallback,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return;\r\n\t}\r\n  \r\n\twalkDescendants({\r\n\t  callback,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  isPseudoRoot: true,\r\n\t  node: { children: treeData },\r\n\t  currentIndex: -1,\r\n\t  path: [],\r\n\t  lowerSiblingCounts: [],\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * Perform a depth-first transversal of the descendants and\r\n   *  make a change to every node in the tree\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {function} callback - Function to call on each node\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object[]} changedTreeData - The changed tree data\r\n   */\r\n  export function map({\r\n\ttreeData,\r\n\tgetNodeKey,\r\n\tcallback,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return [];\r\n\t}\r\n  \r\n\treturn mapDescendants({\r\n\t  callback,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  isPseudoRoot: true,\r\n\t  node: { children: treeData },\r\n\t  currentIndex: -1,\r\n\t  path: [],\r\n\t  lowerSiblingCounts: [],\r\n\t}).node.children;\r\n  }\r\n  \r\n  /**\r\n   * Expand or close every node in the tree\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {?boolean} expanded - Whether the node is expanded or not\r\n   *\r\n   * @return {Object[]} changedTreeData - The changed tree data\r\n   */\r\n  export function toggleExpandedForAll({ treeData, expanded = true }) {\r\n\treturn map({\r\n\t  treeData,\r\n\t  callback: ({ node }) => ({ ...node, expanded }),\r\n\t  getNodeKey: ({ treeIndex }) => treeIndex,\r\n\t  ignoreCollapsed: false,\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * Replaces node at path with object, or callback-defined object\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be changed\r\n   * @param {function|any} newNode - Node to replace the node at the path with, or a function producing the new node\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object[]} changedTreeData - The changed tree data\r\n   */\r\n  export function changeNodeAtPath({\r\n\ttreeData,\r\n\tpath,\r\n\tnewNode,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tconst RESULT_MISS = 'RESULT_MISS';\r\n\tconst traverse = ({\r\n\t  isPseudoRoot = false,\r\n\t  node,\r\n\t  currentTreeIndex,\r\n\t  pathIndex,\r\n\t}) => {\r\n\t  if (\r\n\t\t!isPseudoRoot &&\r\n\t\tgetNodeKey({ node, treeIndex: currentTreeIndex }) !== path[pathIndex]\r\n\t  ) {\r\n\t\treturn RESULT_MISS;\r\n\t  }\r\n\t  \r\n\t  if (pathIndex >= path.length - 1) {\r\n\t\t// If this is the final location in the path, return its changed form\r\n\t\treturn typeof newNode === 'function'\r\n\t\t  ? newNode({ node, treeIndex: currentTreeIndex })\r\n\t\t  : newNode;\r\n\t  }\r\n\t  \t\t\r\n\t  if (!node.children) {\r\n\t\t// If this node is part of the path, but has no children, return the unchanged node\r\n\t\tthrow new Error('Path referenced children of node with no children.');\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  let nextTreeIndex = currentTreeIndex + 1;\r\n\t  for (let i = 0; i < node.children.length; i += 1) {\r\n\t\tconst result = traverse({\r\n\t\t  node: node.children[i],\r\n\t\t  currentTreeIndex: nextTreeIndex,\r\n\t\t  pathIndex: pathIndex + 1,\r\n\t\t});\r\n\t\t// If the result went down the correct path\r\n\t\tif (result !== RESULT_MISS) {\r\n\t\t  if (result) {\r\n\t\t\t// If the result was truthy (in this case, an object),\r\n\t\t\t//  pass it to the next level of recursion up\r\n\t\t\treturn {\r\n\t\t\t  ...node,\r\n\t\t\t  children: [\r\n\t\t\t\t...node.children.slice(0, i),\r\n\t\t\t\tresult,\r\n\t\t\t\t...node.children.slice(i + 1),\r\n\t\t\t  ],\r\n\t\t\t};\r\n\t\t  }\r\n\t\t  // If the result was falsy (returned from the newNode function), then\r\n\t\t  //  delete the node from the array.\r\n\t\t  return {\r\n\t\t\t...node,\r\n\t\t\tchildren: [\r\n\t\t\t  ...node.children.slice(0, i),\r\n\t\t\t  ...node.children.slice(i + 1),\r\n\t\t\t],\r\n\t\t  };\r\n\t\t}\r\n\t\tnextTreeIndex +=\r\n\t\t  1 + getDescendantCount({ node: node.children[i], ignoreCollapsed });\r\n\t  }\r\n  \r\n\t  return RESULT_MISS;\r\n\t};\r\n\t\r\n\t// Use a pseudo-root node in the beginning traversal\r\n\tconst result = traverse({\r\n\t  node: { children: treeData },\r\n\t  currentTreeIndex: -1,\r\n\t  pathIndex: -1,\r\n\t  isPseudoRoot: true,\r\n\t});\r\n\r\n\tif (result === RESULT_MISS) {\r\n\t  throw new Error('No node found at the given path.');\r\n\t}\r\n  \r\n\treturn result.children;\r\n  }\r\n  \r\n  /**\r\n   * Removes the node at the specified path and returns the resulting treeData.\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be deleted\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object[]} changedTreeData - The tree data with the node removed\r\n   */\r\n  export function removeNodeAtPath({\r\n\ttreeData,\r\n\tpath,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\treturn changeNodeAtPath({\r\n\t  treeData,\r\n\t  path,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  newNode: null, // Delete the node\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * Removes the node at the specified path and returns the resulting treeData.\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be deleted\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object} result\r\n   * @return {Object[]} result.treeData - The tree data with the node removed\r\n   * @return {Object} result.node - The node that was removed\r\n   * @return {number} result.treeIndex - The previous treeIndex of the removed node\r\n   */\r\n  export function removeNode({\r\n\ttreeData,\r\n\tpath,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tlet removedNode = null;\r\n\tlet removedTreeIndex = null;\r\n\tconst nextTreeData = changeNodeAtPath({\r\n\t  treeData,\r\n\t  path,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  newNode: ({ node, treeIndex }) => {\r\n\t\t// Store the target node and delete it from the tree\r\n\t\tremovedNode = node;\r\n\t\tremovedTreeIndex = treeIndex;\r\n  \r\n\t\treturn null;\r\n\t  },\r\n\t});\r\n  \r\n\treturn {\r\n\t  treeData: nextTreeData,\r\n\t  node: removedNode,\r\n\t  treeIndex: removedTreeIndex,\r\n\t};\r\n  }\r\n  \r\n  /**\r\n   * Gets the node at the specified path\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be deleted\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object|null} nodeInfo - The node info at the given path, or null if not found\r\n   */\r\n  export function getNodeAtPath({\r\n\ttreeData,\r\n\tpath,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tlet foundNodeInfo = null;\r\n  \ttry {\r\n\t  changeNodeAtPath({\r\n\t\ttreeData,\r\n\t\tpath,\r\n\t\tgetNodeKey,\r\n\t\tignoreCollapsed,\r\n\t\tnewNode: ({ node, treeIndex }) => {\r\n\t\t  foundNodeInfo = { node, treeIndex };\r\n\t\t  return node;\r\n\t\t},\r\n\t  });\r\n\t} catch (err) {\r\n\t  // Ignore the error -- the null return will be explanation enough\r\n\t}\r\n  \r\n\treturn foundNodeInfo;\r\n  }\r\n  \r\n  /**\r\n   * Adds the node to the specified parent and returns the resulting treeData.\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {!Object} newNode - The node to insert\r\n   * @param {number|string} parentKey - The key of the to-be parentNode of the node\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} expandParent - If true, expands the parentNode specified by parentPath\r\n   * @param {boolean=} addAsFirstChild - If true, adds new node as first child of tree\r\n   *\r\n   * @return {Object} result\r\n   * @return {Object[]} result.treeData - The updated tree data\r\n   * @return {number} result.treeIndex - The tree index at which the node was inserted\r\n   */\r\n  export function addNodeUnderParent({\r\n\ttreeData,\r\n\tnewNode,\r\n\tparentKey = null,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n\texpandParent = false,\r\n\taddAsFirstChild = false,\r\n  }) {\r\n\tif (parentKey === null) {\r\n\t  return addAsFirstChild\r\n\t\t? {\r\n\t\t\ttreeData: [newNode, ...(treeData || [])],\r\n\t\t\ttreeIndex: 0,\r\n\t\t  }\r\n\t\t: {\r\n\t\t\ttreeData: [...(treeData || []), newNode],\r\n\t\t\ttreeIndex: (treeData || []).length,\r\n\t\t  };\r\n\t}\r\n  \r\n\tlet insertedTreeIndex = null;\r\n\tlet hasBeenAdded = false;\r\n\r\n\tconst changedTreeData = map({\r\n\t  treeData,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  callback: ({ node, treeIndex, path }) => {\r\n\t\tconst key = path ? path[path.length - 1] : null;\r\n\t\t// Return nodes that are not the parent as-is\r\n\t\tif (hasBeenAdded || key !== parentKey) {\r\n\t\t  return node;\r\n\t\t}\r\n\t\thasBeenAdded = true;\r\n  \r\n\t\tconst parentNode = {\r\n\t\t  ...node,\r\n\t\t};\r\n  \r\n\t\tif (expandParent) {\r\n\t\t  parentNode.expanded = true;\r\n\t\t}\r\n  \r\n\t\t// If no children exist yet, just add the single newNode\r\n\t\tif (!parentNode.children) {\r\n\t\t  insertedTreeIndex = treeIndex + 1;\r\n\t\t  return {\r\n\t\t\t...parentNode,\r\n\t\t\tchildren: [newNode],\r\n\t\t  };\r\n\t\t}\r\n  \r\n\t\tif (typeof parentNode.children === 'function') {\r\n\t\t  throw new Error('Cannot add to children defined by a function');\r\n\t\t}\r\n  \r\n\t\tlet nextTreeIndex = treeIndex + 1;\r\n\t\tfor (let i = 0; i < parentNode.children.length; i += 1) {\r\n\t\t  nextTreeIndex +=\r\n\t\t\t1 +\r\n\t\t\tgetDescendantCount({ node: parentNode.children[i], ignoreCollapsed });\r\n\t\t}\r\n  \r\n\t\tinsertedTreeIndex = nextTreeIndex;\r\n  \r\n\t\tconst children = addAsFirstChild\r\n\t\t  ? [newNode, ...parentNode.children]\r\n\t\t  : [...parentNode.children, newNode];\r\n  \r\n\t\treturn {\r\n\t\t  ...parentNode,\r\n\t\t  children,\r\n\t\t};\r\n\t  },\r\n\t});\r\n  \r\n\tif (!hasBeenAdded) {\r\n\t  throw new Error('No node found with the given key.');\r\n\t}\r\n  \r\n\treturn {\r\n\t  treeData: changedTreeData,\r\n\t  treeIndex: insertedTreeIndex,\r\n\t};\r\n  }\r\n  \r\n  function addNodeAtDepthAndIndex({\r\n\ttargetDepth,\r\n\tminimumTreeIndex,\r\n\tnewNode,\r\n\tignoreCollapsed,\r\n\texpandParent,\r\n\tisPseudoRoot = false,\r\n\tisLastChild,\r\n\tnode,\r\n\tcurrentIndex,\r\n\tcurrentDepth,\r\n\tgetNodeKey,\r\n\tpath = [],\r\n  }) {\r\n\tconst selfPath = n =>\r\n\t  isPseudoRoot\r\n\t\t? []\r\n\t\t: [...path, getNodeKey({ node: n, treeIndex: currentIndex })];\r\n  \r\n\t// If the current position is the only possible place to add, add it\r\n\tif (\r\n\t  currentIndex >= minimumTreeIndex - 1 ||\r\n\t  (isLastChild && !(node.children && node.children.length))\r\n\t) {\r\n\t  if (typeof node.children === 'function') {\r\n\t\tthrow new Error('Cannot add to children defined by a function');\r\n\t  } else {\r\n\t\tconst extraNodeProps = expandParent ? { expanded: true } : {};\r\n\t\tconst nextNode = {\r\n\t\t  ...node,\r\n  \r\n\t\t  ...extraNodeProps,\r\n\t\t  children: node.children ? [newNode, ...node.children] : [newNode],\r\n\t\t};\r\n  \r\n\t\treturn {\r\n\t\t  node: nextNode,\r\n\t\t  nextIndex: currentIndex + 2,\r\n\t\t  insertedTreeIndex: currentIndex + 1,\r\n\t\t  parentPath: selfPath(nextNode),\r\n\t\t  parentNode: isPseudoRoot ? null : nextNode,\r\n\t\t};\r\n\t  }\r\n\t}\r\n  \r\n\t// If this is the target depth for the insertion,\r\n\t// i.e., where the newNode can be added to the current node's children\r\n\tif (currentDepth >= targetDepth - 1) {\r\n\t  // Skip over nodes with no children or hidden children\r\n\t  if (\r\n\t\t!node.children ||\r\n\t\ttypeof node.children === 'function' ||\r\n\t\t(node.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t  ) {\r\n\t\treturn { node, nextIndex: currentIndex + 1 };\r\n\t  }\r\n  \r\n\t  // Scan over the children to see if there's a place among them that fulfills\r\n\t  // the minimumTreeIndex requirement\r\n\t  let childIndex = currentIndex + 1;\r\n\t  let insertedTreeIndex = null;\r\n\t  let insertIndex = null;\r\n\t  for (let i = 0; i < node.children.length; i += 1) {\r\n\t\t// If a valid location is found, mark it as the insertion location and\r\n\t\t// break out of the loop\r\n\t\tif (childIndex >= minimumTreeIndex) {\r\n\t\t  insertedTreeIndex = childIndex;\r\n\t\t  insertIndex = i;\r\n\t\t  break;\r\n\t\t}\r\n  \r\n\t\t// Increment the index by the child itself plus the number of descendants it has\r\n\t\tchildIndex +=\r\n\t\t  1 + getDescendantCount({ node: node.children[i], ignoreCollapsed });\r\n\t  }\r\n  \r\n\t  // If no valid indices to add the node were found\r\n\t  if (insertIndex === null) {\r\n\t\t// If the last position in this node's children is less than the minimum index\r\n\t\t// and there are more children on the level of this node, return without insertion\r\n\t\tif (childIndex < minimumTreeIndex && !isLastChild) {\r\n\t\t  return { node, nextIndex: childIndex };\r\n\t\t}\r\n  \r\n\t\t// Use the last position in the children array to insert the newNode\r\n\t\tinsertedTreeIndex = childIndex;\r\n\t\tinsertIndex = node.children.length;\r\n\t  }\r\n  \r\n\t  // Insert the newNode at the insertIndex\r\n\t  const nextNode = {\r\n\t\t...node,\r\n\t\tchildren: [\r\n\t\t  ...node.children.slice(0, insertIndex),\r\n\t\t  newNode,\r\n\t\t  ...node.children.slice(insertIndex),\r\n\t\t],\r\n\t  };\r\n  \r\n\t  // Return node with successful insert result\r\n\t  return {\r\n\t\tnode: nextNode,\r\n\t\tnextIndex: childIndex,\r\n\t\tinsertedTreeIndex,\r\n\t\tparentPath: selfPath(nextNode),\r\n\t\tparentNode: isPseudoRoot ? null : nextNode,\r\n\t  };\r\n\t}\r\n  \r\n\t// Skip over nodes with no children or hidden children\r\n\tif (\r\n\t  !node.children ||\r\n\t  typeof node.children === 'function' ||\r\n\t  (node.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t) {\r\n\t  return { node, nextIndex: currentIndex + 1 };\r\n\t}\r\n  \r\n\t// Get all descendants\r\n\tlet insertedTreeIndex = null;\r\n\tlet pathFragment = null;\r\n\tlet parentNode = null;\r\n\tlet childIndex = currentIndex + 1;\r\n\tlet newChildren = node.children;\r\n\tif (typeof newChildren !== 'function') {\r\n\t  newChildren = newChildren.map((child, i) => {\r\n\t\tif (insertedTreeIndex !== null) {\r\n\t\t  return child;\r\n\t\t}\r\n  \r\n\t\tconst mapResult = addNodeAtDepthAndIndex({\r\n\t\t  targetDepth,\r\n\t\t  minimumTreeIndex,\r\n\t\t  newNode,\r\n\t\t  ignoreCollapsed,\r\n\t\t  expandParent,\r\n\t\t  isLastChild: isLastChild && i === newChildren.length - 1,\r\n\t\t  node: child,\r\n\t\t  currentIndex: childIndex,\r\n\t\t  currentDepth: currentDepth + 1,\r\n\t\t  getNodeKey,\r\n\t\t  path: [], // Cannot determine the parent path until the children have been processed\r\n\t\t});\r\n  \r\n\t\tif ('insertedTreeIndex' in mapResult) {\r\n\t\t  ({\r\n\t\t\tinsertedTreeIndex,\r\n\t\t\tparentNode,\r\n\t\t\tparentPath: pathFragment,\r\n\t\t  } = mapResult);\r\n\t\t}\r\n  \r\n\t\tchildIndex = mapResult.nextIndex;\r\n  \r\n\t\treturn mapResult.node;\r\n\t  });\r\n\t}\r\n  \r\n\tconst nextNode = { ...node, children: newChildren };\r\n\tconst result = {\r\n\t  node: nextNode,\r\n\t  nextIndex: childIndex,\r\n\t};\r\n  \r\n\tif (insertedTreeIndex !== null) {\r\n\t  result.insertedTreeIndex = insertedTreeIndex;\r\n\t  result.parentPath = [...selfPath(nextNode), ...pathFragment];\r\n\t  result.parentNode = parentNode;\r\n\t}\r\n  \r\n\treturn result;\r\n  }\r\n  \r\n  /**\r\n   * Insert a node into the tree at the given depth, after the minimum index\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!number} depth - The depth to insert the node at (the first level of the array being depth 0)\r\n   * @param {!number} minimumTreeIndex - The lowest possible treeIndex to insert the node at\r\n   * @param {!Object} newNode - The node to insert into the tree\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} expandParent - If true, expands the parent of the inserted node\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   *\r\n   * @return {Object} result\r\n   * @return {Object[]} result.treeData - The tree data with the node added\r\n   * @return {number} result.treeIndex - The tree index at which the node was inserted\r\n   * @return {number[]|string[]} result.path - Array of keys leading to the node location after insertion\r\n   * @return {Object} result.parentNode - The parent node of the inserted node\r\n   */\r\n  export function insertNode({\r\n\ttreeData,\r\n\tdepth: targetDepth,\r\n\tminimumTreeIndex,\r\n\tnewNode,\r\n\tgetNodeKey = () => {},\r\n\tignoreCollapsed = true,\r\n\texpandParent = false,\r\n  }) {\r\n\tif (!treeData && targetDepth === 0) {\r\n\t  return {\r\n\t\ttreeData: [newNode],\r\n\t\ttreeIndex: 0,\r\n\t\tpath: [getNodeKey({ node: newNode, treeIndex: 0 })],\r\n\t\tparentNode: null,\r\n\t  };\r\n\t}\r\n  \r\n\tconst insertResult = addNodeAtDepthAndIndex({\r\n\t  targetDepth,\r\n\t  minimumTreeIndex,\r\n\t  newNode,\r\n\t  ignoreCollapsed,\r\n\t  expandParent,\r\n\t  getNodeKey,\r\n\t  isPseudoRoot: true,\r\n\t  isLastChild: true,\r\n\t  node: { children: treeData },\r\n\t  currentIndex: -1,\r\n\t  currentDepth: -1,\r\n\t});\r\n  \r\n\tif (!('insertedTreeIndex' in insertResult)) {\r\n\t  throw new Error('No suitable position found to insert.');\r\n\t}\r\n  \r\n\tconst treeIndex = insertResult.insertedTreeIndex;\r\n\treturn {\r\n\t  treeData: insertResult.node.children,\r\n\t  treeIndex,\r\n\t  path: [\r\n\t\t...insertResult.parentPath,\r\n\t\tgetNodeKey({ node: newNode, treeIndex }),\r\n\t  ],\r\n\t  parentNode: insertResult.parentNode,\r\n\t};\r\n  }\r\n  \r\n  /**\r\n   * Get tree data flattened.\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {{\r\n   *      node: Object,\r\n   *      path: []string|[]number,\r\n   *      lowerSiblingCounts: []number\r\n   *  }}[] nodes - The node array\r\n   */\r\n  export function getFlatDataFromTree({\r\n\ttreeData,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return [];\r\n\t}\r\n  \r\n\tconst flattened = [];\r\n\twalk({\r\n\t  treeData,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  callback: nodeInfo => {\r\n\t\tflattened.push(nodeInfo);\r\n\t  },\r\n\t});\r\n\treturn flattened;\r\n  }\r\n  \r\n  /**\r\n   * Generate a tree structure from flat data.\r\n   *\r\n   * @param {!Object[]} flatData\r\n   * @param {!function=} getKey - Function to get the key from the nodeData\r\n   * @param {!function=} getParentKey - Function to get the parent key from the nodeData\r\n   * @param {string|number=} rootKey - The value returned by `getParentKey` that corresponds to the root node.\r\n   *                                  For example, if your nodes have id 1-99, you might use rootKey = 0\r\n   *\r\n   * @return {Object[]} treeData - The flat data represented as a tree\r\n   */\r\n  export function getTreeFromFlatData({\r\n\tflatData,\r\n\tgetKey = node => node.id,\r\n\tgetParentKey = node => node.parentId,\r\n\trootKey = '0',\r\n  }) {\r\n\tif (!flatData) {\r\n\t  return [];\r\n\t}\r\n\r\n\tconst childrenToParents = {};\r\n\r\n\tflatData.forEach(child => {\r\n\t\tconst parentKey = getParentKey(child);\r\n\t\tif (parentKey in childrenToParents) {\r\n\t\t\tchildrenToParents[parentKey].push(child);\r\n\t\t} else {\r\n\t\t\tchildrenToParents[parentKey] = [child];\r\n\t\t}\r\n\t});\r\n\r\n\tif (!(rootKey in childrenToParents)) {\r\n\t  return [];\r\n\t}\r\n  \r\n\tconst trav = parent => {\r\n\t  const parentKey = getKey(parent);\r\n\t  if (parentKey in childrenToParents) {\r\n\t\treturn {\r\n\t\t  ...parent,\r\n\t\t  children: childrenToParents[parentKey].map(child => trav(child)),\r\n\t\t};\r\n\t  }\r\n\t  \r\n\t  return { ...parent };\r\n\t};\r\n\t\r\n\treturn childrenToParents[rootKey].map(child => trav(child));\r\n  }\r\n  \r\n  /**\r\n   * Check if a node is a descendant of another node.\r\n   *\r\n   * @param {!Object} older - Potential ancestor of younger node\r\n   * @param {!Object} younger - Potential descendant of older node\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  export function isDescendant(older, younger) {\r\n\treturn (\r\n\t  !!older.children &&\r\n\t  typeof older.children !== 'function' &&\r\n\t  older.children.some(\r\n\t\tchild => child === younger || isDescendant(child, younger)\r\n\t  )\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Get the maximum depth of the children (the depth of the root node is 0).\r\n   *\r\n   * @param {!Object} node - Node in the tree\r\n   * @param {?number} depth - The current depth\r\n   *\r\n   * @return {number} maxDepth - The deepest depth in the tree\r\n   */\r\n  export function getDepth(node, depth = 0) {\r\n\tif (!node.children) {\r\n\t  return depth;\r\n\t}\r\n  \r\n\tif (typeof node.children === 'function') {\r\n\t  return depth + 1;\r\n\t}\r\n  \r\n\treturn node.children.reduce(\r\n\t  (deepest, child) => Math.max(deepest, getDepth(child, depth + 1)),\r\n\t  depth\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Find nodes matching a search query in the tree,\r\n   *\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {?string|number} searchQuery - Function returning a boolean to indicate whether the node is a match or not\r\n   * @param {!function} searchMethod - Function returning a boolean to indicate whether the node is a match or not\r\n   * @param {?number} searchFocusOffset - The offset of the match to focus on\r\n   *                                      (e.g., 0 focuses on the first match, 1 on the second)\r\n   * @param {boolean=} expandAllMatchPaths - If true, expands the paths to any matched node\r\n   * @param {boolean=} expandFocusMatchPaths - If true, expands the path to the focused node\r\n   *\r\n   * @return {Object[]} matches - An array of objects containing the matching `node`s, their `path`s and `treeIndex`s\r\n   * @return {Object[]} treeData - The original tree data with all relevant nodes expanded.\r\n   *                               If expandAllMatchPaths and expandFocusMatchPaths are both false,\r\n   *                               it will be the same as the original tree data.\r\n   */\r\n  export function find({\r\n\tgetNodeKey,\r\n\ttreeData,\r\n\tsearchQuery,\r\n\tsearchMethod,\r\n\tsearchFocusOffset,\r\n\texpandAllMatchPaths = false,\r\n\texpandFocusMatchPaths = true,\r\n  }) {\r\n\tlet matchCount = 0;\r\n\tconst trav = ({ isPseudoRoot = false, node, currentIndex, path = [] }) => {\r\n\t  let matches = [];\r\n\t  let isSelfMatch = false;\r\n\t  let hasFocusMatch = false;\r\n\t  // The pseudo-root is not considered in the path\r\n\t  const selfPath = isPseudoRoot\r\n\t\t? []\r\n\t\t: [...path, getNodeKey({ node, treeIndex: currentIndex })];\r\n\t  const extraInfo = isPseudoRoot\r\n\t\t? null\r\n\t\t: {\r\n\t\t\tpath: selfPath,\r\n\t\t\ttreeIndex: currentIndex,\r\n\t\t  };\r\n  \r\n\t  // Nodes with with children that aren't lazy\r\n\t  const hasChildren =\r\n\t\tnode.children &&\r\n\t\ttypeof node.children !== 'function' &&\r\n\t\tnode.children.length > 0;\r\n  \r\n\t  // Examine the current node to see if it is a match\r\n\t  if (!isPseudoRoot && searchMethod({ ...extraInfo, node, searchQuery })) {\r\n\t\tif (matchCount === searchFocusOffset) {\r\n\t\t  hasFocusMatch = true;\r\n\t\t}\r\n  \r\n\t\t// Keep track of the number of matching nodes, so we know when the searchFocusOffset\r\n\t\t//  is reached\r\n\t\tmatchCount += 1;\r\n  \r\n\t\t// We cannot add this node to the matches right away, as it may be changed\r\n\t\t//  during the search of the descendants. The entire node is used in\r\n\t\t//  comparisons between nodes inside the `matches` and `treeData` results\r\n\t\t//  of this method (`find`)\r\n\t\tisSelfMatch = true;\r\n\t  }\r\n  \r\n\t  let childIndex = currentIndex;\r\n\t  const newNode = { ...node };\r\n\t  if (hasChildren) {\r\n\t\t// Get all descendants\r\n\t\tnewNode.children = newNode.children.map(child => {\r\n\t\t  const mapResult = trav({\r\n\t\t\tnode: child,\r\n\t\t\tcurrentIndex: childIndex + 1,\r\n\t\t\tpath: selfPath,\r\n\t\t  });\r\n  \r\n\t\t  // Ignore hidden nodes by only advancing the index counter to the returned treeIndex\r\n\t\t  // if the child is expanded.\r\n\t\t  //\r\n\t\t  // The child could have been expanded from the start,\r\n\t\t  // or expanded due to a matching node being found in its descendants\r\n\t\t  if (mapResult.node.expanded) {\r\n\t\t\tchildIndex = mapResult.treeIndex;\r\n\t\t  } else {\r\n\t\t\tchildIndex += 1;\r\n\t\t  }\r\n  \r\n\t\t  if (mapResult.matches.length > 0 || mapResult.hasFocusMatch) {\r\n\t\t\tmatches = [...matches, ...mapResult.matches];\r\n\t\t\tif (mapResult.hasFocusMatch) {\r\n\t\t\t  hasFocusMatch = true;\r\n\t\t\t}\r\n  \r\n\t\t\t// Expand the current node if it has descendants matching the search\r\n\t\t\t// and the settings are set to do so.\r\n\t\t\tif (\r\n\t\t\t  (expandAllMatchPaths && mapResult.matches.length > 0) ||\r\n\t\t\t  ((expandAllMatchPaths || expandFocusMatchPaths) &&\r\n\t\t\t\tmapResult.hasFocusMatch)\r\n\t\t\t) {\r\n\t\t\t  newNode.expanded = true;\r\n\t\t\t}\r\n\t\t  }\r\n  \r\n\t\t  return mapResult.node;\r\n\t\t});\r\n\t  }\r\n  \r\n\t  // Cannot assign a treeIndex to hidden nodes\r\n\t  if (!isPseudoRoot && !newNode.expanded) {\r\n\t\tmatches = matches.map(match => ({\r\n\t\t  ...match,\r\n\t\t  treeIndex: null,\r\n\t\t}));\r\n\t  }\r\n  \r\n\t  // Add this node to the matches if it fits the search criteria.\r\n\t  // This is performed at the last minute so newNode can be sent in its final form.\r\n\t  if (isSelfMatch) {\r\n\t\tmatches = [{ ...extraInfo, node: newNode }, ...matches];\r\n\t  }\r\n  \r\n\t  return {\r\n\t\tnode: matches.length > 0 ? newNode : node,\r\n\t\tmatches,\r\n\t\thasFocusMatch,\r\n\t\ttreeIndex: childIndex,\r\n\t  };\r\n\t};\r\n  \r\n\tconst result = trav({\r\n\t  node: { children: treeData },\r\n\t  isPseudoRoot: true,\r\n\t  currentIndex: -1,\r\n\t});\r\n  \r\n\treturn {\r\n\t  matches: result.matches,\r\n\t  treeData: result.node.children,\r\n\t};\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ComLib} from 'common';\r\nimport {map} from './utils';\r\nclass TreeSelectbox extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\r\n\t\tthis.onBlur= this.onChange.bind(this);\r\n\t}\r\n\tcomponentDidMount () {\r\n\t\tlet target    = this.props.id.substring(0, this.props.id.lastIndexOf(\"__\"));\r\n\t\tlet divElement = document.getElementById(target + '__div').getElementsByTagName('div')[0];\r\n\r\n\t\tlet selectElement = divElement.getElementsByTagName('select')[0];\r\n\t\t\r\n\t\tif (selectElement !== undefined) {\r\n\t\t\tlet selectOptions = selectElement.getElementsByTagName('option'); \r\n\t\t\r\n\t\t\tfor(let i = 0; i < selectOptions.length; i ++) {\r\n\t\t\t\tif (Number(selectOptions[i].id) === this.props.selected) {\r\n\t\t\t\t\tselectOptions[i].setAttribute(\"selected\", \"selected\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\r\n\t\t\tselectElement.focus();\r\n\t\t} \r\n\t\t\r\n\t}\r\n\tonChange = (e) => {\t\t\r\n\t\tlet len           \t  = e.target.id.substring(e.target.id.lastIndexOf(\"__\") + 2)\r\n\t\tlet targetNoLen       = e.target.id.substring(0, e.target.id.lastIndexOf(\"__\"));\r\n\t\tlet target            = targetNoLen.substring(0, targetNoLen.lastIndexOf(\"__\"));\r\n\t\tlet changetreeIndex   = target.substring(target.lastIndexOf(\"__\") + 2);\r\n\t\tlet changeColumWithID = target.substring(0, target.lastIndexOf(\"__\"));\r\n\t\tlet changeColum       = changeColumWithID.substring(0, changeColumWithID.lastIndexOf(\"__\"));\r\n\r\n\t\tlet treedata = map({\r\n\t\t\ttreeData: this.props.treeData,\r\n\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t\tcallback: param => { \r\n\t\t\t\tif (param['node']['treeIndex'] === Number(changetreeIndex)) {\r\n\t\t\t\t\tparam['node'][changeColum] = e.target.value;\r\n\t\t\t\t\t\r\n\t\t\t\t} \r\n\t\t\t\treturn param['node'];\r\n\t\t\t},\r\n\t\t\tignoreCollapsed: false,\r\n\t\t});\r\n\r\n\t\tthis.props.updateTreeData(false, treedata);\r\n\r\n\t\tconst element = <input\tclassName   = \"scrm-input-text\"\r\n\t\t\t\t\t\t\t\ttype        = \"text\"\r\n\t\t\t\t\t\t\t\tid          = {targetNoLen}\r\n\t\t\t\t\t\t\t\tname        = {len}\r\n\t\t\t\t\t\t\t\tvalue       = {ComLib.getComCodeName(changeColum, e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder = {e.target.value}\r\n\t\t\t\t\t\t\t\tminLength   = {0}\r\n\t\t\t\t\t\t\t\tmaxLength   = {100}\r\n\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\tonClick     = {(e) => this.props.event.treeRow.selectbox.onChange(e)}\r\n\t\t\t\t\t\t/>;\r\n\t\t\r\n\t\tReactDOM.render(element, document.getElementById(targetNoLen + '__div'));\r\n\r\n\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className='scrm-select-div'  style={{width : Number(this.props.name)+'px'}}>\r\n\t\t\t\t<select\r\n\t\t\t\t\tid = {this.props.id}\r\n\t\t\t\t\tvalue = {this.props.value} \r\n\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\tonBlur={this.onChange}\r\n\t\t\t\t\tonChange = {this.onChange}\r\n\t\t\t\t\t\r\n\t\t\t\t> \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tComLib.convComboList(ComLib.getCommCodeList(this.props.codeValue)).filter(item=> item.value !== null && item.value !== undefined).map((prop, key) => {\r\n\t\t\t\t\t\t\treturn (<option id={key} value={prop.value} key={prop.value + '_' + key} >{prop.name}</option>);\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\nexport {TreeSelectbox}","/* ***************************************************\r\n *\texplain : 그리드 내부에서 필요한 util 정의\r\n *\twritten by sh.kwon\r\n * ***************************************************/\r\n\r\n/**\r\n * Generate a tree structure from flat data.\r\n *\r\n * @param {!Object[]} flatData\r\n * @param {!function=} getKey - Function to get the key from the nodeData\r\n * @param {!function=} getParentKey - Function to get the parent key from the nodeData\r\n * @param {string|number=} rootKey - The value returned by `getParentKey` that corresponds to the root node.\r\n *                                  For example, if your nodes have id 1-99, you might use rootKey = 0\r\n *\r\n * @return {Object[]} treeData - The flat data represented as a tree\r\n */\r\n\r\n  /**\r\n * Performs a depth-first traversal over all of the node descendants,\r\n * incrementing currentIndex by 1 for each\r\n */\r\nfunction getNodeDataAtTreeIndexOrNextIndex({\r\n\ttargetIndex,\r\n\tnode,\r\n\tcurrentIndex,\r\n\tgetNodeKey,\r\n\tpath = [],\r\n\tlowerSiblingCounts = [],\r\n\tignoreCollapsed = true,\r\n\tisPseudoRoot = false,\r\n  }) {\r\n\t// The pseudo-root is not considered in the path\r\n\tconst selfPath = !isPseudoRoot\r\n\t  ? [...path, getNodeKey({ node, treeIndex: currentIndex })]\r\n\t  : [];\r\n  \r\n\t// Return target node when found\r\n\tif (currentIndex === targetIndex) {\r\n\t  return {\r\n\t\tnode,\r\n\t\tlowerSiblingCounts,\r\n\t\tpath: selfPath,\r\n\t  };\r\n\t}\r\n  \r\n\t// Add one and continue for nodes with no children or hidden children\r\n\tif (!node.children || (ignoreCollapsed && node.expanded !== true)) {\r\n\t  return { nextIndex: currentIndex + 1 };\r\n\t}\r\n  \r\n\t// Iterate over each child and their descendants and return the\r\n\t// target node if childIndex reaches the targetIndex\r\n\tlet childIndex = currentIndex + 1;\r\n\tconst childCount = node.children.length;\r\n\tfor (let i = 0; i < childCount; i += 1) {\r\n\t  const result = getNodeDataAtTreeIndexOrNextIndex({\r\n\t\tignoreCollapsed,\r\n\t\tgetNodeKey,\r\n\t\ttargetIndex,\r\n\t\tnode: node.children[i],\r\n\t\tcurrentIndex: childIndex,\r\n\t\tlowerSiblingCounts: [...lowerSiblingCounts, childCount - i - 1],\r\n\t\tpath: selfPath,\r\n\t  });\r\n  \r\n\t  if (result.node) {\r\n\t\treturn result;\r\n\t  }\r\n  \r\n\t  childIndex = result.nextIndex;\r\n\t}\r\n  \r\n\t// If the target node is not found, return the farthest traversed index\r\n\treturn { nextIndex: childIndex };\r\n  }\r\n  \r\n  export function getDescendantCount({ node, ignoreCollapsed = true }) {\r\n\treturn (\r\n\t  getNodeDataAtTreeIndexOrNextIndex({\r\n\t\tgetNodeKey: () => {},\r\n\t\tignoreCollapsed,\r\n\t\tnode,\r\n\t\tcurrentIndex: 0,\r\n\t\ttargetIndex: -1,\r\n\t  }).nextIndex - 1\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Walk all descendants of the given node, depth-first\r\n   *\r\n   * @param {Object} args - Function parameters\r\n   * @param {function} args.callback - Function to call on each node\r\n   * @param {function} args.getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean} args.ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} args.isPseudoRoot - If true, this node has no real data, and only serves\r\n   *                                        as the parent of all the nodes in the tree\r\n   * @param {Object} args.node - A tree node\r\n   * @param {Object=} args.parentNode - The parent node of `node`\r\n   * @param {number} args.currentIndex - The treeIndex of `node`\r\n   * @param {number[]|string[]} args.path - Array of keys leading up to node to be changed\r\n   * @param {number[]} args.lowerSiblingCounts - An array containing the count of siblings beneath the\r\n   *                                             previous nodes in this path\r\n   *\r\n   * @return {number|false} nextIndex - Index of the next sibling of `node`,\r\n   *                                    or false if the walk should be terminated\r\n   */\r\n  function walkDescendants({\r\n\tcallback,\r\n\tgetNodeKey,\r\n\tignoreCollapsed,\r\n\tisPseudoRoot = false,\r\n\tnode,\r\n\tparentNode = null,\r\n\tcurrentIndex,\r\n\tpath = [],\r\n\tlowerSiblingCounts = [],\r\n  }) {\r\n\t// The pseudo-root is not considered in the path\r\n\tconst selfPath = isPseudoRoot\r\n\t  ? []\r\n\t  : [...path, getNodeKey({ node, treeIndex: currentIndex })];\r\n\tconst selfInfo = isPseudoRoot\r\n\t  ? null\r\n\t  : {\r\n\t\t  node,\r\n\t\t  parentNode,\r\n\t\t  path: selfPath,\r\n\t\t  lowerSiblingCounts,\r\n\t\t  treeIndex: currentIndex,\r\n\t\t};\r\n  \r\n\tif (!isPseudoRoot) {\r\n\t  const callbackResult = callback(selfInfo);\r\n  \r\n\t  // Cut walk short if the callback returned false\r\n\t  if (callbackResult === false) {\r\n\t\treturn false;\r\n\t  }\r\n\t}\r\n  \r\n\t// Return self on nodes with no children or hidden children\r\n\tif (\r\n\t  !node.children ||\r\n\t  (node.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t) {\r\n\t  return currentIndex;\r\n\t}\r\n  \r\n\t// Get all descendants\r\n\tlet childIndex = currentIndex;\r\n\tconst childCount = node.children.length;\r\n\tif (typeof node.children !== 'function') {\r\n\t  for (let i = 0; i < childCount; i += 1) {\r\n\t\tchildIndex = walkDescendants({\r\n\t\t  callback,\r\n\t\t  getNodeKey,\r\n\t\t  ignoreCollapsed,\r\n\t\t  node: node.children[i],\r\n\t\t  parentNode: isPseudoRoot ? null : node,\r\n\t\t  currentIndex: childIndex + 1,\r\n\t\t  lowerSiblingCounts: [...lowerSiblingCounts, childCount - i - 1],\r\n\t\t  path: selfPath,\r\n\t\t});\r\n  \r\n\t\t// Cut walk short if the callback returned false\r\n\t\tif (childIndex === false) {\r\n\t\t  return false;\r\n\t\t}\r\n\t  }\r\n\t}\r\n  \r\n\treturn childIndex;\r\n  }\r\n  \r\n  /**\r\n   * Perform a change on the given node and all its descendants, traversing the tree depth-first\r\n   *\r\n   * @param {Object} args - Function parameters\r\n   * @param {function} args.callback - Function to call on each node\r\n   * @param {function} args.getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean} args.ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} args.isPseudoRoot - If true, this node has no real data, and only serves\r\n   *                                        as the parent of all the nodes in the tree\r\n   * @param {Object} args.node - A tree node\r\n   * @param {Object=} args.parentNode - The parent node of `node`\r\n   * @param {number} args.currentIndex - The treeIndex of `node`\r\n   * @param {number[]|string[]} args.path - Array of keys leading up to node to be changed\r\n   * @param {number[]} args.lowerSiblingCounts - An array containing the count of siblings beneath the\r\n   *                                             previous nodes in this path\r\n   *\r\n   * @return {number|false} nextIndex - Index of the next sibling of `node`,\r\n   *                                    or false if the walk should be terminated\r\n   */\r\n  function mapDescendants({\r\n\tcallback,\r\n\tgetNodeKey,\r\n\tignoreCollapsed,\r\n\tisPseudoRoot = false,\r\n\tnode,\r\n\tparentNode = null,\r\n\tcurrentIndex,\r\n\tpath = [],\r\n\tlowerSiblingCounts = [],\r\n  }) {\r\n\tconst nextNode = { ...node };\r\n\t\r\n\t// The pseudo-root is not considered in the path\r\n\tconst selfPath = isPseudoRoot\r\n\t  ? []\r\n\t  : [...path, getNodeKey({ node: nextNode, treeIndex: currentIndex })];\r\n\tconst selfInfo = {\r\n\t  node: nextNode,\r\n\t  parentNode,\r\n\t  path: selfPath,\r\n\t  lowerSiblingCounts,\r\n\t  treeIndex: currentIndex,\r\n\t};\r\n  \r\n\t// Return self on nodes with no children or hidden children\r\n\tif (\r\n\t  !nextNode.children ||\r\n\t  (nextNode.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t) {\r\n\t  return {\r\n\t\ttreeIndex: currentIndex,\r\n\t\tnode: callback(selfInfo),\r\n\t  };\r\n\t}\r\n  \r\n\t// Get all descendants\r\n\tlet childIndex = currentIndex;\r\n\tconst childCount = nextNode.children.length;\r\n\tif (typeof nextNode.children !== 'function') {\r\n\t  nextNode.children = nextNode.children.map((child, i) => {\r\n\t\tconst mapResult = mapDescendants({\r\n\t\t  callback,\r\n\t\t  getNodeKey,\r\n\t\t  ignoreCollapsed,\r\n\t\t  node: child,\r\n\t\t  parentNode: isPseudoRoot ? null : nextNode,\r\n\t\t  currentIndex: childIndex + 1,\r\n\t\t  lowerSiblingCounts: [...lowerSiblingCounts, childCount - i - 1],\r\n\t\t  path: selfPath,\r\n\t\t});\r\n\t\tchildIndex = mapResult.treeIndex;\r\n  \r\n\t\treturn mapResult.node;\r\n\t  });\r\n\t}\r\n  \r\n\treturn {\r\n\t  node: callback(selfInfo),\r\n\t  treeIndex: childIndex,\r\n\t};\r\n  }\r\n  \r\n  /**\r\n   * Count all the visible (expanded) descendants in the tree data.\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   *\r\n   * @return {number} count\r\n   */\r\n  export function getVisibleNodeCount({ treeData }) {\r\n\tconst traverse = node => {\r\n\t  if (\r\n\t\t!node.children ||\r\n\t\tnode.expanded !== true ||\r\n\t\ttypeof node.children === 'function'\r\n\t  ) {\r\n\t\treturn 1;\r\n\t  }\r\n  \r\n\t  return (\r\n\t\t1 +\r\n\t\tnode.children.reduce(\r\n\t\t  (total, currentNode) => total + traverse(currentNode),\r\n\t\t  0\r\n\t\t)\r\n\t  );\r\n\t};\r\n  \r\n\treturn treeData.reduce(\r\n\t  (total, currentNode) => total + traverse(currentNode),\r\n\t  0\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Get the <targetIndex>th visible node in the tree data.\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!number} targetIndex - The index of the node to search for\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   *\r\n   * @return {{\r\n   *      node: Object,\r\n   *      path: []string|[]number,\r\n   *      lowerSiblingCounts: []number\r\n   *  }|null} node - The node at targetIndex, or null if not found\r\n   */\r\n  export function getVisibleNodeInfoAtIndex({\r\n\ttreeData,\r\n\tindex: targetIndex,\r\n\tgetNodeKey,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return null;\r\n\t}\r\n  \r\n\t// Call the tree traversal with a pseudo-root node\r\n\tconst result = getNodeDataAtTreeIndexOrNextIndex({\r\n\t  targetIndex,\r\n\t  getNodeKey,\r\n\t  node: {\r\n\t\tchildren: treeData,\r\n\t\texpanded: true,\r\n\t  },\r\n\t  currentIndex: -1,\r\n\t  path: [],\r\n\t  lowerSiblingCounts: [],\r\n\t  isPseudoRoot: true,\r\n\t});\r\n  \r\n\tif (result.node) {\r\n\t  return result;\r\n\t}\r\n  \r\n\treturn null;\r\n  }\r\n  \r\n  /**\r\n   * Walk descendants depth-first and call a callback on each\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {function} callback - Function to call on each node\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return void\r\n   */\r\n  export function walk({\r\n\ttreeData,\r\n\tgetNodeKey,\r\n\tcallback,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return;\r\n\t}\r\n  \r\n\twalkDescendants({\r\n\t  callback,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  isPseudoRoot: true,\r\n\t  node: { children: treeData },\r\n\t  currentIndex: -1,\r\n\t  path: [],\r\n\t  lowerSiblingCounts: [],\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * Perform a depth-first transversal of the descendants and\r\n   *  make a change to every node in the tree\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {function} callback - Function to call on each node\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object[]} changedTreeData - The changed tree data\r\n   */\r\n  export function map({\r\n\ttreeData,\r\n\tgetNodeKey,\r\n\tcallback,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return [];\r\n\t}\r\n  \r\n\treturn mapDescendants({\r\n\t  callback,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  isPseudoRoot: true,\r\n\t  node: { children: treeData },\r\n\t  currentIndex: -1,\r\n\t  path: [],\r\n\t  lowerSiblingCounts: [],\r\n\t}).node.children;\r\n  }\r\n  \r\n  /**\r\n   * Expand or close every node in the tree\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {?boolean} expanded - Whether the node is expanded or not\r\n   *\r\n   * @return {Object[]} changedTreeData - The changed tree data\r\n   */\r\n  export function toggleExpandedForAll({ treeData, expanded = true }) {\r\n\treturn map({\r\n\t  treeData,\r\n\t  callback: ({ node }) => ({ ...node, expanded }),\r\n\t  getNodeKey: ({ treeIndex }) => treeIndex,\r\n\t  ignoreCollapsed: false,\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * Replaces node at path with object, or callback-defined object\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be changed\r\n   * @param {function|any} newNode - Node to replace the node at the path with, or a function producing the new node\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object[]} changedTreeData - The changed tree data\r\n   */\r\n  export function changeNodeAtPath({\r\n\ttreeData,\r\n\tpath,\r\n\tnewNode,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tconst RESULT_MISS = 'RESULT_MISS';\r\n\tconst traverse = ({isPseudoRoot = false, node, currentTreeIndex, pathIndex}) => {\r\n\t\tif (!isPseudoRoot && getNodeKey({ node, treeIndex: currentTreeIndex }) !== path[pathIndex]) {\r\n\t\t\treturn RESULT_MISS;\r\n\t\t}\r\n\t\t\r\n\t\tif (pathIndex >= path.length - 1) {\r\n\t\t\t// If this is the final location in the path, return its changed form\r\n\t\t\treturn typeof newNode === 'function'\r\n\t\t\t? newNode({ node, treeIndex: currentTreeIndex })\r\n\t\t\t: newNode;\r\n\t\t}\r\n\t  \t\t\r\n\t  if (!node.children) {\r\n\t\t// If this node is part of the path, but has no children, return the unchanged node\r\n\t\tthrow new Error('Path referenced children of node with no children.');\r\n\t\t\r\n\t  }\r\n\t  \r\n\t  let nextTreeIndex = currentTreeIndex + 1;\r\n\t  for (let i = 0; i < node.children.length; i += 1) {\r\n\t\tconst result = traverse({\r\n\t\t  node: node.children[i],\r\n\t\t  currentTreeIndex: nextTreeIndex,\r\n\t\t  pathIndex: pathIndex + 1,\r\n\t\t});\r\n\t\t// If the result went down the correct path\r\n\t\tif (result !== RESULT_MISS) {\r\n\t\t  if (result) {\r\n\t\t\t// If the result was truthy (in this case, an object),\r\n\t\t\t//  pass it to the next level of recursion up\r\n\t\t\treturn {\r\n\t\t\t  ...node,\r\n\t\t\t  children: [\r\n\t\t\t\t...node.children.slice(0, i),\r\n\t\t\t\tresult,\r\n\t\t\t\t...node.children.slice(i + 1),\r\n\t\t\t  ],\r\n\t\t\t};\r\n\t\t  }\r\n\t\t  // If the result was falsy (returned from the newNode function), then\r\n\t\t  //  delete the node from the array.\r\n\t\t  return {\r\n\t\t\t...node,\r\n\t\t\tchildren: [\r\n\t\t\t  ...node.children.slice(0, i),\r\n\t\t\t  ...node.children.slice(i + 1),\r\n\t\t\t],\r\n\t\t  };\r\n\t\t}\r\n\t\tnextTreeIndex +=\r\n\t\t  1 + getDescendantCount({ node: node.children[i], ignoreCollapsed });\r\n\t  }\r\n  \r\n\t  return RESULT_MISS;\r\n\t};\r\n\t\r\n\t// Use a pseudo-root node in the beginning traversal\r\n\tconst result = traverse({\r\n\t  node: { children: treeData },\r\n\t  currentTreeIndex: -1,\r\n\t  pathIndex: -1,\r\n\t  isPseudoRoot: true,\r\n\t});\r\n\r\n\tif (result === RESULT_MISS) {\r\n\t  throw new Error('No node found at the given path.');\r\n\t}\r\n  \r\n\treturn result.children;\r\n  }\r\n  \r\n  /**\r\n   * Removes the node at the specified path and returns the resulting treeData.\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be deleted\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object[]} changedTreeData - The tree data with the node removed\r\n   */\r\n  export function removeNodeAtPath({\r\n\ttreeData,\r\n\tpath,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\treturn changeNodeAtPath({\r\n\t  treeData,\r\n\t  path,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  newNode: null, // Delete the node\r\n\t});\r\n  }\r\n  \r\n  /**\r\n   * Removes the node at the specified path and returns the resulting treeData.\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be deleted\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object} result\r\n   * @return {Object[]} result.treeData - The tree data with the node removed\r\n   * @return {Object} result.node - The node that was removed\r\n   * @return {number} result.treeIndex - The previous treeIndex of the removed node\r\n   */\r\n  export function removeNode({\r\n\ttreeData,\r\n\tpath,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tlet removedNode = null;\r\n\tlet removedTreeIndex = null;\r\n\tconst nextTreeData = changeNodeAtPath({\r\n\t  treeData,\r\n\t  path,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  newNode: ({ node, treeIndex }) => {\r\n\t\t// Store the target node and delete it from the tree\r\n\t\tremovedNode = node;\r\n\t\tremovedTreeIndex = treeIndex;\r\n  \r\n\t\treturn null;\r\n\t  },\r\n\t});\r\n  \r\n\treturn {\r\n\t  treeData: nextTreeData,\r\n\t  node: removedNode,\r\n\t  treeIndex: removedTreeIndex,\r\n\t};\r\n  }\r\n  \r\n  /**\r\n   * Gets the node at the specified path\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {number[]|string[]} path - Array of keys leading up to node to be deleted\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {Object|null} nodeInfo - The node info at the given path, or null if not found\r\n   */\r\n  export function getNodeAtPath({\r\n\ttreeData,\r\n\tpath,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tlet foundNodeInfo = null;\r\n  \ttry {\r\n\t  changeNodeAtPath({\r\n\t\ttreeData,\r\n\t\tpath,\r\n\t\tgetNodeKey,\r\n\t\tignoreCollapsed,\r\n\t\tnewNode: ({ node, treeIndex }) => {\r\n\t\t  foundNodeInfo = { node, treeIndex };\r\n\t\t  return node;\r\n\t\t},\r\n\t  });\r\n\t} catch (err) {\r\n\t  // Ignore the error -- the null return will be explanation enough\r\n\t}\r\n  \r\n\treturn foundNodeInfo;\r\n  }\r\n  \r\n  /**\r\n   * Adds the node to the specified parent and returns the resulting treeData.\r\n   *\r\n   * @param {!Object[]} treeData\r\n   * @param {!Object} newNode - The node to insert\r\n   * @param {number|string} parentKey - The key of the to-be parentNode of the node\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} expandParent - If true, expands the parentNode specified by parentPath\r\n   * @param {boolean=} addAsFirstChild - If true, adds new node as first child of tree\r\n   *\r\n   * @return {Object} result\r\n   * @return {Object[]} result.treeData - The updated tree data\r\n   * @return {number} result.treeIndex - The tree index at which the node was inserted\r\n   */\r\n  export function addNodeUnderParent({\r\n\ttreeData,\r\n\tnewNode,\r\n\tparentKey = null,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n\texpandParent = false,\r\n\taddAsFirstChild = false,\r\n  }) {\r\n\tif (parentKey === null) {\r\n\t  return addAsFirstChild\r\n\t\t? {\r\n\t\t\ttreeData: [newNode, ...(treeData || [])],\r\n\t\t\ttreeIndex: 0,\r\n\t\t  }\r\n\t\t: {\r\n\t\t\ttreeData: [...(treeData || []), newNode],\r\n\t\t\ttreeIndex: (treeData || []).length,\r\n\t\t  };\r\n\t}\r\n  \r\n\tlet insertedTreeIndex = null;\r\n\tlet hasBeenAdded = false;\r\n\r\n\tconst changedTreeData = map({\r\n\t  treeData,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  callback: ({ node, treeIndex, path }) => {\r\n\t\tconst key = path ? path[path.length - 1] : null;\r\n\t\t// Return nodes that are not the parent as-is\r\n\t\tif (hasBeenAdded || key !== parentKey) {\r\n\t\t  return node;\r\n\t\t}\r\n\t\thasBeenAdded = true;\r\n  \r\n\t\tconst parentNode = {\r\n\t\t  ...node,\r\n\t\t};\r\n  \r\n\t\tif (expandParent) {\r\n\t\t  parentNode.expanded = true;\r\n\t\t}\r\n  \r\n\t\t// If no children exist yet, just add the single newNode\r\n\t\tif (!parentNode.children) {\r\n\t\t  insertedTreeIndex = treeIndex + 1;\r\n\t\t  return {\r\n\t\t\t...parentNode,\r\n\t\t\tchildren: [newNode],\r\n\t\t  };\r\n\t\t}\r\n  \r\n\t\tif (typeof parentNode.children === 'function') {\r\n\t\t  throw new Error('Cannot add to children defined by a function');\r\n\t\t}\r\n  \r\n\t\tlet nextTreeIndex = treeIndex + 1;\r\n\t\tfor (let i = 0; i < parentNode.children.length; i += 1) {\r\n\t\t  nextTreeIndex +=\r\n\t\t\t1 +\r\n\t\t\tgetDescendantCount({ node: parentNode.children[i], ignoreCollapsed });\r\n\t\t}\r\n  \r\n\t\tinsertedTreeIndex = nextTreeIndex;\r\n  \r\n\t\tconst children = addAsFirstChild\r\n\t\t  ? [newNode, ...parentNode.children]\r\n\t\t  : [...parentNode.children, newNode];\r\n  \r\n\t\treturn {\r\n\t\t  ...parentNode,\r\n\t\t  children,\r\n\t\t};\r\n\t  },\r\n\t});\r\n  \r\n\tif (!hasBeenAdded) {\r\n\t  throw new Error('No node found with the given key.');\r\n\t}\r\n  \r\n\treturn {\r\n\t  treeData: changedTreeData,\r\n\t  treeIndex: insertedTreeIndex,\r\n\t};\r\n  }\r\n  \r\n  function addNodeAtDepthAndIndex({\r\n\ttargetDepth,\r\n\tminimumTreeIndex,\r\n\tnewNode,\r\n\tignoreCollapsed,\r\n\texpandParent,\r\n\tisPseudoRoot = false,\r\n\tisLastChild,\r\n\tnode,\r\n\tcurrentIndex,\r\n\tcurrentDepth,\r\n\tgetNodeKey,\r\n\tpath = [],\r\n  }) {\r\n\tconst selfPath = n =>\r\n\t  isPseudoRoot\r\n\t\t? []\r\n\t\t: [...path, getNodeKey({ node: n, treeIndex: currentIndex })];\r\n  \r\n\t// If the current position is the only possible place to add, add it\r\n\tif (\r\n\t  currentIndex >= minimumTreeIndex - 1 ||\r\n\t  (isLastChild && !(node.children && node.children.length))\r\n\t) {\r\n\t  if (typeof node.children === 'function') {\r\n\t\tthrow new Error('Cannot add to children defined by a function');\r\n\t  } else {\r\n\t\tconst extraNodeProps = expandParent ? { expanded: true } : {};\r\n\t\tconst nextNode = {\r\n\t\t  ...node,\r\n  \r\n\t\t  ...extraNodeProps,\r\n\t\t  children: node.children ? [newNode, ...node.children] : [newNode],\r\n\t\t};\r\n  \r\n\t\treturn {\r\n\t\t  node: nextNode,\r\n\t\t  nextIndex: currentIndex + 2,\r\n\t\t  insertedTreeIndex: currentIndex + 1,\r\n\t\t  parentPath: selfPath(nextNode),\r\n\t\t  parentNode: isPseudoRoot ? null : nextNode,\r\n\t\t};\r\n\t  }\r\n\t}\r\n  \r\n\t// If this is the target depth for the insertion,\r\n\t// i.e., where the newNode can be added to the current node's children\r\n\tif (currentDepth >= targetDepth - 1) {\r\n\t  // Skip over nodes with no children or hidden children\r\n\t  if (\r\n\t\t!node.children ||\r\n\t\ttypeof node.children === 'function' ||\r\n\t\t(node.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t  ) {\r\n\t\treturn { node, nextIndex: currentIndex + 1 };\r\n\t  }\r\n  \r\n\t  // Scan over the children to see if there's a place among them that fulfills\r\n\t  // the minimumTreeIndex requirement\r\n\t  let childIndex = currentIndex + 1;\r\n\t  let insertedTreeIndex = null;\r\n\t  let insertIndex = null;\r\n\t  for (let i = 0; i < node.children.length; i += 1) {\r\n\t\t// If a valid location is found, mark it as the insertion location and\r\n\t\t// break out of the loop\r\n\t\tif (childIndex >= minimumTreeIndex) {\r\n\t\t  insertedTreeIndex = childIndex;\r\n\t\t  insertIndex = i;\r\n\t\t  break;\r\n\t\t}\r\n  \r\n\t\t// Increment the index by the child itself plus the number of descendants it has\r\n\t\tchildIndex +=\r\n\t\t  1 + getDescendantCount({ node: node.children[i], ignoreCollapsed });\r\n\t  }\r\n  \r\n\t  // If no valid indices to add the node were found\r\n\t  if (insertIndex === null) {\r\n\t\t// If the last position in this node's children is less than the minimum index\r\n\t\t// and there are more children on the level of this node, return without insertion\r\n\t\tif (childIndex < minimumTreeIndex && !isLastChild) {\r\n\t\t  return { node, nextIndex: childIndex };\r\n\t\t}\r\n  \r\n\t\t// Use the last position in the children array to insert the newNode\r\n\t\tinsertedTreeIndex = childIndex;\r\n\t\tinsertIndex = node.children.length;\r\n\t  }\r\n  \r\n\t  // Insert the newNode at the insertIndex\r\n\t  const nextNode = {\r\n\t\t...node,\r\n\t\tchildren: [\r\n\t\t  ...node.children.slice(0, insertIndex),\r\n\t\t  newNode,\r\n\t\t  ...node.children.slice(insertIndex),\r\n\t\t],\r\n\t  };\r\n  \r\n\t  // Return node with successful insert result\r\n\t  return {\r\n\t\tnode: nextNode,\r\n\t\tnextIndex: childIndex,\r\n\t\tinsertedTreeIndex,\r\n\t\tparentPath: selfPath(nextNode),\r\n\t\tparentNode: isPseudoRoot ? null : nextNode,\r\n\t  };\r\n\t}\r\n  \r\n\t// Skip over nodes with no children or hidden children\r\n\tif (\r\n\t  !node.children ||\r\n\t  typeof node.children === 'function' ||\r\n\t  (node.expanded !== true && ignoreCollapsed && !isPseudoRoot)\r\n\t) {\r\n\t  return { node, nextIndex: currentIndex + 1 };\r\n\t}\r\n  \r\n\t// Get all descendants\r\n\tlet insertedTreeIndex = null;\r\n\tlet pathFragment = null;\r\n\tlet parentNode = null;\r\n\tlet childIndex = currentIndex + 1;\r\n\tlet newChildren = node.children;\r\n\tif (typeof newChildren !== 'function') {\r\n\t  newChildren = newChildren.map((child, i) => {\r\n\t\tif (insertedTreeIndex !== null) {\r\n\t\t  return child;\r\n\t\t}\r\n  \r\n\t\tconst mapResult = addNodeAtDepthAndIndex({\r\n\t\t  targetDepth,\r\n\t\t  minimumTreeIndex,\r\n\t\t  newNode,\r\n\t\t  ignoreCollapsed,\r\n\t\t  expandParent,\r\n\t\t  isLastChild: isLastChild && i === newChildren.length - 1,\r\n\t\t  node: child,\r\n\t\t  currentIndex: childIndex,\r\n\t\t  currentDepth: currentDepth + 1,\r\n\t\t  getNodeKey,\r\n\t\t  path: [], // Cannot determine the parent path until the children have been processed\r\n\t\t});\r\n  \r\n\t\tif ('insertedTreeIndex' in mapResult) {\r\n\t\t  ({\r\n\t\t\tinsertedTreeIndex,\r\n\t\t\tparentNode,\r\n\t\t\tparentPath: pathFragment,\r\n\t\t  } = mapResult);\r\n\t\t}\r\n  \r\n\t\tchildIndex = mapResult.nextIndex;\r\n  \r\n\t\treturn mapResult.node;\r\n\t  });\r\n\t}\r\n  \r\n\tconst nextNode = { ...node, children: newChildren };\r\n\tconst result = {\r\n\t  node: nextNode,\r\n\t  nextIndex: childIndex,\r\n\t};\r\n  \r\n\tif (insertedTreeIndex !== null) {\r\n\t  result.insertedTreeIndex = insertedTreeIndex;\r\n\t  result.parentPath = [...selfPath(nextNode), ...pathFragment];\r\n\t  result.parentNode = parentNode;\r\n\t}\r\n  \r\n\treturn result;\r\n  }\r\n  \r\n  /**\r\n   * Insert a node into the tree at the given depth, after the minimum index\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!number} depth - The depth to insert the node at (the first level of the array being depth 0)\r\n   * @param {!number} minimumTreeIndex - The lowest possible treeIndex to insert the node at\r\n   * @param {!Object} newNode - The node to insert into the tree\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   * @param {boolean=} expandParent - If true, expands the parent of the inserted node\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   *\r\n   * @return {Object} result\r\n   * @return {Object[]} result.treeData - The tree data with the node added\r\n   * @return {number} result.treeIndex - The tree index at which the node was inserted\r\n   * @return {number[]|string[]} result.path - Array of keys leading to the node location after insertion\r\n   * @return {Object} result.parentNode - The parent node of the inserted node\r\n   */\r\n  export function insertNode({\r\n\ttreeData,\r\n\tdepth: targetDepth,\r\n\tminimumTreeIndex,\r\n\tnewNode,\r\n\tgetNodeKey = () => {},\r\n\tignoreCollapsed = true,\r\n\texpandParent = false,\r\n  }) {\r\n\tif (!treeData && targetDepth === 0) {\r\n\t  return {\r\n\t\ttreeData: [newNode],\r\n\t\ttreeIndex: 0,\r\n\t\tpath: [getNodeKey({ node: newNode, treeIndex: 0 })],\r\n\t\tparentNode: null,\r\n\t  };\r\n\t}\r\n  \r\n\tconst insertResult = addNodeAtDepthAndIndex({\r\n\t  targetDepth,\r\n\t  minimumTreeIndex,\r\n\t  newNode,\r\n\t  ignoreCollapsed,\r\n\t  expandParent,\r\n\t  getNodeKey,\r\n\t  isPseudoRoot: true,\r\n\t  isLastChild: true,\r\n\t  node: { children: treeData },\r\n\t  currentIndex: -1,\r\n\t  currentDepth: -1,\r\n\t});\r\n  \r\n\tif (!('insertedTreeIndex' in insertResult)) {\r\n\t  throw new Error('No suitable position found to insert.');\r\n\t}\r\n  \r\n\tconst treeIndex = insertResult.insertedTreeIndex;\r\n\treturn {\r\n\t  treeData: insertResult.node.children,\r\n\t  treeIndex,\r\n\t  path: [\r\n\t\t...insertResult.parentPath,\r\n\t\tgetNodeKey({ node: newNode, treeIndex }),\r\n\t  ],\r\n\t  parentNode: insertResult.parentNode,\r\n\t};\r\n  }\r\n  \r\n  /**\r\n   * Get tree data flattened.\r\n   *\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {boolean=} ignoreCollapsed - Ignore children of nodes without `expanded` set to `true`\r\n   *\r\n   * @return {{\r\n   *      node: Object,\r\n   *      path: []string|[]number,\r\n   *      lowerSiblingCounts: []number\r\n   *  }}[] nodes - The node array\r\n   */\r\n  export function getFlatDataFromTree({\r\n\ttreeData,\r\n\tgetNodeKey,\r\n\tignoreCollapsed = true,\r\n  }) {\r\n\tif (!treeData || treeData.length < 1) {\r\n\t  return [];\r\n\t}\r\n  \r\n\tconst flattened = [];\r\n\twalk({\r\n\t  treeData,\r\n\t  getNodeKey,\r\n\t  ignoreCollapsed,\r\n\t  callback: nodeInfo => {\r\n\t\tflattened.push(nodeInfo);\r\n\t  },\r\n\t});\r\n\treturn flattened;\r\n  }\r\n  \r\n  /**\r\n   * Generate a tree structure from flat data.\r\n   *\r\n   * @param {!Object[]} flatData\r\n   * @param {!function=} getKey - Function to get the key from the nodeData\r\n   * @param {!function=} getParentKey - Function to get the parent key from the nodeData\r\n   * @param {string|number=} rootKey - The value returned by `getParentKey` that corresponds to the root node.\r\n   *                                  For example, if your nodes have id 1-99, you might use rootKey = 0\r\n   *\r\n   * @return {Object[]} treeData - The flat data represented as a tree\r\n   */\r\n  export function getTreeFromFlatData({\r\n\tflatData,\r\n\tgetKey = node => node.id,\r\n\tgetParentKey = node => node.parentId,\r\n\trootKey = '0',\r\n  }) {\r\n\tif (!flatData) {\r\n\t  return [];\r\n\t}\r\n\r\n\tconst childrenToParents = {};\r\n\r\n\tflatData.forEach(child => {\r\n\t\tconst parentKey = getParentKey(child);\r\n\t\tif (parentKey in childrenToParents) {\r\n\t\t\tchildrenToParents[parentKey].push(child);\r\n\t\t} else {\r\n\t\t\tchildrenToParents[parentKey] = [child];\r\n\t\t}\r\n\t});\r\n\r\n\tif (!(rootKey in childrenToParents)) {\r\n\t  return [];\r\n\t}\r\n  \r\n\tconst trav = parent => {\r\n\t  const parentKey = getKey(parent);\r\n\t  if (parentKey in childrenToParents) {\r\n\t\treturn {\r\n\t\t  ...parent,\r\n\t\t  children: childrenToParents[parentKey].map(child => trav(child)),\r\n\t\t};\r\n\t  }\r\n\t  \r\n\t  return { ...parent };\r\n\t};\r\n\t\r\n\treturn childrenToParents[rootKey].map(child => trav(child));\r\n  }\r\n  \r\n  /**\r\n   * Check if a node is a descendant of another node.\r\n   *\r\n   * @param {!Object} older - Potential ancestor of younger node\r\n   * @param {!Object} younger - Potential descendant of older node\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  export function isDescendant(older, younger) {\r\n\treturn (\r\n\t  !!older.children &&\r\n\t  typeof older.children !== 'function' &&\r\n\t  older.children.some(\r\n\t\tchild => child === younger || isDescendant(child, younger)\r\n\t  )\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Get the maximum depth of the children (the depth of the root node is 0).\r\n   *\r\n   * @param {!Object} node - Node in the tree\r\n   * @param {?number} depth - The current depth\r\n   *\r\n   * @return {number} maxDepth - The deepest depth in the tree\r\n   */\r\n  export function getDepth(node, depth = 0) {\r\n\tif (!node.children) {\r\n\t  return depth;\r\n\t}\r\n  \r\n\tif (typeof node.children === 'function') {\r\n\t  return depth + 1;\r\n\t}\r\n  \r\n\treturn node.children.reduce(\r\n\t  (deepest, child) => Math.max(deepest, getDepth(child, depth + 1)),\r\n\t  depth\r\n\t);\r\n  }\r\n  \r\n  /**\r\n   * Find nodes matching a search query in the tree,\r\n   *\r\n   * @param {!function} getNodeKey - Function to get the key from the nodeData and tree index\r\n   * @param {!Object[]} treeData - Tree data\r\n   * @param {?string|number} searchQuery - Function returning a boolean to indicate whether the node is a match or not\r\n   * @param {!function} searchMethod - Function returning a boolean to indicate whether the node is a match or not\r\n   * @param {?number} searchFocusOffset - The offset of the match to focus on\r\n   *                                      (e.g., 0 focuses on the first match, 1 on the second)\r\n   * @param {boolean=} expandAllMatchPaths - If true, expands the paths to any matched node\r\n   * @param {boolean=} expandFocusMatchPaths - If true, expands the path to the focused node\r\n   *\r\n   * @return {Object[]} matches - An array of objects containing the matching `node`s, their `path`s and `treeIndex`s\r\n   * @return {Object[]} treeData - The original tree data with all relevant nodes expanded.\r\n   *                               If expandAllMatchPaths and expandFocusMatchPaths are both false,\r\n   *                               it will be the same as the original tree data.\r\n   */\r\n  export function find({\r\n\tgetNodeKey,\r\n\ttreeData,\r\n\tsearchQuery,\r\n\tsearchMethod,\r\n\tsearchFocusOffset,\r\n\texpandAllMatchPaths = false,\r\n\texpandFocusMatchPaths = true,\r\n  }) {\r\n\tconsole.log(\"FIND~~~\")\r\n\tlet matchCount = 0;\r\n\tconst trav = ({ isPseudoRoot = false, node, currentIndex, path = [] }) => {\r\n\t  let matches = [];\r\n\t  let isSelfMatch = false;\r\n\t  let hasFocusMatch = false;\r\n\t  // The pseudo-root is not considered in the path\r\n\t  const selfPath = isPseudoRoot\r\n\t\t? []\r\n\t\t: [...path, getNodeKey({ node, treeIndex: currentIndex })];\r\n\t  const extraInfo = isPseudoRoot\r\n\t\t? null\r\n\t\t: {\r\n\t\t\tpath: selfPath,\r\n\t\t\ttreeIndex: currentIndex,\r\n\t\t  };\r\n  \r\n\t  // Nodes with with children that aren't lazy\r\n\t  const hasChildren =\r\n\t\tnode.children &&\r\n\t\ttypeof node.children !== 'function' &&\r\n\t\tnode.children.length > 0;\r\n\t  // Examine the current node to see if it is a match\r\n\t  if (!isPseudoRoot && searchMethod({ ...extraInfo, node, searchQuery })) {\r\n\t\t\r\n\t\tif (matchCount === searchFocusOffset) {\r\n\t\t  hasFocusMatch = true;\r\n\t\t}\r\n  \r\n\t\t// Keep track of the number of matching nodes, so we know when the searchFocusOffset\r\n\t\t//  is reached\r\n\t\tmatchCount += 1;\r\n  \r\n\t\t// We cannot add this node to the matches right away, as it may be changed\r\n\t\t//  during the search of the descendants. The entire node is used in\r\n\t\t//  comparisons between nodes inside the `matches` and `treeData` results\r\n\t\t//  of this method (`find`)\r\n\t\tisSelfMatch = true;\r\n\t  }\r\n  \r\n\t  let childIndex = currentIndex;\r\n\t  const newNode = { ...node };\r\n\t  if (hasChildren) {\r\n\t\t// Get all descendants\r\n\t\tnewNode.children = newNode.children.map(child => {\r\n\t\t  const mapResult = trav({\r\n\t\t\tnode: child,\r\n\t\t\tcurrentIndex: childIndex + 1,\r\n\t\t\tpath: selfPath,\r\n\t\t  });\r\n  \r\n\t\t  // Ignore hidden nodes by only advancing the index counter to the returned treeIndex\r\n\t\t  // if the child is expanded.\r\n\t\t  //\r\n\t\t  // The child could have been expanded from the start,\r\n\t\t  // or expanded due to a matching node being found in its descendants\r\n\t\t  if (mapResult.node.expanded) {\r\n\t\t\tchildIndex = mapResult.treeIndex;\r\n\t\t  } else {\r\n\t\t\tchildIndex += 1;\r\n\t\t  }\r\n  \r\n\t\t  if (mapResult.matches.length > 0 || mapResult.hasFocusMatch) {\r\n\t\t\tmatches = [...matches, ...mapResult.matches];\r\n\t\t\tif (mapResult.hasFocusMatch) {\r\n\t\t\t  hasFocusMatch = true;\r\n\t\t\t}\r\n  \r\n\t\t\t// Expand the current node if it has descendants matching the search\r\n\t\t\t// and the settings are set to do so.\r\n\t\t\tif (\r\n\t\t\t  (expandAllMatchPaths && mapResult.matches.length > 0) ||\r\n\t\t\t  ((expandAllMatchPaths || expandFocusMatchPaths) &&\r\n\t\t\t\tmapResult.hasFocusMatch)\r\n\t\t\t) {\r\n\t\t\t  newNode.expanded = true;\r\n\t\t\t}\r\n\t\t  }\r\n  \r\n\t\t  return mapResult.node;\r\n\t\t});\r\n\t  }\r\n  \r\n\t  // Cannot assign a treeIndex to hidden nodes\r\n\t  if (!isPseudoRoot && !newNode.expanded) {\r\n\t\tmatches = matches.map(match => ({\r\n\t\t  ...match,\r\n\t\t  treeIndex: null,\r\n\t\t}));\r\n\t  }\r\n  \r\n\t  // Add this node to the matches if it fits the search criteria.\r\n\t  // This is performed at the last minute so newNode can be sent in its final form.\r\n\t  if (isSelfMatch) {\r\n\t\tmatches = [{ ...extraInfo, node: newNode }, ...matches];\r\n\t  }\r\n  \r\n\t  return {\r\n\t\tnode: matches.length > 0 ? newNode : node,\r\n\t\tmatches,\r\n\t\thasFocusMatch,\r\n\t\ttreeIndex: childIndex,\r\n\t  };\r\n\t};\r\n  \r\n\tconst result = trav({\r\n\t  node: { children: treeData },\r\n\t  isPseudoRoot: true,\r\n\t  currentIndex: -1,\r\n\t});\r\n  \r\n\treturn {\r\n\t  matches: result.matches,\r\n\t  treeData: result.node.children,\r\n\t};\r\n  }\r\n  ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport SortableTree from 'react-sortable-tree';\r\nimport {LFloatArea, RFloatArea, Textfield, Label, RelativeGroup, BasicButton as Button, SubFullPanel } from 'components';\r\nimport {TreeSelectbox} from './components';\r\nimport 'react-sortable-tree/style.css';\r\nimport {getFlatDataFromTree, getTreeFromFlatData, addNodeUnderParent, getNodeAtPath, getDescendantCount, changeNodeAtPath , removeNodeAtPath, map, toggleExpandedForAll, find, getVisibleNodeInfoAtIndex} from './utils';\r\nimport {ComLib, newScrmObj, DataLib} from 'common';\r\n\r\nclass Tree extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.onChange = this.onChange.bind(this);\t\r\n\t\tthis.treeDataset = DataLib.datalist.getInstance();\r\n\t\tthis.propDataset = [];\r\n\t\tthis.tempDataset = [];\r\n\t\tthis.defaultNode = null;\r\n\t\tthis.initial     = true;\r\n\r\n\t\tthis.state = {\r\n\t\t\ttreeData: [],\r\n\t\t\tsearchString: \"\",\r\n\t\t\tsearchFocusIndex: -1,\r\n\t\t\tsearchFoundCount: 0,\r\n\t\t\tsearched: []\r\n\t\t}\r\n\t}\r\n\r\n\tstatic defaultProps = {\r\n\t\topenAllonInitial : false,\r\n\t\taddRowBtn  : false,\r\n\t\tdelRowBtn  : false,\r\n\t\tediRowBtn  : false,\r\n\t\tnoName     : false,\r\n\t\tallowDel   : false,\r\n\t\tallowSearch: false,\r\n\t\tmaxDepth   : 10,\r\n\t\taddToTop   : true,\r\n\t\tcanDrag    : false,\r\n\t\tonChange      : () => {return;},\r\n\t\tonMoveNode    : () => {return;},\r\n\t\tonRowDelete   : () => {return;},\r\n\t}\t\r\n\r\n\tonMoveNode = (e) => {\t\t\t\r\n\t\tlet dataNodes = getFlatDataFromTree({ treeData: e.treeData,\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetNodeKey:  node => node.id,\r\n\t\t\t\t\t\t\t\t\t\t\t\tignoreCollapsed: false\r\n\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\tlet propData = [];\t\t\r\n\t\tlet newSortOrd = 1;\r\n\r\n\t\tfor (let i = 0; i < dataNodes.length; i ++) {\r\n\t\t\tif (dataNodes[i]['node']['treeIndex'] === e.node.treeIndex) {\r\n\t\t\t\tif (dataNodes[i]['node']['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tdataNodes[i]['node']['rowtype'] = newScrmObj.constants.crud.update\r\n\t\t\t\t}\r\n\t\t\t\tif (e.nextParentNode !== null) {\r\n\t\t\t\t\tdataNodes[i]['node']['parent'] = e.nextParentNode.treeIndex;\r\n\t\t\t\t} else if (e.nextParentNode === null) {\r\n\t\t\t\t\tdataNodes[i]['node']['parent'] = 0;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdataNodes[i]['node']['PARENT_ID'] = \"\";\r\n\r\n\t\t\t}\r\n\t\t\tif (e.nextParentNode === null) {\r\n\t\t\t\tif (dataNodes[i]['node']['parent'] === 0) {\r\n\t\t\t\t\tif (dataNodes[i]['node']['SORT_ORD'] === newSortOrd) {\r\n\t\t\t\t\t\tnewSortOrd += 1;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (dataNodes[i]['node']['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\t\tdataNodes[i]['node']['rowtype'] = newScrmObj.constants.crud.update\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdataNodes[i]['node']['SORT_ORD'] = newSortOrd;\r\n\t\t\t\t\t\tnewSortOrd += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (dataNodes[i]['node']['parent'] === e.nextParentNode.treeIndex) {\r\n\t\t\t\t\tif (dataNodes[i]['node']['SORT_ORD'] === newSortOrd) {\r\n\t\t\t\t\t\tnewSortOrd += 1;\r\n\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (dataNodes[i]['node']['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\t\tdataNodes[i]['node']['rowtype'] = newScrmObj.constants.crud.update\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdataNodes[i]['node']['SORT_ORD'] = newSortOrd;\r\n\t\t\t\t\t\tnewSortOrd += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tpropData.push(dataNodes[i]['node'])\r\n\t\t}\r\n\t\t\r\n\t\tthis.updateTreeData(true, propData);\r\n\r\n\t\t//this.props.onMoveNode({id: this.props.id, data: propData});\r\n\t}\r\n\r\n\tonChange = (treeData) => {\r\n\t\tlet dataNodes =  getFlatDataFromTree({ treeData: treeData,\r\n\t\t\tgetNodeKey:  node => node.id,\r\n\t\t\tignoreCollapsed: false\r\n\t\t})\r\n\r\n\t\tlet temp = [];\r\n\t\r\n\t\tfor (let i = 0; i < dataNodes.length; i ++) {\r\n\t\t\ttemp.push(dataNodes[i]['node']);\r\n\t\t}\r\n\t\t\r\n\t\tif (this.treeDataset !== temp) {\r\n\t\t\tthis.setState({treeData: treeData});\t\t\t\r\n\t\t\tthis.treeDataset = temp;\r\n\t\t}\t\r\n\t}\r\n\t\r\n\tisSearched = (content, searchString) => {\t\r\n\t\tif (content.indexOf(searchString) > -1 && searchString.length > 0) {\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t}\r\n\tgenerateNodeProps (rowInfo) {\t\t\t\r\n\t\tif (rowInfo['node']['rowtype'] === newScrmObj.constants.crud.destroy) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tlet header  = this.props.header;\r\n\r\n\t\tlet cnt = 0;\r\n\t\tlet title = [];\t\t\r\n\t\t\r\n\t\tfor (let i = 0; i < header.length; i ++) {\r\n\t\t\tlet content = rowInfo['node'][header[i]['field']];\t\t\r\n\t\t\tlet name    = header[i]['headerName'];\r\n\t\t\tlet len     = header[i]['fieldLen'];\r\n\t\t\tlet type    = header[i]['type'];\r\n\r\n\t\t\tif (len === undefined || len === null || len === 0) {\r\n\t\t\t\tlen = 40;\r\n\t\t\t}\r\n\r\n\t\t\tif (rowInfo.path.length > 1 && cnt === 0) {\r\n\t\t\t\tlen -= 44 * (rowInfo.path.length - 1);\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlen = len +\"px\";\r\n\t\t\tif (type === 'sel') {\t\t\t\t\r\n\t\t\t\tlet codeValue = header[i]['codeValue'];\r\n\t\t\t\tlet selVal = ComLib.getComCodeValue(codeValue);\r\n\t\t\t\t\r\n\t\t\t\tselVal = ComLib.getComCodeName(codeValue, content);\r\n\t\t\t\t\r\n\t\t\t\ttitle.push(<div style={{width:\"5px\"}}/>)\r\n\t\t\t\t// title.push(<Label value={name}/>)\r\n\t\t\t\ttitle.push(<div className='scrm-input-div' id={header[i]['field'] + '__' + rowInfo['node']['ID'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt + '__div'} style={{width: len}}>\r\n\t\t\t\t\t\t\t\t<input\t\r\n\t\t\t\t\t\t\t\t\tclassName = \"scrm-input-text\"\r\n\t\t\t\t\t\t\t\t\ttype        = \"text\"\r\n\t\t\t\t\t\t\t\t\tid          = {header[i]['field'] + '__' + rowInfo['node']['ID'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt}\r\n\t\t\t\t\t\t\t\t\tname        = {len.substring(0, len.length - 2)}\r\n\t\t\t\t\t\t\t\t\tvalue       = {selVal}\r\n\t\t\t\t\t\t\t\t\tplaceholder = {name}\r\n\t\t\t\t\t\t\t\t\tminLength   = {0}\r\n\t\t\t\t\t\t\t\t\tmaxLength   = {100}\r\n\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\tonClick     = {(e) => this.event.treeRow.selectbox.onChange(e)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t// onfocus     = {this.event.treeRow.selectbox.onChange}\r\n\t\t\t} else {\r\n\t\t\t\ttitle.push(<div key={header[i]['field'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt + '__div'} style={{width:\"5px\"}} id={header[i]['field'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt + '__div'}></div>)\r\n\t\t\t\t// title.push(<Label value={name}/>)\r\n\t\t\t\ttitle.push(<Textfield\r\n\t\t\t\t\t\t\t\tkey         = {header[i]['field'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt}\r\n\t\t\t\t\t\t\t\twidth       = {len}\r\n\t\t\t\t\t\t\t\tid          = {header[i]['field'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt}\r\n\t\t\t\t\t\t\t\tname        = {header[i]['field'] + '__' + rowInfo['node']['treeIndex'] + '__' + cnt}\r\n\t\t\t\t\t\t\t\tvalue       = {content}\r\n\t\t\t\t\t\t\t\tplaceholder = {name}\r\n\t\t\t\t\t\t\t\tminLength   = {0}\r\n\t\t\t\t\t\t\t\tmaxLength   = {100}\r\n\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\tonChange    = {this.event.treeRow.input.onChange}\r\n\t\t\t\t\t\t\t/>)\r\n\t\t\t}\r\n\t\t\tcnt += 1;\r\n\t\t}\r\n\r\n\t\tlet depth = rowInfo.path.length;\r\n\r\n\t\tif (this.props.addRowBtn === true && depth < this.props.maxDepth) {\r\n\t\t\ttitle.push(<button className=\"scrm-btn xs grey-o i ml5 mt5\" onClick={e => this.event.button.onClick(e, rowInfo.path, rowInfo['node']['treeIndex'] + \"__add\")}>\r\n\t\t\t\t\t\t<i className=\"xi-plus xi-x\"/>\r\n\t\t\t\t\t   </button>);\r\n\r\n\t\t} else if (this.props.addRowBtn === true && depth >= this.props.maxDepth) {\r\n\t\t\ttitle.push(<button className=\"scrm-btn xs grey i ml5 mt5\">\r\n\t\t\t\t\t\t\t<i className=\"xi-plus xi-x\"/>\r\n\t\t\t\t\t\t</button>);\r\n\t\t}\r\n\r\n\t\tif (this.props.delRowBtn === true) {\r\n\t\t\ttitle.push(<button className=\"scrm-btn xs grey-o i ml5 mt5\" onClick={e => this.event.button.onClick(e, rowInfo.path, rowInfo['node']['treeIndex'] + \"__delete\")}>\r\n\t\t\t\t\t\t<i className=\"xi-minus xi-x\"/>\r\n\t\t\t\t\t   </button>)\r\n\t\t}\r\n\r\n\t\tif (this.props.ediRowBtn === true) {\r\n\t\t\ttitle.push(<button className=\"scrm-btn xs grey-o i ml5 mt5\" onClick={e => this.event.button.onClick(e, rowInfo.path, rowInfo['node']['treeIndex'] + \"__edit\")}>\r\n\t\t\t\t\t\t<i className=\"xi-pen xi-x\"/>\r\n\t\t\t\t\t   </button>)\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t// let tempRow = this.tempDataset[this.datasetIndexOf(\"ID\", rowInfo[\"node\"].ID, this.tempDataset)];\r\n\r\n\t\tconst { searched, searchFocusIndex} = this.state;\r\n\t\tif (this.props.allowSearch && searched.length > 0) {\r\n\t\t\tfor (let i = 0; i < header.length; i ++) {\r\n\t\t\t\tif (header[i]['searchedTarget'] === true) {\r\n\t\t\t\t\tlet content = rowInfo[\"node\"][header[i]['field']];\r\n\r\n\t\t\t\t\tlet rtnVal = this.isSearched(content, this.state.searchString);\r\n\r\n\t\t\t\t\tif (rtnVal === true) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\ttitle.push(<button key={\"serched_\" + rowInfo[\"node\"].ID} className=\"scrm-btn xs red-o i ml5 mt5\" style={{cursor: \"initial\"}}>\r\n\t\t\t\t\t\t\t\t\t\t<i className=\"xi-search xi-x\"/>\r\n\t\t\t\t\t\t\t\t\t</button>);\t\t\t\r\n\t\t\t\t\t\tconst searchedId = searched[searchFocusIndex].node.ID;\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (searchedId === rowInfo['node'].ID) {\r\n\t\t\t\t\t\t\trowInfo[\"className\"] = \"tree_custom_search_css_current\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trowInfo[\"className\"] = \"tree_custom_search_css\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tbreak;\t\t\t\r\n\t\t\t\t\t} \r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\trowInfo['node']['title'] = <div style={{display: 'flex'}}>{title}</div>;\r\n\t\tdelete rowInfo['lowerSiblingCounts'];\r\n\r\n\t\t\r\n\r\n\t\treturn rowInfo;\r\n\t}\r\n\taddTreeRow = () => {\r\n\t\tlet topNode  = getNodeAtPath({treeData: this.state.treeData, path: [], getNodeKey: node => node.treeIndex, ignoreCollapsed: true});\r\n\t\tlet newNode  = JSON.parse(JSON.stringify(this.defaultNode));\r\n\t\tlet newIndx  = getDescendantCount({ node: topNode.node, ignoreCollapsed: false }) + 1;\r\n\t\tlet isToTop = false;\r\n\r\n\t\tif (this.props.addToTop === true) {\r\n\t\t\tnewNode.SORT_ORD = 1;\r\n\t\t\tisToTop = true;\r\n\t\t} else {\r\n\t\t\tnewNode.SORT_ORD = topNode.Children === undefined ? 1 : topNode.Children.length + 1;\r\n\t\t}\r\n\r\n\t\tnewNode.parent    = 0;\r\n\t\tnewNode.recid     = newIndx;\r\n\t\tnewNode.treeIndex = newIndx;\r\n\t\tnewNode.rowtype   = newScrmObj.constants.crud.create;\r\n\t\t\r\n\t\tconst newTree = addNodeUnderParent({\r\n\t\t\ttreeData: this.state.treeData,\r\n\t\t\tnewNode: newNode,\r\n\t\t\texpandParent: true,\r\n\t\t\taddAsFirstChild : isToTop,\r\n\t\t\tparentKey: undefined,\r\n\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t});\r\n\r\n\t\tlet newSortOrd = 1;\r\n\r\n\t\tif (this.props.addToTop === true) {\r\n\t\t\tlet treeDataState = map({\r\n\t\t\t\ttreeData: newTree.treeData,\r\n\t\t\t\tcallback: param => { \t\r\n\t\t\t\t\tif (param['node']['parent'] === 0) {\r\n\t\t\t\t\t\tif (param['node']['rowtype'] === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.update;\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tparam['node']['SORT_ORD'] = newSortOrd;\r\n\t\t\t\t\t\tnewSortOrd += 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn param['node']\r\n\t\t\t\t},\r\n\t\t\t\tgetNodeKey: ({ treeIndex }) => treeIndex,\r\n\t\t\t\tignoreCollapsed: true,\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tthis.updateTreeData (false, treeDataState, true);\t\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.updateTreeData (false, newTree.treeData, false);\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tlet header = this.props.header;\r\n\r\n\t\tthis.defaultNode = {};\r\n\r\n\t\tthis.defaultNode['ID']            = \"\";\r\n\t\tthis.defaultNode['PARENT_ID']     = \"\";\r\n\t\tthis.defaultNode['BAS_PARENT_ID'] = \"\";\r\n\t\tthis.defaultNode['SORT_ORD']      = \"\";\r\n\t\tthis.defaultNode['parent']    = 0;\r\n\t\tthis.defaultNode['recid']     = 1;\r\n\t\tthis.defaultNode['treeIndex'] = 1;\r\n\t\tthis.defaultNode['rowtype']   = newScrmObj.constants.crud.create;\r\n\t\t\r\n\t\tfor (let i = 0; i < header.length; i ++) {\r\n\t\t\tlet field = header[i]['field'];\r\n\t\t\tlet type = header[i]['type'];\r\n\r\n\t\t\tif (type === 'sel') {\r\n\t\t\t\tlet codeValue    = header[i]['codeValue'];\r\n\t\t\t\tlet defaultValue = ComLib.getComCodeValue(codeValue)[0];\r\n\r\n\t\t\t\tthis.defaultNode[field] = defaultValue;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tthis.defaultNode[field] = \"\";\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidUpdate (prevProps, prevState) {\t\t\r\n\t\tif (this.props.data === null) {\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif (this.props.data.records !== this.propDataset) {\r\n\t\t\tthis.propDataset = this.props.data.records;\r\n\t\t\t\r\n\t\t\tlet tempRecords = JSON.parse(JSON.stringify(this.propDataset));\r\n\r\n\t\t\tfor(let i = 0; i < tempRecords.length; i ++) {\r\n\t\t\t\ttempRecords[i]['treeIndex'] = i + 1;\r\n\t\t\t\tfor (let j = 0; j < tempRecords.length; j ++) {\r\n\t\t\t\t\tif (tempRecords[j]['ID'] === tempRecords[i]['PARENT_ID']) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttempRecords[i]['parent'] = j + 1;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\tif (tempRecords[i]['parent'] === undefined || tempRecords[i]['parent'] == null) {\r\n\t\t\t\t\ttempRecords[i]['parent'] = 0;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (tempRecords.length > 0) {\r\n\t\t\t\tif (this.props.openAllonInitial || (this.props.searched !== null && this.props.searched !== undefined && this.props.searched.length > 0)) {\r\n\t\t\t\t\ttempRecords = map({\r\n\t\t\t\t\t\t\ttreeData: tempRecords,\r\n\t\t\t\t\t\t\tcallback: ({ node }) => ({ ...node, expanded: true }),\r\n\t\t\t\t\t\t\tgetNodeKey: ({ treeIndex }) => treeIndex,\r\n\t\t\t\t\t\t\tignoreCollapsed: false,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.updateTreeData (true, tempRecords);\r\n\r\n\t\t} \r\n\t}\t\r\n\tchkChildRowtype = (parent) => {\r\n\t\tlet rtnVal = false;\r\n\t\tlet children = parent.children;\r\n\t\tfor (let i = 0; i < children.length; i ++) {\r\n\t\t\tif (children[i].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\treturn true;\r\n\r\n\t\t\t} else if (children[i].children !== undefined && children[i].children !== null && children[i].children.length > 0){\r\n\t\t\t\tlet childRtnVal = this.chkChildRowtype(children[i]);\r\n\r\n\t\t\t\tif (childRtnVal) return true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rtnVal;\r\n\t}\r\n\r\n\tchkChildSearched = (parent) => {\r\n\t\tlet rtnVal = false;\r\n\t\tlet children = parent.children;\r\n\t\tlet header = this.props.header;\r\n\r\n\t\tif (children === undefined) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < children.length; i ++) {\t\t\t\r\n\t\t\tfor (let j = 0; j < header.length; j ++) {\r\n\t\t\t\tif (header[j]['searchedTarget'] === true) {\r\n\t\t\t\t\tlet content = children[i][header[j]['field']];\r\n\t\r\n\t\t\t\t\trtnVal = this.isSearched(content, this.state.searchString);\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (rtnVal) return rtnVal;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (children[i].children !== undefined && children[i].children !== null && children[i].children.length > 0){\r\n\t\t\t\trtnVal = this.chkChildSearched(children[i])\r\n\r\n\t\t\t\tif (rtnVal) {\r\n\t\t\t\t\treturn rtnVal;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\t\t}\r\n\t\treturn rtnVal;\r\n\t}\r\n\r\n\tupdateTreeData = (isFlatData, treeDataset, addToTop) => {\r\n\t\tlet treeDataState;\r\n\t\tif (treeDataset !== this.treeDataset) {\r\n\t\t\t\r\n\t\t\tif (isFlatData) {\r\n\t\t\t\tthis.treeDataset = treeDataset.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove);\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\tlet dataNodes =  getFlatDataFromTree({ treeData: treeDataset,\r\n\t\t\t\t\tgetNodeKey:  node => node.id,\r\n\t\t\t\t\tignoreCollapsed: false\r\n\t\t\t\t})\r\n\t\r\n\t\t\t\tlet temp = [];\r\n\t\r\n\t\t\t\tfor (let i = 0; i < dataNodes.length; i ++) {\r\n\t\t\t\t\ttemp.push(dataNodes[i]['node']);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.treeDataset = temp.filter(item => item['rowtype'] !== newScrmObj.constants.crud.remove);\r\n\t\t\t}\r\n\r\n\t\t\tlet records = this.treeDataset.filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy);\r\n\t\t\t\r\n\t\t\tfor (let i =0; i < records.length; i ++) {\r\n\t\t\t\tdelete records[i]['children'];\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < this.propDataset.length; i ++) {\r\n\t\t\t\tlet propData = this.propDataset[this.datasetIndexOf(\"recid\", i + 1, this.propDataset)];\r\n\t\t\t\tlet treeData = records[this.datasetIndexOf(\"recid\", i + 1, records)];\r\n\t\t\t\t\r\n\t\t\t\tlet rtnVal = true;\r\n\r\n\t\t\t\tObject.keys(propData).forEach(function(key){\r\n\r\n\t\t\t\t\tif (propData[key] !== treeData[key]) {\r\n\t\t\t\t\t\trtnVal = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tif (rtnVal) {\r\n\t\t\t\t\trecords[this.datasetIndexOf(\"recid\", i + 1, records)].rowtype = propData.rowtype;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (records[this.datasetIndexOf(\"recid\", i + 1, records)].rowtype === newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\trecords[this.datasetIndexOf(\"recid\", i + 1, records)].rowtype = newScrmObj.constants.crud.update;\r\n\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttreeDataState = getTreeFromFlatData({flatData    : records.map(node => ({ ...node, title: node.title})),\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetKey      : node => node.treeIndex,\r\n\t\t\t\t\t\t\t\t\t\t\t\tgetParentKey: node => node.parent,\r\n\t\t\t\t\t\t\t\t\t\t\t\trootKey     : 0, \r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\tif (treeDataState !== this.state.treeData) {\r\n\t\t\t\tthis.setState({treeData: treeDataState});\r\n\t\t\t\t\r\n\t\t\t\tthis.props.onChange({id: this.props.id, data: this.treeDataset});\r\n\r\n\t\t\t\tif (addToTop !== undefined) {\r\n\t\t\t\t\tlet treeDiv   = document.getElementById(this.props.id)\r\n\t\t\t\t\tlet scrollDiv = treeDiv.getElementsByClassName('ReactVirtualized__Grid ReactVirtualized__List rst__virtualScrollOverride')[0];\r\n\t\t\t\t\r\n\t\t\t\t\tif (addToTop) {\r\n\t\t\t\t\t\tscrollDiv.scrollTop = scrollDiv.offsetTop;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tscrollDiv.scrollTop = scrollDiv.offsetTop + scrollDiv.offsetHeight;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\tdatasetIndexOf = (column, value, records) => {\r\n\t\tvar index = -1;\r\n\t\tfor (var i = 0; i < records.length; i++) {\r\n\t\t\tif (records[i][column] === value) {\r\n\t\t\t\tindex = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn index;\r\n\t}\r\n\t\r\n\tevent = {\r\n\t\ttreeRow : {\r\n\t\t\tinput : {\r\n\t\t\t\tonChange: (e) => {\r\n\t\t\t\t\tlet target    = e.target.id.substring(0, e.target.id.lastIndexOf(\"__\"));\r\n\t\t\t\t\tlet treeIndex = target.substring(target.lastIndexOf(\"__\") + 2);\r\n\t\t\t\t\tlet colum     = target.substring(0, target.lastIndexOf(\"__\"));\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet treedata = map({\r\n\t\t\t\t\t\ttreeData: this.state.treeData,\r\n\t\t\t\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t\t\t\t\tcallback: param => { \r\n\t\t\t\t\t\t\tif (param['node']['recid'] === Number(treeIndex)) {\r\n\t\t\t\t\t\t\t\tparam['node'][colum] = e.target.value\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\treturn param['node'];\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tignoreCollapsed: false,\r\n\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\tthis.updateTreeData(false, treedata);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselectbox : {\r\n\t\t\t\tonChange: (e) => {\r\n\t\t\t\t\t//let target    = e.target.id.substring(0, e.target.id.lastIndexOf(\"__\"));\r\n\t\t\t\t\tlet cnt       = e.target.id.substring(e.target.id.lastIndexOf(\"__\") + 2);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet selected     = 0;\r\n\t\t\t\t\tlet codeValue    = this.props.header[Number(cnt)]['codeValue'];\r\n\r\n\t\t\t\t\tlet selectedCode = ComLib.getCommCodeList(codeValue).filter(ele => ele['CODE_NM'] === e.target.value)[0]['CODE'];\r\n\r\n\t\t\t\t\tlet selArr       = ComLib.getComCodeValue(codeValue);\r\n\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < selArr.length; i ++) {\r\n\t\t\t\t\t\tif (selectedCode === selArr[i]) {\r\n\t\t\t\t\t\t\tselected = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tReactDOM.render(<TreeSelectbox\r\n\t\t\t\t\t\t\t\t\t\tvalue= {e.target.value}\r\n\t\t\t\t\t\t\t\t\t\tid   = {e.target.id + '__' + e.target.name}\r\n\t\t\t\t\t\t\t\t\t\tname = {e.target.name}\r\n\t\t\t\t\t\t\t\t\t\tcodeValue={codeValue}\r\n\t\t\t\t\t\t\t\t\t\ttreeData={this.state.treeData}\r\n\t\t\t\t\t\t\t\t\t\tupdateTreeData={this.updateTreeData}\r\n\t\t\t\t\t\t\t\t\t\tevent={this.event}\r\n\t\t\t\t\t\t\t\t\t\tselected={selected}\r\n\t\t\t\t\t\t\t\t\t/>, document.getElementById(e.target.id + '__div'));\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: (e, path, targetId) => {\r\n\t\t\t\tlet eventId   = targetId.substring(targetId.lastIndexOf(\"__\") + 2);\r\n\t\t\t\t\r\n\t\t\t\tswitch (eventId) {\r\n\t\t\t\tcase \"add\":\r\n\t\t\t\t\tlet addNode = getNodeAtPath({treeData: this.state.treeData, path: path, getNodeKey: node => node.treeIndex, ignoreCollapsed: true});\r\n\t\t\t\t\tlet depth   = path.length;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (!(depth >= this.props.maxDepth)) {\r\n\t\t\t\t\t\tlet topNode = getNodeAtPath({treeData: this.state.treeData, path: [], getNodeKey: node => node.treeIndex, ignoreCollapsed: true});\r\n\t\t\t\t\t\tlet newNode = JSON.parse(JSON.stringify(this.defaultNode));\r\n\t\t\t\t\t\tlet newIndx = getDescendantCount({ node: topNode.node, ignoreCollapsed: false }) + 1;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tnewNode.parent    = addNode.node.treeIndex;\r\n\t\t\t\t\t\tnewNode.recid     = newIndx;\r\n\t\t\t\t\t\tnewNode.treeIndex = newIndx;\r\n\t\t\t\t\t\tnewNode.rowtype   = newScrmObj.constants.crud.create;\r\n\t\t\t\t\t\tnewNode.ID        = '';\r\n\t\t\t\t\t\tnewNode.PARENT_ID = addNode.node.ID;\r\n\t\t\t\t\t\tnewNode.SORT_ORD  = addNode.children === undefined ? 1 : addNode.children.length + 1;\r\n\r\n\t\t\t\t\t\tconst newTree = addNodeUnderParent({\r\n\t\t\t\t\t\t\ttreeData: this.state.treeData,\r\n\t\t\t\t\t\t\tnewNode: newNode,\r\n\t\t\t\t\t\t\texpandParent: true,\r\n\t\t\t\t\t\t\taddAsFirstChild : false,\r\n\t\t\t\t\t\t\tparentKey: addNode ? addNode.treeIndex : undefined,\r\n\t\t\t\t\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.updateTreeData(false, newTree.treeData);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['가장 최 하위 데이터 입니다.']);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.props.onRowSelect({id: this.props.id, data:addNode.node, type: 'add'});\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase \"delete\":\r\n\t\t\t\t\tlet delNode = getNodeAtPath({treeData: this.state.treeData, path: path, getNodeKey: node => node.treeIndex, ignoreCollapsed: true});\r\n\t\t\t\t\tlet rtn = this.props.allowDel;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (rtn === true) rtn = true;\r\n\r\n\t\t\t\t\tif (delNode.node.rowtype === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\tif (delNode['node']['children'] !== undefined && delNode['node']['children'] !== null && delNode['node']['children'].length !== 0) {\r\n\t\t\t\t\t\t\tif (rtn === true) {\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['하위에 속한 데이터들도 삭제됩니다. 삭제 하시겟습니까?'], checked => { if (checked === true) {\r\n\t\t\t\t\t\t\t\t\tlet treeData = map({\r\n\t\t\t\t\t\t\t\t\t\ttreeData: this.state.treeData,\r\n\t\t\t\t\t\t\t\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t\t\t\t\t\t\t\t\tcallback: param => { \r\n\t\t\t\t\t\t\t\t\t\t\tif (param['node']['ID'] === delNode['node']['ID']) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (param['node']['rowtype'] === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.destroy;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (param['path'].indexOf(delNode['node']['ID']) > -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (param['node']['rowtype'] === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.destroy;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn param['node'];\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tignoreCollapsed: false,\r\n\t\t\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\t\t\tthis.updateTreeData(false, treeData);\r\n\t\t\t\t\t\t\t\t}});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tlet isChildContainNonCreate = false;\r\n\r\n\t\t\t\t\t\t\t\tisChildContainNonCreate = this.chkChildRowtype(delNode.node)\r\n\r\n\t\t\t\t\t\t\t\tif (isChildContainNonCreate) {\r\n\t\t\t\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['하위에 속한 데이터가 모두 신규 행일 경우만 삭제가 가능합니다.']);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tlet treeData = map({\r\n\t\t\t\t\t\t\t\t\t\ttreeData : this.state.treeData,\r\n\t\t\t\t\t\t\t\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t\t\t\t\t\t\t\t\tcallback: param => { \r\n\t\t\t\t\t\t\t\t\t\t\tif (param['node']['treeIndex'] === delNode['node']['treeIndex']) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t} else if (param['path'].indexOf(delNode['node']['treeIndex']) > -1) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\treturn param['node'];\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t\tignoreCollapsed: false,\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\tthis.updateTreeData(false, treeData);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tlet deletedtreeData = removeNodeAtPath({ treeData : this.state.treeData, path: path, getNodeKey: node => node.treeIndex, ignoreCollapsed: true})\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.updateTreeData(false, deletedtreeData);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if  ((delNode.node.rowtype === newScrmObj.constants.crud.read || delNode.node.rowtype === newScrmObj.constants.crud.update) && rtn === true) {\r\n\t\t\t\t\t\tif (delNode['node']['children'] !== undefined && delNode['node']['children'] !== null && delNode['node']['children'].length !== 0) {\r\n\t\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['하위에 속한 데이터들도 삭제됩니다. 삭제 하시겟습니까?'], checked => { if (checked === true) {\r\n\t\t\t\t\t\t\t\tlet treeData = map({\r\n\t\t\t\t\t\t\t\t\ttreeData : this.state.treeData,\r\n\t\t\t\t\t\t\t\t\tgetNodeKey: node => node.treeIndex,\r\n\t\t\t\t\t\t\t\t\tcallback: param => { \r\n\t\t\t\t\t\t\t\t\t\tif (param['node']['treeIndex'] === delNode['node']['treeIndex']) {\r\n\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.destroy;\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t} else if (param['path'].indexOf(delNode['node']['treeIndex']) > -1) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (param['node']['rowtype'] === newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\t\tparam['node']['rowtype'] = newScrmObj.constants.crud.destroy;\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn param['node'];\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tignoreCollapsed: false,\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\r\n\t\t\t\t\t\t\t\tthis.updateTreeData(false, treeData);\r\n\r\n\t\t\t\t\t\t\t}});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['신규 행만 삭제가 가능합니다.']);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"edit\":\r\n\t\t\t\t\tlet editNode = getNodeAtPath({treeData: this.state.treeData, path: path, getNodeKey: node => node.treeIndex, ignoreCollapsed: true});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.props.onRowSelect({id: this.props.id, data: editNode.node, type: 'edit'});\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"view\":\r\n\t\t\t\t\tlet viewNode = getNodeAtPath({treeData: this.state.treeData, path: path, getNodeKey: node => node.treeIndex, ignoreCollapsed: true});\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.props.onRowSelect({id: this.props.id, data:viewNode.node, type: 'view'});\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\tcustomPlaceholder = () => {\r\n\t\tlet height = (Number(this.props.height.substring(0, this.props.height.length - 2)) - 100) + 'px';\r\n\r\n\t\tconst placeholder = (<div style={{width: '100%', height: height, textAlign: 'center'}}>\r\n\t\t\t\t\t<div style={{display: 'inline-block', position: 'relative', top: '40%'}}>\r\n\t\t\t\t\t조회된 결과가 존재하지 않습니다.\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>)\r\n\t\treturn placeholder;\r\n\t}\r\n\tmakeTreeHeader = () => {\r\n\t\tlet treeHeader = [];\r\n\t\tlet header  = this.props.header;\r\n\t\t\r\n\t\tfor (let i = 0; i < header.length; i ++) {\r\n\t\t\tlet name    = header[i]['headerName'];\r\n\t\t\tlet len     = header[i]['fieldLen'];\r\n\t\t\tlet paddingLeft = 0;\r\n\t\t\tlen = len +\"px\";\r\n\r\n\t\t\tif (i === 0) {\r\n\t\t\t\tif (this.props.canDrag) {\r\n\t\t\t\t\tpaddingLeft += 100;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpaddingLeft += 60;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tpaddingLeft += 5;\r\n\t\t\t}\r\n\r\n\t\t\tpaddingLeft = paddingLeft +'px'\r\n\r\n\t\t\ttreeHeader.push(<div key={i} style={{width:len, float: \"left\", paddingLeft: paddingLeft, borderLeft: \"1px #cacaca solid\", height: \"30px\", backgroundColor: \"var(--ag-header-background-color, #F1F3F5)\"}}>\r\n\t\t\t\t\t\t\t\t<Label value={name}/>\r\n\t\t\t\t\t\t\t</div>)\r\n\t\t}\r\n\t\tlet lastLen = 25;\r\n\t\tif (this.props.addRowBtn === true) {\r\n\t\t\tlastLen += 29;\r\n\t\t}\r\n\t\tif (this.props.delRowBtn === true) {\r\n\t\t\tlastLen += 29;\r\n\t\t} \r\n\t\tif (this.props.allowSearch) {\r\n\t\t\tlastLen += 29;\r\n\t\t}\r\n\t\t\r\n\t\tlastLen = lastLen + 'px';\r\n\r\n\t\ttreeHeader.push(<div key={\"last\"} style={{width:lastLen, float: \"left\", borderLeft: \"1px #cacaca solid\", height: \"30px\", backgroundColor: \"var(--ag-header-background-color, #F1F3F5)\"}}>\r\n\t\t\t\t\t\t</div>)\r\n\t\treturn treeHeader\r\n\t}\r\n\ttoggleNodeExpansion = expanded => {\r\n\t\tthis.setState(prevState => ({\r\n\t\t  treeData: toggleExpandedForAll({ treeData: this.state.treeData, expanded })\r\n\t\t}));\r\n\t};\r\n\tsearchNode = (e) => {\r\n\t\tlet header  = this.props.header;\r\n\t\tlet content = \"\";\r\n\r\n\t\tfor (let i = 0; i < header.length; i ++) {\r\n\t\t\tif (header[i]['searchedTarget'] === true) {\r\n\t\t\t\tcontent = e.node[header[i]['field']];\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet rtnVal = this.isSearched(content, e.searchQuery);\r\n\t\t\t\t\r\n\t\treturn rtnVal;\r\n\t}\r\n\thandleSearchOnChange = e => {\t\r\n\t\tthis.setState({\r\n\t\t\tsearchString: e.target.value,\r\n\t\t});\t\t\r\n\t};\r\n\tmoveListItem = () => {\r\n\t\tconst { searched, searchFocusIndex} = this.state;\r\n\t\t\r\n\t\tif (searched.length > 0) {\r\n\t\t\tconst serchTargetIndex = searched[searchFocusIndex].node.treeIndex;\r\n\t\t\t\r\n\t\t\tthis.treeRef.wrappedInstance.current.scrollToRow(serchTargetIndex - 1)\r\n\t\t\r\n\t\t}\r\n\t}\r\n\tselectPrevMatch = () => {\r\n\t\tconst { searchFocusIndex, searchFoundCount } = this.state;\r\n\t\r\n\t\tthis.setState({\r\n\t\t\tsearchFocusIndex:\r\n\t\t\t\tsearchFocusIndex !== null\r\n\t\t\t\t? (searchFoundCount + searchFocusIndex - 1) % searchFoundCount\r\n\t\t\t\t: searchFoundCount - 1\r\n\t\t}, () => {\r\n\t\t\tthis.moveListItem()\r\n\t\t});\r\n\t  };\r\n\t\r\n\tselectNextMatch = () => {\r\n\t\tconst { searchFocusIndex, searchFoundCount } = this.state;\r\n\t\r\n\t\tthis.setState({\r\n\t\t\tsearchFocusIndex:\r\n\t\t\t\tsearchFocusIndex !== null\r\n\t\t\t\t? (searchFocusIndex + 1) % searchFoundCount\r\n\t\t\t\t: 0\r\n\t\t}, () => {\r\n\t\t\tthis.moveListItem()\r\n\t\t});\r\n\t};\r\n\r\n\ttestonScroll =(e) => {\r\n\t\tconsole.log(e)\r\n\t}\r\n\trender() {\r\n\t\tlet treeHeader = this.makeTreeHeader();\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t{(this.props.noName && !this.props.addRowBtn) ?\r\n\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t:\t<div style={{display : 'block', width:'100%', height : '30px'}}>\r\n\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t(this.props.noName) ?\r\n\t\t\t\t\t\t\t\t\t\t\tnull \r\n\t\t\t\t\t\t\t\t\t\t:\t\r\n\t\t\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className = \"scrm-component-panel-namearea\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span> {(this.props.areaName) ? this.props.areaName : '트리'} </span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.toggleNodeExpansion.bind(this, true)} size=\"xs\" ml=\"5px\" value={\"+ all\"}/>\r\n\t\t\t\t\t\t\t\t\t\t<Button onClick={this.toggleNodeExpansion.bind(this, false)} size=\"xs\" ml=\"5px\" value={\"- all\"}/>\r\n\t\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t\t{(this.props.addRowBtn)\r\n\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"scrm-btn xs grey-o i\"onClick={this.addTreeRow}><i className=\"xi-plus xi-x\"/></button>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"검색\"/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {\"100px\"}\r\n\t\t\t\t\t\t\t\t\t\tid          = {\"iptSearchAll\"}\r\n\t\t\t\t\t\t\t\t\t\tname        = {\"iptSearchAll\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.searchString}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {\"검색\"}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {0}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {50}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.handleSearchOnChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={this.selectPrevMatch} size=\"xs\" ml=\"5px\" value={\"<\"}/>\r\n\t\t\t\t\t\t\t\t\t<Button onClick={this.selectNextMatch} size=\"xs\" ml=\"5px\" value={\">\"}/>      \r\n\t\t\t\t\t\t\t\t\t<Label value={ this.state.searchFoundCount > 0 ? this.state.searchFocusIndex + 1 + \" / \" +  this.state.searchFoundCount : \"0 / 0\"}/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\r\n\t\t\t\t<div id={this.props.id} className=\"ag-theme-alpine\" style={{width:'100%', border: '1px solid rgb(222 226 230 / 40%)', borderRadius: '0.5em'}}>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t{treeHeader}\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t<div style={{width:'100%', height: this.props.height}} id={this.props.id + \"_container\"}>\r\n\t\t\t\t\t\t<SortableTree\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\ttreeData  ={this.state.treeData}\r\n\t\t\t\t\t\t\tonChange  ={e => this.onChange(e)}\r\n\t\t\t\t\t\t\tonMoveNode={e => this.onMoveNode(e)}\r\n\t\t\t\t\t\t\tgenerateNodeProps={rowInfo => this.generateNodeProps(rowInfo)}\r\n\t\t\t\t\t\t\tmaxDepth={this.props.maxDepth}\r\n\t\t\t\t\t\t\tplaceholderRenderer={this.customPlaceholder}\r\n\t\t\t\t\t\t\tcanDrag={this.props.canDrag}\r\n\r\n\t\t\t\t\t\t\tsearchMethod={ this.searchNode}\r\n\t\t\t\t\t\t\tsearchQuery ={this.state.searchString}\r\n\t\t\t\t\t\t\tscaffoldBlockPxWidth={44}\r\n\t\t\t\t\t\t\t// rowHeight={55}\r\n\t\t\t\t\t\t\treactVirtualizedListProps={{\r\n\t\t\t\t\t\t\t\tref: ref => this.treeRef = ref\r\n\t\t\t\t\t\t\t }}\r\n\t\t\t\t\t\t\tsearchFinishCallback={matches =>\r\n\t\t\t\t\t\t\t\t{\t\r\n\t\t\t\t\t\t\t\t\tconst orgSearched = this.state.searched\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlet toMove = false;\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tif (orgSearched.length !== matches.length && matches.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\ttoMove = true;\r\n\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\tfor (let i = 0; i < matches.length; i ++) {\r\n\t\t\t\t\t\t\t\t\t\t\tlet dubchk = false;\r\n\t\t\t\t\t\t\t\t\t\t\tfor (let j = 0; j < orgSearched.length; j ++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (matches[i].node.ID ===  orgSearched[j].node.ID) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tdubchk = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tif (!dubchk) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttoMove = true;\r\n\t\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\t\t\t\tsearched: matches,\r\n\t\t\t\t\t\t\t\t\t\tsearchFoundCount: matches.length,\r\n\t\t\t\t\t\t\t\t\t\tsearchFocusIndex: matches.length > 0 ? this.state.searchFocusIndex % matches.length : 0\r\n\t\t\t\t\t\t\t\t\t}, ()=> {\r\n\t\t\t\t\t\t\t\t\t\tif (toMove) {\r\n\t\t\t\t\t\t\t\t\t\t\tthis.moveListItem();\r\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Tree;\r\n\r\n\r\n\r\n\t","import { combineReducers } from 'redux';\r\nimport appModule from './appModule';\r\n\r\nexport default combineReducers ({ appModule });\r\n","import configure from './configure';\r\nexport default configure();","import { createStore } from 'redux';\r\nimport modules from './modules';\r\n\r\nconst configure = () => {\r\n\t// const store = createStore(modules);\r\n\tconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\tconst store = createStore(modules, devTools);\r\n\r\n\treturn store;\r\n}\r\n\r\nexport default configure;","import axios from 'axios';\r\nimport { loadProgressBar } from 'x-axios-progress-bar';\r\nimport 'x-axios-progress-bar/dist/nprogress.css';\r\nimport _ from 'lodash';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Dialog} from 'components';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\n\r\nconst newScrmObj = {\r\n\tconstants: {\r\n\t\tcrud: {\r\n\t\t\tread: 'r',\r\n\t\t\tcreate: 'c',\r\n\t\t\tupdate: 'u',\r\n\t\t\tdestroy: 'd',\r\n\t\t\tremove: 'e'\r\n\t\t},\r\n\t\tdatetime: {\r\n\t\t\tformat: 'YYYYMMDDHH24MISS'\r\n\t\t},\r\n\t\tmdi: {\r\n\t\t\tDIALOG : 'dialog',\r\n\t\t\tPOP_UP : 'popup',\r\n\t\t\tPLAYER : 'player',\r\n\t\t\trealTime : 'real',\r\n\t\t\tLOADING : '_loadDiv'\r\n\t\t},\r\n\t\tselect: {\r\n\t\t\targument: {\r\n\t\t\t\tall: 'a',\r\n\t\t\t\tselect: 's',\r\n\t\t\t\tnone: 'n',\r\n\t\t\t},\r\n\t\t\tdataType : {\r\n\t\t\t\t\tall : 'A'\r\n\t\t\t\t,\tcns : 'B'\r\n\t\t\t\t,\tqa : 'Q'\r\n\t\t\t\t,\tmng : 'M'\r\n\t\t\t},\r\n\t\t\tauthControl : {\r\n\t\t\t\tQA : {\r\n\t\t\t\t\tCENT : [4, 5, 6, 7, 9],\r\n\t\t\t\t\tTEAM  : [5, 6, 9],\r\n\t\t\t\t\tUSER : [5]\r\n\t\t\t\t},\r\n\t\t\t\tCSR : {\r\n\t\t\t\t\tCENT : [4, 6, 7],\r\n\t\t\t\t\tTEAM  : [4, 6],\r\n\t\t\t\t\tUSER : [4]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\trowtype: {\r\n\t\t\tCREATE_OR_UPDATE: 'cu',\r\n\t\t\tDESTROY: 'd',\r\n\t\t\tCREATE: 'c',\r\n\t\t\tUPDATE: 'u'\r\n\t\t}\r\n\t}\r\n};\r\nconst ComLib = {\r\n\tisNull: (obj) => {\r\n\t\tif (typeof obj === undefined || obj === null) return true;\r\n\t},\r\n\tisJson: (data) => {\r\n\t\ttry {\r\n\t\t\tlet json = JSON.parse(data);\r\n\t\t\treturn (typeof json === 'object');\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tsetSession: (id, obj) => {\r\n\t\tif (typeof obj === 'object') {\r\n\t\t\tsessionStorage.setItem(id, JSON.stringify(obj));\r\n\t\t} else {\r\n\t\t\tsessionStorage.setItem(id, obj);\r\n\t\t}\r\n\t},\r\n\tgetSession: (id) => {\r\n\t\tif (ComLib.isJson(sessionStorage.getItem(id))) {\r\n\t\t\treturn JSON.parse(sessionStorage.getItem(id));\r\n\t\t} else {\r\n\t\t\treturn sessionStorage.getItem(id);\r\n\t\t}\r\n\t},\r\n\topenDialog : (type, msgcd, msg, callback) => {\r\n\t\tif ( document.getElementById(newScrmObj.constants.mdi.DIALOG) === undefined || document.getElementById(newScrmObj.constants.mdi.DIALOG) === null ) {\r\n\t\t\tlet dialog = document.createElement('div');\r\n\t\t\tdialog.id = newScrmObj.constants.mdi.DIALOG;\r\n\t\t\tdocument.body.appendChild(dialog);\r\n\t\t}\r\n\r\n\t\tlet sendMessage = ComLib.getMsgCont(msgcd, msg);\r\n\r\n\t\tif (type === 'C') {\r\n\t\t\tif (typeof callback === undefined || typeof callback !== 'function') { return false; }\r\n\t\t\tReactDOM.render( <Dialog.ConfirmDialog open={true} message={sendMessage}  onReturnVal = {callback}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t} else {\r\n\t\t\tReactDOM.render( <Dialog.AlertDialog   open={true} message={sendMessage}\r\n\t\t\t\t\t\t\t\t\t\t\tonClose={ () => { document.body.removeChild(document.getElementById(newScrmObj.constants.mdi.DIALOG));} }/>\r\n\t\t\t, document.getElementById(newScrmObj.constants.mdi.DIALOG) );\r\n\t\t}\r\n\t},\r\n\topenPop : (url, name, options, callbackFunc) => {\r\n\t\tlet arrPopTag = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.POP_UP.length) === newScrmObj.constants.mdi.POP_UP\r\n\t\t);\r\n\r\n\t\tlet popDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\r\n\t\tif (arrPopTag.length === 0) {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + arrPopTag.length;\r\n\t\t} else {\r\n\t\t\tpopDiv.id = newScrmObj.constants.mdi.POP_UP + '_div_' + (Number(arrPopTag[arrPopTag.length - 1].id.substr((newScrmObj.constants.mdi.POP_UP.length + '_div_'.length))) + 1).toString();\r\n\t\t\tposition = { x : arrPopTag.length * 10,  y: arrPopTag.length * 10 }\r\n\t\t}\r\n\t\t\r\n\t\tdocument.body.appendChild(popDiv);\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Dialog.PopupDialog\r\n\t\t\t\t\tpopupdivid = {popDiv.id}\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\turl={url}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tmodaless={options.modaless}\r\n\t\t\t\t\tposition = {position}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonCallbackFunc={callbackFunc}\r\n\t\t\t\t\tonClose={\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\toptions.callback();\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tReactDOM.unmountComponentAtNode(document.getElementById(popDiv.id));\r\n\t\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tdocument.body.removeChild(popDiv);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</Provider>\r\n\t\t, popDiv);\r\n\t\treturn popDiv.id;\r\n\t},\r\n\topenPlayer : (options, callbackFunc) => {\r\n\t\toptions.height = '810px';\r\n\t\tlet title = 'STT플레이어 : ' + (options.useUuid === true ? options.UUID : options.callId);\r\n\t\t\r\n\t\t// ComLib.openPop('STT000001', title, options, callbackFunc);\r\n\r\n\t\tlet arrPlayerTag = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.PLAYER.length) === newScrmObj.constants.mdi.PLAYER\r\n\t\t);\r\n\t\t\r\n\t\tlet isAreadyOpened = false;\r\n\r\n\t\tfor (let i = 0; i < arrPlayerTag.length; i ++) {\r\n\t\t\tlet currentplayer = document.getElementById(arrPlayerTag[i].id + \"_inner_div\").parentElement;\r\n\r\n\t\t\tif (arrPlayerTag[i].id === newScrmObj.constants.mdi.PLAYER + '_div_' + (options.useUuid === true ? options.UUID : options.callId)) {\t\t\t\t\r\n\t\t\t\tisAreadyOpened = true;\r\n\t\t\t\tcurrentplayer.style.zIndex = '9992'\r\n\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcurrentplayer.style.zIndex = '9991'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isAreadyOpened) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet playerDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\r\n\t\tif (arrPlayerTag.length === 0) {\r\n\t\t\tplayerDiv.id = newScrmObj.constants.mdi.PLAYER + '_div_' + (options.useUuid === true ? options.UUID : options.callId);\r\n\t\t} else {\r\n\t\t\tplayerDiv.id = newScrmObj.constants.mdi.PLAYER + '_div_' + (options.useUuid === true ? options.UUID : options.callId);\r\n\t\t\tposition = { x : arrPlayerTag.length * 10,  y: arrPlayerTag.length * 10 }\r\n\t\t}\r\n\t\t\r\n\t\tdocument.body.appendChild(playerDiv);\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Dialog.PopupDialog\r\n\t\t\t\t\tpopupdivid = {playerDiv.id}\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\turl={'STT000001'}\r\n\t\t\t\t\tname={title}\r\n\t\t\t\t\tmodaless={options.modaless}\r\n\t\t\t\t\tposition = {position}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonCallbackFunc={callbackFunc}\r\n\t\t\t\t\tonClose={\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\toptions.callback();\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tReactDOM.unmountComponentAtNode(document.getElementById(playerDiv.id));\r\n\t\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tdocument.body.removeChild(playerDiv);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</Provider>\r\n\t\t, playerDiv);\r\n\r\n\t\treturn playerDiv.id;\r\n\t\t\r\n\t},\r\n\topenRealTime : (options, callbackFunc) => {\r\n\t\toptions.height = '810px';\r\n\t\t// let title = 'STT플레이어 : ' + (options.useUuid === true ? options.UUID : options.callId);\r\n\t\tlet title = options.params.CONST_NM + \"(\" + options.params.CONST_CD + \")\";\r\n\t\t\r\n\t\t// ComLib.openPop('STT000001', title, options, callbackFunc);\r\n\r\n\t\tlet arrRealTimeTag = Object.values(document.body.children).filter(\r\n\t\t\ttag => tag.tagName === 'DIV'\r\n\t\t).filter(\r\n\t\t\titem => item.id.substring(0, newScrmObj.constants.mdi.realTime.length) === newScrmObj.constants.mdi.realTime\r\n\t\t);\r\n\t\t\r\n\t\tlet isAreadyOpened = false;\r\n\r\n\t\tfor (let i = 0; i < arrRealTimeTag.length; i ++) {\r\n\t\t\tlet currentRealTime = document.getElementById(arrRealTimeTag[i].id + \"_inner_div\").parentElement;\r\n\r\n\t\t\tif (arrRealTimeTag[i].id === newScrmObj.constants.mdi.realTime + '_div_' + options.params.CONST_CD + \"_\" + options.params.STT_UNQ) {\t\t\t\t\r\n\t\t\t\tisAreadyOpened = true;\r\n\t\t\t\tcurrentRealTime.style.zIndex = '9992'\r\n\r\n\t\t\t} else {\r\n\t\t\t\t\r\n\t\t\t\tcurrentRealTime.style.zIndex = '9991'\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isAreadyOpened) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet realTimeDiv = document.createElement('div');\r\n\t\tlet position = {x: 0, y: 0};\r\n\r\n\t\tif (arrRealTimeTag.length === 0) {\r\n\t\t\trealTimeDiv.id = newScrmObj.constants.mdi.realTime + '_div_' + options.params.CONST_CD + \"_\" + options.params.STT_UNQ;\r\n\t\t} else {\r\n\t\t\trealTimeDiv.id = newScrmObj.constants.mdi.realTime + '_div_' + options.params.CONST_CD + \"_\" + options.params.STT_UNQ;\r\n\t\t\tposition = { x : arrRealTimeTag.length * 10,  y: arrRealTimeTag.length * 10 }\r\n\t\t}\r\n\t\t\r\n\t\tdocument.body.appendChild(realTimeDiv);\r\n\r\n\t\tReactDOM.render(\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<Dialog.PopupDialog\r\n\t\t\t\t\tpopupdivid = {realTimeDiv.id}\r\n\t\t\t\t\topen={true}\r\n\t\t\t\t\turl={'STT010001'}\r\n\t\t\t\t\tname={title}\r\n\t\t\t\t\tmodaless={options.modaless}\r\n\t\t\t\t\tposition = {position}\r\n\t\t\t\t\toptions={options}\r\n\t\t\t\t\tonCallbackFunc={callbackFunc}\r\n\t\t\t\t\tonClose={\r\n\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\treturn new Promise ( (resolve, reject) => {\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tif (typeof options.callback === \"function\") {\r\n\t\t\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\t\t\toptions.callback();\r\n\t\t\t\t\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\t\t\t\t\treject(err);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresolve();\r\n\t\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t\treject(error);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tReactDOM.unmountComponentAtNode(document.getElementById(realTimeDiv.id));\r\n\t\t\t\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t\t\t}).then(function () {\r\n\t\t\t\t\t\t\t\tdocument.body.removeChild(realTimeDiv);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</Provider>\r\n\t\t, realTimeDiv);\r\n\r\n\t\treturn realTimeDiv.id;\r\n\t\t\r\n\t},\r\n\tcopyText : (txt) => {\r\n\t\tconst element = document.createElement('textarea');\r\n\t\telement.textContent = txt.join('\\r\\n');\r\n\t\t// element.innerText = element.innerText.split('\\r\\n').join('<br/>')\r\n\t\tdocument.body.appendChild(element);\r\n\r\n\t\telement.select();\r\n\t\tdocument.execCommand('copy');\r\n\t\tdocument.body.removeChild(element);\r\n\t\tComLib.openDialog(\"A\", \"SYSI0010\", [\"복사 되엇습니다.\"]);\r\n\t},\r\n\twriteTxtFile : (strData, strFileName) => {\r\n\t\tlet file = new Blob([strData], {type: 'text/plain'});\r\n\r\n\t\t/// IE\r\n\t\tif (navigator.appVersion.toString().indexOf('.NET') > 0)\r\n\t\t\twindow.navigator.msSaveBlob(file, strFileName);\r\n\t\t/// Chrome\r\n\t\telse{\r\n\t\t\tlet element = document.createElement(\"a\");\r\n\t\t\telement.href = window.URL.createObjectURL(file);\r\n\t\t\telement.download = strFileName;\r\n\t\t\telement.click();\r\n\t\t}\r\n\t},\r\n\tgetComCodeValue : (sBigCtgCd, sMdlCtgCd) => {\r\n\t\tvar arr = ComLib.getCommCodeList(sBigCtgCd, StrLib.isNull(sMdlCtgCd) ? \"\" : sMdlCtgCd).map(item => { return item['CODE']});\r\n\t\treturn arr;\r\n\t},\r\n\tgetComCodeName : (sBigCtgCd, value, sMdlCtgCd) => {\r\n\t\tlet arr = ComLib.getCommCodeList(sBigCtgCd, StrLib.isNull(sMdlCtgCd) ? \"\" : sMdlCtgCd).filter(ele => ele['CODE'] === value);\r\n\t\tif (arr.length === 0) return '';\r\n\t\telse return arr[0]['CODE_NM'];\r\n\t},\r\n\tgetComCodeCdVal : (sBigCtgCd, value, sMdlCtgCd) => {\r\n\t\tlet arr = ComLib.getCommCodeList(sBigCtgCd, StrLib.isNull(sMdlCtgCd) ? \"\" : sMdlCtgCd).filter(ele => ele['CODE'] === value);\r\n\t\tif (arr.length === 0) return '';\r\n\t\telse return arr[0]['CD_VAL'];\r\n\t},\r\n\tsetDisableByAuth : (tgtOrg, blnQa) => {\r\n\t\tif (blnQa) {\r\n\t\t\tif (newScrmObj.constants.select.authControl['QA'][tgtOrg].filter(item => item === ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV']).length > 0) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (newScrmObj.constants.select.authControl['CSR'][tgtOrg].filter(item => item === ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV']).length > 0) {\r\n\t\t\t\tif (ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV'] === 6)  {\r\n\t\t\t\t\tif (tgtOrg !== 'CENT') {\r\n\t\t\t\t\t\tif (ComLib.getSession(\"gdsUserInfo\")[0]['TEAM_TP_CD'] === 'Q') {\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t},\r\n\tsetOrgComboValue : (orgCode, blnQa) => {\r\n\t\tlet code = orgCode.substring(0, orgCode.length-3);\r\n\t\tif  (code === \"USR\") code = \"USER\";\r\n\r\n\t\tif (blnQa) {\r\n\t\t\tif (newScrmObj.constants.select.authControl['QA'][code].filter(item => item === ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV']).length > 0) {\r\n\t\t\t\tif (orgCode !== 'CENT_CD') {\r\n\t\t\t\t\tif (ComLib.getSession(\"gdsUserInfo\")[0]['TEAM_TP_CD'] === 'Q') {\r\n\t\t\t\t\t\treturn ComLib.getSession(\"gdsUserInfo\")[0][orgCode];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ComLib.getSession(\"gdsUserInfo\")[0][orgCode];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (newScrmObj.constants.select.authControl['CSR'][code].filter(item => item === ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV']).length > 0) {\r\n\t\t\t\tif (orgCode !== 'CENT_CD') {\r\n\t\t\t\t\tif (ComLib.getSession(\"gdsUserInfo\")[0]['TEAM_TP_CD'] !== 'Q') {\r\n\t\t\t\t\t\treturn ComLib.getSession(\"gdsUserInfo\")[0][orgCode];\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// console.log(ComLib.getSession(\"gdsUserInfo\")[0]['TEAM_TP_CD']);\r\n\t\t\t\t\treturn ComLib.getSession(\"gdsUserInfo\")[0][orgCode];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn \"\";\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [대분류 코드에 해당하는 소분류 공통코드를 갖고온다]\r\n\t* @param\t:\tstring sBigCtgCd\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. sBigCtgCd : 공통코드 대분류 코드\r\n\t\t\t\t\t2. 성공 => 대분류 코드에 해당하는 소분류 코드를 array로 return\r\n\t\t\t\t\t   실패 => empty array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCommCodeList: (sBigCtgCd, sMdlCtgCd) => {\r\n\t\tlet commCodeList = [];\r\n\t\tif (!StrLib.isNull(sessionStorage.getItem('gdsCommCode'))) {\r\n\t\t\tcommCodeList = JSON.parse(sessionStorage.getItem('gdsCommCode'));\r\n\t\t\tif (!StrLib.isNull(sMdlCtgCd)) commCodeList = commCodeList.filter(item => item.BIG_CD === sBigCtgCd && item.MDL_CD === sMdlCtgCd);\r\n\t\t\telse commCodeList = commCodeList.filter(item => item.BIG_CD === sBigCtgCd);\r\n\t\t}\r\n\t\treturn commCodeList;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [기준 코드에 해당하는 사용자 센터의 기준값을 갖고 온다]\r\n\t* @param\t:\tstring strStndCd, string strTargetCol\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. strStndCd : 기준코드\r\n\t\t\t\t\t2. strTargetCol : 대상 컬럼 ID ( 예 : 'ETC1_CONT' )\r\n\t\t\t\t\t3. 성공 => 사용자 센터에 등록된 기준값 정보에서 해당 기준 코드\r\n\t\t\t\t\t\t-> 대상 컬럼의 Value를 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetCentStndVl: (strStndCd, strTargetCol) => {\r\n\t\tvar strRtn = \"\";\r\n\t\tvar arrStndVl = ComLib.getSession(\"gdsCentStndVl\");\r\n\r\n\t\tif (typeof arrStndVl === \"object\") {\r\n\t\t\tfor (var idx = 0; idx < arrStndVl.length; idx++) {\r\n\t\t\t\tif (arrStndVl[idx].STND_CD === strStndCd) {\r\n\t\t\t\t\tif (arrStndVl[idx].APY_FLAG === \"Y\") {\r\n\t\t\t\t\t\tstrRtn = arrStndVl[idx][strTargetCol];\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (strTargetCol === 'APY_FLAG') strRtn = \"N\";\r\n\t\t\t\t\t\telse strRtn = \"\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn strRtn;\r\n\t},\r\n\r\n\tgetInitScreen: () => {\r\n\t\tvar rtn = {};\r\n\t\tvar iScrnId = ComLib.getCentStndVl('00000', 'STND_VAL');\r\n\t\tif (!StrLib.isNull(iScrnId))\r\n\t\t\trtn = (ComLib.getSession(\"gdsMenu\").filter(item => item.MNU_ID === iScrnId))[0];\r\n\t\treturn rtn;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [이미 변경된 Dataset을 react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateDs: (obj, strDatasetId, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, state[strDatasetId].records); }, () => {\r\n\t\t\tif (typeof callback === 'function') callback();\r\n\t\t});\r\n\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Value를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, integer nRowIndex, string strColumnId, string strValue\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. nRowIndex : 변경 대상 Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 대상 Column ID\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateValue: (obj, strDatasetId, nRowIndex, strColumnId, strValue, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setValueToDs(state, strDatasetId, nRowIndex, strColumnId, strValue); }, () => {\r\n\t\t\tif (typeof callback === 'function') callback();\r\n\t\t});\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Dataset Records를 Target Dataset, react state에 Update]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateRecords: (obj, strDatasetId, arrRecords, callback) => {\r\n\t\tobj.setState((state) => { return DataLib.setRecordsToDs(state, strDatasetId, arrRecords); }, () => {\r\n\t\t\tif(typeof callback === 'function') callback(obj);\r\n\t\t});\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Dataset Records를 Initialize]\r\n\t* @param\t:\tobject obj, string strDatasetId, array arrRecords\r\n\t* @return\t:\r\n\t* @see\t\t:\t1. obj : setState 대상 화면 Object (this)\r\n\t\t\t\t\t2. strDatasetId : 변경 대상 Dataset ID\r\n\t\t\t\t\t3. arrRecords : 변경 데이터 array\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetStateInitRecords: (obj, strDatasetId, arrRecords) => {\r\n\t\tobj.setState((state) => { return DataLib.initRecordsToDs(state, strDatasetId, arrRecords); });\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [SelectBox List로 변환]\r\n\t* @param\t:\tarray arrRecords, string args\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. arrRecords : select inner list data\r\n\t\t\t\t\t2. args : list add flag (all : 전체 / select : 선택 / none)\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tconvComboList: (arrRecords, args) => {\r\n\t\tvar arr = [];\r\n\t\tif (args === newScrmObj.constants.select.argument.all) {\r\n\t\t\tarr.push({value: \"\", name: \"전체\"});\r\n\t\t} else if (args === newScrmObj.constants.select.argument.select) {\r\n\t\t\tarr.push({value: \"\", name: \"선택\"});\r\n\t\t}\r\n\t\t\r\n\t\tfor (var index = 0; index < arrRecords.length; index++) {\r\n\t\t\tarr.push({value: arrRecords[index][\"CODE\"], name: arrRecords[index][\"CODE_NM\"]});\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n/*----------------------------------------------------------------------------------------\r\n\t* [조직 TreeSelectbox List로 조회]\r\n\t* @param\t:\tstring args\r\n\t* @return\t:\tarray\r\n\t* @see\t\t:\t1. 조직종류 (q = qa, c = cs, a = all)\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tconvOrgList: (args, family, orgId) => {\r\n\t\tlet arr     = [];\t\t\r\n\t\tlet orgList = [];\r\n\t\t\r\n\t\tif (args === \"all\") {\r\n\t\t\torgList = ComLib.getSession(\"gdsOrgList\");\r\n\r\n\t\t} else if (args === \"c\") {\r\n\t\t\torgList = ComLib.getSession(\"gdsOrgList\").filter(org => org.ORG_CS === \"Y\");\r\n\r\n\t\t} else if (args === \"q\") {\r\n\t\t\torgList = ComLib.getSession(\"gdsOrgList\").filter(org => org.ORG_QA === \"Y\");\r\n\r\n\t\t}\r\n\t\t\r\n\t\tfor (let i = 0; i < orgList.length; i++) {\r\n\t\t\tarr.push({ID: orgList[i][\"ID\"], PARENT_ID: orgList[i][\"PARENT_ID\"], LABEL: orgList[i][\"ORG_NM\"]});\r\n\t\t}\r\n\r\n\t\tif (family !== undefined) {\r\n\t\t\tif (family === \"I\") {\r\n\t\t\t\tconsole.log(orgId)\r\n\t\t\t\tlet parentArr = ComLib.findParentOrg(orgId, [], arr);\r\n\t\t\t\tlet childArr  = ComLib.findChildrenOrg(orgId, [], arr);\t\t\t\t\r\n\t\t\t\tlet familyArr = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < arr.length; i ++) {\r\n\t\t\t\t\tfor (let j = 0; j < parentArr.length; j ++) {\r\n\t\t\t\t\t\tif (arr[i].ID === parentArr[j] && arr[i].ID !== orgId) {\r\n\t\t\t\t\t\t\tfamilyArr.push({ID: arr[i][\"ID\"], PARENT_ID: arr[i][\"PARENT_ID\"], LABEL: arr[i][\"LABEL\"], DISABLED: true})\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (arr[i].ID === parentArr[j] && arr[i].ID === orgId) {\r\n\t\t\t\t\t\t\tfamilyArr.push({ID: arr[i][\"ID\"], PARENT_ID: arr[i][\"PARENT_ID\"], LABEL: arr[i][\"LABEL\"], DISABLED: false})\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t}\t\r\n\t\t\t\t\tfor (let j = 0; j < childArr.length; j ++) {\r\n\t\t\t\t\t\tif (arr[i].ID === childArr[j]) {\r\n\t\t\t\t\t\t\tfamilyArr.push({ID: arr[i][\"ID\"], PARENT_ID: arr[i][\"PARENT_ID\"], LABEL: arr[i][\"LABEL\"], DISABLED: false})\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\tarr = familyArr;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arr;\r\n\t},\r\n\tfindParentOrg: (expandId, parentArr, data) => {\r\n\t\tparentArr.push(expandId);\r\n\r\n\t\tlet propData = data;\r\n\t\t\r\n\t\tfor (let i = 0; i < propData.length; i ++) {\r\n\t\t\tif (propData[i].ID === expandId) {\r\n\t\t\t\tif (propData[i].PARENT_ID !== null) {\r\n\t\t\t\t\tparentArr = ComLib.findParentOrg(propData[i].PARENT_ID, parentArr, data)\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\t} \r\n\t\t}\r\n\r\n\t\treturn parentArr;\r\n\t},\r\n\tfindChildrenOrg: (parentId, ChildArr, data) => {\r\n\t\tlet propData = data;\r\n\t\t\r\n\t\tfor (let i = 0; i < propData.length; i ++) {\r\n\t\t\tif (propData[i].PARENT_ID === parentId) {\r\n\t\t\t\tChildArr.push(propData[i].ID)\r\n\t\t\t\tChildArr = ComLib.findChildrenOrg(propData[i].ID, ChildArr, data)\r\n\t\t\t\t\t\r\n\t\t\t} \r\n\t\t}\r\n\r\n\t\treturn ChildArr;\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [메시지 코드에 해당하는 메시지 내용을 갖고 온다]\r\n\t* @param\t:\tstring msgcd, array args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. msgcd : 메시지 코드\r\n\t\t\t\t\t2. args : 메시지 내용 Replace value\r\n\t\t\t\t\t3. select inner list array return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetMsgCont: (msgcd, args) => {\r\n\t\tvar strMsg = \"\";\r\n\t\tif (ComLib.getSession(\"gdsMsgList\") !== undefined && ComLib.getSession(\"gdsMsgList\") !== null) {\r\n\t\t\tvar objMsg =  (msgcd) ? ComLib.getSession(\"gdsMsgList\").filter(msg => msg.MSG_CD === msgcd) : ComLib.getSession(\"gdsMsgList\").filter(msg => msg.MSG_CD === 'SYSI0010');\r\n\t\t\t\r\n\t\t\tif (objMsg.length === 0) strMsg = \"Message not found\";\r\n\t\t\telse strMsg = objMsg[0].MSG_CONT;\r\n\t\t\tif (typeof args === 'string') {\r\n\t\t\t\targs = [args];\r\n\t\t\t}\r\n\t\t\tif (args !== undefined && args.hasOwnProperty('length')) {\r\n\t\t\t\tfor (var idx = 0; idx < args.length; idx++) {\r\n\t\t\t\t\tstrMsg = strMsg.replace(\"{\" + idx + \"}\", args[idx]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tstrMsg = args;\r\n\t\t}\r\n\t\treturn strMsg;\r\n\t},\r\n\r\n\tsetServerInfos: () => {\r\n\t\tvar serverInfos = JSON.parse(localStorage.getItem(\"infos\"));\r\n\t\tif (serverInfos.prod.domain === window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"P\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", window.location.protocol + \"//\" + serverInfos.prod.domain + \":\" + serverInfos.prod.domainPort);\r\n\t\t} else if (serverInfos.prod.host === window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"P\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", window.location.protocol + \"//\" + serverInfos.prod.host + \":\" + serverInfos.prod.port);\r\n\r\n\t\t} else if (serverInfos.dev.host === window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"D\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", window.location.protocol + \"//\" + serverInfos.dev.host + \":\" + serverInfos.dev.port);\r\n\t\t\tdocument.title = \"AI-VA  ::::: [DEV] :::::\";\r\n\r\n\t\t} else if (serverInfos.localbuild.host === window.location.hostname) {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"B\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", window.location.protocol + \"//\" + serverInfos.localbuild.host + \":\" + serverInfos.localbuild.port);\r\n\t\t\tdocument.title = \"AI-VA  ::::: [LOCAL] :::::\";\r\n\r\n\t\t} else {\r\n\t\t\tComLib.setSession(\"SYSTEM_DV\", \"L\");\r\n\t\t\tComLib.setSession(\"SVR_URL\", window.location.protocol + \"//\" + serverInfos.local.host + \":\" + serverInfos.local.port);\r\n\t\t\tdocument.title = \"AI-VA  ::::: [LOCAL] :::::\";\r\n\t\t}\r\n\t},\r\n\r\n\tgetCentList: (blnBizPsb) => { //BIZ_PSB_YN Filtering\r\n\t\tif (ComLib.isNull(blnBizPsb)) blnBizPsb = false;\r\n\t\tlet arrCentList = ComLib.getSession(\"gdsCentList\");\r\n\t\tif (blnBizPsb) arrCentList = arrCentList.filter(item => item.BIZ_PSB_YN === 'Y');\r\n\t\treturn arrCentList;\r\n\t},\r\n\tgetTeamList: (objDs, teamType) => { //Filtering 필요한 경우 추가\r\n\t\tlet arrTeamList = ComLib.getSession(\"gdsTeamList\");\r\n\t\tteamType = (StrLib.isNull(teamType)) ? newScrmObj.constants.select.dataType.all : teamType;\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\"))) {\r\n\t\t\tif (teamType !== newScrmObj.constants.select.dataType.all) {\r\n\t\t\t\tarrTeamList = ComLib.getSession(\"gdsTeamList\").filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\")).filter(item => item['TP_CD'] === teamType);\r\n\t\t\t} else {\r\n\t\t\t\tarrTeamList = ComLib.getSession(\"gdsTeamList\").filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn arrTeamList;\r\n\t},\r\n\tgetUserList: (objDs, blnActive) => { //Active Filtering\r\n\t\tif (ComLib.isNull(blnActive)) blnActive = true;\r\n\r\n\t\tlet arrUsrList = ComLib.getSession(\"gdsUserList\");\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\")))\r\n\t\t\tarrUsrList = arrUsrList.filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"TEAM_CD\")))\r\n\t\t\tarrUsrList = arrUsrList.filter(item => item.TEAM_CD === objDs.getValue(0, \"TEAM_CD\"));\r\n\t\tif (blnActive)\r\n\t\t\tarrUsrList = arrUsrList.filter(usr => usr.ACT_STA_CD === 'A');\r\n\r\n\t\treturn arrUsrList;\r\n\t},\r\n\tgetFuncAuth: (strFuncKey) => {\r\n\t\tconst hasAuth = ComLib.getSession(\"gdsFuncInfo\").filter(func => func.FUNC_ID === strFuncKey).length > 0;\r\n\t\t\r\n\t\tif (hasAuth) {\r\n\t\t\treturn true;\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t},\r\n\tgetConstList: (objDs, blnActive) => { //Active Filtering\r\n\t\tif (ComLib.isNull(blnActive)) blnActive = true;\r\n\r\n\t\tlet arrConstList = ComLib.getSession(\"gdsConstList\");\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"CENT_CD\")))\r\n\t\t\tarrConstList = arrConstList.filter(item => item.CENT_CD === objDs.getValue(0, \"CENT_CD\"));\r\n\t\tif (!StrLib.isNull(objDs.getValue(0, \"TEAM_CD\")))\r\n\t\t\tarrConstList = arrConstList.filter(item => item.TEAM_CD === objDs.getValue(0, \"TEAM_CD\"));\r\n\t\tif (blnActive)\r\n\t\t\tarrConstList = arrConstList.filter(usr => usr.USE_FLAG === 'Y');\r\n\r\n\t\treturn arrConstList;\r\n\t},\r\n\tgetConstListValue: () => {\r\n\t\tlet arrConstList = ComLib.getSession(\"gdsConstList\");\r\n\t\tlet arrConstListValue = [];\r\n\t\t\r\n\t\tarrConstListValue = arrConstList.map((item) => {\r\n\t\t\treturn item['CODE']\r\n\t\t})\r\n\r\n\t\treturn arrConstListValue;\r\n\t}\r\n};\r\n\r\nconst StrLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력값이 null에 해당하는 경우 모두를 한번에 체크한다]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t:\t1. sValue : 체크할 문자열 ( 예 : null 또는 undefined 또는 \"\" 또는 \"abc\" )\r\n\t\t\t\t\t2. sValue가 undefined, null, NaN, \"\", Array.length = 0인 경우 = true, 이외의 경우 false를 return한다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNull: (sValue) => {\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\t\tif (String(sValue).valueOf() === \"undefined\") return true;\r\n\t\tif (String(sValue).valueOf() === \"null\") return true;\r\n\t\tif (String(sValue).valueOf() === \"\") return true;\r\n\t\tif (sValue === null) return true;\r\n\t\tif (sValue === '') return true;\r\n\t\tif ((sValue === \"\") && (String(sValue.length).valueOf() === \"undefined\")) return true;\r\n\t\tif (sValue.length === 0) return true;\r\n\t\treturn false;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4 )\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\t getPos: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.indexOf(sFind, nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=0) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = 0; }\r\n\t\treturn sOrg.toLowerCase().indexOf(sFind.toLowerCase(), nStart);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별하여 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 2)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverse: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr(pos, sFind.length) === sFind) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 위치를 대소문자 구별없이 거꾸로 찾는다]\r\n\t* @param\t:\tString sOrg, String sFind, integer nStart\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t:\t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. sFind : 찾고자 하는 문자열( 예 : \"bb\" )\r\n\t\t\t\t\t3. nStart : 검색 시작위치 (옵션 : Default=문자열의 끝) ( 예 : 1 )\r\n\t\t\t\t\t4. 성공 => 찾고자 하는 문자열의 시작위치를 return ( 예 : 4)\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetPosReverseCase: (sOrg, sFind, nStart) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(sFind)) { return -1; }\r\n\t\tif (StrLib.isNull(nStart)) { nStart = sOrg.length-1; }\r\n\r\n\t\tlet pos;\r\n\t\tfor (pos = nStart; pos >= 0; pos--) {\r\n\t\t\tif (sOrg.substr( pos, sFind.length ).toLowerCase() === sFind.toLowerCase()) break;\r\n\t\t}\r\n\r\n\t\treturn pos;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별하여 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxbbccxx\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplace: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return \"\";\r\n\t\tif (StrLib.isNull(sRepTo)) return \"\";\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPos(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열을 대소문자 구별없이 치환한다]\r\n\t* @param\t:\tString sOrg, String sRepFrom, string sRepTo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래문자열 (예 : \"aaBBbbccBB\" )\r\n\t\t\t\t\t2. sRepFrom : 치환할 문자열 ( 예 : \"BB\" )\r\n\t\t\t\t\t3. sRepTo : 치환될 문자열 ( 예 : \"xx\" )\r\n\t\t\t\t\t4. 성공 => 치환된 문자열 ( 예 : \"aaxxxxccxx\" ) return\r\n\t\t\t\t\t   실패 => sOrg return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetReplaceCase: ( sOrg, sRepFrom, sRepTo ) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(sRepFrom)) return \"\";\r\n\t\tif (StrLib.isNull(sRepTo)) return \"\";\r\n\r\n\t\tlet pos, nStart = 0, sRet = \"\";\r\n\t\twhile (1) {\r\n\t\t\tpos = StrLib.getPosCase(sOrg, sRepFrom, nStart);\r\n\t\t\tif (pos < 0) {\r\n\t\t\t\tsRet += sOrg.substr(nStart);\r\n\t\t\t\tbreak;\r\n\t\t\t} else {\r\n\t\t\t\tsRet += sOrg.substr(nStart, pos - nStart);\r\n\t\t\t\tsRet += sRepTo;\r\n\t\t\t\tnStart = pos + sRepFrom.length;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [주민번호(7자리 이상)에서 성별 구분]\r\n\t* @param\t:\tstring sRrNo\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sRrNo : 생년월일성별 또는 주민번호\r\n\t\t\t\t\t2. 성공 => 7번째 자리 번호 기준 남자 : 'M' / 여자 : 'F' return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetSexCd: (sRrNo) => {\r\n\t\tlet strRno = StrLib.getNumStr(sRrNo);\r\n\t\tif (strRno.length < 7) return '';\r\n\r\n\t\tlet strSexCd = \"\";\r\n\t\tif ((parseInt(strRno.substr(6, 1), 10)%2) === 0) strSexCd = \"F\";\r\n\t\telse strSexCd = \"M\";\r\n\r\n\t\treturn strSexCd;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [왼쪽에 문자열 추가]\r\n\t* @param\t:\tstring sOrg, integer nTotLen, string sPad\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열 ( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. nCnt : Pad할 총 길이 ( 예 : 7)\r\n\t\t\t\t\t3. sPad : Pad할 문자열 (옵션 : Default=\" \") ( 예 : \"aa\" )\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"abbccCC\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLPad: (sOrg, nTotLen, sPad) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(nTotLen)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\r\n\t\tlet sRet = \"\";\r\n\t\tlet nPadLen = nTotLen - sOrg.length;\r\n\t\tif (nPadLen <= 0) {\r\n\t\t\treturn sOrg;\r\n\t\t} else {\r\n\t\t\twhile (1) {\r\n\t\t\t\tif (nPadLen >= sPad.length) {\r\n\t\t\t\t\tsRet += sPad;\r\n\t\t\t\t\tnPadLen -= sPad.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (nPadLen > 0) sRet += sPad.substr(0, nPadLen);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sRet + sOrg;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [오른쪽에 문자열 추가]\r\n\t* @param\t:\tString sOrg, integer nTotLen, String sPad\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열 ( 예 : \"bbccCC\" )\r\n\t\t\t\t\t2. nTotLen : Pad할 총 길이 ( 예 : 7 )\r\n\t\t\t\t\t3. sPad : Pad할 문자열 (옵션 : Default=\" \")( 예 : \"aa\" )\r\n\t\t\t\t\t4. 성공 => Pad된 문자열 ( 예 : \"bbccCCaa\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRPad:(sOrg, nTotLen, sPad) => {\r\n\t\tif (StrLib.isNull(sOrg)) return \"\";\r\n\t\tif (StrLib.isNull(nTotLen)) return \"\";\r\n\t\tif (StrLib.isNull(sPad)) sPad = \" \";\r\n\r\n\t\tlet sRet = \"\";\r\n\t\tlet nPadLen = nTotLen - sOrg.length;\r\n\t\tif (nPadLen <= 0) {\r\n\t\t\treturn sOrg;\r\n\t\t} else {\r\n\t\t\twhile (1) {\r\n\t\t\t\tif (nPadLen >= sPad.length) {\r\n\t\t\t\t\tsRet += sPad;\r\n\t\t\t\t\tnPadLen -= sPad.length;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (nPadLen > 0) sRet += sPad.substr(0, nPadLen);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn sOrg + sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열의 오른쪽에서 nSize만큼의 문자열을 가져온다]\r\n\t* @param\t:\tstring sOrg, integer nSize\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sOrg : 원래 문자열( 예 : \"aaBBbbcc\" )\r\n\t\t\t\t\t2. nSize : 가져올문자열 길이 ( 예 : 2 )\r\n\t\t\t\t\t3. 성공 => 오른쪽에서 nSize만큼의 문자열 ( 예 : \"cc\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note\t\t:\tsOrg의 길이가 nSize보다 작은경우는 sOrg가 Return된다.\r\n\t\t\t\t\t( 예 : sOrg=\"a\", nSize=2 ===> return = \"a\" )\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetRight: (sOrg, nSize) => {\r\n\t\tif (StrLib.isNull(sOrg) || StrLib.isNull(nSize)) return \"\";\r\n\t\tif (sOrg.length < nSize) return sOrg;\r\n\t\telse return sOrg.substr(sOrg.length - nSize, nSize);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 2Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 7 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLenB: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 2;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자 Byte 길이를 계산 (한글 : 3Byte / 문자, 숫자, 특수문자 : 1Byte)]\r\n\t* @param\t:\tString sVal\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sVal : 입력받은 문자열 ( 예 : \"a1\\n한韓\" )\r\n\t\t\t\t\t2. 성공 => 길이 ( 예 : 9 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLen3B: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return -1;\r\n\r\n\t\tlet len = 0;\r\n\t\tfor (var i = 0; i < sVal.length; i++) {\r\n\t\t\tif (sVal.charCodeAt(i) > 127) len += 3;\r\n\t\t\telse len += 1;\r\n\t\t}\r\n\t\treturn len;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [전각문자를 반각문자로]\r\n\t* @reference:\t전각문자는 \"정사각형\" 안에 들어가는 문자이고, 반각은 그 정사각형의 반쪽에 들어가는 문자이다.\r\n\t\t\t\t\t전각문자의 폭은, 반각문자의 2배입니다.\r\n\t\t\t\t\t예를 들어 숫자 \"3\" 은, 한글 \"가\"의 절반의 폭만을 가지고 있습니다.\r\n\t\t\t\t\t그래서 영문과 숫자 등은 반각이고, 한글이나 한자들은 전각문자입니다.\r\n\t\t\t\t\t다만, 영문과 숫자를 전각으로 표현할 수도 있습니다.\r\n\t\t\t\t\t(예 : 전각문자 ===> ※★０＋\r\n\t\t\t\t\t\t반각문자 ===> 1a )\r\n\t* @param\t:\tstring sFull\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sFull : 전각문자( 예 : \"０＋\" )\r\n\t\t\t\t\t2. 성공 => 반각문자 ( 예 : \"0+\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetFull2Half: (sFull) => {\r\n\t\tif (StrLib.isNull(sFull)) return \"\";\r\n\r\n\t\tlet sHalf = \"\";\r\n\t\tfor (var i = 0; i < sFull.length; i++) {\r\n\t\t\tlet c = sFull.charCodeAt(i);\r\n\t\t\tif (c === 12288) sHalf += unescape(\"%20\");\r\n\t\t\telse if ((c >= 65281) && (c <= 65374)) sHalf += unescape(\"%\"+(c-65248).toString(16));\r\n\t\t\telse sHalf += sFull.charAt(i);\r\n\t\t}\r\n\t\treturn  sHalf;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [반각문자를 전각문자로]\r\n\t* @param\t:\tstring sHalf\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sHalf : 반각문자( 예 : \"0+\" )\r\n\t\t\t\t\t2. 성공 => 전각문자 ( 예 : \"０＋\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetHalf2Full: (sHalf) => {\r\n\t\tif (StrLib.isNull(sHalf)) return \"\";\r\n\r\n\t\tlet rTmp = \"\";\r\n\t\tlet iTmp = \"\";\r\n\t\tfor (var i = 0; i < sHalf.length; i++ ) {\r\n\t\t\t//기본 아스키 코드 값을 벗어난 경우(한글)는 전자로 변환할 필요 없음.\r\n\t\t\tif ((sHalf.charCodeAt(i) >= 32) && (sHalf.charCodeAt(i) <= 126)) {\r\n\t\t\t\tif (sHalf.charCodeAt(i) === 32) iTmp = unescape(\"%u\"+(12288).toString(16));\r\n\t\t\t\telse iTmp = sHalf.charCodeAt(i) + 65248;\r\n\t\t\t} else {\r\n\t\t\t\tiTmp = sHalf.charCodeAt(i);\r\n\t\t\t}\r\n\r\n\t\t\tif (sHalf.charCodeAt(i) === 32) rTmp = rTmp + (iTmp);\r\n\t\t\telse rTmp += String.fromCharCode(iTmp);\r\n\t\t}\r\n\r\n\t\treturn rTmp;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 숫자형식에 맞는지 여부 체크]\r\n\t* @param\t:\tString sNum\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sNum : 체크할 문자열숫자 ( 예 : \"-1234.56\" ) (단, \",\"가 들어있으면 안 됨)\r\n\t\t\t\t\t2. 숫자형식에 맞는경우 => true return\r\n\t\t\t\t\t   숫자형식에 맞지않는 경우 => false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisNum: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return false;\r\n\r\n\t\tlet point_cnt = 0;\r\n\t\tlet ret = true;\r\n\t\tfor (var i = 0; i < sNum.length; i++) {\r\n\t\t\tvar c = sNum.charAt(i);\r\n\t\t\tif (i === 0 && (c === \"+\" || c === \"-\"));\r\n\t\t\telse if (c >= \"0\" && c <= \"9\");\r\n\t\t\telse if (c === \".\") {\r\n\t\t\t\tpoint_cnt++;\r\n\t\t\t\tif (point_cnt > 1) {\r\n\t\t\t\t\tret = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tret = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z)만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ\" )\r\n\t\t\t\t\t2. 알파벳만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlpha: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 알파벳(a~z, A~Z), 숫자만으로 구성되어 있는지 체크]\r\n\t* @param\t:\tstring sVal\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"aAzZ09\" )\r\n\t\t\t\t\t2. 알파벳, 숫자만 있는경우 = true return,\r\n\t\t\t\t\t   알파벳, 숫자가 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisAlNum: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tif (sVal.search(\"[^A-Za-z0-9]\") >= 0) return false;\r\n\t\telse return true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열이 한글로만 구성되어 있는지 체크]\r\n\t* @param\t: String sVal\r\n\t* @return\t: boolean\r\n\t* @see\t\t: \t1. sVal : 체크할 문자열 ( 예 : \"가나다\" )\r\n\t\t\t\t\t2. 한글만 있는경우 = true return,\r\n\t\t\t\t\t한글이 아닌 글자가 하나라도 있는 경우 = false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisKor: (sVal) => {\r\n\t\tif (StrLib.isNull(sVal)) return false;\r\n\t\tfor (var i = 0; i < sVal.length; i++ ) {\r\n\t\t\tif (!((sVal.charCodeAt(i) > 0x3130 && sVal.charCodeAt(i) < 0x318F) || (sVal.charCodeAt(i) >= 0xAC00 && sVal.charCodeAt(i) <= 0xD7A3))) return false;\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열 Trim 함수]\r\n\t* @param\t:\tstring args\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. args : trim 할 값\r\n\t\t\t\t\t2. 성공 => trim String return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTrim: (arg) => {\r\n\t\tvar str = String(arg);\r\n\t\tif (str === null || str === \"null\") return \"\";\r\n\t\tif (String(str).valueOf() === \"undefined\") return \"\";\r\n\t\tif (String(str) === null) return \"\";\r\n\t\treturn str.replace(/(^\\s*)|(\\s*$)/g, \"\");\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [문자열에서 숫자만 추출한다.]\r\n\t* @param\t:\tstring sValue\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:   1. sValue : 추출대상 ( 예 : '2020-09-02' )\r\n\t\t\t\t\t2. 성공 => '20200902' return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetNumStr: (sValue) => {\r\n\t\tif (StrLib.getTrim(sValue) === \"\") return \"\";\r\n\t\tsValue = StrLib.getTrim(sValue);\r\n\r\n\t\tvar sResult = \"\";\r\n\t\tvar sNum = \"0123456789\";\r\n\t\tfor (var i = 0; i<sValue.length; i++) {\r\n\t\t\tif (sNum.indexOf(sValue.charAt(i)) > -1) sResult += sValue.charAt(i);\r\n\t\t}\r\n\t\treturn sResult;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [숫자에 \",\"를 집어넣기]\r\n\t* @param\t:\tstring sNum\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sNum : 숫자 형식의 문자열 ( 예 : '-1234567.89' )\r\n\t\t\t\t\t2. 성공 => \",\"가 들어간 문자열 ( 예 : -1,234,567.89 ) return,\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetComma: (sNum) => {\r\n\t\tif (StrLib.isNull(sNum)) return \"\";\r\n\t\tif (!StrLib.isNum(sNum)) return \"\";\r\n\r\n\t\tvar nEnd, nStart = 0, sRet = \"\";\r\n\t\tsNum = StrLib.getTrim(sNum);\r\n\r\n\t\tif (sNum.charAt(0) === \"+\" || sNum.charAt(0) === \"-\") {\r\n\t\t\tsRet += sNum.charAt(0);\r\n\t\t\tnStart = 1;\r\n\t\t}\r\n\r\n\t\tvar ppos = StrLib.getPos(sNum, \".\", nStart);\r\n\t\tif (ppos < 0) nEnd = sNum.length;\r\n\t\telse nEnd = ppos;\r\n\r\n\t\tvar sDigit = sNum.substr(nStart, nEnd-nStart);\r\n\t\tfor (var pos = 0; pos < sDigit.length; pos ++ ) {\r\n\t\t\tif ( pos !== 0 && (sDigit.length-pos)%3 === 0) sRet += \",\";\r\n\t\t\tsRet += sDigit.charAt(pos);\r\n\t\t}\r\n\r\n\t\tsRet += sNum.substr(nEnd);\r\n\t\treturn sRet;\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [넘겨받은  String 데이터를 Date Format으로 변경한다.]\r\n\t* @param\t:\tString\r\n\t* @return\t:\tString\r\n\t* @see\t\t: \t1. date : YYYYMMDD or YYYYMMDDHHMISS (8자리 또는 14자리만 가능)\r\n\t\t\t\t\t2. str : '-' or '/' (default : '-')\r\n\t\t\t\t\t2. 성공 => 날짜 포맷으로 변경하여 리턴(YYYY-MM-DD or YYYY/MM/DD)\r\n\t\t\t\t\t   실패 => 그대로 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetFormatData : (date, str) => {\r\n\t\tlet rtnVal = date;\r\n\t\tlet delim = (StrLib.isNull(str)) ? '-' : str;\r\n\t\tif (date.length === 8 ||  date.length === 14) {\r\n\t\t\tif (date.length >= 8) {\r\n\t\t\t\trtnVal = date.substring(0,4) + delim + date.substring(4,6) + delim + date.substring(6,8);\r\n\t\t\t\tif (date.length === 14) {\r\n\t\t\t\t\trtnVal = rtnVal + ' ' + date.substring(8,10) + ':' + date.substring(10,12) +  ':' + date.substring(12,14);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn rtnVal;\r\n\t}\t\r\n};\r\n\r\nconst FileLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [File Path 문자열(예 : C:\\a\\b\\filename.ext)에서 File명(예 : filename)을 추출]\r\n\t* @param\t: string sPath, boolean bExt\r\n\t* @return\t: string\r\n\t* @see\t\t: \t1. sPath   - File Path 문자열 (예 : \"C:\\a\\b\\filename.ext\")\r\n\t\t\t\t\t2. bExt    - extend를 return되는 File명에 포함시킬지 여부 ( 옵션 : Default=false )\r\n\t\t\t\t\t\t\t\t- true \t: extend를 File명에 포함시킴\r\n\t\t\t\t\t\t\t\t- false : extend를 File명에 포함시키지 않음\r\n\t\t\t\t\t2. 성공 =\r\n\t\t\t\t\t\t\t- bExt = true인 경우 ===> sPath에서 File명(예 : \"filename.ext\") return\r\n\t\t\t\t\t\t\t- bExt = false인 경우 ===> sPath에서 File명(예 : \"filename\") return\r\n\t\t\t\t\t실패 = \"\" return\r\n\r\n\tgetFileName : ( sPath, bExt ) => {\r\n\t\tlet start_pos, end_pos, tmp_pos, filename;\r\n\r\n\t\tif( StrLib.isNull(sPath) )\t\treturn \"\";\r\n\t\tif( StrLib.isNull(bExt) )\r\n\t\t\tbExt = false;\r\n\r\n\t\tstart_pos = Math.max(StrLib.getPosReverse( sPath, \"\\\\\" ), StrLib.getPosReverse( sPath, \"/\" ));\r\n\t\ttmp_pos = StrLib.getPosReverse( sPath, \"::\");\r\n\t\tif( tmp_pos > 0 ) tmp_pos++;\r\n\t\tstart_pos = Math.max( start_pos, tmp_pos );\r\n\t\tif( bExt === false ) {\r\n\t\t\tend_pos = StrLib.getPosReverse( sPath, \".\" );\r\n\t\t\tif( end_pos < 0 )\r\n\t\t\t\tend_pos = sPath.length;\r\n\t\t\tfilename = sPath.substr( start_pos+1, end_pos-start_pos-1 );\r\n\t\t} else {\r\n\t\t\tfilename = sPath.substr( start_pos+1 );\r\n\t\t}\r\n\r\n\t\treturn filename;\r\n\t}\r\n\t*--------------------------------------------------------------------------------------*/\r\n};\r\nconst ExcelLib = {\r\n\texportToExcel : (header, data, rtn, grdId, gridApi) => {\r\n\t\tif (rtn) {\r\n\t\t\tlet fileName = \"[\" + DateLib.getTodayTime() + \"]_\" + grdId + '_excel.xls';\r\n\t\t\tlet excelComponent = document.createElement('a');\r\n\t\t\texcelComponent.setAttribute('id', '_aExcelExport');\r\n\t\t\texcelComponent.setAttribute('download', fileName);\r\n\t\t\texcelComponent.setAttribute('style', \"display:none\");\r\n\t\t\texcelComponent.setAttribute('href', \"data:application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;base64,\" + ExcelLib.base64(ExcelLib.export(ExcelLib.convertDataStructureToTable(header, data, gridApi))));\r\n\t\t\tdocument.getElementById('root').appendChild(excelComponent);\r\n\t\t\tdocument.getElementById('_aExcelExport').click();\r\n\t\t\tdocument.getElementById('root').removeChild(document.getElementById('_aExcelExport'));\r\n\t\t}\r\n\t},\r\n\tgetHeaderDepth : (header) => {\r\n\t\tlet cnt = 1;\r\n\t\tlet maxCnt = 1\r\n\r\n\t\tfor (let intA = 0; intA < header.length; intA ++) {\r\n\t\t\tif (header[intA].hasOwnProperty('children')) {\r\n\t\t\t\tcnt += ExcelLib.getHeaderDepth(header[intA]['children']);\r\n\t\t\t\tif (maxCnt < cnt) {\r\n\t\t\t\t\tmaxCnt = cnt;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn maxCnt;\r\n\t},\r\n\tgetMaxDepth : (header) => {\r\n\t\tlet maxDepth = 0;\r\n\t\tlet depthArr = header.map(item => {return 1;});\r\n\t\tfor (let intA = 0; intA < header.length; intA ++) {\r\n\t\t\tif (header[intA].hasOwnProperty('children')) {\r\n\t\t\t\tdepthArr[intA] += ExcelLib.getMaxDepth(header[intA]['children']);\r\n\t\t\t}\r\n\t\t}\r\n\t\tmaxDepth = depthArr.reduce( function (previous, current) {  return previous > current ? previous:current; });\r\n\t\treturn maxDepth;\r\n\t},\r\n\tsetHeader : (header) => {\r\n\t\tlet getMaxDepth = ExcelLib.getMaxDepth(header);\r\n\t\tlet result = \"\";\r\n\t\tfor (let intA = 0; intA < getMaxDepth; intA ++) {\r\n\t\t\tresult += \"<tr>\";\r\n\t\t\tfor (let intB = 0; intB < header.length; intB ++) {\r\n\t\t\t\tif (!header[intB]['hide'] && !StrLib.isNull(header[intB]['headerName']) && header[intB]['cellRenderer'] !== 'actionButton'){\r\n\t\t\t\t\tresult += \"<th style= text-align: 'center'; \";\r\n\t\t\t\t\tif (header[intB].hasOwnProperty('children')) {\r\n\t\t\t\t\t\tresult += \"colspan='\" + header[intB]['children'].length + \"';\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult += \"rowspan='\" + getMaxDepth + \"';\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult += \">\";\r\n\t\t\t\t\tresult += header[intB]['headerName'].replace(/\\*/g,'');\r\n\t\t\t\t\tresult += \"</th>\";\r\n\t\t\t\t} else if (header[intB]['hide'] && header[intB]['showExcel']){\r\n\t\t\t\t\tresult += \"<th style= text-align: 'center'; \";\r\n\t\t\t\t\tif (header[intB].hasOwnProperty('children')) {\r\n\t\t\t\t\t\tresult += \"colspan='\" + header[intB]['children'].length + \"';\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult += \"rowspan='\" + getMaxDepth + \"';\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresult += \">\";\r\n\t\t\t\t\tresult += header[intB]['headerName'].replace(/\\*/g,'');\r\n\t\t\t\t\tresult += \"</th>\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tresult += \"</tr>\";\r\n\t\t\tif (header.filter(item => item.hasOwnProperty('children')).length > 0) {\r\n\t\t\t\tlet headerArr = [];\r\n\t\t\t\theader.filter(item => item.hasOwnProperty('children')).forEach((item) => {\r\n\t\t\t\t\titem['children'].forEach((children) => {\r\n\t\t\t\t\t\theaderArr.push(children);\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t\tresult += ExcelLib.setHeader(headerArr);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\t},\r\n\tsetHeaderforBody : (header) => {\r\n\t\tlet bodyHeader = [];\r\n\t\tfunction setColumn (data, rtnArr) {\r\n\t\t\tfor (let intA = 0; intA < data.length; intA ++) {\r\n\t\t\t\tif (!data[intA].hasOwnProperty('children')) {\r\n\t\t\t\t\tlet json = JSON.parse(JSON.stringify(data[intA]));\r\n\t\t\t\t\tjson['valueFormatter'] = data[intA]['valueFormatter'];\r\n\t\t\t\t\tbodyHeader.push(json);\r\n\t\t\t\t\tjson = null;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsetColumn(data[intA]['children'], rtnArr);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetColumn(header, bodyHeader);\r\n\t\treturn bodyHeader;\r\n\t},\r\n\tconvertDataStructureToTable : (header, data, gridApi) => {\r\n\t\tlet result;\r\n\r\n\t\ttry {\r\n\t\t\tresult = \"<table>\";\r\n\t\t\tresult += \"<thead>\";\r\n\t\t\tresult += ExcelLib.setHeader(header);\r\n\t\t\tresult += \"</thead>\";\r\n\t\t\tresult += \"<tbody>\";\r\n\r\n\t\t\tlet rowNum = 1;\r\n\t\t\tlet bodyHeader = ExcelLib.setHeaderforBody(header);\r\n\t\t\tdata.forEach(item => {\r\n\t\t\t\tresult += \"<tr>\";\r\n\t\t\t\tbodyHeader.forEach(head => {\r\n\t\t\t\t\tif (!head['hide'] && !StrLib.isNull(head['headerName']) && head['cellRenderer'] !== 'actionButton') {\r\n\t\t\t\t\t\tif (head['field'] === '_No') {\r\n\t\t\t\t\t\t\tresult += \"<td style= 'text-align: center;'>\";\r\n\t\t\t\t\t\t\tresult += rowNum;\r\n\t\t\t\t\t\t\tresult += \"</td>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (item.hasOwnProperty(head['field'])) {\r\n\t\t\t\t\t\t\t// 데이터 미 존재시 null로 찍히는걸 방지\r\n\t\t\t\t\t\t\tif (item[head['field']] === null ) { item[head['field']] = ''; }\r\n\t\t\t\t\t\t\tif (head['width'] !== undefined && head['width'] !== null && head['width'] !== '') {\r\n\t\t\t\t\t\t\t\tresult += \"<td style= 'mso-number-format: \\\\@; width: \" + head['width'] + \"px;\";\r\n\t\t\t\t\t\t\t\tif (head['textAlign'] !== undefined && head['textAlign'] !== null && head['textAlign'] !== ''){\r\n\t\t\t\t\t\t\t\t\tresult += \"text-align: \" + head['textAlign'] + \";\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (head['textAlign'] !== undefined && head['textAlign'] !== null && head['textAlign'] !== ''){\r\n\t\t\t\t\t\t\t\t\tresult += \"<td style= 'mso-number-format: \\\\@; text-align: \" + head['textAlign'] + \";\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tresult += \"<td style= 'mso-number-format: \\\\@;\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult += \"'>\";\r\n\t\t\t\t\t\t\tif (typeof head['valueFormatter'] === 'function') {\r\n\t\t\t\t\t\t\t\tresult += head['valueFormatter']({ \r\n\t\t\t\t\t\t\t\t\t\t\tdata : item\r\n\t\t\t\t\t\t\t\t\t\t,\tvalue : item[head['field']]\r\n\t\t\t\t\t\t\t\t\t\t,\tnode : item['node']\r\n\t\t\t\t\t\t\t\t\t\t,   column: {colId: head['field']}\r\n\t\t\t\t\t\t\t\t\t\t,   api: gridApi\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresult += item[head['field']];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult += \"</td>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (head['hide'] && head['showExcel']) {\r\n\t\t\t\t\t\tif (item.hasOwnProperty(head['field'])) {\r\n\t\t\t\t\t\t\t// 데이터 미 존재시 null로 찍히는걸 방지\r\n\t\t\t\t\t\t\tif (item[head['field']] === null ) { item[head['field']] = ''; }\r\n\t\t\t\t\t\t\tif (head['width'] !== undefined && head['width'] !== null && head['width'] !== '') {\r\n\t\t\t\t\t\t\t\tresult += \"<td style= 'mso-number-format: \\\\@; width: \" + head['width'] + \"px;\";\r\n\t\t\t\t\t\t\t\tif (head['textAlign'] !== undefined && head['textAlign'] !== null && head['textAlign'] !== ''){\r\n\t\t\t\t\t\t\t\t\tresult += \"text-align: \" + head['textAlign'] + \";\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (head['textAlign'] !== undefined && head['textAlign'] !== null && head['textAlign'] !== ''){\r\n\t\t\t\t\t\t\t\t\tresult += \"<td style= 'mso-number-format: \\\\@; text-align: \" + head['textAlign'] + \";\";\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tresult += \"<td style= 'mso-number-format: \\\\@;\";\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult += \"'>\";\r\n\t\t\t\t\t\t\tif (typeof head['valueFormatter'] === 'function') {\r\n\t\t\t\t\t\t\t\tresult += head['valueFormatter']({ \r\n\t\t\t\t\t\t\t\t\t\t\tdata : item\r\n\t\t\t\t\t\t\t\t\t\t,\tvalue : item[head['field']]\r\n\t\t\t\t\t\t\t\t\t\t,\tnode : item['node']\r\n\t\t\t\t\t\t\t\t\t\t,   column: {colId: head['field']}\r\n\t\t\t\t\t\t\t\t\t\t,   api: gridApi\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tresult += item[head['field']];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tresult += \"</td>\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\trowNum += 1;\r\n\t\t\t\tresult += \"</tr>\";\r\n\t\t\t});\r\n\t\t\tresult += \"</tbody>\";\r\n\t\t\tresult += \"</table>\";\r\n\t\t\treturn result;\r\n\t\t} finally {\r\n\t\t\tresult = null;\r\n\t\t}\r\n\t},\r\n\texport : (htmltable) => {\r\n\t\ttry {\r\n\t\t\tvar excelFile = \"<html xmlns:o='urn:schemas-microsoft-com:office:office' xmlns:x='urn:schemas-microsoft-com:office:excel' xmlns='http://www.w3.org/TR/REC-html40'>\";\r\n\t\t\texcelFile += \"<head>\";\r\n\t\t\texcelFile += '<meta http-equiv=\"Content-type\" content=\"text/html;charset=utf-8\" />';\r\n\t\t\texcelFile += \"<!--[if gte mso 9]>\";\r\n\t\t\texcelFile += \"<xml>\";\r\n\t\t\texcelFile += \"<x:ExcelWorkbook>\";\r\n\t\t\texcelFile += \"<x:ExcelWorksheets>\";\r\n\t\t\texcelFile += \"<x:ExcelWorksheet>\";\r\n\t\t\texcelFile += \"<x:Name>\";\r\n\t\t\texcelFile += \"{worksheet}\";\r\n\t\t\texcelFile += \"</x:Name>\";\r\n\t\t\texcelFile += \"<x:WorksheetOptions>\";\r\n\t\t\texcelFile += \"<x:DisplayGridlines/>\";\r\n\t\t\texcelFile += \"</x:WorksheetOptions>\";\r\n\t\t\texcelFile += \"</x:ExcelWorksheet>\";\r\n\t\t\texcelFile += \"</x:ExcelWorksheets>\";\r\n\t\t\texcelFile += \"</x:ExcelWorkbook>\";\r\n\t\t\texcelFile += \"</xml>\";\r\n\t\t\texcelFile += \"<![endif]-->\";\r\n\t\t\texcelFile += \"</head>\";\r\n\t\t\texcelFile += \"<body>\";\r\n\t\t\texcelFile += htmltable.replace(/\"/g, '\\'');\r\n\t\t\texcelFile += \"</body>\";\r\n\t\t\texcelFile += \"</html>\";\r\n\r\n\t\t\tvar ctx = { worksheet: 'My Worksheet', table: htmltable };\r\n\t\t\tvar rtn = (ExcelLib.format(excelFile, ctx));\r\n\t\t\treturn  rtn;\r\n\t\t} finally {\r\n\t\t\trtn = null;\r\n\t\t}\r\n\t},\r\n\tformat : (s, c) => {\r\n\t\treturn s.replace(/{(\\w+)}/g, function (m, p) { return c[p]; });\r\n\t},\r\n\tbase64 : (s) => {\r\n\t\treturn window.btoa(unescape(encodeURIComponent(s)));\r\n\t}\r\n};\r\nconst DateLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 숫자로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => 마지막 날짜 숫자값 ( 예 : 30 ) return\r\n\t\t\t\t\t   실패 => -1 return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDateNum: (sDate) => {\r\n\t\tif (typeof sDate !== \"string\") sDate = String(sDate);\r\n\t\tlet nMonth, nLastDate;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return -1;\r\n\r\n\t\tnMonth = parseInt(sDate.substr(4,2), 10);\r\n\t\tif (nMonth === 1 || nMonth === 3 || nMonth === 5 || nMonth === 7  || nMonth === 8 || nMonth === 10 || nMonth === 12 ) {\r\n\t\t\tnLastDate = 31;\r\n\t\t} else if (nMonth === 2) {\r\n\t\t\tif ( DateLib.isLeapYear(sDate) === true ) nLastDate = 29;\r\n\t\t\telse nLastDate = 28;\r\n\t\t} else {\r\n\t\t\tnLastDate = 30;\r\n\t\t}\r\n\t\treturn nLastDate;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [윤년여부 확인]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tboolean\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sDate가 윤년인 경우\t\t\t=> true return\r\n\t\t\t\t\t   sDate가 윤년이 아닌 경우\t\t=> false return\r\n\t\t\t\t\t   sDate가 입력되지 않은 경우\t=> false return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tisLeapYear: (sDate) => {\r\n\t\tif (typeof sDate !== \"string\") sDate = String(sDate);\r\n\t\tlet ret, nY;\r\n\r\n\t\tif (StrLib.isNull(sDate)) return false;\r\n\r\n\t\tnY = parseInt(sDate.substring(0,4), 10);\r\n\t\tif ((nY % 4) === 0) {\r\n\t\t\tif ((nY % 100) !== 0 || (nY % 400) === 0) ret = true;\r\n\t\t\telse ret = false;\r\n\t\t} else {\r\n\t\t\tret = false;\r\n\t\t}\r\n\t\treturn ret;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당월의 마지막 날짜를 yyyyMMdd형태로 구하기]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : yyyyMMdd형태의 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. 성공 => yyyyMMdd형태의 마지막 날짜 ( 예 : \"20121130\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetLastDate: (sDate) => {\r\n\t\tif (typeof sDate !== \"string\") sDate = String(sDate);\r\n\t\tif (StrLib.isNull(sDate)) return \"\";\r\n\t\tlet nLastDate = DateLib.getLastDateNum(sDate);\r\n\t\treturn sDate.substr(0,6) + nLastDate.toString();\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 일을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 일 증감값 ( 예 : 10 또는 -10 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121112\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddDate: (sDate, nOffset) => {\r\n\t\tif (typeof sDate !== \"string\") sDate = String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\r\n\t\tlet nYear\t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth\t= parseInt(sDate.substr(4, 2));\r\n\t\tlet nDate\t= parseInt(sDate.substr(6, 2)) + nOffset;\r\n\r\n\t\tlet objDate = new Date(nYear, nMonth - 1, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tlet sDay\t= StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\r\n\t\treturn sYear + sMonth + sDay;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [입력된 날자에 nOffset 으로 지정된 만큼의 월을 증감한다]\r\n\t* @param\t:\tstring sDate, integer nOffset\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. sDate : 날짜 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. nOffset : 월 증감값 ( 예 : 1 또는 -1 )\r\n\t\t\t\t\t3. 성공 => yyyyMMdd형태의 증감된 날짜 ( 예 : \"20121202\" 또는 \"20121022\" ) return\r\n\t\t\t\t\t   실패 => \"\" return\r\n\t* @note  \t:\t단, 증감된 날짜가 그달의 마지막 날짜 월보다 큰 경우 그달의 마지막 날짜를 return한다.\r\n\t\t\t\t\t예를 들어, sDate=\"20120531\", nOffset=-1일 경우 return=\"20120430\" 이 된다.\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetAddMonth: (sDate, nOffset) => {\r\n\t\tif (typeof sDate !== \"string\") sDate = String(sDate);\r\n\r\n\t\tif (StrLib.isNull(sDate) || StrLib.isNull(nOffset)) return \"\";\r\n\t\tsDate = StrLib.getTrim(sDate);\r\n\r\n\t\tlet nYear \t= parseInt(sDate.substr(0, 4));\r\n\t\tlet nMonth \t= parseInt(sDate.substr(4, 2)) + nOffset;\r\n\t\tlet nDate \t= parseInt(sDate.substr(6, 2));\r\n\r\n\t\tlet nLastDate, sRet;\r\n\t\tlet objDate = new Date(nYear, nMonth, nDate);\r\n\r\n\t\tlet sYear\t= objDate.getFullYear().toString();\r\n\t\tlet sMonth\t= StrLib.getLPad(objDate.getMonth().toString(), 2, '0');\r\n\t\tlet sDay\t= StrLib.getLPad(objDate.getDate().toString(), 2, '0');\r\n\t\tif (sMonth === '00') {\r\n\t\t\tsYear = (parseInt(sYear) - 1).toString();\r\n\t\t\tsMonth = '12';\r\n\t\t}\r\n\t\tsRet = sYear + sMonth + sDay;\r\n\r\n\t\tlet nsDate \t= parseInt(sRet.substr(6, 2));\r\n\t\tnLastDate = DateLib.getLastDateNum(sRet);\r\n\t\tsRet = sRet.substr(0,6);\r\n\r\n\t\tif (nsDate > nLastDate) sRet += nLastDate.toString();\r\n\t\telse sRet += (StrLib.getRight(\"0\" + nsDate, 2)).toString();\r\n\r\n\t\treturn sRet;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜를 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMdd형태의 오늘 날짜 ( 예 : \"20121122\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetToday: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [해당 PC의 오늘 날짜 + 시간을 가져온다]\r\n\t* @param\t:\r\n\t* @return\t:\tstring\r\n\t* @see\t\t: \t1. 성공 => yyyyMMddhhmiss형태의 오늘 날짜 ( 예 : \"20121122223010\" ) return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetTodayTime: () => {\r\n\t\tlet objDate = new Date();\r\n\t\tlet sToday  = objDate.getFullYear().toString();\r\n\t\tsToday += StrLib.getRight(\"0\" + (objDate.getMonth() + 1), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getDate(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getHours(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getMinutes(), 2);\r\n\t\tsToday += StrLib.getRight(\"0\" + objDate.getSeconds(), 2);\r\n\r\n\t\treturn sToday;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 일자간의 차이 일수 계산]\r\n\t* @param\t: \ttring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20121202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이일수  ( 예 : 10 )  return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다\r\n\t\t\t\t\t   실패 => return NaN\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffDate: (sStartDate, sEndDate) => {\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return NaN;\r\n\r\n\t\tlet vFromDate = new Date(parseInt(sEndDate.substring(0,4),  10), parseInt(sEndDate.substring(4,6)-1,  10), parseInt(sEndDate.substring(6,8), 10));\r\n\t\tlet vToDate = new Date(parseInt(sStartDate.substring(0,4),  10), parseInt(sStartDate.substring(4,6)-1,  10), parseInt(sStartDate.substring(6,8), 10));\r\n\r\n\t\treturn parseInt((vFromDate - vToDate) / (1000 * 60 * 60 * 24));\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [두 월간의 차이 월수 계산]\r\n\t* @param\t:\tstring sStartDate, string sEndDate\r\n\t* @return\t:\tinteger\r\n\t* @see\t\t: \t1. sStartDate : yyyyMMdd형태의 From 일자 ( 예 : \"20121122\" )\r\n\t\t\t\t\t2. sEndDate   : yyyyMMdd형태의 To 일자 ( 예 : \"20131202\" )\r\n\t\t\t\t\t3. 성공 => 숫자 형태의 차이월수  ( 예 : 10 ) return\r\n\t\t\t\t\t\t* 단, sEndDate < sStartDate이면 음수가 return된다.\r\n\t\t\t\t\t   실패 => NaN return\r\n\t* @note\t\t:\t단, sStartDate, sEndDate의 일은 포함하지 않고 계산된다\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDiffMonth: (sStartDate, sEndDate) => {\r\n\t\tlet nStartMon, nEndMon;\r\n\t\tsStartDate\t= StrLib.getTrim(sStartDate);\r\n\t\tsEndDate\t= StrLib.getTrim(sEndDate);\r\n\t\tif (StrLib.isNull(sStartDate) || StrLib.isNull(sEndDate)) return NaN;\r\n\r\n\t\tnStartMon = parseInt(sStartDate.substr(0, 4), 10) * 12 + parseInt(sStartDate.substr(4, 2), 10);\r\n\t\tnEndMon = parseInt(sEndDate.substr(0, 4), 10) * 12 + parseInt(sEndDate.substr(4, 2), 10);\r\n\r\n\t\treturn (nEndMon - nStartMon);\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [date => string]\r\n\t* @param\t:\tdate objDate\r\n\t* @return\t:\tstring\r\n\t* @see\t\t:\t1. objDate : Date Object\r\n\t\t\t\t\t2. 성공 => yyyyMMdd 형태의 날짜 문자열 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetStringDate: (objDate) => {\r\n\t\tif (StrLib.isNull(objDate)) return '';\r\n\r\n\t\tlet year = objDate.getFullYear();\r\n\t\tlet month = StrLib.getLPad((1 + objDate.getMonth()).toString(), 2, '0');\r\n\t\tlet day = StrLib.getLPad((objDate.getDate()).toString(), 2, '0');\r\n\r\n\t\treturn year + month + day;\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [string => date]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tdate\r\n\t* @see\t\t:\t1. sDate : yyyyMMdd 형태의 날짜 문자열\r\n\t\t\t\t\t2. 성공 => Date Object 형태로 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetDateYymmdd: (sDate) => {\r\n\t\tif (StrLib.isNull(sDate)) return '';\r\n\t\tif (sDate.length === 8) return new Date(parseInt(sDate.substring(0, 4)), parseInt(sDate.substring(4, 6)) - 1, parseInt(sDate.substring(6, 8)));\r\n\t\telse return '';\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [string => YYYY-MM-DD]\r\n\t* @param\t:\tstring sDate\r\n\t* @return\t:\tdate\r\n\t* @see\t\t:\t1. sDate : yyyyMMdd 형태의 날짜 문자열\r\n\t\t\t\t\t2. 성공 => Date ObjectYYYY-MM-DD 형태로 return\r\n\t\t\t\t\t   실패 => '' return\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tgetStringYymmdd: (sDate) => {\r\n\t\tif (StrLib.isNull(sDate)) return '';\r\n\t\tif (sDate.length === 8) return sDate.substring(0, 4) + \"-\" + sDate.substring(4, 6) + \"-\" + sDate.substring(6, 8);\r\n\t\telse return '';\r\n\t},\r\n};\r\n\r\nconst DataLib = {\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Value를 Dataset Objec 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, integer nRowIndex, string, strColumnId, string strValue\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin')\r\n\t\t\t\t\t3. nRowIndex : 변경 Value의 Target Row Index\r\n\t\t\t\t\t4. strColumnId : 변경 Value의 Target Column ID ( 예 : 'USR_ID')\r\n\t\t\t\t\t5. strValue : 변경 Value\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetValueToDs: (prevState, strDatasetId, nRowIndex, strColumnId, strValue) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setValue(nRowIndex, strColumnId, strValue);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [변경된 Record를 Dataset Object 및 react state에 Update]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tsetRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.setRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\t/*----------------------------------------------------------------------------------------\r\n\t* [Dataset Record를 Initialize]\r\n\t* @param\t:\tstate prevState, string strDatasetId, array arrRecords\r\n\t* @return\t:\tobject\r\n\t* @see\t\t:\t1. prevState : React Class의 변경 전 state\r\n\t\t\t\t\t2. strDatasetId : Update 대상 Dataset Id 문자열 (state의 Dataset Key) ( 예 : 'dsLogin' )\r\n\t\t\t\t\t3. arrRecords : 변경된 Records (데이터 리스트) ( 예 : 쿼리 조회 결과 데이터 )\r\n\t\t\t\t\t2. 성공 => 변경 Value가 적용 된 Dataset Object 전체를 return\r\n\t\t\t\t\t   실패 => 없음\r\n\t*--------------------------------------------------------------------------------------*/\r\n\tinitRecordsToDs: (prevState, strDatasetId, arrRecords) => {\r\n\t\tlet objDs = prevState[strDatasetId];\r\n\t\tobjDs.initRecords(arrRecords);\r\n\t\treturn {[strDatasetId]: objDs};\r\n\t},\r\n\tdatalist: {\r\n\t\trecords: [],\r\n\t\torgrecords: [],\r\n\t\theader: {},\r\n\t\tsize: function() {return this.records.length;},\r\n\t\tgetRecords: function() {\r\n\t\t\treturn JSON.parse(JSON.stringify(this.records));\r\n\t\t},\r\n\t\tgetTransRecords: function(strRowType) {\r\n\t\t\tvar arrRecords = JSON.parse(JSON.stringify(this.records));\r\n\t\t\tvar arrOrgRecs = this.orgrecords;\r\n\r\n\t\t\tif (strRowType !== null && (strRowType === newScrmObj.constants.rowtype.CREATE_OR_UPDATE)) arrRecords = arrRecords.filter(item => item.rowtype === 'c' || item.rowtype === 'u');\r\n\t\t\telse if (strRowType !== null && strRowType === newScrmObj.constants.rowtype.DESTROY) arrRecords = arrRecords.filter(item => item.rowtype === 'd');\r\n\t\t\telse if (strRowType !== null && strRowType === newScrmObj.constants.rowtype.CREATE) arrRecords = arrRecords.filter(item => item.rowtype === 'c');\r\n\t\t\telse if (strRowType !== null && strRowType === newScrmObj.constants.rowtype.UPDATE) arrRecords = arrRecords.filter(item => item.rowtype === 'u');\r\n\r\n\t\t\tfor (var idxA = 0; idxA < arrRecords.length; idxA++) {\r\n\t\t\t\tfor (var idxB = 0; idxB < arrOrgRecs.length; idxB++) {\r\n\t\t\t\t\tif (arrRecords[idxA].recid === arrOrgRecs[idxB].recid) arrRecords[idxA].orgdata = arrOrgRecs[idxB];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn arrRecords;\r\n\t\t},\r\n\t\tsetRecords: function(records) {\r\n\t\t\tthis.records = records;\r\n\t\t},\r\n\t\tappendRecords: function(records) {\r\n\t\t\tthis.records = this.records.concat(records);\r\n\t\t\tthis.orgrecords = this.orgrecords.concat(JSON.parse(JSON.stringify(records)));\r\n\t\t},\r\n\t\tinitRecords: function(records) {\r\n\t\t\trecords = records || {};\r\n\t\t\tif (records.length !== undefined) {\r\n\t\t\t\tthis.initialize(records);\r\n\t\t\t\tthis.records = records;\r\n\t\t\t\tthis.orgrecords = JSON.parse(JSON.stringify(records));\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValue: function(index, column) {return this.records[index][column];},\r\n\t\tsetValue: function(index, column, value) {\r\n\t\t\tvar blnModified = false;\r\n\t\t\tthis.records[index][column] = value;\r\n\t\t\tif (this.records[index].rowtype !== 'c' && this.records[index].rowtype !== 'd') {\r\n\t\t\t\tvar recid = this.records[index].recid;\r\n\t\t\t\tvar arrCol = Object.keys(this.header);\r\n\t\t\t\tfor (var idxA = 0; idxA < this.orgrecords.length; idxA++) {\r\n\t\t\t\t\tif (this.orgrecords[idxA].recid === recid) {\r\n\t\t\t\t\t\tfor (var idxB = 0; idxB < arrCol.length; idxB++) {\r\n\t\t\t\t\t\t\tif (this.records[index][arrCol[idxB]] !== this.orgrecords[idxA][arrCol[idxB]]) {\r\n\t\t\t\t\t\t\t\tif (arrCol[idxB] !== \"recid\") {\r\n\t\t\t\t\t\t\t\t\tblnModified = true;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (blnModified) this.records[index].rowtype = 'u';\r\n\t\t\t\telse this.records[index].rowtype = 'r';\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetValueByRecId: function(recid, column) {return this.records[this.indexOf(\"recid\", recid)][column];},\r\n\t\tsetValueByRecId: function(recid, column, value) {\r\n\t\t\tvar index = this.indexOf(\"recid\", recid);\r\n\t\t\tthis.records[index][column] = value;\r\n\t\t\tif (this.records[index].rowtype !== 'c' && this.records[index].rowtype !== 'd') {\r\n\t\t\t\tfor (var idx = 0; idx < this.orgrecords.length; idx++) {\r\n\t\t\t\t\tif (this.orgrecords[idx].recid === recid) {\r\n\t\t\t\t\t\tif (this.orgrecords[idx][column] === value) this.records[index].rowtype = \"r\";\r\n\t\t\t\t\t\telse if (this.orgrecords[idx][column] !== value) this.records[index].rowtype = \"u\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\taddRow: function(index) {\r\n\t\t\tif (typeof index === 'number') {\r\n\t\t\t\tthis.records.splice(index, 0, JSON.parse(JSON.stringify(this.header)));\r\n\t\t\t\tthis.records[index]['rowtype'] = 'c';\r\n\t\t\t\treturn index;\r\n\t\t\t} else {\r\n\t\t\t\tthis.records.push(JSON.parse(JSON.stringify(this.header)));\r\n\t\t\t\tthis.records[this.size()-1]['rowtype'] = 'c';\r\n\t\t\t\treturn this.size() - 1;\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetRow: function(index) {\r\n\t\t\tif (this.records.length > 0) return JSON.parse(JSON.stringify([this.records[index]]));\r\n\t\t\telse return [];\r\n\t\t},\r\n\t\tindexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = 0; i < this.records.length; i++) {\r\n\t\t\t\tif (this.records[i][column] === value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tlastIndexOf: function(column, value) {\r\n\t\t\tvar index = -1;\r\n\t\t\tfor (var i = this.records.length; i >=0; i--) {\r\n\t\t\t\tif (this.records[i][column] === value) {\r\n\t\t\t\t\tindex = i;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn index;\r\n\t\t},\r\n\t\tfind: function(column, value) {\r\n\t\t\treturn this.records.filter(record => record[column] === value);\r\n\t\t},\r\n\t\tfindFirst: function(column, value) {\r\n\t\t\treturn this.getRow(this.indexOf(column, value));\r\n\t\t},\r\n\t\tfindLast: function(column, value) {\r\n\t\t\treturn this.getRow(this.lastIndexOf(column, value));\r\n\t\t},\r\n\t\tisUpdated: function() {\r\n\t\t\tif (this.records.filter(obj => obj.rowtype !== 'r').length > 0) return true;\r\n\t\t\telse return false;\r\n\t\t},\r\n\t\tinitialize: function(records) {\r\n\t\t\tfor (var idx = 0; idx < records.length; idx++) {\r\n\t\t\t\tif (!records[idx].hasOwnProperty(\"recid\")) records[idx].recid = idx + 1;\r\n\t\t\t\tif (!records[idx].hasOwnProperty(\"rowtype\")) records[idx].rowtype = 'r';\r\n\t\t\t}\r\n\t\t\tif (records.length > 0) {\r\n\t\t\t\tvar arrCol = Object.keys(records[0]);\r\n\t\t\t\tfor (var idxB = 0; idxB < arrCol.length; idxB++) {\r\n\t\t\t\t\tthis.header[arrCol[idxB]] = \"\";\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.header = {};\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetInstance: function(props) {\r\n\t\t\tprops = props || {};\r\n\t\t\tif (props.length !== undefined) {\r\n\t\t\t\tthis.initialize(props);\r\n\t\t\t\tprops = {records: props, orgrecords: JSON.parse(JSON.stringify(props))};\r\n\t\t\t}\r\n\t\t\treturn _.assign({}, DataLib.datalist, props);\r\n\t\t},\r\n\t}\r\n};\r\n\r\nclass TransManager {\r\n\tconstructor() {\r\n\t\tthis.id = '';\r\n\t\tthis.url = '';\r\n\t\tthis.callback = null;\r\n\t\tthis.beforeSend = null;\r\n\t\tthis.erorr = null;\r\n\t\tthis.timeout = (1000 * 30);\r\n\t\tthis.async = true;\r\n\t\tthis.asyncdata = null;\r\n\t\tthis.dataType = 'json';\r\n\t\tthis.contentType = 'application/json';\r\n\t\tthis.progress = true;\r\n\t\tthis.constants = {\r\n\t\t\turl: {\r\n\t\t\t\tcommon: '/json.service.do',\r\n\t\t\t\tupload: '/upload.service.do',\r\n\t\t\t\tsttSearch: '/sttSearch.service.do',\r\n\t\t\t\tsftp: '/sftp.service.do',\r\n\t\t\t\trealTime: '/realTime.service.do',\r\n\t\t\t},\r\n\t\t\terrorcode: {\r\n\t\t\t\tSUCCESS: '0',\r\n\t\t\t\tERROR: '-2',\r\n\t\t\t\tUPLOADFAIL: '-3'\r\n\t\t\t},\r\n\t\t\tsystemid: {\r\n\t\t\t},\r\n\t\t\tcrudh: {\r\n\t\t\t\tcreate: '0',\r\n\t\t\t\tread: '1',\r\n\t\t\t\tupdate: '2',\r\n\t\t\t\tdestroy: '3',\r\n\t\t\t\tprocedure: '4',\r\n\t\t\t\thandle: '5',\r\n\t\t\t\tsequence: '6',\r\n\t\t\t\titerator: '7',\r\n\t\t\t\tbatch: '8',\r\n\t\t\t\tdir: '9',\r\n\t\t\t\tpasswd: '10',\r\n\t\t\t\tinterface: '11',\r\n\t\t\t\tsttSearch: '12',\r\n\t\t\t\trealTime: '13',\r\n\r\n\t\t\t\tdataset: 'ds_config'\r\n\t\t\t},\r\n\t\t\tdao: {\r\n\t\t\t\tbase: '0'\r\n\t\t\t},\r\n\t\t\tconfig: {\r\n\t\t\t\tdao: '0',\r\n\t\t\t\tcrudh: '',\r\n\t\t\t\tsqlmapid: '',\r\n\t\t\t\tdatasetmap: '',\r\n\t\t\t\tdatasetsend: '',\r\n\t\t\t\tdatasetrecv: '',\r\n\t\t\t\tcolumnid: '',\r\n\t\t\t\tsystemid: '',\r\n\t\t\t\tretry: 0\r\n\t\t\t},\r\n\t\t\taccessToken: '',\r\n\t\t\tcontentType: {\r\n\t\t\t\tupload: 'multipart/form-data',\r\n\t\t\t\tjson: 'application/json',\r\n\t\t\t\tjavascript : 'application/json'\r\n\t\t\t},\r\n\t\t\tnoProgressbar : false\r\n\t\t};\r\n\t\tthis.transdata = {\r\n\t\t\tepytwor: newScrmObj.constants.crud,\r\n\t\t\tgifnoc: [],\r\n\t\t\tdatasets: {},\r\n\t\t\treyolpme: { \"CENT_CD\": \"\", \"TEAM_CD\": \"\", \"USR_CD\" : \"\", \"AUTH_CD\": \"\", \"CONN_IP\": \"\" },\r\n\t\t\tnoisivid: ComLib.getSession(\"SYSTEM_DV\"),\r\n\t\t};\r\n\t\tthis.datatype = {\r\n\t\t\thtml: 'html',\r\n\t\t\tjson: 'json',\r\n\t\t\tscript: 'script',\r\n\t\t\txml: 'xml'\r\n\t\t};\r\n\t};\r\n\tinitialize = () => {\r\n\t\tthis.transdata.epytwor = newScrmObj.constants.crud;\r\n\t\tthis.transdata.gifnoc = [];\r\n\t\tthis.transdata.reyolpme = { \"CENT_CD\": \"\", \"TEAM_CD\": \"\", \"USR_CD\" : \"\", \"AUTH_CD\": \"\", \"CONN_IP\": \"\" };\r\n\t\tthis.transdata.datasets = {};\r\n\t\tthis.setAccessToken(ComLib.getSession('accessToken'));\r\n\t};\r\n\tsetReyolpme = () => {\r\n\t\tvar reyolpme = this.transdata.reyolpme;\r\n\t\tif (sessionStorage.getItem(\"gdsUserInfo\") !== null) {\r\n\t\t\tvar arrUser = ComLib.getSession(\"gdsUserInfo\");\r\n\t\t\treyolpme = {\r\n\t\t\t\t\"CENT_CD\": arrUser[0][\"CENT_CD\"],\r\n\t\t\t\t\"TEAM_CD\": arrUser[0][\"TEAM_CD\"],\r\n\t\t\t\t\"USR_CD\" : arrUser[0][\"USR_CD\"],\r\n\t\t\t\t\"AUTH_CD\": arrUser[0][\"AUTH_CD\"],\r\n\t\t\t\t\"CONN_IP\": arrUser[0][\"CONN_IP\"],\r\n\t\t\t};\r\n\t\t}\r\n\t\treturn reyolpme;\r\n\t};\r\n\tsetTransUrl = (url) => {\r\n\t\tthis.url = url;\r\n\t\tif (this.constants.url.common === url) this.contentType = this.constants.contentType.json;\r\n\t\telse if (this.constants.url.upload === url) this.contentType = this.constants.contentType.upload;\r\n\t};\r\n\tsetBeforeSend = (beforeSend) => {\r\n\t\tthis.beforeSend = beforeSend;\r\n\t};\r\n\tsetTransId = (transId) => {\r\n\t\tthis.initialize();\r\n\t\tthis.id\t= transId;\r\n\t\tthis.transdata.reyolpme = this.setReyolpme();\r\n\t};\r\n\tsetCallBack = (callback) => {\r\n\t\tthis.callback\t= callback;\r\n\t};\r\n\tsetError = (error) => {\r\n\t\tthis.error = error;\r\n\t};\r\n\tsetTimeout = (timeout) => {\r\n\t\tthis.timeout = timeout;\r\n\t};\r\n\tsetAsync = (async) => {\r\n\t\tthis.async = async;\r\n\t};\r\n\tsetProgress = (progress) => {\r\n\t\tthis.progress = progress;\r\n\t};\r\n\tmakeTransData = () => {\r\n\t\treturn { transdata: JSON.stringify(this.transdata) };\r\n\t};\r\n\taddConfig = (props) => {\r\n\t\tthis.transdata.gifnoc.push(_.assign({}, this.constants.config, props));\r\n\t};\r\n\taddDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddSequence = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.sequence }));\r\n\t};\r\n\taddIterator = (props) => {\r\n\t\tthis.addConfig( _.assign(props, { crudh: this.constants.crudh.iterator }));\r\n\t};\r\n\taddSendDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\taddRecvDataset = (name, dataset) => {\r\n\t\tthis.transdata.datasets[name] = dataset;\r\n\t};\r\n\tsetAccessToken = (token) => {\r\n\t\tthis.constants.accessToken = token;\r\n\t};\r\n\tsetProgressBar = (bln) => {\r\n\t\tthis.constants.noProgressbar = bln;\r\n\t}\r\n\treplcaceSpChar = (data) => {\r\n\t\treturn data.replace(/%/g, '％').replace(/=/g, '＝').replace(/&amp;/g, '＆').replace(/&/g, '＆');\r\n\t};\r\n\tdoLoading = (bVisible) => {\r\n\t\tlet objLoadDiv = document.getElementById(newScrmObj.constants.mdi.LOADING);\r\n\t\tif (ComLib.isNull(objLoadDiv)) {\r\n\t\t\tobjLoadDiv = document.createElement(\"div\");\r\n\t\t\tobjLoadDiv.id = newScrmObj.constants.mdi.LOADING;\r\n\t\t}\r\n\t\tdocument.body.appendChild(objLoadDiv);\r\n\t\tReactDOM.render(<Dialog.ModalLoading isOpen = {bVisible}/>, objLoadDiv);\r\n\t};\r\n\tagent = () => {\r\n\t\tconsole.log('request => ');\r\n\t\tconsole.log(this.transdata);\r\n\t\tif (!this.constants.noProgressbar) {\r\n\t\t\tloadProgressBar();\r\n\t\t\tif (this.progress) this.doLoading(this.progress);\r\n\t\t}\r\n\t\tif (!this.async) this.agentSync();\r\n\t\telse this.agentAsync();\r\n\t};\r\n\tagentSync = () => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\t//url: process.env.API_URL + this.url,\r\n\t\t\turl: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\tdata: this.contentType === this.constants.contentType.json ? this.replcaceSpChar(JSON.stringify({\"transdata\": this.transdata})) : this.transdata.datasets.fileupload,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.contentType,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true,\r\n\t\t\tretry: 0,\r\n\t\t\tprogress: this.progress,\r\n\t\t\ttimeout: this.timeout,\r\n\t\t};\r\n\t\ttry {\r\n\t\t\tconst resData = axios(reqOptions);\r\n\t\t\tconsole.log('response => ');\r\n\t\t\tconsole.log(resData);\r\n\t\t\tif (!this.constants.noProgressbar) { \r\n\t\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\t}\r\n\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.SUCCESS });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t} else if (resData.data.data.gifnoc.ERR_CODE === this.constants.errorcode.UPLOADFAIL) {\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.UPLOADFAIL });\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', [resData.data.gifnoc.ERR_MESSAGE]);\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log('catch => ');\r\n\t\t\tconsole.log(err);\r\n\t\t\tif (!this.constants.noProgressbar) { \r\n\t\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\t}\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t}\r\n\t};\r\n\tagentAsync = async() => {\r\n\t\tconst reqOptions = {\r\n\t\t\tmethod: 'post',\r\n\t\t\t//url: process.env.API_URL + this.url,\r\n\t\t\turl: ComLib.getSession(\"SVR_URL\") + this.url,\r\n\t\t\tdata: this.contentType === this.constants.contentType.json ? this.replcaceSpChar(JSON.stringify({\"transdata\": this.transdata})) : this.transdata.datasets.fileupload,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": this.contentType,\r\n\t\t\t\t\"Authorization\": this.constants.accessToken\r\n\t\t\t},\r\n\t\t\tjson: true,\r\n\t\t\tretry: 0,\r\n\t\t\tprogress: this.progress,\r\n\t\t\ttimeout: this.timeout,\r\n\t\t};\r\n\t\t// console.log(this.url)\r\n\t\t\r\n\t\tif (this.url === '/sttSearch.service.do') {\r\n\t\t\ttry {\r\n\t\t\t\tconst resData = await axios(reqOptions);\r\n\t\t\t\tconsole.log('response => ');\r\n\t\t\t\tconsole.log(resData);\r\n\r\n\t\t\t\tif (!this.constants.noProgressbar) { \r\n\t\t\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.SUCCESS });\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn resData;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('catch => ');\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tif (!this.constants.noProgressbar) { \r\n\t\t\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\t\t}\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tconst resData = await axios(reqOptions);\r\n\t\t\t\tconsole.log('response => ');\r\n\t\t\t\tconsole.log(resData);\r\n\t\t\t\t\r\n\t\t\t\tif (!this.constants.noProgressbar) { \r\n\t\t\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (resData.data.gifnoc.ERR_CODE === this.constants.errorcode.SUCCESS) {\r\n\t\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null ) {\r\n\t\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.SUCCESS });\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn resData;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (resData.data.data.gifnoc.ERR_CODE === this.constants.errorcode.UPLOADFAIL) {\r\n\t\t\t\t\tif ( this.callback !== '' && this.callback !== undefined && this.callback !== null) {\r\n\t\t\t\t\t\treturn this.callback({ id: this.id, data: resData.data, result: this.constants.errorcode.UPLOADFAIL });\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', [resData.data.gifnoc.ERR_MESSAGE]);\r\n\t\t\t\t}\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.log('catch => ');\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t\tif (!this.constants.noProgressbar) { \r\n\t\t\t\t\tif (this.progress) this.doLoading(!this.progress);\r\n\t\t\t\t}\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['서버 오류 발생\\n로그를 확인하십시오.']);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t};\r\n};\r\nexport {newScrmObj, ComLib, StrLib, FileLib, ExcelLib, DateLib, TransManager, DataLib };","import React from 'react';\r\nimport { newScrmObj, ComLib, TransManager, StrLib, DataLib } from 'common';\r\nimport { Link } from 'react-router-dom';\r\nimport 'assets/styles/login.css';\r\n\r\nclass Login extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(props){\r\n\t\tsuper();\r\n\t\t\t\t// state 초기화\r\n\t\tthis.state = {\r\n\t\t\ttimeoutId: null,\r\n\t\t\twarning: false,\r\n\t\t\tdsLogin: DataLib.datalist.getInstance(),\r\n\t\t\tdsRst: DataLib.datalist.getInstance(),\r\n\t\t\tdsLoginInfo: DataLib.datalist.getInstance([{USR_ID: \"\", PWD: \"\", CENT_CD: \"\", CONN_IP: \"\"}]),\r\n\t\t};\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t\tthis.event.input.onKeyUp = this.event.input.onKeyUp.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate(){\r\n\t\tif (this.state.warning && this.state.timeoutId !== null) {\r\n\t\t\tlet timeoutId = setTimeout(() => this.setState({...this.state, warning: false, timeoutId: null}), 1500);\r\n\t\t\tthis.setState({...this.state, timeoutId: timeoutId});\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tvar serverInfos = this.getInfos();\r\n\t\tlocalStorage.setItem(\"infos\", JSON.stringify(serverInfos));\r\n\t\tComLib.setServerInfos();\r\n\r\n\t\tfunction get_query(){\r\n\t\t\tvar url = document.location.href;\r\n\t\t\tvar qs = url.substring(url.indexOf('?') + 1).split('&');\r\n\t\t\tfor(var i = 0, result = {}; i < qs.length; i++){\r\n\t\t\t\tqs[i] = qs[i].split('=');\r\n\t\t\t\tresult[qs[i][0]] = decodeURIComponent(qs[i][1]);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tvar result = get_query();\r\n\t\t\r\n\t\tif (result.TA !== undefined && result.TA !== \"false\") {\t\t\t\r\n\t\t\t\r\n\t\t\tComLib.setSession('token', true);\r\n\t\t\tComLib.setSession('token_TA', true);\r\n\r\n\t\t\tthis.transaction('LOGIN_R04');\r\n\t\t\t\t\t\t\r\n\r\n\t\t} else {\r\n\t\t\tComLib.setSession(\"token_TA\", false)\r\n\t\t\twindow.dispatchEvent(new CustomEvent(\"navigationhandler\"));\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\t getInfos = () => {\r\n\t\tvar infos = {\r\n\t\t\tprod: {\r\n\t\t\t\thost: '172.16.0.30',\r\n\t\t\t\tdomain: 'itfact.iptime.org',\r\n\t\t\t\tport: '8080',\r\n\t\t\t\tdomainPort: '12388'\r\n\t\t\t},\r\n\t\t\tdev: {\r\n\t\t\t\thost: '',\r\n\t\t\t\tdomain: '',\r\n\t\t\t\tport: '',\r\n\t\t\t\tdomainPort: ''\r\n\t\t\t},\r\n\t\t\tlocalbuild: {\r\n\t\t\t\thost: '192.168.0.55',\r\n\t\t\t\tdomain: '',\r\n\t\t\t\tport: '8443'\r\n\t\t\t},\r\n\t\t\tlocal: {\r\n\t\t\t\thost: 'localhost',\r\n\t\t\t\tdomain: '',\r\n\t\t\t\tport: '8080'\r\n\t\t\t},\r\n\t\t\t// demo : {\r\n\t\t\t// \thost: 'itfact.iptime.org',\r\n\t\t\t// \tdomain: '',\r\n\t\t\t// \tport: '12388'\r\n\t\t\t\t\r\n\t\t\t// }\r\n\t\t};\r\n\t\treturn infos;\r\n\t}\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogin':\r\n\t\t\t\t\t if (this.validation('LOGIN_R01')) { this.transaction('LOGIN_R01'); }\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnChgPasswd':\r\n\t\t\t\t\tif (document.getElementById('popup_div_0') != undefined) {\r\n\t\t\t\t\t\tdocument.getElementById('popup_div_0').hidden = false;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet option = { width: '350px', height: '300px', modaless: false,\r\n\t\t\t\t\t\t\tparam: [{\r\n\t\t\t\t\t\t\t\tUSR_ID: this.state.dsLoginInfo.getValue(0, \"USR_ID\"),\r\n\t\t\t\t\t\t\t\tCUR_PWD: this.state.dsLoginInfo.getValue(0, \"PWD\"),\r\n\t\t\t\t\t\t\t\tNEW_PWD: '',\r\n\t\t\t\t\t\t\t\tCON_PWD: '',\r\n\t\t\t\t\t\t\t}],\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', option);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrCd':\r\n\t\t\t\t\tthis.state.dsLoginInfo.setValue(0, \"USR_ID\", e.target.value);\r\n\t\t\t\t\tComLib.setStateDs(this, \"dsLoginInfo\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsLoginInfo\", 0, \"PWD\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyUp: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'txtUsrPasswd':\r\n\t\t\t\t\tif (e.getModifierState(\"CapsLock\")) {\r\n\t\t\t\t\t\tthis.setState({ warning: true });\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.setState({ warning: false });\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (e.keyCode === 13) {\r\n\t\t\t\t\t\tif (!ComLib.isNull(document.getElementById(newScrmObj.constants.mdi.DIALOG))) {\r\n\t\t\t\t\t\t} else if (!ComLib.isNull(document.getElementById(newScrmObj.constants.mdi.LOADING))) {\r\n\t\t\t\t\t\t\tif (document.getElementById(newScrmObj.constants.mdi.LOADING).hasChildNodes()) {\r\n\t\t\t\t\t\t\t} else { document.getElementById('btnLogin').click(); }\r\n\t\t\t\t\t\t} else { document.getElementById('btnLogin').click(); }\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"USR_ID\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['ID를 입력해주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif (StrLib.isNull(this.state.dsLoginInfo.getValue(0, \"PWD\"))) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호를 입력해주세요.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tthis.state.dsRst.setValue(0, \"CONN_IP\", this.state.dsLoginInfo.getValue(0, \"CONN_IP\"));\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault :\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t * LOGIN_R01 : 로그인 체크\r\n\t * LOGIN_R02 : 사용자 정보 조회\r\n\t * LOGIN_U01 : 비멀번호 오류 카운트 업데이트\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tconsole.log(serviceid)\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'LOGIN_R01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.passwd,\r\n\t\t\t\t\tdatasetsend: \"dsLogin\",\r\n\t\t\t\t\tcolumnid: \"PWD\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_doLogin\",\r\n\t\t\t\t\tdatasetsend:\"dsLogin\",\r\n\t\t\t\t\tdatasetrecv:\"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsLogin', this.state.dsLoginInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'LOGIN_R02':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t// // 비밀번호 오류 카운트 초기화\r\n\t\t\t\t// transManager.addConfig({\r\n\t\t\t\t// \tdao: transManager.constants.dao.base,\r\n\t\t\t\t// \tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t// \tsqlmapid:\"COM.U_initPwdErrCnt\",\r\n\t\t\t\t// \tdatasetsend:\"dsSendData\",\r\n\t\t\t\t// });\r\n\t\t\t\t// 사용자 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 공통코드 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCommCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCommCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 메뉴 정보 조회 -> TO-DO : Main Frame으로 이동 ?\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMenuList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMenuInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t// 센터 기준값 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentStndList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentStvlInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t// 조직 정보 조회\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"COM.R_getOrgList\",\r\n\t\t\t\t\tdatasetsend: \"dsSendData\",\r\n\t\t\t\t\tdatasetrecv: \"dsOrgList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCentList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCentList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getTeamList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsTeamList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getUserList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsUserList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getConstList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsConstList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMsgList\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMsgList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSendData', this.state.dsRst.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'LOGIN_R03':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_doLoginAfter\",\r\n\t\t\t\t\tdatasetsend:\"dsSendData\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSendData', this.state.dsRst.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'LOGIN_R04':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getMsgList\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\t\tdatasetrecv:\"dsMsgList\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"COM.R_getCommCode\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchData\",\r\n\t\t\t\t\tdatasetrecv:\"dsCommCodeInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSrchData', [{ EMPTY : \"\" }]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t\r\n\t\t\t// 비밀번호 에러 카운트 업데이트\r\n\t\t\tcase 'LOGIN_U01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_addPwdErrCnt\",\r\n\t\t\t\t\tdatasetsend:\"dsUpdatePwd\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUpdatePwd', this.state.dsLoginInfo.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'LOGIN_R01':\r\n\t\t\tif (res.data.dsRst.length < 1) {\t\t\t\t\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['사용자가 존재하지 않습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsRst\", res.data.dsRst);\r\n\r\n\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'Y') {\r\n\t\t\t\t\tif (this.validation('LOGIN_R02')) this.transaction('LOGIN_R02');\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'LOGIN') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['이미 로그인 된 사용자 입니다.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'MAX_ERR') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호 입력 오류가 5회 초과하였습니다. 비밀번호를 초기화 해주세요.']);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'INIT') {\r\n\t\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', ['비밀번호 변경 대상자 입니다.\\n 비밀번호 변경 화면으로 이동합니다.'], foo => { if (foo === true) document.getElementById('btnChgPasswd').click();});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.state.dsRst.getValue(0, \"RST_CD\") === 'PWD_ERR') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['비밀번호 오류입니다.']);\r\n\t\t\t\t\t\tif (this.validation('LOGIN_U01')) this.transaction('LOGIN_U01');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R02':\r\n\t\t\tconst access_token = true;\r\n\t\t\tComLib.setSession('token', access_token);\r\n\r\n\t\t\tComLib.setSession('gdsUserInfo',\tres.data.dsUserInfo);\r\n\t\t\tComLib.setSession('gdsCommCode',\tres.data.dsCommCodeInfo);\r\n\t\t\tComLib.setSession('gdsMenu', \t\tres.data.dsMenuInfo);\r\n\t\t\tComLib.setSession('gdsCentStndVl',\tres.data.dsCentStvlInfo);\r\n\t\t\tComLib.setSession('gdsCentList',\tres.data.dsCentList);\r\n\t\t\tComLib.setSession('gdsTeamList',\tres.data.dsTeamList);\r\n\t\t\tComLib.setSession('gdsUserList',\tres.data.dsUserList);\r\n\t\t\tComLib.setSession('gdsMsgList',\t\tres.data.dsMsgList);\r\n\t\t\tComLib.setSession('gdsConstList',\tres.data.dsConstList);\r\n\r\n\t\t\t\r\n\t\t\tComLib.setSession('gdsOrgList',\tres.data.dsOrgList);\r\n\t\t\t\r\n\t\t\tthis.transaction('LOGIN_R03');\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'LOGIN_R03':\r\n\t\t\tconsole.log(document.getElementById('linkBase'))\r\n\t\t\t// 메인 화면으로 이동\r\n\t\t\tdocument.getElementById('linkBase').click();\r\n\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'LOGIN_R04':\t\r\n\t\t\tlet taUser = [{USR_ID   : \"TA\"\r\n\t\t\t            , CENT_CD  : \"TA\"\r\n\t\t\t\t\t\t, CENT_NM  : \"TA접속\"\r\n\t\t\t\t        , TEAM_CD  : \"TA\"\r\n\t\t\t\t        , TEAM_NM  : \"TA접속\"\r\n\t\t\t\t        , AUTH_LV  : \"4\"\r\n\t\t\t\t        , USR_NM   : \"TA\"\r\n\t\t\t\t        , LGN_IP   : \"\"\r\n\t\t\t\t        , LOGIN_DT : \"\"\r\n\t\t\t\t        , USE_FLAG : \"Y\"}];\r\n\r\n\t\t\tComLib.setSession('gdsUserInfo',\ttaUser);\r\n\t\t\tComLib.setSession('gdsCommCode',\tres.data.dsCommCodeInfo);\t\t\t\r\n\t\t\tComLib.setSession('gdsMsgList',\t\tres.data.dsMsgList);\r\n\r\n\t\t\tconsole.log(res.data)\r\n\t\t\tdocument.getElementById('linkBase').click();\r\n\r\n\t\t\t\r\n\t\tcase 'LOGIN_U01':\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className = 'scrm-login-wrap'>\r\n\t\t\t\t\t<div className = 'scrm-login'>\r\n\t\t\t\t\t\t<div className = 'scrm-login-div'>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-main'>\r\n\t\t\t\t\t\t\t\t<h1>Smart VA</h1> \r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-input'>\r\n\t\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"text\" id = 'txtUsrCd' value = {this.state.dsLoginInfo.records[0][\"USR_ID\"]} placeholder = {' 아이디'} onChange = {this.event.input.onChange}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-input password'>\r\n\t\t\t\t\t\t\t\t<input style = {{width: '100%'}} type = \"password\" id = 'txtUsrPasswd' value = {this.state.dsLoginInfo.records[0][\"PWD\"]} placeholder = {' 비밀번호'} onChange = {this.event.input.onChange} onKeyUp = {this.event.input.onKeyUp}/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t{this.state.warning &&<div class=\"ly_v2\" id=\"err_capslock\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"ly_box\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<p><strong>Caps Lock</strong>이 켜져 있습니다.</p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span class=\"sp ly_point\"></span>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>}\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t\t\t<div className = 'scrm-login-btn'>\r\n\t\t\t\t\t\t\t\t\t<button id = 'btnLogin' onClick = {this.event.button.onClick}>{'로그인'}</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className = 'scrm-login-btn2'>\r\n\t\t\t\t\t\t\t\t\t<button id = 'btnChgPasswd' onClick = {this.event.button.onClick}>{'비밀번호 변경'}</button>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className = 'scrm-login-btn-div'>\r\n\t\t\t\t\t\t\t\t<a href=\"https://www.google.com/intl/ko/chrome/\">Chrome에 최적화 되어 있습니다.</a>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className= 'scrm-login-img'></div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div style = {{display: 'none'}}>\r\n\t\t\t\t\t<Link id = 'linkBase'\tto = {{pathname: '/',\tstate: {}}}/>\r\n\t\t\t\t\t<Link id = 'linkToPlayer'\tto = {{pathname: '/Player',\tstate: {test: true}}}/>\t\t\t\t\t\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;","// 대시보드\r\nimport React from 'react';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj       } from 'common';\r\nimport { SubFullPanel\r\n\t   , FlexPanel\r\n\t   , ComponentPanel\r\n\t   , RelativeGroup    } from 'components';\r\nimport { ScrmLineBarChart\r\n\t   , Selectbox        \r\n\t   , ScrmBarChart\r\n\t   , ProgressBar\r\n\t   , Table} from 'components';\r\nimport { PieChart         } from 'react-minimal-pie-chart';\r\nimport { Label            } from 'components';\r\n\r\nconst svrDivColor = ['darkRed','darkGreen','dodgerBlue','darkCyan','gray'];\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone] \r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props) {\r\n\t\t\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\ttimeoutID: null,\r\n\t\t\tjobTpselected: null,\r\n\t\t\tjobTphoverd : undefined,\r\n\t\t\tcallTphoverd: undefined,\r\n\t\t\tjobTpDiagramData  : { title: '', value: \"\", color: 'darkGreen' },\r\n\t\t\tcallTpDiagramData : { title: '', value: \"\", color: 'darkGreen' },\r\n\t\t\tallData   : null,\r\n\t\t\tjobTpData : null,\r\n\t\t\tCallTpData: null,\r\n\t\t\tmaxData   : 0,\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tjobSvrInfo : {\r\n\t\t\t\t\tid       : 'jobSvrInfo',\r\n\t\t\t\t\tdataset  : [{}],\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tvalue    : \"\",\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tresSvrInfo : {\r\n\t\t\t\t\tid       : 'resSvrInfo',\r\n\t\t\t\t\tdataset  : [{}],\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tvalue    : \"\",\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\toptions : {\r\n\t\t\t\tXAsisKey : '',\r\n\t\t\t\tdataKey  : [{}],\r\n\t\t\t},\r\n\t\t\toptions2 : {\r\n\t\t\t\tXAsisKey : 'TM',\r\n\t\t\t\tdataKey  : [{}],\r\n\t\t\t},\r\n\t\t\tdailyOptions :{\r\n\t\t\t\tYAsisKey : 'PATH',\r\n\t\t\t\tdataKey  : [{key: '/', color: ''}],\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tdsResStatsticDaily : {\r\n\t\t\t\tSVR_HST : '',\r\n\t\t\t\tCPU : '',\r\n\t\t\t\tMEM : '',\r\n\t\t\t\tIO : '',\r\n\t\t\t\tDISK : '',\r\n\t\t\t\tSWAP : '',\r\n\t\t\t\tSVR_CONT : '',\r\n\t\t\t\tTM: ''\r\n\t\t\t},\r\n\t\t\tdsSvrResourceAvgMax: \r\n\t\t\t\t[{AVG_CPU : '',\r\n\t\t\t\tAVG_IO  : '',\r\n\t\t\t\tAVG_MEM : '',\r\n\t\t\t\tAVG_SWAP: '',\r\n\t\t\t\tMAX_CPU : '',\r\n\t\t\t\tMAX_IO  : '',\r\n\t\t\t\tMAX_MEM : '',\r\n\t\t\t\tMAX_SWAP: '',\r\n\t\t\t\tSVR_CONT: '',\r\n\t\t\t\tSVR_HST : ''}]\r\n\t\t\t,\r\n\t\t\tdsJobStatisticDaily : {\t\t\r\n\t\t\t\tSUCC_CNT_PERCENTAGE : '',\r\n\t\t\t\tFAIL_CNT_PERCENTAGE : '',\r\n\t\t\t\tREG_TIME    : '',\r\n\t\t\t\tTOTAL_CNT   : 0,\r\n\t\t\t\tSUCC_CNT    : 0,\r\n\t\t\t\tFAIL_CNT    : 0,\r\n\t\t\t\tFILE_SIZE   : 0,\r\n\t\t\t\tFILE_LENGTH : 0,\r\n\t\t\t\tTYPEN       : 0,\r\n\t\t\t\tTYPER       : 0,\r\n\t\t\t\tTYPES       : 0,\r\n\t\t\t},\r\n\t\t\r\n\r\n\t\t\tdsSrvDailyJobInfo : DataLib.datalist.getInstance([]),\r\n\t\t\tdsSrvDailyJobInfoforGraph: DataLib.datalist.getInstance([]),\r\n\t\t\tdsSrvDailyResInfo : DataLib.datalist.getInstance([]),\r\n\t\t\tdsSrvDailyResInfoforGraph: DataLib.datalist.getInstance([]),\r\n\t\t\t\t\r\n\t\t}\r\n\t\t\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction('COM010000_R01');\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (id) => {\r\n\t\tswitch (id) {\t\t\t\r\n\t\t\tcase 'COM010000_R01' :\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'COM010000_R02' :\r\n\t\t\t\tif (!StrLib.isNull(this.state.timeoutID)) {\r\n\t\t\t\t\tclearTimeout(this.state.timeoutID);\r\n\t\t\t\t}\t\t\t\t\r\n\r\n\t\t\t\tvar timeoutID = setTimeout(() => {\r\n\t\t\t\t\tif (document.getElementById('COM010000').style.cssText === \"display: block;\") {\r\n\t\t\t\t\t\tif (this.validation('COM010000_R02')) {\r\n\t\t\t\t\t\t\tthis.transaction('COM010000_R02');\r\n\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.validation('COM010000_R02');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}, 30000);\t\r\n\r\n\t\t\t\tif (this.state.timeoutID !== timeoutID) {\r\n\t\t\t\t\tthis.setState({...this.state, timeoutID: timeoutID});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\t\t\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setProgress(false);\t\t\t\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'COM010000_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"COM.R_getSrvList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrchSvrInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSrchSvrInfo', [{}]);\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'COM010000_R02':\t\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT_STATIS.R_getSrvJobStatistic\",\r\n\t\t\t\t\tdatasetsend: \"dsSvrJobStaticInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrJobInfo\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT_STATIS.R_getSrvAllJobStatisticDaily\",\r\n\t\t\t\t\tdatasetsend: \"dsSvrJobStaticInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrAllJobDailyInfo\"\r\n\t\t\t\t});\t\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSvrJobStaticInfo', [{\"SVR_HST\" : this.state.selectboxProps.jobSvrInfo.value}]);\t\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'COM010000_R03':\r\n\t\t\t\ttransManager.addConfig({\t\t\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"RES.R_DailyResLast\",\r\n\t\t\t\t\tdatasetsend: \"dsSearch\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrResourceInfoDaily\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\t\t\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"RES.R_DailyResMax\",\r\n\t\t\t\t\tdatasetsend: \"dsSearch\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrResourceAvgMax\"\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\t\t\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"RES.R_DailyResTimeline\",\r\n\t\t\t\t\tdatasetsend: \"dsSearch\",\r\n\t\t\t\t\tdatasetrecv: \"dsSrvDailyResInfoforGraph\"\r\n\t\t\t\t});\t\t\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSearch', [{\"SVR_HST\" : this.state.selectboxProps.resSvrInfo.value}]);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttransManager.agent();\r\n\r\n\t\t} catch (err) {\t\t\t\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\r\n\t\tcase 'COM010000_R01' :\r\n\t\t\tlet jobSvrInfo = [];\r\n\t\t\tlet resSvrInfo = [];\r\n\r\n\t\t\tfor(let intA = 0; intA < res.data.dsSvrInfo.length; intA++){\t\r\n\t\t\t\tif (res.data.dsSvrInfo[intA].RESC_USE_FLAG === 'Y') {\r\n\t\t\t\t\tresSvrInfo.push({CODE_NM: res.data.dsSvrInfo[intA]['NAME'], CODE: res.data.dsSvrInfo[intA]['VALUE']})\t\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif (res.data.dsSvrInfo[intA].TRN_FLAG === 'Y') {\r\n\t\t\t\t\t\tjobSvrInfo.push({CODE_NM: res.data.dsSvrInfo[intA]['NAME'], CODE: res.data.dsSvrInfo[intA]['VALUE']})\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\t// res.data.dsSvrInfo[intA].CODE_NM = res.data.dsSvrInfo[intA]['NAME'];\r\n\t\t\t\t// res.data.dsSvrInfo[intA].CODE    = res.data.dsSvrInfo[intA]['VALUE'];\r\n\t\t\t\t// delete res.data.dsSvrInfo[intA].NAME;\r\n\t\t\t\t// delete res.data.dsSvrInfo[intA].VALUE;\r\n\t\t\t}\t\t\t\t\t\r\n\r\n\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, jobSvrInfo: {...this.state.selectboxProps.jobSvrInfo, dataset : ComLib.convComboList(jobSvrInfo, newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t, resSvrInfo: {...this.state.selectboxProps.resSvrInfo, dataset : ComLib.convComboList(resSvrInfo), value: resSvrInfo[0].CODE}}});\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\tif (this.validation('COM010000_R02')) {\r\n\t\t\t\tthis.transaction(\"COM010000_R02\");\r\n\t\t\t\tthis.transaction(\"COM010000_R03\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'COM010000_R02' :\r\n\t\t\t\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSrvDailyJobInfo\", res.data.dsSvrJobInfo);\t\r\n\r\n\t\t\tlet allSECT    = this.state.dsSrvDailyJobInfo.getRecords().filter((item) => item.SECT === 'ALL');\t\t\t\r\n\t\t\tlet jobTpSECT  = this.state.dsSrvDailyJobInfo.getRecords().filter((item) => item.SECT === 'JOB_TP');\r\n\t\t\tlet callTpSECT = this.state.dsSrvDailyJobInfo.getRecords().filter((item) => item.SECT === 'CALL_TP');\r\n\r\n\t\t\tlet totalSeconds = allSECT[0].REC_TM;\r\n\t\t\tlet hours = Math.floor(totalSeconds / 3600);\r\n\r\n\t\t\ttotalSeconds %= 3600;\r\n\r\n\t\t\tlet minutes = Math.floor(totalSeconds / 60);\r\n\t\t\tlet seconds = totalSeconds % 60;\r\n\r\n\t\t\tlet time = (hours > 0 ? hours + \":\" : null) +  minutes + \":\" + seconds;\r\n\t\t\t\r\n\t\t\tallSECT[0].REC_TM_HMS = time;\r\n\r\n\t\t\tlet jobTpDiagramData  = [];\r\n\t\t\tlet callTpDiagramData = [];\r\n\r\n\t\t\tfor (let i = 0; i < jobTpSECT.length; i ++) {\r\n\t\t\t\tif (jobTpSECT[i].SUCC_CNT > 0) {\r\n\t\t\t\t\tjobTpDiagramData.push({title: jobTpSECT[i].TP_CONT, value: jobTpSECT[i].SUCC_CNT, color: ComLib.getComCodeCdVal(\"CMN\", jobTpSECT[i].TP, \"JOB_TP\")})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < callTpSECT.length; i ++) {\r\n\t\t\t\tif (callTpSECT[i].SUCC_CNT > 0) {\r\n\t\t\t\t\tcallTpDiagramData.push({title: callTpSECT[i].TP_CONT, value: callTpSECT[i].SUCC_CNT, color: ComLib.getComCodeCdVal(\"CMN\", callTpSECT[i].TP, \"CALL_TP\")})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet obj       = {};\r\n\t\t\tlet fillTLObj = {};\r\n\t\t\tlet svrJobArr    = [];\r\n\t\t\tlet svr          = [];\r\n\t\t\tlet svrChartView = []\r\n\t\t\tlet strJobData   = [];\r\n\t\t\tlet fillArr      = [];\r\n\t\t\tlet number       = \"\";\r\n\t\t\t\r\n\t\t\tfor(let intA = 0; intA < 24; intA ++){\r\n\t\t\t\tif(intA < 10)\r\n\t\t\t\t\tnumber += \"0\" + intA + \"=\" + 0 + \",\";\r\n\t\t\t\telse if(intA < 23)\r\n\t\t\t\t\tnumber += intA + \"=\" + 0 + \",\";\r\n\t\t\t\telse\r\n\t\t\t\t\tnumber += intA + \"=\" + 0;\r\n\t\t\t}\r\n\r\n\t\t\tfillTLObj.TIMELINE = number;\r\n\t\t\tlet maxData = 0;\r\n\t\t\tfor(let intA=0; intA<res.data.dsSvrAllJobDailyInfo.length; intA++ ){\r\n\t\t\t\tsvr[intA] = res.data.dsSvrAllJobDailyInfo[intA].SVR_HST;\r\n\r\n\t\t\t\tsvrChartView.push({\"key\" : svr[intA], \"color\" : svrDivColor[intA], \"name\": svr[intA]} );\r\n\r\n\t\t\t\tstrJobData[intA] = res.data.dsSvrAllJobDailyInfo[intA].TIMELINE;\r\n\r\n\t\t\t\tfillArr = fillTLObj.TIMELINE.split(',');\r\n\r\n\t\t\t\tlet arr = strJobData[intA].split(',');\r\n\t\t\t\t\r\n\t\t\t\tfor(let intB=0; intB < fillArr.length; intB++){\r\n\t\t\t\t\tfor(let intC=0; intC < arr.length; intC++){\r\n\t\t\t\t\t\tif (fillArr[intB].substring(0, 2) === arr[intC].substring(0, 2)) {\r\n\t\t\t\t\t\t\tfillArr[intB] = arr[intC];\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tobj.name = fillArr[intB].substring(0,2);\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tsvr[intA-1] = svr[intA-1] === undefined ? svr[intA] : svr[intA-1];\r\n\r\n\t\t\t\t\tif(obj.name === fillArr[intB].substring(0,fillArr[intB].indexOf(\"=\")) && (svr[intA-1] !== svr[intA])){\t\r\n\t\t\t\t\t//  같은 시간 작업 Index를 찾는다. (prev <--> curr)\r\n\t\t\t\t\t\tlet index = svrJobArr.findIndex(x => x.name === obj.name);\t\t\r\n\r\n\t\t\t\t\t\tsvrJobArr[index][svr[intA]] = fillArr[intB].substring(3,fillArr[intB].length);\t\r\n\r\n\t\t\t\t\t} else {\t\t\r\n\t\t\t\t\t\tsvrJobArr.push(\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\"name\" : obj.name,\r\n\t\t\t\t\t\t\t\t[svr[intA]] :fillArr[intB].substring(3,fillArr[intB].length)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t\tif (maxData < Number(fillArr[intB].substring(3,fillArr[intB].length))) {\r\n\t\t\t\t\t\t\tmaxData = Number(fillArr[intB].substring(3,fillArr[intB].length));\r\n\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({...this.state, jobTpDiagramData: jobTpDiagramData\r\n\t\t\t\t, callTpDiagramData:callTpDiagramData\r\n\t\t\t\t, maxData   : maxData\r\n\t\t\t\t, allData   : allSECT\r\n\t\t\t\t, jobTpData : jobTpSECT\r\n\t\t\t\t, CallTpData: callTpSECT\r\n\t\t\t\t, options : {...this.state.options,\tdataKey : svrChartView }});\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSrvDailyJobInfoforGraph\", svrJobArr);\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase 'COM010000_R03' :\t\t\t\r\n\t\t\tlet strResData= [];\r\n\t\t\tlet svrResArr = [];\r\n\t\t\tlet svrBarChartView = [];\r\n\t\t\t\t\t\t\t\r\n\r\n\t\t\tlet svrChartView2 = [{\"key\" : \"CPU\", \"color\" : svrDivColor[0], \"name\" : \"CPU\"}\r\n\t\t                        ,{\"key\" : \"MEM\", \"color\" : svrDivColor[1], \"name\" : \"MEM\"}\r\n\t\t\t\t\t\t\t    ,{\"key\" : \"SWAP\", \"color\" : svrDivColor[2], \"name\" : \"SWAP\"}\r\n\t\t\t\t\t\t\t\t,{\"key\" : \"IO\", \"color\" : svrDivColor[3], \"name\" : \"IO\"}];\r\n\t\t\tlet org = res.data.dsSrvDailyResInfoforGraph;\r\n\t\t\tlet reversed = [];\r\n\t\t\tlet maxData2 = 0;\r\n\t\t\tfor (var intA = org.length - 1; intA > -1; intA--) {\r\n\t\t\t\treversed.push(org[intA]);\r\n\t\t\t\tif (maxData2 < org[intA].CPU) {\r\n\t\t\t\t\tmaxData2 = org[intA].CPU;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (maxData2 < org[intA].MEM) {\r\n\t\t\t\t\tmaxData2 = org[intA].MEM;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (maxData2 < org[intA].SWAP) {\r\n\t\t\t\t\tmaxData2 = org[intA].SWAP;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (maxData2 < org[intA].IO) {\r\n\t\t\t\t\tmaxData2 = org[intA].IO;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSrvDailyResInfoforGraph\", reversed);\r\n\t\t\t\r\n\t\t\tif(res.data.dsSvrResourceInfoDaily.length > 0) {\t\r\n\t\t\t\tstrResData = JSON.parse(res.data.dsSvrResourceInfoDaily[0].DISK);\r\n\t\t\t\tfor (var intA = 0; intA < strResData.length; intA++) {\r\n\t\t\t\t\tlet key = strResData[intA].PATH;\r\n\t\t\t\t\tlet value = strResData[intA].USAGE;\t\r\n\t\t\t\t\tsvrResArr.push({ [key] : value});\r\n\t\t\t\t\tsvrBarChartView.push({\"key\" : strResData[intA].PATH });\r\n\t\t\t\t\tsvrBarChartView[intA].color = svrDivColor[intA];\r\n\t\t\t\t}\r\n\t\t\t\tthis.setState({...this.state, dailyOptions : {...this.state.dailyOptions, dataKey : svrBarChartView }\r\n\t\t\t\t\t                        , dsResStatsticDaily : res.data.dsSvrResourceInfoDaily[0]\r\n\t\t\t\t\t\t\t\t\t\t    , dsSvrResourceAvgMax : res.data.dsSvrResourceAvgMax\r\n\t\t\t\t\t\t\t\t\t\t\t, options2 : {...this.state.options2,\tdataKey : svrChartView2 }\r\n\t\t\t\t\t\t\t\t\t\t    , maxData2 : maxData2 + 5});\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSrvDailyResInfo\", svrResArr);\t\t\t\t\t\t\t\t\r\n\t\t\t}else{\r\n\t\t\t\tthis.setState({...this.state, dailyOptions : {...this.state.dailyOptions, dataKey : [{key: '/', color: '#ffcf02'}] }\r\n\t\t\t                                , dsResStatsticDaily : {CPU: 0, MEM: 0, IO: 0, DISK: 0}\r\n\t\t\t\t\t\t\t\t\t\t    , dsSvrResourceAvgMax: [{AVG_CPU: 0, MAX_CPU: 0, AVG_MEM: 0, MAX_MEM: 0}]\r\n\t\t\t\t\t\t\t\t\t\t\t, options2 : {...this.state.options2,\tdataKey : svrChartView2 }\r\n\t\t\t\t\t\t\t\t\t\t\t, maxData2 :  maxData2 + 5});\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSrvDailyResInfo\", []);\t\t\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tdefault :  break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tonFailClick : (e) => {\r\n\t\t\tlet params  = {type: this.state.selectboxProps.jobSvrInfo.value};\r\n\t\t\tlet option1 = { width: '600px', height: '550px', modaless: false, params}\r\n\r\n\t\t\tComLib.openPop('COM010001', 'STT 처리 오류', option1);\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : () =>  {   \r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'jobSvrInfo' :\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, selectboxProps: {...this.state.selectboxProps, jobSvrInfo: {...this.state.selectboxProps.jobSvrInfo, value : e.target.value}}}, \r\n\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\tif (this.validation('COM010000_R02')) {\r\n\t\t\t\t\t\t\t\t\tthis.transaction(\"COM010000_R02\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\tcase 'resSvrInfo' :\t\t\t\r\n\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, selectboxProps: {...this.state.selectboxProps, resSvrInfo: {...this.state.selectboxProps.resSvrInfo, value : e.target.value}}}, \r\n\t\t\t\t\t\t\t() => {\r\n\t\t\t\t\t\t\t\tif (this.validation('COM010000_R03')) {\r\n\t\t\t\t\t\t\t\t\tthis.transaction(\"COM010000_R03\");\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tsetSelected = (e, type) => {\r\n\t\tlet {jobTpDiagramData, callTpDiagramData} = this.state;\r\n\t\tif (type === \"jobTp\") {\r\n\t\t\tif (e !== undefined) {\r\n\t\t\t\tthis.setState({...this.state, jobTphoverd : jobTpDiagramData[e].title, jobTpselected: e});\r\n\t\r\n\t\t\t} \r\n\t\t} else {\r\n\t\t\tif (e !== undefined) {\r\n\t\t\t\tthis.setState({...this.state, callTphoverd : callTpDiagramData[e].title, callTpselected: e});\r\n\t\r\n\t\t\t} \r\n\t\t}\r\n\t\t\r\n\t}\r\n\tsetHovered = (e, type) => {\r\n\t\tlet {jobTpDiagramData, callTpDiagramData} = this.state;\r\n\t\tif (type === \"jobTp\") {\r\n\t\t\tif (e !== undefined) {\r\n\t\t\t\tthis.setState({...this.state, jobTphoverd : jobTpDiagramData[e].title, jobTpselected: e});\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({...this.state, jobTphoverd : undefined, jobTpselected: e});\r\n\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (e !== undefined) {\r\n\t\t\t\tthis.setState({...this.state, callTphoverd : callTpDiagramData[e].title, callTpselected: e});\r\n\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({...this.state, callTphoverd : undefined, callTpselected: e});\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\tlet {jobTpDiagramData, callTpDiagramData, allData, jobTpData, CallTpData} = this.state;\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel width={'55%'}>\t\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\t\t\r\n\t\t\t\t\t\t\t\t\t<div>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.jobSvrInfo.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selectboxProps.jobSvrInfo.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.jobSvrInfo.dataset}\r\n\t\t\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.jobSvrInfo.width}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.jobSvrInfo.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.jobSvrInfo.selected}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"scrm-dash-h3\">처리건수 : <span>{allData !== null ? allData[0].TOT_CNT + \" 건\": \"0 건\"}</span></h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t{allData !== null ?\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{color: 'darkGreen'}}>성공건수 {allData[0].SUCC_CNT}건</h5>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{color: 'grey',cursor:'pointer'}} onClick={this.event.onFailClick}>실패건수 {allData[0].FAIL_CNT}건</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t\t{allData !== null ?\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"srcm-dash-data3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>녹취시간 {allData[0].REC_TM_HMS} </p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<p>파일크기 {allData[0].FILE_SIZE_GB} GB </p>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"scrm-dash-h3\">작업구분별 성공건수</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\t\r\n\t\t\t\t\t\t\t\t\t\t\t{CallTpData !== null && allData[0].SUCC_CNT > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PieChart\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ height: '200px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={jobTpDiagramData}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tradius={55}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBoxSize={[120,120]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcenter={[70, 60]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth={50}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlengthAngle={360}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel={({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPosition={80}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentsStyle={{ transition: 'stroke .3s', cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentsShift={(index) => (index === this.state.jobTpselected ? 4 : 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelStyle={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topacity: 0.75,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpointerEvents: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseOver={(_, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setHovered(index, \"jobTp\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseOut={() => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setHovered(undefined, \"jobTp\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tanimate\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\" style={{marginLeft: \"55px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{color:\"gray\", marginLeft: \"55px\"}}>STT 처리 성공 없음</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t{jobTpData !== null && allData[0].SUCC_CNT > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{jobTpData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet title = item.TP_CONT + \": \" + item.SUCC_CNT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet color = ComLib.getComCodeCdVal(\"CMN\", item.TP, \"JOB_TP\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <h5 key={index} style={{color:color}}>{title} </h5>\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.jobTphoverd !== undefined ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"srcm-dash-data3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{jobTpData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet title = item.TP_CONT + \": \" + item.SUCC_CNT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet detail = \"전체: \" + item.TOT_CNT + \", \" + \"실패: \" + item.FAIL_CNT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet color = ComLib.getComCodeCdVal(\"CMN\", item.TP, \"JOB_TP\");\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.jobTphoverd === ComLib.getComCodeName(\"CMN\", item.TP, \"JOB_TP\")) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<div key={index+\"_div\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 key={index+\"_title\"} style={{color:color}}>{title} </h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 key={index+\"_detail\"} style={{color:color}}>{detail} </h6>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"scrm-dash-h3\">콜구분별 성공건수</h3>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<FlexPanel>\t\r\n\t\t\t\t\t\t\t\t\t\t\t{CallTpData !== null && allData[0].SUCC_CNT > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<PieChart\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle       = {{ height: '200px' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata        = {callTpDiagramData}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tradius      = {55}\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcenter      = {[70, 60]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlineWidth   = {50}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlengthAngle = {360}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tviewBoxSize = {[120,120]}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabel         = {({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelPosition = {80}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentsStyle = {{ transition: 'stroke .3s', cursor: 'pointer' }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsegmentsShift = {(index) => (index === this.state.callTpselected ? 4 : 0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelStyle    = {{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfontSize: \"10px\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfill: '#fff',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topacity: 0.75,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpointerEvents: 'none',\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseOver = {(_, index) => {this.setHovered(index    , \"callTp\");}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonMouseOut  = {()         => {this.setHovered(undefined, \"callTp\");}}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/>\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\" style={{marginLeft: \"55px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 style={{color:\"gray\", marginLeft: \"55px\"}}>STT 처리 성공 없음</h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t{CallTpData !== null && allData[0].SUCC_CNT > 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{CallTpData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet title = item.TP_CONT + \" : \" + item.SUCC_CNT + \" 건\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet color = ComLib.getComCodeCdVal(\"CMN\", item.TP, \"CALL_TP\")\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn <h5 key={index} style={{color:color}}>{title} </h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.state.callTphoverd !== undefined ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"srcm-dash-data3\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{CallTpData.map((item, index) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet title  = item.TP_CONT + \": \" + item.SUCC_CNT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet detail = \"전체: \" + item.TOT_CNT + \", \" + \"실패: \" + item.FAIL_CNT;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet color  = ComLib.getComCodeCdVal(\"CMN\", item.TP, \"CALL_TP\");\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (this.state.callTphoverd === ComLib.getComCodeName(\"CMN\", item.TP, \"CALL_TP\")) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (<div key={index+\"_div\"}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h5 key={index+\"_title\"}  style={{color:color}}>{title}  </h5>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h6 key={index+\"_detail\"} style={{color:color}}>{detail} </h6>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t} \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnull\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t: \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"scrm-dash-data1\"/>\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<Label value = {\"서버별 금일 작업 내역\"} />\r\n\t\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyJobInfoforGraph.getRecords()}\r\n\t\t\t\t\t\t\t\t\tmaxData = {this.state.maxData}\r\n\t\t\t\t\t\t\t\t\tunit    = {\"건\"}\r\n\t\t\t\t\t\t\t\t\toptions = {this.state.options}\t\r\n\t\t\t\t\t\t\t\t\taspect={4.0/1.8}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\t\t\r\n\t\t\t\t\t\t<ComponentPanel width={'40%'}>\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.resSvrInfo.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.selectboxProps.resSvrInfo.value}\r\n\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.resSvrInfo.dataset}\r\n\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.resSvrInfo.width}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.resSvrInfo.disabled}\r\n\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.resSvrInfo.selected}\r\n\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div className=\"scrm-dash-data11\">\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<div style={{width: \"100%\", height: \"200px\"}}> \r\n\t\t\t\t\t\t\t\t\t\t<h4>DISK 사용률</h4>\r\n\t\t\t\t\t\t\t\t\t\t<ScrmBarChart\r\n\t\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyResInfo.records}\t\r\n\t\t\t\t\t\t\t\t\t\t\tlayout = {'vertical'}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tdailyOptions = {this.state.dailyOptions}\r\n\t\t\t\t\t\t\t\t\t\t/>\t\t\t\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\t\t\t\t\tid=\"tblUsrDetInfo\" \r\n\t\t\t\t\t\t\t\t\t\t\tcolGrp = {[{width: '25%'}, {width: '25%'}, {width: '25%'}, {width: '25%'}]}\r\n\t\t\t\t\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t\t\t\t\t[   {type : 'D', value : <div style={{marginLeft: \"5px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>CPU 사용률</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata={this.state.dsResStatsticDaily.CPU !== undefined ? this.state.dsResStatsticDaily.CPU : 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions={{type: 'circle', status: 'active'}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>최고치 : {this.state.dsSvrResourceAvgMax[0].MAX_CPU !== undefined ? this.state.dsSvrResourceAvgMax[0].MAX_CPU : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4>평균치 : {this.state.dsSvrResourceAvgMax[0].AVG_CPU !== undefined ? this.state.dsSvrResourceAvgMax[0].AVG_CPU : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginLeft: \"5px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>Memory 사용률</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t{/* <ProgressBar data={this.state.dsResStatsticDaily.MEM}\t\toptions={{type: 'circle', status: 'active'}}/> */}\r\n\t\t\t\t\t\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata={this.state.dsResStatsticDaily.MEM !== undefined ? this.state.dsResStatsticDaily.MEM : 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions={{type: 'circle', status: 'active'}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>최고치 : {this.state.dsSvrResourceAvgMax[0].MAX_MEM !== undefined ? this.state.dsSvrResourceAvgMax[0].MAX_MEM : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>평균치 : {this.state.dsSvrResourceAvgMax[0].AVG_MEM !== undefined ? this.state.dsSvrResourceAvgMax[0].AVG_MEM : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginLeft: \"5px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>SWAP 사용률</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata={this.state.dsResStatsticDaily.SWAP !== undefined ? this.state.dsResStatsticDaily.SWAP : 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions={{type: 'circle', status: 'active'}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>최고치 : {this.state.dsSvrResourceAvgMax[0].MAX_SWAP !== undefined ? this.state.dsSvrResourceAvgMax[0].MAX_SWAP : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>평균치 : {this.state.dsSvrResourceAvgMax[0].AVG_SWAP !== undefined ? this.state.dsSvrResourceAvgMax[0].AVG_SWAP : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginLeft: \"5px\"}}>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>IO 사용률</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<ProgressBar\r\n\t\t\t\t\t\t\t\t\t\t\t\tdata={this.state.dsResStatsticDaily.IO !== undefined ? this.state.dsResStatsticDaily.IO : 0}\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions={{type: 'circle', status: 'active'}}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>최고치 : {this.state.dsSvrResourceAvgMax[0].MAX_IO !== undefined ? this.state.dsSvrResourceAvgMax[0].MAX_IO : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t<h4>평균치 : {this.state.dsSvrResourceAvgMax[0].AVG_IO !== undefined ? this.state.dsSvrResourceAvgMax[0].AVG_IO : 0}%</h4>\r\n\t\t\t\t\t\t\t\t\t\t</div>},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\t\r\n\t\t\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t\t\t<Label value = {\"리소스 내역\"} />\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyResInfoforGraph.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\t\t\tmaxData = {this.state.maxData2}\r\n\t\t\t\t\t\t\t\t\t\t\t\tunit    ={\"%\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\toptions = {this.state.options2}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\taspect={4.0/1.2}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</ComponentPanel>\t\t\t\t\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</SubFullPanel>\t\t\t\r\n\r\n\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","// 상담원현황\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, SearchPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {RangeInputCalendar, Selectbox, ScrmLineBarChart} from 'components';\r\nimport {Grid, Label} from 'components';\r\nimport {DataLib, ComLib, DateLib, StrLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.gridResult = null\r\n\t\tthis.gridResultGridApi = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\trgcSearch : {\r\n\t\t\t\t\tlabel : '검색일시',\r\n\t\t\t\t\tid : 'searchDateCalender',\r\n\t\t\t\t\tstrtId : 'searchDateCalenderStart',\r\n\t\t\t\t\tendId : 'searchDateCalenderEnd',\r\n\t\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -1),\r\n\t\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tid : 'btnSearch',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\toptions : {\r\n\t\t\t\tcpu: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"CPU_AVG\", \"color\" : \"red\", \"name\": \"CPU 평균\"}\r\n\t\t\t\t\t           ,{\"key\" : \"CPU_MAX\", \"color\" : \"blue\", \"name\": \"CPU 최대\"}]\r\n\t\t\t\t},\r\n\t\t\t\tmem: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"MEM_AVG\", \"color\" : \"red\", \"name\": \"메모리 평균\"}\r\n\t\t\t\t\t           ,{\"key\" : \"MEM_MAX\", \"color\" : \"blue\", \"name\": \"메모리 최대\"}]\r\n\t\t\t\t},\r\n\t\t\t\tswap: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"SWAP_AVG\", \"color\" : \"red\", \"name\": \"SWAP 평균\"}\r\n\t\t\t\t               ,{\"key\" : \"SWAP_MAX\", \"color\" : \"blue\", \"name\": \"SWAP 최대\"}]\r\n\t\t\t\t},\r\n\t\t\t\tio: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"IO_AVG\", \"color\" : \"red\", \"name\": \"I/O 평균\"}\r\n\t\t\t\t\t           ,{\"key\" : \"IO_MAX\", \"color\" : \"blue\", \"name\": \"I/O 최대\"}]\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tresSvrInfo : {\r\n\t\t\t\t\tid       : 'resSvrInfo',\r\n\t\t\t\t\tdataset  : [{}],\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tvalue    : \"\",\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\t\t\r\n\t\t\tdsSrvDailyResInfoforGraph: DataLib.datalist.getInstance([]),\t\t\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\t\t\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [2. OnLoad Event Zone]\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   componentDidMount () {\r\n\t\tthis.transaction(\"STA010000_R00\")\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STA010000_R00':\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'STA010000_R01':\r\n\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.rgcSearch.startDate) || StrLib.isNull(this.state.rangeCalendarProps.rgcSearch.endDate) )  {\r\n\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif(this.state.rangeCalendarProps.rgcSearch.startDate > this.state.rangeCalendarProps.rgcSearch.endDate ) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색 시작일자가 종료일자보다 클 수 없습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\r\n\t\t\tbreak;\t\r\n\t\t\t\t\t\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\t// let transId = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\r\n\t\t// let searchVlaBrdCd, searchVlaBrdVer; \r\n\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\t\r\n\t\t\tcase 'STA010000_R00':\t\t\t\t\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"COM.R_getSrvList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrchSvrInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSrchSvrInfo', [{}]);\r\n\t\t\t\ttransManager.agent();\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STA010000_R01':\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\t\t\t\t\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"RES.R_SearchResTimeline\",\r\n\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\tdatasetrecv: \"dsSrvDailyResInfoforGraph\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearchParam', [{S_DATE: this.state.rangeCalendarProps.rgcSearch.startDate\r\n\t\t\t\t\t                                     , E_DATE: this.state.rangeCalendarProps.rgcSearch.endDate \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t     , SVR_HST : this.state.selectboxProps.resSvrInfo.value }]);\r\n\t\t\t\ttransManager.agent();\t\r\n\t\t\t\tbreak;\t\t\t\t\t\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t\r\n\t\tvar state = this.state;\r\n\t\tswitch (res.id) {\t\t\t\r\n\t\tcase 'STA010000_R00':\t\r\n\t\t\tlet resSvrInfo = [];\r\n\r\n\t\t\tfor(let intA = 0; intA < res.data.dsSvrInfo.length; intA++){\t\r\n\t\t\t\tif (res.data.dsSvrInfo[intA].RESC_USE_FLAG === 'Y') {\r\n\t\t\t\t\tresSvrInfo.push({CODE_NM: res.data.dsSvrInfo[intA]['NAME'], CODE: res.data.dsSvrInfo[intA]['VALUE']})\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t}\t\r\n\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, resSvrInfo: {...this.state.selectboxProps.resSvrInfo, dataset : ComLib.convComboList(resSvrInfo), value: resSvrInfo[0].CODE}}});\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\tif (this.validation('STA010000_R01')) {\r\n\t\t\t\tthis.transaction(\"STA010000_R01\");\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'STA010000_R01':\t\t\r\n\t\t\tlet maxData = [1,1,1,1];\r\n\t\t\tlet org = res.data.dsSrvDailyResInfoforGraph;\r\n\t\t\tfor (var intA = org.length - 1; intA > -1; intA--) {\r\n\t\t\t\tif (maxData[0] < org[intA].CPU_MAX) {\r\n\t\t\t\t\tmaxData[0] = org[intA].CPU_MAX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (maxData[1] < org[intA].MEM_MAX) {\r\n\t\t\t\t\tmaxData[1] = org[intA].MEM_MAX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (maxData[2] < org[intA].SWAP_MAX) {\r\n\t\t\t\t\tmaxData[2] = org[intA].SWAP_MAX;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (maxData[3] < org[intA].IO_MAX) {\r\n\t\t\t\t\tmaxData[3] = org[intA].IO_MAX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tfor (let i = 0; i < maxData.length; i ++) {\t\t\t\t\r\n\t\t\t\tlet maxAdd = \"1\";\r\n\t\t\t\tfor (let j = 0; j < String(maxData[i]).length -1; j ++) {\r\n\t\t\t\t\tmaxAdd += \"0\"\r\n\t\t\t\t} \r\n\t\t\t\tmaxData[i] = (maxData[i]  + Number(maxAdd))  - maxData[i]%Number(maxAdd);\r\n\t\t\t} \r\n\r\n\t\t\tif(org.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSrvDailyResInfoforGraph\", org);\r\n\t\t\t\tthis.setState({...this.state, maxDataCpu : maxData[0]\r\n\t\t\t\t\t\t\t\t\t\t    , maxDataMem : maxData[1]\r\n\t\t\t\t\t\t\t\t\t\t    , maxDataSwap: maxData[2]\r\n\t\t\t\t\t\t\t\t\t\t    , maxDataIo  : maxData[3]});\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSrvDailyResInfoforGraph\", \"\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnSearch':\r\n\t\t\t\t\tif(this.validation(\"STA010000_R01\")) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.transaction(\"STA010000_R01\")\r\n\t\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchDateCalender' : break;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchDateCalender' : break;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchDateCalender' :\r\n\t\t\t\t\tlet endDate = e.endDate;\r\n\t\t\t\t\tif (endDate > DateLib.getAddDate(DateLib.getToday(), - 1)) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['통계 자료는 전일 까지 조회 가능 합니다.']);\r\n\t\t\t\t\t\tendDate = DateLib.getAddDate(DateLib.getToday(), - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, rgcSearch:{...this.state.rangeCalendarProps.rgcSearch, startDate : e.startDate, endDate : endDate}}});\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'resSvrInfo' :\t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, selectboxProps: {...this.state.selectboxProps, resSvrInfo: {...this.state.selectboxProps.resSvrInfo, value : e.target.value}}});\r\n\t\t\t\t\tbreak;\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\t\t\t\t\t\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.rangeCalendarProps.rgcSearch.label}/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.rgcSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.rgcSearch.strtId}\r\n\t\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.rgcSearch.endId}\t\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.rgcSearch.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.rgcSearch.endDate}\r\n\t\t\t\t\t\t\t\t\t\tdisabled  = {this.state.rangeCalendarProps.rgcSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.resSvrInfo.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selectboxProps.resSvrInfo.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.resSvrInfo.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.resSvrInfo.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.resSvrInfo.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.resSvrInfo.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tid = {this.state.buttonProps.id}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.buttonProps.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.disabled}\r\n\t\t\t\t\t\t\t\thidden = {this.state.buttonProps.hidden}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t// mr = {10}\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcolor = 'blue' \r\n\t\t\t\t\t\t\t\ticon = {'srch'}\r\n\t\t\t\t\t\t\t\tinnerImage={true}\r\n\t\t\t\t\t\t\t\tfiiled = \"o\"\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\t\r\n\t\t\t\t\t\t</RelativeGroup>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Label value = {\"CPU\"} />\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyResInfoforGraph.getRecords()}\r\n\t\t\t\t\t\t\t\tmaxData = {this.state.maxDataCpu}\r\n\t\t\t\t\t\t\t\tunit    ={\"%\"}\r\n\t\t\t\t\t\t\t\toptions = {this.state.options.cpu}\t\t\r\n\t\t\t\t\t\t\t\taspect={4.0/0.3}\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Label value = {\"Memory\"} />\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyResInfoforGraph.getRecords()}\r\n\t\t\t\t\t\t\t\tmaxData = {this.state.maxDataMem}\r\n\t\t\t\t\t\t\t\tunit    ={\"%\"}\r\n\t\t\t\t\t\t\t\toptions = {this.state.options.mem}\t\r\n\t\t\t\t\t\t\t\taspect={4.0/0.3}\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Label value = {\"SWAP\"} />\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyResInfoforGraph.getRecords()}\r\n\t\t\t\t\t\t\t\tmaxData = {this.state.maxDataSwap}\r\n\t\t\t\t\t\t\t\tunit    ={\"%\"}\r\n\t\t\t\t\t\t\t\toptions = {this.state.options.swap}\t\r\n\t\t\t\t\t\t\t\taspect={4.0/0.3}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Label value = {\"I/O\"} />\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\tdata = {this.state.dsSrvDailyResInfoforGraph.getRecords()}\r\n\t\t\t\t\t\t\t\tmaxData = {this.state.maxDataIo}\r\n\t\t\t\t\t\t\t\tunit    ={\"%\"}\r\n\t\t\t\t\t\t\t\toptions = {this.state.options.io}\t\r\n\t\t\t\t\t\t\t\taspect={4.0/0.3}\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n \r\nexport default View;\r\n\r\n\r\n","// 상담원현황\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, SearchPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {RangeInputCalendar, Selectbox, ScrmLineBarChart} from 'components';\r\nimport {Grid, Label} from 'components';\r\nimport {DataLib, ComLib, DateLib, StrLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.gridResult = null\r\n\t\tthis.gridResultGridApi = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\trgcSearch : {\r\n\t\t\t\t\tlabel : '검색일시',\r\n\t\t\t\t\tid : 'searchDateCalender',\r\n\t\t\t\t\tstrtId : 'searchDateCalenderStart',\r\n\t\t\t\t\tendId : 'searchDateCalenderEnd',\r\n\t\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -1),\r\n\t\t\t\t\tendDate : DateLib.getAddDate(DateLib.getToday(), - 1),\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tid : 'btnSearch',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tuseMaxSucc : 0,\r\n\t\t\tuseMaxFail : 0,\r\n\t\t\tmaxData : [0,0,0,0,0,0],\r\n\t\t\toptions : {\r\n\t\t\t\tuseSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_SUCC_CNT\", \"name\" : \"전체 성공\", \"color\" : \"red\"}]\r\n\t\t\t\t},\r\n\t\t\t\tuseFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_FAIL_CNT\", \"name\" : \"전체 실패\", \"color\" : \"blue\"}]\r\n\t\t\t\t},\r\n\t\t\t\tjobSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tjobFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tcallSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tcallFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tallSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_SUCC_CNT\", \"name\" : \"전체 성공\", \"color\" : \"red\"}]\r\n\t\t\t\t},\r\n\t\t\t\tallFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_FAIL_CNT\", \"name\" : \"전체 실패\", \"color\" : \"blue\"}]\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tresSvrInfo : {\r\n\t\t\t\t\tid       : 'resSvrInfo',\r\n\t\t\t\t\tdataset  : [{}],\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tvalue    : \"\",\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tserTp : {\r\n\t\t\t\t\tid       : 'serTp',\r\n\t\t\t\t\tdataset  :  ComLib.convComboList([{CODE_NM: \"전체\", CODE: \"ALL\"},{CODE_NM: \"작업별\", CODE: \"JOB_TP\"},{CODE_NM: \"콜타입별\", CODE: \"CALL_TP\"}]),\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tvalue    : \"ALL\",\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\t\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdErrList : {\r\n\t\t\t\t\tid : 'grdErrList',\r\n\t\t\t\t\tareaName : 'STT 오류 내역',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t\t\t{headerName: '발생건수',\tfield: 'CNT',\tcolId: 'CNT',\teditable: false, width: 50, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '오류코드',\tfield: 'ERR_CD',\tcolId: 'ERR_CD',\teditable: false, width: 70, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '오류내용',\tfield: 'ERR_MSG',\tcolId: 'ERR_MSG',\teditable: false, width: 150},\t\t\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '300px'\r\n\t\t\t\t},\t\t\t\r\n\t\t\t\tgrdTotalList : {\r\n\t\t\t\t\tid : 'grdTotalList',\r\n\t\t\t\t\tareaName : 'STT 작업 내역',\r\n\t\t\t\t\theader: [\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '일자',\t    field: 'REG_DT',\tcolId: 'REG_DT',\teditable: false, width: 110, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '전체건수',\tfield: 'TOT_CNT',\tcolId: 'TOT_CNT',\teditable: false, width: 110, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '성공건수',\tfield: 'SUCC_CNT',\tcolId: 'SUCC_CNT',\teditable: false, width: 110, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '실패건수',\tfield: 'FAIL_CNT',\tcolId: 'FAIL_CNT',\teditable: false, width: 110, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '변환율'  ,\tfield: 'SUCC_PER',\tcolId: 'SUCC_PER',\teditable: false, width: 110, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '실패율'  ,\tfield: 'FAIL_PER',\tcolId: 'FAIL_PER',\teditable: false, width: 110, textAlign: 'center'},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '310px'\r\n\t\t\t\t},\r\n\t\t\t},\t\r\n\t\t\tdsJobInfo: DataLib.datalist.getInstance([]),\t\t\r\n\t\t\tdsTotalJobList: DataLib.datalist.getInstance([]),\t\r\n\t\t\tdsErrList: DataLib.datalist.getInstance([]),\t\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\t\t\r\n\t}\r\n\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   // [2. OnLoad Event Zone]\r\n   /*------------------------------------------------------------------------------------------------*/\r\n   componentDidMount () {\t   \r\n\t\tlet JobTpList  = ComLib.getCommCodeList('CMN', 'JOB_TP');\r\n\t\tlet callTpList = ComLib.getCommCodeList('CMN', 'CALL_TP');\r\n\r\n\t\tlet jobDataKeySucc  = [];\r\n\t\tlet jobDataKeyFail  = [];\r\n\t\tlet callDataKeySucc = [];\r\n\t\tlet callDataKeyFail = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < JobTpList.length; i ++) {\r\n\t\t\tjobDataKeySucc.push({\"key\" : JobTpList[i].CODE_NM + \"_SUCC_CNT\", \"name\" : JobTpList[i].CODE_NM + \" 성공\", \"color\": JobTpList[i].CD_VAL});\r\n\t\t\tjobDataKeyFail.push({\"key\" : JobTpList[i].CODE_NM + \"_FAIL_CNT\", \"name\" : JobTpList[i].CODE_NM + \" 실패\", \"color\": JobTpList[i].CD_VAL});\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < callTpList.length; i ++) {\r\n\t\t\tcallDataKeySucc.push({\"key\" : callTpList[i].CODE_NM + \"_SUCC_CNT\", \"name\" : callTpList[i].CODE_NM + \" 성공\", \"color\": callTpList[i].CD_VAL});\r\n\t\t\tcallDataKeyFail.push({\"key\" : callTpList[i].CODE_NM + \"_FAIL_CNT\", \"name\" : callTpList[i].CODE_NM + \" 실패\", \"color\": callTpList[i].CD_VAL});\r\n\t\t}\r\n\r\n\t\tthis.setState({...this.state, options : {...this.state.options\r\n\t\t\t                                    \t, jobSucc : {...this.state.options.jobSucc , dataKey: jobDataKeySucc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, jobFail : {...this.state.options.jobFail , dataKey: jobDataKeyFail}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, callSucc: {...this.state.options.callSucc, dataKey: callDataKeySucc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, callFail: {...this.state.options.callFail, dataKey: callDataKeyFail}}} ,\t\t\t\r\n\t\t\t() => {\r\n\t\t\t\tthis.transaction(\"STA030000_R00\");\r\n\r\n\t\t\t})\t\t\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STA030000_R00':\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'STA030000_R01':\r\n\t\t\tif (StrLib.isNull(this.state.rangeCalendarProps.rgcSearch.startDate) || StrLib.isNull(this.state.rangeCalendarProps.rgcSearch.endDate) )  {\r\n\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\treturn false;\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (this.state.rangeCalendarProps.rgcSearch.startDate > this.state.rangeCalendarProps.rgcSearch.endDate ) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색 시작일자가 종료일자보다 클 수 없습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tbreak;\t\r\n\r\n\t\tcase 'STA010000_R02':\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\t\t\t\t\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\t// let transId = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\r\n\t\t// let searchVlaBrdCd, searchVlaBrdVer; \r\n\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\t\t\r\n\t\t\tcase 'STA030000_R00':\t\t\t\t\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"COM.R_getSrvList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrchSvrInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSvrInfo\"\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSrchSvrInfo', [{}]);\r\n\t\t\t\ttransManager.agent();\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STA030000_R01':\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\t\t\t\t\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT_STATIS.R_getSearchJobTimeline\",\r\n\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\tdatasetrecv: \"dsJobInfo\",\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT_STATIS.R_getSearchErrTimeline\",\r\n\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\tdatasetrecv: \"dsErrInfo\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearchParam', [{S_DATE: this.state.rangeCalendarProps.rgcSearch.startDate\r\n\t\t\t\t\t                                     , E_DATE: this.state.rangeCalendarProps.rgcSearch.endDate \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t     , SVR_HST : this.state.selectboxProps.resSvrInfo.value }]);\r\n\t\t\t\ttransManager.agent();\t\r\n\t\t\t\tbreak;\t\t\t\t\t\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t\r\n\t\tvar state = this.state;\r\n\t\tswitch (res.id) {\t\t\t\r\n\t\tcase 'STA030000_R00':\t\r\n\t\t\tlet resSvrInfo = [];\r\n\r\n\t\t\tfor(let intA = 0; intA < res.data.dsSvrInfo.length; intA++){\t\r\n\t\t\t\tif (res.data.dsSvrInfo[intA].RESC_USE_FLAG === 'Y' && res.data.dsSvrInfo[intA].TRN_FLAG === 'Y') {\r\n\t\t\t\t\tresSvrInfo.push({CODE_NM: res.data.dsSvrInfo[intA]['NAME'], CODE: res.data.dsSvrInfo[intA]['VALUE']})\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\t\r\n\t\t\t}\t\r\n\t\t\tthis.setState({...this.state, selectboxProps : {...this.state.selectboxProps, resSvrInfo: {...this.state.selectboxProps.resSvrInfo, dataset : ComLib.convComboList(resSvrInfo), value: resSvrInfo[0].CODE}}});\t\t\t\t\t\t\t\r\n\t\t\t\r\n\t\t\tif (this.validation('STA030000_R01')) {\r\n\t\t\t\tthis.transaction(\"STA030000_R01\");\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'STA030000_R01':\t\t\r\n\t\t\tlet dsJobInfo = res.data.dsJobInfo;\r\n\t\t\tlet dsErrInfo = res.data.dsErrInfo;\r\n\t\t\tlet allSECT    = dsJobInfo.filter((item) => item.SECT === 'ALL');\t\r\n\t\t\t\r\n\t\t\tComLib.setStateInitRecords(this, \"dsTotalJobList\", allSECT);\r\n\t\t\tComLib.setStateInitRecords(this, \"dsErrList\", dsErrInfo);\t\r\n\t\t\t\r\n\t\t\tlet merged  = [];\r\n\r\n\t\t\tfor (let i = 0; i < dsJobInfo.length; i ++) {\r\n\t\t\t\tlet isExist    = false;\r\n\t\t\t\tlet existIndex = -1;\r\n\r\n\t\t\t\tfor (let j = 0; j < merged.length; j ++) {\r\n\t\t\t\t\tif (merged[j].REG_DT === dsJobInfo[i].REG_DT) {\r\n\t\t\t\t\t\tisExist = true;\r\n\t\t\t\t\t\texistIndex = j;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!isExist) {\r\n\t\t\t\t\tmerged.push({REG_DT                               : dsJobInfo[i].REG_DT\r\n\t\t\t\t\t\t       , [dsJobInfo[i].TP_CONT + \"_SUCC_CNT\"] : dsJobInfo[i].SUCC_CNT\r\n\t\t\t\t\t\t\t   , [dsJobInfo[i].TP_CONT + \"_FAIL_CNT\"] : dsJobInfo[i].FAIL_CNT})\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmerged[existIndex][dsJobInfo[i].TP_CONT + \"_SUCC_CNT\"] = dsJobInfo[i].SUCC_CNT;\r\n\t\t\t\t\tmerged[existIndex][dsJobInfo[i].TP_CONT + \"_FAIL_CNT\"] = dsJobInfo[i].FAIL_CNT;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\r\n\t\t\tlet JobTpList  = ComLib.getCommCodeList('CMN', 'JOB_TP');\r\n\t\t\tlet callTpList = ComLib.getCommCodeList('CMN', 'CALL_TP');\r\n\r\n\t\t\tlet maxData = [0,0,0,0,0,0]\r\n\r\n\t\t\tfor (let i = 0; i < merged.length; i ++) {\r\n\t\t\t\tfor (let j = 0; j < JobTpList.length; j ++) {\r\n\t\t\t\t\tif (merged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"] === undefined) {\r\n\t\t\t\t\t\tmerged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"] = 0;\r\n\t\t\t\t\t\tmerged[i][JobTpList[j].CODE_NM + \"_FAIL_CNT\"] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (merged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"] > maxData[2]) {\r\n\t\t\t\t\t\tmaxData[2] = merged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (merged[i][JobTpList[j].CODE_NM + \"_FAIL_CNT\"] > maxData[3]) {\r\n\t\t\t\t\t\tmaxData[3] = merged[i][JobTpList[j].CODE_NM + \"_FAIL_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < callTpList.length; j ++) {\r\n\t\t\t\t\tif (merged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"] === undefined) {\r\n\t\t\t\t\t\tmerged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"] = 0;\r\n\t\t\t\t\t\tmerged[i][callTpList[j].CODE_NM + \"_FAIL_CNT\"] = 0;\r\n\t\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\t\tif (merged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"] > maxData[4]) {\r\n\t\t\t\t\t\tmaxData[4] = merged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (merged[i][callTpList[j].CODE_NM + \"_FAIL_CNT\"] > maxData[5]) {\r\n\t\t\t\t\t\tmaxData[5] = merged[i][callTpList[j].CODE_NM + \"_FAIL_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (merged[i][\"ALL_SUCC_CNT\"] > maxData[0]) {\r\n\t\t\t\t\tmaxData[0] = merged[i][\"ALL_SUCC_CNT\"];\r\n\t\t\t\t}\r\n\t\t\t\tif (merged[i][\"ALL_FAIL_CNT\"] > maxData[1]) {\r\n\t\t\t\t\tmaxData[1] = merged[i][\"ALL_FAIL_CNT\"];\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tfor (let i = 0; i < maxData.length; i ++) {\t\t\t\t\r\n\t\t\t\tlet maxAdd = \"1\";\r\n\t\t\t\tfor (let j = 0; j < String(maxData[i]).length -1; j ++) {\r\n\t\t\t\t\tmaxAdd += \"0\"\r\n\t\t\t\t} \r\n\t\t\t\tmaxData[i] = (maxData[i]  + Number(maxAdd))  - maxData[i]%Number(maxAdd);\r\n\t\t\t} \r\n\r\n\t\t\tlet serTp = this.state.selectboxProps.serTp.value;\r\n\t\t\tlet useMaxSucc = 0;\r\n\t\t\tlet useMaxFail = 0;\r\n\t\t\tlet useSucc = {};\r\n\t\t\tlet useFail = {};\r\n\r\n\t\t\tif (serTp === \"ALL\") {\r\n\t\t\t\tuseMaxSucc = maxData[0];\r\n\t\t\t\tuseMaxFail = maxData[1];\r\n\t\t\t\tuseSucc    = this.state.options.allSucc;\r\n\t\t\t\tuseFail    = this.state.options.allFail;\r\n\r\n\t\t\t} else if (serTp === \"JOB_TP\") {\r\n\t\t\t\tuseMaxSucc = maxData[2];\r\n\t\t\t\tuseMaxFail = maxData[3];\r\n\t\t\t\tuseSucc    = this.state.options.jobSucc;\r\n\t\t\t\tuseFail    = this.state.options.jobFail;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tuseMaxSucc = maxData[4];\r\n\t\t\t\tuseMaxFail = maxData[5];\r\n\t\t\t\tuseSucc    = this.state.options.callSucc;\r\n\t\t\t\tuseFail    = this.state.options.callFail;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({...this.state, \r\n\t\t\t\tuseMaxSucc : useMaxSucc, useMaxFail : useMaxFail,\r\n\t\t\t\tmaxData : maxData,\r\n\t\t\t    options: {...this.state.options, useSucc: useSucc, useFail: useFail}})\r\n\t\t\tComLib.setStateInitRecords(this, \"dsJobInfo\", merged);\t\r\n\r\n\t\t\tbreak;\r\n\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnSearch':\r\n\t\t\t\t\tif(this.validation(\"STA030000_R01\")) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.transaction(\"STA030000_R01\")\r\n\t\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinputcalendar : {\r\n\t\t\tonCalendarClose : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchDateCalender' : break;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCalendarOpen : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchDateCalender' : break;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchDateCalender' :\r\n\t\t\t\t\tlet endDate = e.endDate;\r\n\t\t\t\t\tif (endDate > DateLib.getAddDate(DateLib.getToday(), - 1)) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['통계 자료는 전일 까지 조회 가능 합니다.']);\r\n\t\t\t\t\t\tendDate = DateLib.getAddDate(DateLib.getToday(), - 1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, rgcSearch:{...this.state.rangeCalendarProps.rgcSearch, startDate : e.startDate, endDate : endDate}}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'resSvrInfo' :\t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, selectboxProps: {...this.state.selectboxProps, resSvrInfo: {...this.state.selectboxProps.resSvrInfo, value : e.target.value}}});\r\n\t\t\t\t\tbreak;\t\t\r\n\t\t\t\tcase 'serTp' :\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet useMaxSucc = 0;\r\n\t\t\t\t\tlet useMaxFail = 0;\r\n\t\t\t\t\tlet useSucc = {};\r\n\t\t\t\t\tlet useFail = {};\r\n\r\n\t\t\t\t\tlet serTp = e.target.value ;\r\n\r\n\t\t\t\t\tif (serTp === \"ALL\") {\r\n\t\t\t\t\t\tuseMaxSucc = this.state.maxData[0];\r\n\t\t\t\t\t\tuseMaxFail = this.state.maxData[1];\r\n\t\t\t\t\t\tuseSucc    = this.state.options.allSucc;\r\n\t\t\t\t\t\tuseFail    = this.state.options.allFail;\r\n\t\t\r\n\t\t\t\t\t} else if (serTp === \"JOB_TP\") {\r\n\t\t\t\t\t\tuseMaxSucc = this.state.maxData[2];\r\n\t\t\t\t\t\tuseMaxFail = this.state.maxData[3];\r\n\t\t\t\t\t\tuseSucc    = this.state.options.jobSucc;\r\n\t\t\t\t\t\tuseFail    = this.state.options.jobFail;\r\n\t\t\r\n\t\t\t\t\t} else {\t\t\r\n\t\t\t\t\t\tuseMaxSucc = this.state.maxData[4];\r\n\t\t\t\t\t\tuseMaxFail = this.state.maxData[5];\r\n\t\t\t\t\t\tuseSucc    = this.state.options.callSucc;\r\n\t\t\t\t\t\tuseFail    = this.state.options.callFail;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconsole.log(this.state)\r\n\t\t\t\t\tthis.setState({...this.state, selectboxProps: {...this.state.selectboxProps, serTp: {...this.state.selectboxProps.serTp, value : e.target.value}}\r\n\t\t\t\t\t                            , useMaxSucc: useMaxSucc, useMaxFail: useMaxFail\r\n\t\t\t\t\t\t\t\t\t\t\t    , options: {...this.state.options, useSucc: useSucc, useFail: useFail}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\t\t\t\t\t\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.rangeCalendarProps.rgcSearch.label}/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.rgcSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.rgcSearch.strtId}\r\n\t\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.rgcSearch.endId}\t\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.rgcSearch.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.rgcSearch.endDate}\r\n\t\t\t\t\t\t\t\t\t\tdisabled  = {this.state.rangeCalendarProps.rgcSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.selectboxProps.resSvrInfo.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.selectboxProps.resSvrInfo.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.selectboxProps.resSvrInfo.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {this.state.selectboxProps.resSvrInfo.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.resSvrInfo.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.resSvrInfo.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tid = {this.state.buttonProps.id}\r\n\t\t\t\t\t\t\t\tvalue = {this.state.buttonProps.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.disabled}\r\n\t\t\t\t\t\t\t\thidden = {this.state.buttonProps.hidden}\r\n\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t// mr = {10}\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcolor = 'blue' \r\n\t\t\t\t\t\t\t\ticon = {'srch'}\r\n\t\t\t\t\t\t\t\tinnerImage={true}\r\n\t\t\t\t\t\t\t\tfiiled = \"o\"\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\t\r\n\t\t\t\t\t\t</RelativeGroup>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel width={'60%'}>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.serTp.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.serTp.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.serTp.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.serTp.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.serTp.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.serTp.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\r\n\t\t\t\t\t\t\t\t<div style={{height: \"50%\", width:\"100%\"}}>\r\n\t\t\t\t\t\t\t\t\t<Label value = {\"STT 성공 건수\"} />\r\n\t\t\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsJobInfo.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\tmaxData = {this.state.useMaxSucc}\r\n\t\t\t\t\t\t\t\t\t\tunit    = {\"건\"}\r\n\t\t\t\t\t\t\t\t\t\toptions = {this.state.options.useSucc}\t\r\n\t\t\t\t\t\t\t\t\t\taspect={4.0/1.1}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div style={{height: \"50%\", width:\"100%\"}}>\r\n\t\t\t\t\t\t\t\t\t<Label value = {\"STT 실패 건수\"} />\r\n\t\t\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsJobInfo.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\tmaxData = {this.state.useMaxFail}\r\n\t\t\t\t\t\t\t\t\t\tunit    = {\"건\"}\r\n\t\t\t\t\t\t\t\t\t\toptions = {this.state.options.useFail}\t\r\n\t\t\t\t\t\t\t\t\t\taspect={4.0/1.1}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel width={'40%'}>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdProps.grdTotalList.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdTotalList.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdProps.grdTotalList.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsTotalJobList}\r\n\t\t\t\t\t\t\t\t\theight   = {this.state.grdProps.grdTotalList.height}\r\n\t\t\t\t\t\t\t\t\trowNum      = {false}\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\t\r\n\t\t\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdProps.grdErrList.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdErrList.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdProps.grdErrList.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsErrList}\r\n\t\t\t\t\t\t\t\t\theight   = {this.state.grdProps.grdErrList.height}\r\n\t\t\t\t\t\t\t\t\trowNum      = {false}\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\t\r\n\t\t\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n \r\nexport default View;\r\n\r\n\r\n","// 실시간 STT\r\nimport   React from 'react';\r\nimport { ComponentPanel\r\n\t   , SearchPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , LFloatArea\r\n\t   , FlexPanel            } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , TransManager         } from 'common';\t   \r\nimport { Textfield\r\n\t   , CsState\r\n\t   , Checkbox             } from 'components';\r\nimport { BasicButton as Button\r\n\t   , Label                } from 'components';\r\n\r\nclass View extends React.Component {\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props){\t\t\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsCenterList : DataLib.datalist.getInstance(),\r\n\t\t\tdsCsList     : DataLib.datalist.getInstance(),\r\n\t\t\ttextFieldProps: {\r\n\t\t\t\tiptCsNm: {\r\n\t\t\t\t\tvalue: '',\r\n\t\t\t\t\tplaceholder: '상담사성명'\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\tcsList    : [],\r\n\t\t\tcenterList: [],\r\n\t\t\ttimeoutID : \"\"\r\n\t\t}\r\n\r\n\t\tthis.event.checkbox.onChange = this.event.checkbox.onChange.bind(this);\t\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif(this.validation(\"STT010000_R01\")) this.transaction(\"STT010000_R01\");\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\t\tclearTimeout(this.state.timeoutID);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STT010000_R01':\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\tconst userCent = ComLib.getSession(\"gdsUserInfo\")[0].CENT_CD;\r\n\t\tconst userAuth = ComLib.getSession(\"gdsUserInfo\")[0].AUTH_LV;\r\n\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setProgress(false);\t\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\t\r\n\t\t\tcase 'STT010000_R01':\t\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_getCenterList\",\r\n\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\tdatasetrecv: \"dsCent\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_getUserList\",\r\n\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\tdatasetrecv: \"dsUser\",\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSend', [{AUTH_LV: userAuth, CENT_CD: userCent}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'STT010000_R02':\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_getUserList\",\r\n\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\tdatasetrecv: \"dsUser\",\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSend', [{AUTH_LV: userAuth, CENT_CD: userCent}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STT010000_R01':\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tComLib.setStateInitRecords(this, \"dsCenterList\", res.data.dsCent);\r\n\t\t\tComLib.setStateInitRecords(this, \"dsCsList\"    , res.data.dsUser);\r\n\r\n\t\t\tlet timeoutID = setTimeout(() => {\r\n\t\t\t\tthis.transaction('STT010000_R02');\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\ttimeoutID: timeoutID,\r\n\t\t\t\tcsList    : res.data.dsUser,\r\n\t\t\t\tcenterList: res.data.dsCent\r\n\t\t\t})\r\n\t\t\tbreak;\t\r\n\t\tcase 'STT010000_R02':\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tComLib.setStateInitRecords(this, \"dsCsList\"    , res.data.dsUser);\r\n\r\n\t\t\tlet timeoutID2 = setTimeout(() => {\r\n\t\t\t\tthis.transaction('STT010000_R02');\r\n\t\t\t}, 5000);\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\ttimeoutID: timeoutID2,\r\n\t\t\t\tcsList    : res.data.dsUser,\r\n\t\t\t})\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\r\n\t\t\t\tcase 'iptCsNm':\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['textFieldProps']['iptCsNm']['value'] = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\r\n\t\t\t\tcase 'iptCsNm':\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tlet target = this.state.textFieldProps.iptCsNm.value;\r\n\r\n\t\t\t\t\t\tthis.serchCs(target);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton: {\t\t\r\n\t\t\tonClick: (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\r\n\t\t\t\tcase 'btnSearchCs':\t\r\n\t\t\t\t\tlet target = this.state.textFieldProps.iptCsNm.value\r\n\r\n\t\t\t\t\tthis.serchCs(target)\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcheckbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet centerList = this.state.dsCenterList;\r\n\r\n\t\t\t\tcenterList.setValue(e.index, 'CHK', e.checked ? 'Y' : 'N');\r\n\t\t\t\t\r\n\t\t\t\tthis.setState({...this.state,dsCenterList: centerList})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tonClickCs(e) {\t\t\r\n\t\tlet params = e;\r\n\t\tlet option1 = { width: '600px', height: '830px', modaless: true, params}\r\n\t\t\r\n\t\tComLib.openRealTime(option1);\r\n\t\t// ComLib.openPop('STT010001', e.CONST_NM, option1);\r\n\r\n\t}\r\n\tserchCs = async (target) => {\r\n\t\tconst {dsCsList} = this.state;\r\n\r\n\t\tconst filterList = await this.filterCsList( dsCsList.records, target );\r\n\r\n\t\tthis.setState({...this.state, csList: filterList})\r\n\t\t\r\n\t\tthis.forceUpdate();\r\n\t}\r\n\tfilterCsList = async (csList, target) => {\r\n\t\tconst filteredcsList = csList.filter(item => item.CONST_NM.includes( target ));\r\n\t\r\n\t\treturn filteredcsList;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\t\t\t\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"상담사 검색\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {'iptCsNm'}\r\n\t\t\t\t\t\t\t\t\t\tname        = {'iptCsNm'}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptCsNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptCsNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {2}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {5}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t{this.state.dsCenterList.records.map((item, index) =>\r\n\t\t\t\t\t\t\t\t\t\t<Checkbox  \r\n\t\t\t\t\t\t\t\t\t\t\tid={item.CENT_CD}\r\n\t\t\t\t\t\t\t\t\t\t\tkey={item.CENT_CD}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={item.CENT_NM}\r\n\t\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\t\tkeyProp={item.CENT_CD}\r\n\t\t\t\t\t\t\t\t\t\t\treadOnly={false}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled={false}\r\n\t\t\t\t\t\t\t\t\t\t\tchecked={item.CHK}\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.event.checkbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</FlexPanel>\t\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor      = 'blue' \r\n\t\t\t\t\t\t\t\t\t\tfiiled\t   = \"o\"\r\n\t\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\t\ticon\t   = {'srch'}  \r\n\t\t\t\t\t\t\t\t\t\tid         = {'btnSearchCs'}\r\n\t\t\t\t\t\t\t\t\t\tvalue      = {'조회'}\r\n\t\t\t\t\t\t\t\t\t\tdisabled   = {false}\r\n\t\t\t\t\t\t\t\t\t\thidden     = {false}\r\n\t\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmt         = {5}\r\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<CsState\r\n\t\t\t\t\t\t\t\tid = 'test'\r\n\t\t\t\t\t\t\t\tcenterList={this.state.centerList}\r\n\t\t\t\t\t\t\t\tcsList={this.state.csList}\r\n\t\t\t\t\t\t\t\tcolLeng={15}\r\n\t\t\t\t\t\t\t\ticonSize=\"40px\"\r\n\t\t\t\t\t\t\t\theight=\"640px\"\r\n\t\t\t\t\t\t\t\tonClickCs={this.onClickCs}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\t\t\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","//STT 결과조회\r\nimport React from 'react';\r\n\r\nimport {\r\n\tComponentPanel, FullPanel,  RFloatArea, LFloatArea, SearchPanel, FlexPanel, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, RangeInputCalendar, Selectbox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {StrLib, TransManager, ComLib, DataLib, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis.sttGrdApi = null;\r\n\t\tthis.sttGrd    = null;\r\n\t\tthis.state = {\r\n\t\t\tresultTotal: 0,\r\n\t\t\tnewTransaction : true,\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearchProps : {\r\n\t\t\t\t\tid : 'btnJobFileSearchList',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgridSttResultList : {\r\n\t\t\t\tareaName : 'STT결과검색',\r\n\t\t\t\tid : 'gridSttResultList',\r\n\t\t\t\theader : \t\t\t\t\r\n\t\t\t\t[\t\t\t\t\t\r\n\t\t\t\t\t {headerName: '콜아이디',\t field: 'call_id',\t\tcolId: 'call_id',  editable: true, width : '200' }\r\n\t\t\t\t\t,{headerName: '콜구분',\tfield: 'call_tp',\t\t colId: 'call_tp', editable: false, width : '100', textAlign: 'center', \r\n\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('CMN', params.value,'CALL_TP')}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,{headerName: '등록일시',\tfield: 'reg_dtm',\t    colId: 'reg_dtm',\teditable: false,\twidth: '120', textAlign: 'left'}\t\r\n\t\t\t\t\t,{headerName: '파일 사이즈',field: 'file_size',\t\tcolId: 'file_size',\teditable: false,\twidth: '90', textAlign: 'right'}\r\n\t\t\t\t\t,{headerName: '녹취길이',\tfield: 'rec_tm',\tcolId: 'rec_length',\teditable: false,\twidth: '90', textAlign: 'right'}\r\n\t\t\t\t\t,{headerName: '상담원',  \tfield: 'const_cd',\tcolId: 'const_cd',\teditable: false,\twidth: '90', textAlign: 'center', \r\n\t\t\t\t\t\tvalueFormatter : (params) => { \r\n\t\t\t\t\t\t\tlet constList = ComLib.getSession(\"gdsConstList\").filter(item => item.CODE === params.value);\r\n\t\t\t\t\t\t\tif (constList[0] === undefined) {\r\n\t\t\t\t\t\t\t\treturn \"\";\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn constList[0].CODE_NM;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,{headerName: '검출 결과',\tfield: 'highlight',   \tcolId: 'highlight',\teditable: false,\twidth: '200', \t\t\t\t\t\r\n\t\t\t\t\t\tcellRenderer : (params) => { \r\n\t\t\t\t\t\t\tlet text = params.value;\r\n\t\t\t\t\t\t\tif (text === undefined) {\r\n\t\t\t\t\t\t\t\treturn null;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\ttext = text.replaceAll('<strong>', '<strong style=\"color: red;\">')\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\treturn text \t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,{headerName: '상담내용',\t    field: 'ACTION_ICON',\tcolId: 'ACTION_ICON',\twidth: 100, \r\n\t\t\t\t\t\tcellRenderer: 'actionButton', \r\n\t\t\t\t\t\tfiiled: true,\r\n\t\t\t\t\t\tcolor: 'blue'\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tpaging : {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\texcelLoadAll : false\r\n\t\t\t\t},\t\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\trgcSearchJob : {\r\n\t\t\t\t\tlabel : '등록일시',\r\n\t\t\t\t\tid : 'searchJobDateCalender',\r\n\t\t\t\t\tstrtId : 'searchJobDateCalenderStart',\r\n\t\t\t\t\tendId : 'searchJobDateCalenderEnd',\r\n\t\t\t\t\tstartDate : null,\r\n\t\t\t\t\tendDate : null,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselCallTP : {\r\n\t\t\t\t\tid : 'selCallTP',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'CALL_TP'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth : 120,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : \"콜구분\"\r\n\t\t\t\t},\r\n\t\t\t\tselSearchType: {\r\n\t\t\t\t\tid : 'selSearchType',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('STT_JOB_INFO', 'SCH_TP')),\r\n\t\t\t\t\twidth : 120,\r\n\t\t\t\t\tvalue :'WORD',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSearch : {\r\n\t\t\t\t\tid : 'iptSearch',\r\n\t\t\t\t\tname : 'iptSearch',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength : 1,\r\n\t\t\t\t\tmaxLength : 40,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : '검색어',\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdsSttResultInfo : DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidMount () {\r\n\t\tthis.axiosTransaction();\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tsetTransDate = (New) => {\r\n\t\tlet dsSrchParamInfo;\r\n\t\tlet start = this.state.gridSttResultList.paging.start;\r\n\t\tlet size  = this.state.gridSttResultList.paging.size;\r\n\t\tlet excelLoadAll = this.state.gridSttResultList.paging.excelLoadAll;\r\n\t\tlet searchTP = \"\"\r\n\t\t\r\n\t\tif (New) {\r\n\t\t\tsearchTP = this.state.selectboxProps.selSearchType.value;\r\n\t\t} else {\r\n\t\t\tsearchTP = this.state.lastSearchType;\r\n\t\t}\r\n\t\t\t\r\n\t\tif (excelLoadAll) {\r\n\t\t\tif (searchTP === 'WORD') {\r\n\t\t\t\tdsSrchParamInfo = {\"sort\":[{\"reg_dtm\":\"desc\"}],\"from\": start,\"size\": this.state.resultTotal - start,\"query\":{\"bool\":{\"must\":[]}},\"highlight\": {\"fields\": {\"stt_rslt.mlf\": {}},\"pre_tags\": [`<strong>`],\"post_tags\": [\"</strong>\"]}};\r\n\t\t\r\n\t\t\t} else {\r\n\t\t\t\tdsSrchParamInfo = {\"sort\":[{\"reg_dtm\":\"desc\"}],\"from\": start,\"size\": this.state.resultTotal - start,\"query\":{\"bool\":{\"must\":[]}}};\r\n\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tif (searchTP === 'WORD') {\r\n\t\t\t\tdsSrchParamInfo = {\"sort\":[{\"reg_dtm\":\"desc\"}],\"from\": start,\"size\": size,\"query\":{\"bool\":{\"must\":[]}},\"highlight\": {\"fields\": {\"stt_rslt.mlf\": {}},\"pre_tags\": [`<strong>`],\"post_tags\": [\"</strong>\"]}};\r\n\t\t\r\n\t\t\t} else {\r\n\t\t\t\tdsSrchParamInfo = {\"sort\":[{\"reg_dtm\":\"desc\"}],\"from\": start,\"size\": size,\"query\":{\"bool\":{\"must\":[]}}};\r\n\t\t\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t}\r\n\r\n\t\tlet must = [];\r\n\t\tlet searchTxt = this.state.textFieldProps.iptSearch.value; \r\n\t\tlet startDate = \"\";\r\n\t\tlet endDate   = \"\";\r\n\t\tlet callTp    = \"\";\r\n\t\tlet user      = \"\";\r\n\t\tlet searchTp  = \"\";\r\n\t\t\r\n\t\tif (New) {\r\n\t\t\tstartDate = this.state.rangeCalendarProps.rgcSearchJob.startDate;\r\n\t\t\tendDate   = this.state.rangeCalendarProps.rgcSearchJob.endDate;\r\n\t\t\tcallTp    = this.state.selectboxProps.selCallTP.value;\r\n\t\t\tsearchTp  = this.state.selectboxProps.selSearchType.value;\r\n\t\t\tthis.setState({...this.state, lastSearchTxt: searchTxt, lastStartDate: startDate, lastEndDate: endDate, lastCallTp: callTp, lastSearchType: searchTp})\r\n\r\n\t\t} else {\r\n\t\t\tsearchTxt = this.state.lastSearchTxt;\r\n\t\t\tstartDate = this.state.lastStartDate;\r\n\t\t\tendDate   = this.state.lastEndDate;\r\n\t\t\tcallTp    = this.state.lastCallTp;\r\n\t\t\t\r\n\t\t}\t\r\n\t\t\r\n\t\tif (searchTP !== 'WORD') {\r\n\t\t\tif (searchTP !== 'UUID') {\r\n\t\t\t\tif (New) {\r\n\t\t\t\t\tmust.push({\"match\":{\"call_id\": searchTxt}});\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmust.push({\"match\":{\"call_id\": this.state.lastSearchTxt}});\r\n\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tif (New) {\r\n\t\t\t\t\tmust.push({\"match\":{\"_id\": searchTxt}});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmust.push({\"match\":{\"_id\": this.state.lastSearchTxt}});\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t} else {\t\r\n\t\t\tif (!StrLib.isNull(searchTxt)) {\r\n\t\t\t\tif (searchTxt.search(/\\s/) !== -1) { \r\n\t\t\t\t\tmust.push({\"match\":{\"stt_rslt.mlf\": {\"query\": searchTxt, \"operator\":\"and\"}}});\r\n\t\t\r\n\t\t\t\t} else { \r\n\t\t\t\t\tmust.push({\"match\":{\"stt_rslt.mlf\": searchTxt}});\r\n\t\t\r\n\t\t\t\t}\r\n\t\t\t}\t\r\n\r\n\t\t\tif (!StrLib.isNull(startDate)) {\r\n\t\t\t\tmust.push({\"range\":{\"reg_dtm\":{\"gte\":startDate,\"lte\":endDate,\"format\": \"yyyyMMdd\"}}});\r\n\r\n\t\t\t}\r\n\t\t\tif (!StrLib.isNull(callTp)) {\r\n\t\t\t\tmust.push({\"match\":{\"call_tp\":{\"query\":callTp}}});\r\n\r\n\t\t\t}\r\n\t\t\tif (!StrLib.isNull(user)) {\r\n\t\t\t\tmust.push({\"match\":{\"const_cd\":{\"query\":user}}});\r\n\r\n\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\tmust.push({\"match\":{\"job_tp\":\"R\"}});\r\n\t\t}\r\n\t\t\r\n\t\tdsSrchParamInfo.query.bool.must = must;\t\t\r\n\r\n\t\treturn dsSrchParamInfo;\r\n\t}\r\n\r\n\tvalidation = (transId) => {\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'STT020000_R01':\r\n\t\t\t\tvar pattern_num = /[0-9]/;\r\n\r\n\t\t\t\tvar pattern_eng = /[a-zA-Z]/;\r\n\r\n\t\t\t\tvar pattern_spc = /[~!@#$%^&*()+|<>?:{}\"'\\]\\[/\\'\\\"\\\\\\']/;\r\n\r\n\t\t\t\tvar pattern_kor = /[ㄱ-ㅎ|ㅏ-ㅣ|가-힣]/;\r\n\r\n\t\t\t\tlet searchTP = this.state.selectboxProps.selSearchType.value;\r\n\t\t\t\tlet searchIpt  = this.state.textFieldProps.iptSearch.value;\r\n\r\n\t\t\t\tif(this.state.rangeCalendarProps.rgcSearchJob.startDate > this.state.rangeCalendarProps.rgcSearchJob.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색 시작일자가 종료일자보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!StrLib.isNull(searchIpt) && searchIpt.length < 2 && searchTP === 'WORD') {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색어는 두글자 이상 필수 입니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t} \r\n\t\t\t\tif (!StrLib.isNull(searchIpt) && searchTP === 'WORD'\r\n\t\t\t\t\t&& (pattern_num.test(searchIpt) || pattern_spc.test(searchIpt) || pattern_eng.test(searchIpt))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색어는 한글만 입력 가능 합니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif (!StrLib.isNull(searchIpt) && (searchTP === 'UUID' || searchTP === 'CALL_ID')\r\n\t\t\t\t\t&& (pattern_spc.test(searchIpt) || pattern_kor.test(searchIpt))) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['아이디 검색은 `-`, `_` 를 제외한 특수문자와 한글이 입력 불가능 합니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!StrLib.isNull(searchIpt) && (searchTP === 'UUID' || searchTP === 'CALL_ID')\r\n\t\t\t\t\t&& searchIpt.search(/\\s/) !== -1) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['아이디 검색시 공백을 포함할수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (StrLib.isNull(searchIpt) && (searchTP === 'UUID' || searchTP === 'CALL_ID')) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['아이디 입력은 필수 입니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"STT020000_R01\" :\r\n\r\n\t\t\t\t// let state = this.state;\r\n\r\n\t\t\t\t// state['gridSttResultList']['paging'].start = 0;\r\n\t\t\t\t// state['gridSttResultList']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState({...this.state, gridSttResultList : {...this.state.gridSttResultList\r\n\t\t\t\t\t                                               , paging: {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   , start : 0\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   , page  : 1\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   }\r\n\t\t\t\t\r\n\t\t\t\t\t\t}}, () => {\r\n\t\t\t\t\tthis.axiosTransaction();\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\taxiosTransaction = async() => {\t\r\n\t\tlet isNew = this.state.newTransaction;\r\n\t\tlet transdata = JSON.stringify(this.setTransDate(isNew))\r\n\t\tlet data = transdata.replace(/%/g, '％').replace(/=/g, '＝').replace(/&amp;/g, '＆').replace(/&/g, '＆');\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\t\t\t\t\r\n\t\t\ttransManager.setTransId(\"test\");\r\n\t\t\ttransManager.setTransUrl(transManager.constants.url.sttSearch);\r\n\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\ttransManager.addConfig({\r\n\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\tcrudh: transManager.constants.crudh.sttSearch,\r\n\t\t\t\tdatasetsend:\"data\",\r\n\t\t\t\tdatasetrecv:\"dsSttSearch\",\r\n\t\t\t});\r\n\t\t\t\t\r\n\t\t\ttransManager.addDataset('data', data);\r\n\t\t\ttransManager.agent();\r\n\t\t} catch (err) {\r\n\r\n\t\t}\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tlet resData = JSON.parse(res.data.dsSttSearch);\t\t\r\n\t\tlet orgData = resData.hits.hits;\r\n\t\tlet total   = resData.hits.total.value;\r\n\t\tlet gridData = [];\r\n\t\tlet cnt = Number(this.state.gridSttResultList.paging.start);\r\n\t\tlet excelLoadAll = this.state.gridSttResultList.paging.excelLoadAll;\t\t\r\n\t\tlet isNew = this.state.newTransaction;\r\n\t\tlet searchChar = \"\";\r\n\t\t\r\n\t\tif (isNew) {\r\n\t\t\tsearchChar = this.state.textFieldProps.iptSearch.value; \r\n\t\t} else {\r\n\t\t\tsearchChar = this.state.lastSearchTxt;\r\n\t\t}\r\n\t\t\r\n\t\tconsole.log(resData)\r\n\t\tfor (let i = 0; i < orgData.length; i ++) {\r\n\t\t\tgridData.push({});\r\n\t\t \r\n\t\t\tlet highlight = \"\";\r\n\t\t\t\r\n\t\t\tif (orgData[i].highlight !== undefined) {\r\n\t\t\t\thighlight = orgData[i].highlight['stt_rslt.mlf'][0];\r\n\r\n\t\t\t} else {\r\n\t\t\t\thighlight = orgData[i]._source.stt_rslt.substring(0, 20); \r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet strCnt = highlight.substring(0, highlight.indexOf('@'));\r\n\r\n\t\t\thighlight = highlight.substring(highlight.indexOf('@') + 1, highlight.length); \r\n\r\n\t\t\tlet start = highlight.indexOf('<strong') - 10;\t\r\n\r\n\t\t\tif (start < 0) {\r\n\t\t\t\tstart = 0;\r\n\t\t\t}\r\n\r\n\t\t\thighlight = highlight.substring(start); \r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\tlet end = highlight.lastIndexOf('</strong>') + 20;\r\n\r\n\t\t\tif (end > highlight.length) {\r\n\t\t\t\tend = highlight.length;\r\n\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\thighlight = highlight.substring(0, end); \r\n\t\t\thighlight = (start === 0 ? \"\" : \"...\") + highlight + \"...\"; \r\n\t\t\t\r\n\t\t\tgridData[i].highlight = highlight;\r\n\r\n\t\t\tgridData[i].ACTION_ICON = 'message';\r\n\r\n\t\t\tlet time = orgData[i]._source.rec_tm;\r\n\r\n\t\t\tlet dtm = orgData[i]._source.reg_dtm;\r\n\t\t\tlet reg_dtm = dtm.substring(0, 10) + \" \" + dtm.substring(11, 19)\r\n\t\t\t\t\t\t\t\r\n\t\t\tlet secs = time % 60;\r\n\t\t\ttime = (time - secs) / 60;\r\n\t\t\tlet mins = time % 60;\r\n\t\t\tlet hrs = (time - mins) / 60;\r\n\t\t\tlet rec_tm = (hrs > 0 ? hrs + \"시간 \" : \"\") + mins + \"분 \" + secs + \"초\";\r\n\t\t\t\r\n\t\t\tlet size = orgData[i]._source.file_size;\r\n\t\t\tlet b = size % 1000;\r\n\t\t\tsize = (size - b) / 1000;\r\n\t\t\tlet kb = size % 1000;\r\n\t\t\tsize = (size - kb) / 1000;\r\n\r\n\t\t\tlet file_size = size + \".\" + kb + \" MB\"\r\n\r\n\t\t\tgridData[i].reg_dtm   = reg_dtm;  \r\n\r\n\t\t\tgridData[i].job_tp    = orgData[i]._source.job_tp;\r\n\t\t\tgridData[i].stt_unq   = orgData[i]._source.stt_unq; \r\n\t\t\tgridData[i].rec_tm    = rec_tm;   \r\n\t\t\tgridData[i].call_tp   = orgData[i]._source.call_tp; \r\n\t\t\tgridData[i].const_cd  = orgData[i]._source.const_cd;\r\n\t\t\tgridData[i].stt_rslt  = orgData[i]._source.stt_rslt; \r\n\t\t\tgridData[i].call_id   = orgData[i]._source.call_id;  \r\n\t\t\tgridData[i].uuid      = orgData[i]._id\r\n\t\t\tgridData[i].file_size = file_size;  \r\n\t\t\tgridData[i].rowtype   = 'r';\r\n\t\t\tgridData[i].recid     = cnt;\r\n\t\t\tgridData[i].searchTxt = searchChar;\r\n\r\n\t\t\tcnt ++;\t\t\t\r\n\r\n\t\t}\r\n\t\t\r\n\t\tif (total !== this.state.resultTotal) {\r\n\t\t\tthis.setState({...this.state, resultTotal: Number(total)});\r\n\t\t}\r\n\t\t\r\n\t\tComLib.setStateInitRecords(this, \"dsSttResultInfo\", gridData);\r\n\r\n\t\t\r\n\t\tif (excelLoadAll) {\r\n\t\t\tthis.setState({...this.state\r\n\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t, excelLoadAll: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, () => {\r\n\t\t\t\t\tthis.sttGrd.downExcelData();\r\n\r\n\t\t\t});\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tthis.setState({...this.state\r\n\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\r\n\t\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnJobFileSearchList\" :\r\n\t\t\t\t\tif (this.validation(\"STT020000_R01\")) {\r\n\t\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t\t,  newTransaction : true\r\n\t\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t\tthis.handler.setDs('STT020000_R01');\r\n\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, \r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchJobDateCalender':\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\trangeCalendarProps : {...this.state.rangeCalendarProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, rgcSearchJob : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.rangeCalendarProps.rgcSearchJob, startDate : e.startDate, endDate : e.endDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\t\tbreak; \r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'selSearchType':\r\n\t\t\t\t\tlet disabled = (e.target.value === \"WORD\" ? false : true);\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t, selSearchType : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selSearchType, selected : e.target.selectedIndex, value : e.target.value}\r\n\t\t\t\t\t\t\t\t\t\t\t\t, selCallTP : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selCallTP, disabled: disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t, selJobStateSearch : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selJobStateSearch, disabled: disabled}\r\n\t\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\trangeCalendarProps : {...this.state.rangeCalendarProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t, rgcSearchJob :\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.rangeCalendarProps.rgcSearchJob, disabled: disabled}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selCallTP':\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t, selCallTP : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selCallTP, selected : e.target.selectedIndex, value : e.target.value}\r\n\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonInsertRow : (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonActionCellClicked : (e) => {\r\n\t\t\t\tlet option = { width: '600px', height: '740px', modaless: true, UUID : e.data.uuid, useUuid: true, JOB_TP: e.data.job_tp, srchText: this.state.lastSearchType === \"WORD\" ? e.data.searchTxt : null}\r\n\t\t\t\tComLib.openPlayer(option);\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tthis.sttGrdApi = e.gridApi;\r\n\t\t\t\tthis.sttGrd = e.grid;\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tthis.sttGrd.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\tthis.sttGrdApi.setRowData(this.sttGrd.gridDataset.getRecords());\r\n\t\t\t},\r\n\t\t\t//스크롤이 필요한가에 대한 검토 현재는 미적용\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tif (!this.state.gridSttResultList.paging.loading) {\r\n\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t\t\t, start : this.state.gridSttResultList.paging.start + this.state.gridSttResultList.paging.size\r\n\t\t\t\t\t\t\t\t, loading : true\r\n\t\t\t\t\t\t\t\t, excelLoadAll : e.excelLoadAll\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t,  newTransaction : false\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.axiosTransaction();\r\n\t\t\t\t\t});\r\n\t\t\t\t} \r\n\t\t\t},\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptSearch' :\r\n\t\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t\t, textFieldProps : { ...this.state.textFieldProps\r\n\t\t\t\t\t\t\t\t,iptSearch : { ...this.state.textFieldProps.iptSearch, value : e.target.value }\r\n\t\t\t\t\t\t\t}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSearch' :\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"STT020000_R01\")) {\r\n\t\t\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t\t\t,  newTransaction : true\r\n\t\t\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\t\t\tthis.handler.setDs('STT020000_R01');\r\n\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t}\t\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\t\t\t\t\t\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"검색조건\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selSearchType.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selSearchType.dataset}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selSearchType.value}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selSearchType.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selSearchType.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSearch.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSearch.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptSearch.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptSearch.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptSearch.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.rangeCalendarProps.rgcSearchJob.label}/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.rgcSearchJob.id}\r\n\t\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.rgcSearchJob.strtId}\r\n\t\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.rgcSearchJob.endId}\t\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.rgcSearchJob.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.rgcSearchJob.endDate}\r\n\t\t\t\t\t\t\t\t\t\tdisabled  = {this.state.rangeCalendarProps.rgcSearchJob.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.selectboxProps.selCallTP.label}/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selCallTP.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selCallTP.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selCallTP.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selCallTP.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selCallTP.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selCallTP.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor= 'blue' fiiled= {true} innerImage={true} icon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tareaName = {this.state.gridSttResultList.areaName}\r\n\t\t\t\t\t\t\tid       = {this.state.gridSttResultList.id}\r\n\t\t\t\t\t\t\theight   = \"600px\"\r\n\t\t\t\t\t\t\theader   = {this.state.gridSttResultList.header}\r\n\t\t\t\t\t\t\tdata     = {this.state.dsSttResultInfo}\t\t\t\r\n\r\n\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\tdnlExcelBtn = {true}\r\n\t\t\t\t\t\t\trowNum      = {true}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging      = {true}\r\n\t\t\t\t\t\t\tinfinite    = {true}\r\n\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {this.state.resultTotal}\r\n\r\n\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\t\r\n\t\t\t\t\t\t\tonScrollEnd        = {this.event.grid.onScrollEnd}\t\t\t\r\n\t\t\t\t\t\t\tonActionCellClicked= {this.event.grid.onActionCellClicked}\t\r\n\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\t\t\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","//STT 결과조회\r\nimport React from 'react';\r\n\r\nimport {\r\n\tComponentPanel, FullPanel,  RFloatArea, RelativeGroup, LFloatArea, FlexPanel, SearchPanel} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {RangeInputCalendar, Selectbox, Textfield} from 'components';\r\nimport {Grid} from 'components';\r\nimport {StrLib, TransManager, ComLib, DataLib, newScrmObj, DateLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.sttResultGrdApi = null;\r\n\t\tthis.sttResultGrd    = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tbtnSearchProps : {\r\n\t\t\t\t\tid : 'btnJobFileSearchList',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgridSttResultList : {\r\n\t\t\t\tareaName : 'STT 결과 목록',\r\n\t\t\t\tid : 'gridSttResultList',\r\n\t\t\t\tinfoCheckBox :  {\r\n\t\t\t\t\tuse : true,\r\n\t\t\t\t\tcolId : 'CHK',\r\n\t\t\t\t},\r\n\t\t\t\theader : \t\t\t\t\r\n\t\t\t\t[\r\n\t\t\t\t\t\r\n\t\t\t\t\t {headerName: 'UUID/콜 아이디',\tfield: 'CALL_ID',\t\tcolId: 'CALL_ID',\t\teditable: true, width : '300' }\r\n\t\t\t\t\t,{headerName: '콜구분',\tfield: 'CALL_TP',\t\tcolId: 'CALL_TP',\t\teditable: false, width : '130', textAlign: 'center', \r\n\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('CMN', params.value,'CALL_TP')}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,{headerName: '작업구분',\tfield: 'JOB_TP',\t    colId: 'JOB_TP',\teditable: false, width : '120', textAlign: 'center', \r\n\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('CMN', params.value,'JOB_TP')}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,{headerName: '녹취길이',\tfield: 'REC_TM',\t\tcolId: 'REC_TM',\teditable: false, width : '80'}\t\t\t// VAULE FORMATTER\r\n\t\t\t\t\t,{headerName: '등록일시',\tfield: 'REG_DTM',\t    colId: 'REG_DTM',\teditable: false, width : '200'}\t\r\n\t\t\t\t\t,{headerName: '센터',\t\tfield: 'CENT_NM',\t\tcolId: 'CENT_NM',\teditable: false, width : '120'}\r\n\t\t\t\t\t,{headerName: '팀',\t\t\tfield: 'TEAM_NM',\t    colId: 'TEAM_NM',\teditable: false, width : '120'}\t\t\t\t\t\r\n\t\t\t\t\t,{headerName: '상담원',\t    field: 'CONST_NM',\t\tcolId: 'CONST_NM',  editable: false, width : '100', textAlign: 'center'}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t,{headerName: '작업상태',   field: 'JOB_STATE',    colId: 'JOB_STATE',  editable: false, width : '100', textAlign: 'center', \r\n\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('STT_JOB_INFO', params.value, 'JOB_STATE') }\r\n\t\t\t\t\t}\r\n\t\t\t\t\t,{headerName: '에러코드',\tfield: 'ERR_CD',\t\tcolId: 'ERR_CD',\teditable: false, width : '130',\r\n\t\t\t\t\t\ttooltipComponent: 'customTooltip', tooltipField: \"ERR_CONT\" }\r\n\t\t\t\t\t,{headerName: '상담내용',\tfield: 'ACTION_ICON',\tcolId: 'ACTION_ICON', width : '80', \r\n\t\t\t\t\t\tcellRenderer: 'actionButton', \r\n\t\t\t\t\t\tfiiled: true,\r\n\t\t\t\t\t\tcolor: 'blue'\r\n\t\t\t\t\t},\r\n\t\t\t\t],\r\n\t\t\t\tpaging : {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t},\t\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\trgcSearchJob : {\r\n\t\t\t\t\tlabel : '등록일자',\r\n\t\t\t\t\tid : 'searchJobDateCalender',\r\n\t\t\t\t\tstrtId : 'searchJobDateCalenderStart',\r\n\t\t\t\t\tendId : 'searchJobDateCalenderEnd',\r\n\t\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\t\t\t\t\r\n\t\t\t\tselSearchType: {\r\n\t\t\t\t\tid : 'selSearchType',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('STT_JOB_INFO', 'SCH_TP2'), newScrmObj.constants.select.argument.select),\r\n\t\t\t\t\twidth : 120,\r\n\t\t\t\t\tvalue :'',\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t},\r\n\t\t\t\tselCallTP : {\r\n\t\t\t\t\tid : 'selCallTP',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'CALL_TP'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth : 120,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : \"콜구분\"\r\n\t\t\t\t},\r\n\t\t\t\tselJobStateSearch : {\r\n\t\t\t\t\tid : 'selJobStateSearch',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('STT_JOB_INFO', 'JOB_STATE'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth : 120,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : \"작업상태\"\r\n\t\t\t\t},\r\n\t\t\t\tselJobTP : {\r\n\t\t\t\t\tid : 'selJobTP',\r\n\t\t\t\t\tdataset : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'JOB_TP'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth : 120,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : \"작업구분\"\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSearch : {\r\n\t\t\t\t\tid : 'iptSearch',\r\n\t\t\t\t\tname : 'iptSearch',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '',\r\n\t\t\t\t\tminLength : 1,\r\n\t\t\t\t\tmaxLength : 255,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : '',\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdsSttResultInfo : DataLib.datalist.getInstance(),\r\n\t\t\t// dsGrp: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: ComLib.setOrgComboValue(\"TEAM_CD\"), USR_CD: \"\"}]), disabled : false,\t\t\t\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"STT030000_R01\")) this.transaction(\"STT030000_R01\");\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'STT030000_R01' :\r\n\t\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.rgcSearchJob.startDate) || StrLib.isNull(this.state.rangeCalendarProps.rgcSearchJob.endDate) )  {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.state.rangeCalendarProps.rgcSearchJob.startDate > this.state.rangeCalendarProps.rgcSearchJob.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색 시작일자가 종료일자보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"STT030000_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridSttResultList']['paging'].start = 0;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('STT030000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['gridSttResultList']['paging'].start;\r\n\t\tlet pageLimit   = state['gridSttResultList']['paging'].size;\r\n\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'STT030000_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_JobHistory\",\r\n\t\t\t\t\tdatasetsend: \"dsSrchParamInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSttResultInfo\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ JOB_START_DATE: state.rangeCalendarProps.rgcSearchJob.startDate\r\n\t\t\t\t\t                                       ,  JOB_END_DATE  : state.rangeCalendarProps.rgcSearchJob.endDate  \r\n\t\t\t\t\t                                       ,  SCH_TP        : state.selectboxProps.selSearchType.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  SCH_VAL       : state.textFieldProps.iptSearch.value\r\n\t\t\t\t\t                                       ,  JOB_STATE     : state.selectboxProps.selJobStateSearch.value\r\n\t\t\t\t\t                                       ,  CALL_TP       : state.selectboxProps.selCallTP.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  JOB_TP\t    : state.selectboxProps.selJobTP.value\r\n\t\t\t\t\t                                       ,  QUERY_START   : pageStart\r\n\t\t\t\t\t                                       ,  QUERY_LIMIT   : pageLimit\r\n\t\t\t\t}]);\r\n\t\t\t\tstate.lastStartDate = state.rangeCalendarProps.rgcSearchJob.startDate;\r\n\t\t\t    state.lastEndDate   = state.rangeCalendarProps.rgcSearchJob.endDate;\r\n\t\t\t    state.lastSearchTP  = state.selectboxProps.selSearchType.value;\r\n\t\t\t    state.lastSearchVal = state.textFieldProps.iptSearch.value;\r\n\t\t\t    state.lastJobState  = state.selectboxProps.selJobStateSearch.value;\r\n\t\t\t    state.lastCallTp    = state.selectboxProps.selCallTP.value;\r\n\t\t\t    state.lastJobTp     = state.selectboxProps.selJobTP.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT030000_R02':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_JobHistory\",\r\n\t\t\t\t\tdatasetsend: \"dsSrchParamInfo\",\r\n\t\t\t\t\tdatasetrecv: \"dsSttResultInfo\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ JOB_START_DATE: state.lastStartDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  JOB_END_DATE  : state.lastEndDate  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  SCH_TP        : state.lastSearchTP  \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  SCH_VAL       : state.lastSearchVal\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  JOB_STATE     : state.lastJobState\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  CALL_TP       : state.lastCallTp\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  JOB_TP\t    : state.lastJobTp\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  QUERY_START   : pageStart\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  QUERY_LIMIT   : pageLimit\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STT030000_R01':\r\n\t\t\tif(res.data.dsSttResultInfo.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSttResultInfo\", res.data.dsSttResultInfo);\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSttResultInfo\", \"\");\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tthis.setState({...this.state\r\n\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\tcase 'STT030000_R02':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSttResultInfo\", res.data.dsSttResultInfo);\r\n\t\t\t\r\n\t\t\tif (this.state.gridSttResultList.paging.excelLoadAll) {\r\n\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t\t, excelLoadAll: false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.sttResultGrd.downExcelData();\r\n\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnJobFileSearchList\" :\r\n\t\t\t\t\tif (this.validation(\"STT030000_R01\")) {\r\n\t\t\t\t\t\tthis.handler.setDs('STT030000_R01');\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, \r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'searchJobDateCalender':\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\trangeCalendarProps : {...this.state.rangeCalendarProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, rgcSearchJob : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.rangeCalendarProps.rgcSearchJob, startDate : e.startDate, endDate : e.endDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\tbreak; \r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'selSearchType':\r\n\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\tselectboxProps : {...this.state.selectboxProps\r\n\t\t\t\t\t\t\t\t\t\t\t, selSearchType : \r\n\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selSearchType, selected : e.target.selectedIndex, value : e.target.value}}});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selJobStateSearch':\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, selJobStateSearch : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selJobStateSearch, selected : e.target.selectedIndex, value : e.target.value}\r\n\t\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'selCallTP': \r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, selCallTP : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selCallTP, selected : e.target.selectedIndex, value : e.target.value}\r\n\t\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'selJobTP':\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\tselectboxProps : {...this.state.selectboxProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t, selJobTP : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.selectboxProps.selJobTP, selected : e.target.selectedIndex, value : e.target.value}\r\n\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonActionCellClicked : (e) => {\r\n\t\t\t\tconsole.log(\"action cell clicked STT030000\")\r\n\t\t\t\tconsole.log(e)\r\n\t\t\t\tlet option = { width: '600px', height: '740px', modaless: true, UUID: e.data.STT_UNQ, callId : e.data.CALL_ID, useUuid: true, JOB_TP: e.data.JOB_TP}\r\n\t\t\t\tComLib.openPlayer(option);\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tthis.sttResultGrdApi = e.gridApi;\r\n\t\t\t\tthis.sttResultGrd    = e.grid;\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tthis.sttResultGrd.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\tthis.sttResultGrdApi.setRowData(this.sttResultGrd.gridDataset.getRecords());\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tif (!this.state.gridSttResultList.paging.loading) {\r\n\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t, gridSttResultList : { ...this.state.gridSttResultList\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridSttResultList.paging\r\n\t\t\t\t\t\t\t\t, start : this.state.gridSttResultList.paging.start + this.state.gridSttResultList.paging.size\r\n\t\t\t\t\t\t\t\t, loading : true\r\n\t\t\t\t\t\t\t\t, excelLoadAll : e.excelLoadAll\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.transaction(\"STT030000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptSearch' :\r\n\t\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t\t, textFieldProps : { ...this.state.textFieldProps\r\n\t\t\t\t\t\t\t\t,iptSearch : { ...this.state.textFieldProps.iptSearch, value : e.target.value }\r\n\t\t\t\t\t\t\t}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSearch' :\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif(this.validation(\"STT030000_R01\")) {\r\n\t\t\t\t\t\t\tthis.handler.setDs('STT030000_R01');\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t}\t\r\n\r\n\tsetSearchParam = () => {\r\n\t\tlet dsSrchParamInfo = {};\r\n\r\n\t\t\r\n\t\t\r\n\t\treturn dsSrchParamInfo;\t\t\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\t\t\t\t\t\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.rangeCalendarProps.rgcSearchJob.label} req={true}/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.rgcSearchJob.id}\r\n\t\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.rgcSearchJob.strtId}\r\n\t\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.rgcSearchJob.endId}\t\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.rgcSearchJob.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.rgcSearchJob.endDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"검색조건\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selSearchType.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selSearchType.dataset}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selSearchType.value}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selSearchType.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selSearchType.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSearch.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSearch.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptSearch.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptSearch.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptSearch.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label value = {this.state.selectboxProps.selCallTP.label}/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selCallTP.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selCallTP.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selCallTP.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selCallTP.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selCallTP.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selCallTP.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value = {this.state.selectboxProps.selJobTP.label}/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selJobTP.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selJobTP.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selJobTP.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selJobTP.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selJobTP.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selJobTP.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value = {this.state.selectboxProps.selJobStateSearch.label}/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selJobStateSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selJobStateSearch.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selJobStateSearch.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selJobStateSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selJobStateSearch.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tid = {this.state.buttonProps.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tcolor = 'blue' \r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.buttonProps.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.buttonProps.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\ticon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tinnerImage={true}\r\n\t\t\t\t\t\t\t\t\tfiiled = \"o\"\r\n\t\t\t\t\t\t\t\t\tmt = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tareaName = {this.state.gridSttResultList.areaName}\r\n\t\t\t\t\t\t\tid       = {this.state.gridSttResultList.id}\r\n\t\t\t\t\t\t\theight   = \"600px\"\r\n\t\t\t\t\t\t\theader   = {this.state.gridSttResultList.header}\r\n\t\t\t\t\t\t\tdata     = {this.state.dsSttResultInfo}\r\n\r\n\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\tdnlExcelBtn = {ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV'] === 1 ? true : false}\r\n\t\t\t\t\t\t\trowNum      = {true}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging      = {true}\r\n\t\t\t\t\t\t\tinfinite    = {true}\r\n\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsSttResultInfo.getRecords().length === 0) ? 0 : this.state.dsSttResultInfo.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\t\r\n\t\t\t\t\t\t\tonScrollEnd        = {this.event.grid.onScrollEnd}\t\t\r\n\t\t\t\t\t\t\tonActionCellClicked= {this.event.grid.onActionCellClicked}\t\r\n\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\r\n\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 수동 STT요청\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FlexPanel, FullPanel,  LFloatArea, RFloatArea, SearchPanel\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {RangeInputCalendar, Selectbox, InputFileUpload} from 'components';\r\nimport {Grid} from 'components';\r\nimport {TransManager, StrLib, ComLib, DataLib, DateLib, newScrmObj} from 'common';\r\n \r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.selfFileListGrdApi = null;\r\n\t\tthis.selfFileListGrd    = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tbtnSearchProps : {\r\n\t\t\t\t\tid : 'btnSelfFileSearchList',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false\r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\t\t\tgridProps: {\r\n\t\t\t\tgrdSelfFileList : {\r\n\t\t\t\t\tareaName : 'STT 수동처리 목록',\r\n\t\t\t\t\tid : 'grdSelfFileList',\r\n\t\t\t\t\theight : \"320px\",\r\n\t\t\t\t\theader : \r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t {headerName: '등록 파일명',\t        field: 'CALL_ID',\t\tcolId: 'CALL_ID',\twidth: 400}\r\n\t\t\t\t\t\t ,{headerName: '작업요청자',\t\tfield: 'REG_USR_NM',\tcolId: 'REG_USR_NM', \twidth: 100}\r\n\t\t\t\t\t\t,{headerName: '녹취길이',\t\tfield: 'REC_TM',\t\t\tcolId: 'REC_TM', textAlign: 'center',\twidth: 100}\r\n\t\t\t\t\t\t,{headerName: '학습상태',\t    field: 'JOB_STATE',\t     colId: 'JOB_STATE', textAlign: 'center',\twidth: 100,\r\n\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('STT_JOB_INFO', 'JOB_STATE')},\r\n\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('STT_JOB_INFO', param.value, 'JOB_STATE')}\t\r\n\t\t\t\t\t\t,{headerName: '등록일자',\t\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM',\twidth: 100}\r\n\t\t\t\t\t\t,{headerName: '에러코드',\tfield: 'ERR_CD',\t\tcolId: 'ERR_CD',\teditable: false, width : '130',\r\n\t\t\t\t\t\t\ttooltipComponent: 'customTooltip', tooltipField: \"ERR_CONT\" }\r\n\t\t\t\t\t\t,{headerName: '상담내용',\t    field: 'ACTION_ICON',\tcolId: 'ACTION_ICON',\twidth: 100, \r\n\t\t\t\t\t\t\tcellRenderer: 'actionButton', \r\n\t\t\t\t\t\t\tfiiled: true,\r\n\t\t\t\t\t\t\tcolor: 'blue'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\t\t\t\t\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t},\t\t\t\t\r\n\t\t\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\t\t\t\t\t\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tlabel : '기간',\r\n\t\t\t\tid : 'searchDateCalender',\r\n\t\t\t\tstrtId : 'searchDateCalenderStart',\r\n\t\t\t\tendId : 'searchDateCalenderEnd',\t\t\t\t\r\n\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\tfocusedInput : null,\r\n\t\t\t},\t\r\n\t\t\tfileUpload : {\r\n\t\t\t\tid : 'fileUpload',\r\n\t\t\t\twidth : \"100%\",\r\n\t\t\t\theight : \"250\",\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselUserList : {\r\n\t\t\t\t\tid : 'selUserList',\r\n\t\t\t\t\twidth : 160,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tlabel : \"요청자명\",\r\n\t\t\t\t\tvalue : '',\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tfileDataArray : [],\r\n\t\t\texistsBrdCdFileDataArray : [],\r\n\t\t\texistsVlaBrdInfoArray : [],\r\n\t\t\tdsSelfFileList : DataLib.datalist.getInstance(),\r\n\t\t\tdsSrch: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", AUTH_LV: \"\", SRCH_DV: \"NM\", SRCH_VALUE: \"\"}]),\r\n\t\t\tdsGrp: DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", USR_CD: \"\"}]),\t\t\t\t\r\n\t\t\tlastUsrCd     : '',\r\n\t\t\tlastStartDate : '',\r\n\t\t\tlastEndDate   : ''\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.fileUploadValidation = this.fileUploadValidation.bind(this);\t\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\t\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.searchEnterKey = this.searchEnterKey.bind(this);\r\n\t\t\r\n\t}\r\n\t\r\n\tcomponentDidMount () {\t\r\n\t\tthis.transaction('STT040000_R01');\r\n\t}\r\n\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'STT040000_R01' :\r\n\r\n\t\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.startDate) || StrLib.isNull(this.state.rangeCalendarProps.endDate) )  {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.state.rangeCalendarProps.startDate > this.state.rangeCalendarProps.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색시작일자가 검색종료일보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT040000_C01':\r\n\r\n\t\t\t\tif(this.state.fileDataArray.length === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['STT를 수행할 데이터가 없습니다.']);\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"STT040000_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['grdSelfFileList']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['grdSelfFileList']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('STT040000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId(transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\t\t\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['gridProps']['grdSelfFileList']['paging'].start;\r\n\t\tlet pageLimit   = state['gridProps']['grdSelfFileList']['paging'].size;\r\n\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'STT040000_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_SelfJobHistory\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsSelfFileList\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ START_DATE  : this.state.rangeCalendarProps.startDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  END_DATE    : this.state.rangeCalendarProps.endDate \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  REQ_USR     : this.state.dsSrch.records[0][\"USR_CD\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t   ,  QUERY_START : pageStart\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \t   ,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT040000_R02':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_SelfJobHistory\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsSelfFileList\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSrchParamInfo', [{  START_DATE  : this.state.lastStartDate\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t,  END_DATE    : this.state.lastEndDate \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t,  REQ_USR     : this.state.lastUsrCd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}]);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT040000_C01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:\"STT.C_JobSelfInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsSelfFileList\",\r\n\t\t\t\t});\t\t\t\t\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSelfFileList', this.state.fileDataArray);\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\r\n\t\t\ttransManager.agent();\r\n\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t\r\n\t\tlet state = this.state;\r\n\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STT040000_R01':\t\t\t\r\n\t\t\tif(res.data.dsSelfFileList.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSelfFileList\", res.data.dsSelfFileList);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tstate.lastUsrCd     = state['selectboxProps']['selUserList'].value;\r\n\t\t\t\tstate.lastStartDate = state['rangeCalendarProps'].startDate;\r\n\t\t\t\tstate.lastEndDate   = state['rangeCalendarProps'].endDate;\r\n\t\t\t\tstate['gridProps']['grdSelfFileList']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t\t\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSelfFileList\", \"\");\t\t\t\t\t\t\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'STT040000_R02':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSelfFileList\", res.data.dsSelfFileList);\r\n\t\t\t\r\n\t\t\tif (this.state.gridProps.grdSelfFileList.paging.excelLoadAll) {\r\n\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t, gridProps: {...this.state.gridProps, \r\n\t\t\t\t\t\tgrdSelfFileList : { ...this.state.gridProps.grdSelfFileList\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.grdSelfFileList.paging\r\n\t\t\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t\t\t, excelLoadAll: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.selfFileListGrd.downExcelData();\r\n\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t, gridProps: {...this.state.gridProps, \r\n\t\t\t\t\t\tgrdSelfFileList : { ...this.state.gridProps.grdSelfFileList\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.grdSelfFileList.paging\r\n\t\t\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t\t\t, excelLoadAll: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'STT040000_C01':\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', ['수동STT 요청이 정상적으로 완료 되었습니다.']);\r\n\t\t\tthis.setState({...this.state , fileDataArray : []});\t\t\t\t\t\t\t\t\t\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSelfFileSearchList\" :\t\t\r\n\t\t\t\t\t\tif (this.validation(\"STT040000_R01\")) this.handler.setDs('STT040000_R01');\t\r\n\t\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'searchDateCalender':\r\n\t\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].startDate = e.startDate;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].endDate   = e.endDate;\r\n\t\t\t\t\t\tthis.setState(state); \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\t\t\r\n        upload : {\r\n\t\t\tonUploadComplete : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"fileUpload\":\r\n\t\t\t\t\tlet fileArray = this.state.fileDataArray\r\n\t\t\t\t\tconst jobId = DateLib.getTodayTime();\r\n\t\t\t\t\t\r\n\t\t\t\t\te.files.forEach((item, index) => {\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet row = item.file\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\trow.JOB_ID\t\t\t\t= jobId;\r\n\t\t\t\t\t\trow.JOB_DV_CD\t\t\t= ComLib.getComCodeValue('STT_TBL_JOB_INFO', 'DV_CD')[0];\r\n\t\t\t\t\t\trow.CALL_ID\t\t\t\t= row.name;\r\n\r\n\t\t\t\t\t\t//현재는 코드에 반영되어 있는 서버리스트 서버패스의 코드값의 0번째를 셋팅함 PATH 연구소와 대화 필요\r\n\t\t\t\t\t\t// row.SERVER_NM\t\t\t= ComLib.getComCodeValue('SERVER_LIST')[0]\r\n\t\t\t\t\t\trow.SERVER_NM\t\t\t= 'rndvrm';\r\n\t\t\t\t\t\t//파일 PATH 이지만 연구소에서는 실질적으로 PATH + FILE_NAME 구로조 시스템이 되어 있기 때문에 \r\n\t\t\t\t\t\t// row.FILE_PATH \t\t\t= ComLib.getComCodeValue('SERVER_PATH')[0] + \"/\" + item.file.name\r\n\t\t\t\t\t\trow.FILE_PATH \t\t\t= \"/home/vrm/work/\" +  e.savedFileList[index].NEW_NM;\r\n\t\t\t\t\t\trow.FILE_NM   \t\t\t= e.savedFileList[index].NEW_NM;\r\n\t\t\t\t\t\trow.FILE_SIZE\t\t\t= item.file.size;\r\n\r\n\t\t\t\t\t\tfileArray.push(row)\r\n\t\t\t\t\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tthis.setState({...this.state, fileDataArray : fileArray});\t\t\r\n\t\t\t\t\tif (this.validation(\"STT040000_C01\")) this.transaction(\"STT040000_C01\");\t\t\t\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\t\t\t\r\n\t\t\t\tcase 'selUserList':\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"USR_CD\", e.target.value);\r\n\t\t\t\t\tbreak;\t\t\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\t\t\r\n\t\t\t},\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonActionCellClicked : (e) => {\r\n\t\t\t\tconsole.log(e.data)\r\n\t\t\t\tlet option = { width: '600px', height: '740px', modaless: true, UUID: e.data.STT_UNQ, JOB_TP: e.data.JOB_TP, callId : e.data.CALL_ID, useUuid: true}\r\n\t\t\t\tComLib.openPlayer(option);\r\n\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tthis.selfFileListGrdApi = e.gridApi;\r\n\t\t\t\tthis.selfFileListGrd    = e.grid;\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\t\t\t\t\r\n\t\t\t\tif (!this.state.gridProps.grdSelfFileList.paging.loading) {\r\n\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t, gridProps : {...this.state.gridProps\r\n\t\t\t\t\t\t\t, grdSelfFileList : { ...this.state.gridProps.grdSelfFileList\r\n\t\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.grdSelfFileList.paging\r\n\t\t\t\t\t\t\t\t\t, start : this.state.gridProps.grdSelfFileList.paging.start + this.state.gridProps.grdSelfFileList.paging.size\r\n\t\t\t\t\t\t\t\t\t, loading : true\r\n\t\t\t\t\t\t\t\t\t, excelLoadAll : e.excelLoadAll\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.transaction(\"STT040000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t} \r\n\t\t\t},\r\n\t\t},\r\n\t\t\t\t\r\n\t}\r\n\r\n\tfileUploadValidation(files) {\t\t\r\n\t\tconsole.log('fileUploadValidation')\r\n\t\treturn true;\r\n\t}\r\n\r\n\tsearchEnterKey(e) {\r\n\t\te.preventDefault();\r\n\t\tif (e.code === 'Enter') {\r\n\t\t\tif (this.validation(\"STT040000_R01\")) this.handler.setDs('STT040000_R01');\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t  \r\n\trender () {\r\n\t\treturn (\t\t\t\r\n\t\t\t<React.Fragment >\t\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<div className=\"ie_flow_root\" style={{alignItems:\"center\", display:\"flow-root\"}}>\r\n\t\t\t\t\t\t\t<LFloatArea>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.rangeCalendarProps.label} req={true} />\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.id}\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.strtId}\r\n\t\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<div style={{marginLeft : '10px'}}/>\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.selectboxProps.selUserList.label}/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selUserList.id}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getUserList(this.state.dsGrp, false), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selUserList.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selUserList.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selUserList.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.buttonProps.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.buttonProps.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.buttonProps.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden   = {this.state.buttonProps.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tinnerImage={true}\r\n\t\t\t\t\t\t\t\t\t\tmr     = {10}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor  = {\"blue\"} \r\n\t\t\t\t\t\t\t\t\t\ticon   = {\"srch\"}\r\n\t\t\t\t\t\t\t\t\t\tfiiled = {\"o\"}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</div>\t\t\t\t\t\t\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tareaName = {this.state.gridProps.grdSelfFileList.areaName}\t\t\r\n\t\t\t\t\t\t\tid       = {this.state.gridProps.grdSelfFileList.id}\r\n\t\t\t\t\t\t\theight   = {this.state.gridProps.grdSelfFileList.height}\r\n\t\t\t\t\t\t\theader   = {this.state.gridProps.grdSelfFileList.header}\t\r\n\t\t\t\t\t\t\tdata     = {this.state.dsSelfFileList}\r\n\r\n\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\tdnlExcelBtn = {true}\r\n\t\t\t\t\t\t\trowNum      = {true}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging      = {true}\r\n\t\t\t\t\t\t\tinfinite    = {true}\r\n\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsSelfFileList.getRecords().length === 0) ? 0 : this.state.dsSelfFileList.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\t\r\n\t\t\t\t\t\t\tonScrollEnd        = {this.event.grid.onScrollEnd}\t\t\r\n\t\t\t\t\t\t\tonActionCellClicked= {this.event.grid.onActionCellClicked}\r\n\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t<Label value={\"MP3, WAV, PCM 형식 지원합니다.\"} req={true} />\r\n\t\t\t\t\t\t\t<Label value={\"동시 최대 업로드 가능 파일수는 50개 입니다.\"} req={true} />\r\n\t\t\t\t\t\t\t<Label value={\"100 MB 를 초과 하는 파일은 업로드 할 수 없습니다.\"} req={true} />\r\n\t\t\t\t\t\t\t<Label value={\"전체 파일 용량이 1GB를 초과 할수 없습니다.\"} req={true} />\r\n\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t<InputFileUpload\r\n\t\t\t\t\t\t\twidth = {this.state.fileUpload.width} \r\n\t\t\t\t\t\t\theight = {this.state.fileUpload.height} \r\n\t\t\t\t\t\t\tid = {this.state.fileUpload.id}\r\n\t\t\t\t\t\t\tonUploadComplete = {this.event.upload.onUploadComplete}\r\n\t\t\t\t\t\t\tuploadValidation = {this.fileUploadValidation}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</ComponentPanel>\t\t\t\t\t\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\t\r\n}\r\n\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {Textfield, Textarea} from 'components';\r\nimport {StrLib, ComLib, newScrmObj} from 'common';\r\n\r\n\r\n//임시로 가운데 버튼 하드코딩\r\n// const wordStyle =\r\n// styled.div`\r\n\r\n// border-width: 2px 4px;\r\n// border-radius: 40px;\r\n// background: gold;\r\n// border: ridge gold;\r\n// `\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\ticon : 'srch',\r\n\t\t\t\t\tinnerImage : true ,\r\n\t\t\t\t\tcolor : \"blue\"\r\n\t\t\t\t},\r\n\t\t\t\tbtnAddWord : {\r\n\t\t\t\t\tid : 'btnAddWord',\r\n\t\t\t\t\tdisabled : true,\r\n\t\t\t\t\tvalue : '추가',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\tcolor : \"purple\"\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSearchCW : {\r\n\t\t\t\t\tid   : 'iptSearchCW',\r\n\t\t\t\t\tname : 'iptSearchCW',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '복합명사 검색',\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false,\r\n\r\n\t\t\t\t},\r\n\t\t\t\tiptAddCW : {\r\n\t\t\t\t\tid   : 'iptAddCW',\r\n\t\t\t\t\tname : 'iptAddCW',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '복합명사를 입력하세요',\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tCmpWordList: null,\r\n\r\n\t\t}\r\n\r\n\t\tthis.event.iconClick.onClick = this.event.iconClick.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.filterCmpWrodList(this.props.cmpWordList) \r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props !== prevProps) {\r\n\t\t\tthis.filterCmpWrodList(this.props.cmpWordList) \t\t  \t\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'checkCompWord' :\r\n\t\t\t\tlet targetParams = params[1]\r\n\r\n\t\t\t\tif(StrLib.isNull(targetParams))  {\t\t\t\t\t\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '추가하실 복합명사를 입력해주세요.');\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (!/^[가-힣\\n]+$/.test(targetParams)) {\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t//return x.toString().replace(/,/g,\"\");\r\n\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '복합 명사 추가에 실패하였습니다. \\n한글만 입력해 주세요. \\n(영문자, 특수문자, 띄어쓰기 불가능)');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\r\n\t\t\t\tcase \"btnAddWord\" :\r\n\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\tlet addWord = state.textFieldProps.iptAddCW.value;\r\n\r\n\t\t\t\t\tif(this.validation('checkCompWord', addWord)){\r\n\r\n\t\t\t\t\t\t// let newWordArr = this.props.cmpWordList;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t// let checkCnt = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// newWordArr.forEach((item, index) => {\t\r\n\t\t\t\t\t\t// \tif(item.word === addWord && item.rowtype !== newScrmObj.constants.crud.remove){\t\r\n\r\n\t\t\t\t\t\t// \t\tcheckCnt++\t\r\n\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t// if (checkCnt === 0) {\r\n\t\t\t\t\t\t// \tthis.props.addCombineWord({targetWord : addWord});\r\n\r\n\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t// \tComLib.openDialog('A', 'SYSI0010', '이미 추가된 복합명사 입니다.');\r\n\t\t\t\t\t\t// }\r\n\t\t\t\t\t\tlet dupChkArr = addWord.split(\"\\n\");\r\n\t\t\t\t\t\tlet uniqueArr = [];\r\n\t\t\t\t\t\tdupChkArr.forEach((element) => {\r\n\t\t\t\t\t\t\tif (!uniqueArr.includes(element)) {\r\n\t\t\t\t\t\t\t\tuniqueArr.push(element);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tthis.props.addCombineWord({targetWord : uniqueArr});\r\n\t\t\t\t\t\tstate['textFieldProps']['iptAddCW'].value = '';\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState(state);\t\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnSearch\":\r\n\t\t\t\t\tlet propsCmpWordList = this.props.cmpWordList;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.filterCmpWrodList(propsCmpWordList)\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\t\t\t\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['textFieldProps'][e.target.id].value = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t},\r\n\t\t\tonKeyPress : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptAddCW' :\r\n\t\t\t\t\t// if(e.key === 'Enter') {\t\t\r\n\t\t\t\t\t// \te.preventDefault();\t\t\t\t\r\n\t\t\t\t\t// \tlet addWord = this.state.textFieldProps.iptAddCW.value;\r\n\r\n\r\n\t\t\t\t\t// \tif (this.validation('checkCompWord', addWord)){\r\n\r\n\t\t\t\t\t// \t\t// let newWordArr = this.props.cmpWordList;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\t// let checkCnt = 0;\r\n\r\n\t\t\t\t\t// \t\t// newWordArr.forEach((item, index) => {\t\r\n\t\t\t\t\t// \t\t// \tif(item.word === addWord && item.rowtype !== newScrmObj.constants.crud.remove){\t\r\n\t\t\t\t\t// \t\t// \t\t// rowTypd 에 따라 update 시킬껀지 아니명 그냥 중복 확인해서 카운트 늘릴껀지 확인 로직\r\n\r\n\t\t\t\t\t// \t\t// \t\tcheckCnt++\t\r\n\t\t\t\t\t// \t\t// \t}\r\n\t\t\t\t\t// \t\t// });\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\t// if (checkCnt === 0) {\r\n\t\t\t\t\t// \t\t// \tthis.props.addCombineWord({targetWord : addWord});\r\n\r\n\t\t\t\t\t// \t\t// } else {\r\n\t\t\t\t\t// \t\t// \tComLib.openDialog('A', 'SYSI0010', '중복 처리 되었습니다.');\r\n\t\t\t\t\t// \t\t// }\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\tthis.props.addCombineWord({targetWord : addWord});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\tlet state = this.state;\r\n\t\t\t\t\t// \t\tstate['textFieldProps']['iptAddCW'].value = '';\r\n\t\t\t\t\t// \t\tthis.setState(state);\t\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iptSearchCW' :\r\n\t\t\t\t\tif(e.key === 'Enter') {\t\r\n\t\t\t\t\t\tlet propsCmpWordList = this.props.cmpWordList;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.filterCmpWrodList(propsCmpWordList)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t// 임시 기능 \r\n\t\ticonClick : {\r\n\t\t\tonClick : (e) => {\t\t\t\t\r\n\t\t\t\tthis.props.delCombineWord({targetWord : e.currentTarget.name})\r\n\r\n\t\t\t}\r\n\t\t}\t\t\t\t\r\n\t}\r\n\r\n\tfilterCmpWrodList(propsList) {\r\n\t\tlet state = this.state;\r\n\r\n\t\tlet searchWord = state.textFieldProps.iptSearchCW.value;\r\n\t\tlet NewList = propsList.map((word, index )=> (\t\t\t\t\r\n\t\t\tword.rowtype !== newScrmObj.constants.crud.remove && (!StrLib.isNull(searchWord) ? word.word === searchWord : true) ?\r\n\t\t\t\t<div \r\n\t\t\t\t\tid={\"cmbWord_\" + index}\r\n\t\t\t\t\tstyle={{borderRadius: '2em', display : 'inline-block', paddingLeft: '10px', margin: '5px'}}\r\n\t\t\t\t\tclassName={'scrm-btn ' + (word.rowtype === newScrmObj.constants.crud.read ? this.props.orgColor : this.props.newColor) + '-o'}\r\n\t\t\t\t>\r\n\t\t\t\t\t{word.word} \r\n\t\t\t\t\t<a name={word.word} onClick={this.event.iconClick.onClick}>\r\n\t\t\t\t\t\t<i name={word.word} className=\"xi-close-min xi-x\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t:\r\n\t\t\tnull\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t))\r\n\r\n\t\tstate['CmpWordList'] = NewList\r\n\r\n\t\tthis.setState(state);\r\n\t}\r\n\t\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textfield\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\twidth = {300}\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSearchCW.id}\r\n\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSearchCW.name}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSearchCW.value}\r\n\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSearchCW.placeholder}\r\n\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\tmaxLength   = {10}\r\n\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptSearchCW.readOnly}\r\n\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptSearchCW.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tvalue      = {this.state.buttonProps.btnSearch.value} \r\n\t\t\t\t\t\t\t\t\tcolor      = {this.state.buttonProps.btnSearch.color} \r\n\t\t\t\t\t\t\t\t\tfiiled     = {true}  \r\n\t\t\t\t\t\t\t\t\tid         = {this.state.buttonProps.btnSearch.id}  \r\n\t\t\t\t\t\t\t\t\tinnerImage = {this.state.buttonProps.btnSearch.innerImage}  \t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ticon       = {this.state.buttonProps.btnSearch.icon} \r\n\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel height ={\"400px\"} overFlowYScroll={true}>\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{display: 'inline-block'}}>\r\n\t\t\t\t\t\t\t{this.state.CmpWordList}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<Textarea\t\t\r\n\t\t\t\t\t\t\t\t\twidth        = {\"600px\"}\t\r\n\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptAddCW.id}\r\n\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptAddCW.name}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptAddCW.value}\r\n\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptAddCW.placeholder}\r\n\t\t\t\t\t\t\t\t\trows        = {4}\r\n\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptAddCW.readOnly}\r\n\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptAddCW.disabled}\r\n\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tvalue={this.state.buttonProps.btnAddWord.value} \r\n\t\t\t\t\t\t\t\t\tcolor={this.state.buttonProps.btnAddWord.color} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tid={this.state.buttonProps.btnAddWord.id}  \r\n\t\t\t\t\t\t\t\t\tfiiled = {true}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {Textfield, Textarea} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, StrLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsStudyList : DataLib.datalist.getInstance(),\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\ticon : 'srch',\r\n\t\t\t\t\tinnerImage : true ,\r\n\t\t\t\t\tcolor : \"blue\"\r\n\t\t\t\t},\r\n\t\t\t\tbtnAddSentence : {\r\n\t\t\t\t\tid : 'btnAddSentence',\r\n\t\t\t\t\tdisabled : true,\r\n\t\t\t\t\tvalue : '추가',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\tcolor : \"purple\",\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSearchSentence : {\r\n\t\t\t\t\tid   : 'iptSearchSentence',\r\n\t\t\t\t\tname : 'iptSearchSentence',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '문장검색',\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t\tiptAddSentence : {\r\n\t\t\t\t\tid   : 'iptAddSentence',\r\n\t\t\t\t\tname : 'iptAddSentence',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '문장을 입력하세요',\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddSentence: \"\",\r\n\t\t\tsentenceList: null\r\n\t\t}\r\n\r\n\t\tthis.event.iconClick.onClick = this.event.iconClick.onClick.bind(this);\r\n\t\tthis.event.input.onChange = this.event.input.onChange.bind(this);\r\n\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.filterSentenceList(this.props.sentenceList) \r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props !== prevProps) {\r\n\t\t\tthis.filterSentenceList(this.props.sentenceList) \t\t  \t\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'checkSentence' :\r\n\t\t\t\tlet targetParams = params[1]\r\n\r\n\t\t\t\tif(StrLib.isNull(targetParams))  {\t\t\t\t\t\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '추가하실 문장를 입력해주세요.');\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(!/^[가-힣\\s\\n]+$/.test(targetParams)) {\t\t\t\t\t\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '문장 추가에 실패하였습니다. \\n 한글만 입력해주세요. \\n(영문자, 특수문자 불가능)');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\tbreak;\r\n\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\r\n\t\t\t\t\tcase \"btnAddSentence\" :\t\t\t\r\n\t\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t\tlet addSentence = state.textFieldProps.iptAddSentence.value;\r\n\r\n\t\t\t\t\t\tif(this.validation('checkSentence', addSentence)){\r\n\r\n\t\t\t\t\t\t\t// let newSentenceArr = this.props.sentenceList;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// let checkCnt = 0;\r\n\r\n\t\t\t\t\t\t\t// newSentenceArr.forEach((item, index) => {\t\r\n\t\t\t\t\t\t\t// \tif(item.sentence === addSentence && item.rowtype !== newScrmObj.constants.crud.remove){\t\r\n\r\n\t\t\t\t\t\t\t// \t\tcheckCnt++\t\r\n\t\t\t\t\t\t\t// \t}\r\n\t\t\t\t\t\t\t// });\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t// if (checkCnt === 0) {\r\n\t\t\t\t\t\t\t// \tthis.props.addSentence({targetSentence : addSentence});\r\n\r\n\t\t\t\t\t\t\t// } else {\r\n\t\t\t\t\t\t\t// \tComLib.openDialog('A', 'SYSI0010', '중복 처리 되었습니다.');\r\n\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\tlet dupChkArr = addSentence.split(\"\\n\");\r\n\t\t\t\t\t\t\tlet uniqueArr = [];\r\n\t\t\t\t\t\t\tdupChkArr.forEach((element) => {\r\n\t\t\t\t\t\t\t\tif (!uniqueArr.includes(element)) {\r\n\t\t\t\t\t\t\t\t\tuniqueArr.push(element);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\t\tthis.props.addSentence({targetSentence : uniqueArr});\r\n\r\n\t\t\t\t\t\t\tstate['textFieldProps']['iptAddSentence'].value = '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.setState(state);\t\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnSearch\":\r\n\t\t\t\t\tlet propsSentenceList = this.props.sentenceList;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tthis.filterSentenceList(propsSentenceList)\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tinput : {\t\t\t\r\n\t\t\tonChange : (e) => {\t\t\t\t\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['textFieldProps'][e.target.id].value = e.target.value;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t},\r\n\t\t\tonKeyPress : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptAddSentence' :\r\n\t\t\t\t\t// if(e.key === 'Enter') {\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \tlet state = this.state;\r\n\t\t\t\t\t// \tlet addSentence = state.textFieldProps.iptAddSentence.value;\r\n\r\n\t\t\t\t\t// \tif(this.validation('checkSentence', addSentence)){\r\n\r\n\t\t\t\t\t// \t\t// let newSentenceArr = this.props.sentenceList;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\t// let checkCnt = 0;\r\n\r\n\t\t\t\t\t// \t\t// newSentenceArr.forEach((item, index) => {\t\r\n\t\t\t\t\t// \t\t// \tif(item.sentence === addSentence && item.rowtype !== newScrmObj.constants.crud.remove){\t\r\n\r\n\t\t\t\t\t// \t\t// \t\tcheckCnt++\t\r\n\t\t\t\t\t// \t\t// \t}\r\n\t\t\t\t\t// \t\t// });\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\t// if (checkCnt === 0) {\r\n\t\t\t\t\t// \t\t// \tthis.props.addSentence({targetSentence : addSentence});\r\n\r\n\t\t\t\t\t// \t\t// } else {\r\n\t\t\t\t\t// \t\t// \tComLib.openDialog('A', 'SYSI0010', '이미 추가된 문장 입니다.');\r\n\t\t\t\t\t// \t\t// }\r\n\t\t\t\t\t// \t\tthis.props.addSentence({targetSentence : addSentence});\r\n\r\n\t\t\t\t\t// \t\tstate['textFieldProps']['iptAddSentence'].value = '';\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t// \t\tthis.setState(state);\t\r\n\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iptSearchSentence' :\r\n\t\t\t\t\tif(e.key === 'Enter') {\t\r\n\t\t\t\t\t\tlet propsSentenceList = this.props.sentenceList;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.filterSentenceList(propsSentenceList)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\t// 임시 기능 \r\n\t\ticonClick : {\r\n\t\t\tonClick : (e) => {\t\t\t\t\r\n\t\t\t\tthis.props.delSentence({targetSentence : e.currentTarget.name})\r\n\r\n\t\t\t}\r\n\t\t}\t\t\t\t\r\n\t}\r\n\r\n\tfilterSentenceList(propsList) {\r\n\t\tlet state = this.state;\r\n\t\tlet searchSentence = state.textFieldProps.iptSearchSentence.value;\r\n\r\n\t\tlet NewList = propsList.map((sentence, index )=> (\t\t\t\t\r\n\t\t\tsentence.rowtype !== newScrmObj.constants.crud.remove && (!StrLib.isNull(searchSentence) ? sentence.sentence === searchSentence : true) ?\r\n\t\t\t\t<div \r\n\t\t\t\t\tid={\"cmbSentence_\" + index}\r\n\t\t\t\t\tstyle={{borderRadius: '2em', display : 'inline-block', paddingLeft: '10px', margin: '5px'}}\r\n\t\t\t\t\tclassName={'scrm-btn ' + (sentence.rowtype === newScrmObj.constants.crud.read ? this.props.orgColor : this.props.newColor) + '-o'}\r\n\t\t\t\t>\r\n\t\t\t\t\t{sentence.sentence} \r\n\t\t\t\t\t<a name={sentence.sentence} onClick={this.event.iconClick.onClick}>\r\n\t\t\t\t\t\t<i name={sentence.sentence} className=\"xi-close-min xi-x\"></i>\r\n\t\t\t\t\t</a>\r\n\t\t\t\t</div>\r\n\t\t\t:\r\n\t\t\tnull\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t))\r\n\t\tstate['sentenceList'] = NewList\r\n\r\n\t\tthis.setState(state);\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t<Textfield\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptSearchSentence.id}\r\n\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptSearchSentence.name}\r\n\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptSearchSentence.value}\r\n\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptSearchSentence.placeholder}\r\n\t\t\t\t\t\t\t\tminLength   = {3}\r\n\t\t\t\t\t\t\t\tmaxLength   = {15}\r\n\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptSearchSentence.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptSearchSentence.disabled}\r\n\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tvalue      = {this.state.buttonProps.btnSearch.value} \r\n\t\t\t\t\t\t\t\tcolor      = {this.state.buttonProps.btnSearch.color} \r\n\t\t\t\t\t\t\t\tfiiled     = {true}  \r\n\t\t\t\t\t\t\t\tid         = {this.state.buttonProps.btnSearch.id}  \r\n\t\t\t\t\t\t\t\tinnerImage = {this.state.buttonProps.btnSearch.innerImage}  \t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\ticon       = {this.state.buttonProps.btnSearch.icon} \r\n\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<ComponentPanel height ={\"400px\"} overFlowYScroll={true}>\t\t\t\t\t\t\r\n\t\t\t\t\t<div style={{display: 'inline-block'}}>\r\n\t\t\t\t\t\t{this.state.sentenceList}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</ComponentPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t<Textarea\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\twidth       = {\"600px\"}\r\n\t\t\t\t\t\t\t\trows        = {4}\r\n\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptAddSentence.id}\r\n\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptAddSentence.name}\r\n\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptAddSentence.value}\r\n\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptAddSentence.placeholder}\r\n\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptAddSentence.readOnly}\r\n\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptAddSentence.disabled}\r\n\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tvalue   = {this.state.buttonProps.btnAddSentence.value} \r\n\t\t\t\t\t\t\t\t\tcolor   = {this.state.buttonProps.btnAddSentence.color} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tid      = {this.state.buttonProps.btnAddSentence.id}  \r\n\t\t\t\t\t\t\t\t\tfiiled  = {true}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</SubFullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// STT 학습\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup} from 'components';\r\nimport {BasicButton as Button} from 'components';\r\nimport {Grid, Tabs, TabPanel} from 'components';\r\nimport {ComLib, DataLib, ExcelLib, TransManager, newScrmObj, StrLib} from 'common';\r\n\r\nimport ReactFileReader from 'react-file-reader';\r\n\r\nimport STT050100 from '../STT050100';\r\nimport STT050200 from '../STT050200';\r\nimport excel           from 'xlsx';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.trainListGridApi = null;\r\n\t\tthis.trainListGrid    = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsTrainList    : DataLib.datalist.getInstance(),\r\n\t\t\tdsWordList     : DataLib.datalist.getInstance(),\r\n\t\t\tdsSentenceList : DataLib.datalist.getInstance(),\r\n\t\t\tdsTrainHistory : DataLib.datalist.getInstance(),\r\n\t\t\tactiveTab : 0,\r\n\t\t\tbuttonProps : {\r\n\t\t\t\tbtnDataDownload : {\r\n\t\t\t\t\tid : 'btnDataDownload',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '데이터 다운로드',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\tcolor : 'green',\r\n\t\t\t\t},\r\n\t\t\t\tbtnExcelUpload : {\r\n\t\t\t\t\tid : 'btnExcelUpload',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '파일업로드',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\tcolor : 'green',\r\n\t\t\t\t},\r\n\t\t\t\tbtnExecuteLearning : {\r\n\t\t\t\t\tid : 'btnExecuteLearning',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '학습진행',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\tcolor : 'purple',\r\n\t\t\t\t},\r\n\t\t\t\tbtnOpenLearningHist : {\r\n\t\t\t\t\tid : 'btnOpenLearningHist',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '학습로그',\r\n\t\t\t\t\thidden : false,\r\n\t\t\t\t\tcolor : 'blue',\r\n\t\t\t\t},\t\t\t\t\r\n\t\t\t},\r\n\t\t\tgridProps : {\r\n\t\t\t\tgrdTrainList : {\r\n\t\t\t\t\tareaName : '학습 목록',\r\n\t\t\t\t\tid : 'grdTrainList',\r\n\t\t\t\t\theader : \r\n\t\t\t\t\t[\t\t\t\t\t\t  \t\t\r\n\t\t\t\t\t\t{headerName:  '학습일자',\tfield: 'TRN_DTM',\t\t colId: 'TRN_DTM',\t\t}\r\n\t\t\t\t\t\t,{headerName: '제목',\tfield: 'TRN_TIT',\t\t\tcolId: 'TRN_TIT',\t\teditable: false }\r\n\t\t\t\t\t\t,{headerName: '작업상태',\tfield: 'TRN_STATE',\t\t\tcolId: 'TRN_STATE',\t\teditable: false,\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'TRN_STATE')},\r\n\t\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('CMN', params.value, 'TRN_STATE')}}\r\n\t\t\t\t\t],\t\t\t\t\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t},\t\t\t\t\t\r\n\t\t\t\t},\r\n\t\t\t},\t\t\t\t\r\n\t\t\tfileName: '',\r\n\t\t\texportFileFlag: false,\r\n\t\t\tupdateFlag: false // 변경금지 DS 변경할떄 리엑트 인식 못하는 경우 버그 잡기용\r\n\t\t}\r\n\t\tthis.event.tab.onClick\t\t= this.event.tab.onClick.bind(this);\r\n\t\tthis.event.button.onClick\t= this.event.button.onClick.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"STT050000_R01\");\r\n\t\t\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STT050000_R01':\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'executeLearning':\r\n\t\t\tif (!this.state.dsWordList.isUpdated() && !this.state.dsSentenceList.isUpdated()) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', '변경 항목 없음');\t\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"STT050000_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['grdTrainList']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['grdTrainList']['paging'].page = 1;\r\n\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('STT050000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\t\t\r\n\t\tlet serviceid = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\t\t\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['gridProps']['grdTrainList']['paging'].start;\r\n\t\tlet pageLimit   = state['gridProps']['grdTrainList']['paging'].size;\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\t\r\n\t\t\tcase 'STT050000_R01':\t\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_getTrainList\",\r\n\t\t\t\t\tdatasetsend: \"dsPaging\",\r\n\t\t\t\t\tdatasetrecv: \"dsTrainList\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsPaging', [{QUERY_START : pageStart,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  QUERY_LIMIT : pageLimit}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT050000_R02':\t\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_getTrainList\",\r\n\t\t\t\t\tdatasetsend: \"dsPaging\",\r\n\t\t\t\t\tdatasetrecv: \"dsTrainList\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsPaging', [{QUERY_START : pageStart,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  QUERY_LIMIT : pageLimit}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT050000_R03':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"STT.R_getTrainStateChk\",\r\n\t\t\t\t\tdatasetsend: \"dsEmpty\",\r\n\t\t\t\t\tdatasetrecv: \"dsTrainState\",\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\ttransManager.addDataset('dsEmpty', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t// case 'STT050000_R03':\r\n\t\t\t// \ttransManager.addConfig({\r\n\t\t\t// \t\tdao: transManager.constants.dao.base,\r\n\t\t\t// \t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t// \t\tsqlmapid:\"STT.R_getTrainHistory\",\r\n\t\t\t// \t\tdatasetsend:\"dsSearch\",\r\n\t\t\t// \t\tdatasetrecv:\"dsTrainHistory\",\r\n\t\t\t// \t});\r\n\t\t\t\t\t\r\n\t\t\t// \tlet monthRangeArr = ComLib.getCommCodeList('TRAIN_LOG_MONTH');\r\n\r\n\t\t\t// \ttransManager.addDataset('dsSearch', [{MONTH_RANGE: monthRangeArr[0].CODE}]);\r\n\t\t\t// \ttransManager.agent();\r\n\r\n\t\t\t// \tbreak;\r\n\t\t\t\t  \r\n\t\t\tcase 'STT050000_C01':\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid:\"STT.C_setTrainSchedule\",\r\n\t\t\t\t\tdatasetsend:\"dsTrainSchedule\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\tlet wordDs     = this.state.dsWordList.getRecords();\r\n\t\t\t\tlet sentenceDs = this.state.dsSentenceList.getRecords();\r\n\t\t\t\tlet combinedWordList = \"\";\r\n\t\t\t\tlet sentenceList     = \"\";\r\n\r\n\t\t\t\tfor(let i = 0; i < wordDs.length; i ++) {\r\n\t\t\t\t\tif (wordDs[i].rowtype !== newScrmObj.constants.crud.remove) {\r\n\t\t\t\t\t\tcombinedWordList += wordDs[i].word;\r\n\r\n\t\t\t\t\t\tif (i + 1 !== wordDs.length) {\r\n\t\t\t\t\t\t\tcombinedWordList += ',';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor(let i = 0; i < sentenceDs.length; i ++) {\r\n\t\t\t\t\tif (sentenceDs[i].rowtype !== newScrmObj.constants.crud.remove) {\t\r\n\t\t\t\t\t\tsentenceList += sentenceDs[i].sentence;\r\n\t\r\n\t\t\t\t\t\tif (i + 1 !== sentenceDs.length) {\r\n\t\t\t\t\t\t\tsentenceList += ',';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t\t\r\n\t\t\t\t\r\n\r\n\t\t\t\ttransManager.addDataset('dsTrainSchedule', [{TRN_TIT: params[3], TRN_DTM: params[1] + ComLib.getComCodeCdVal(\"CMN_SET\", params[2]  ,\"STT_TRN_LST\") + '0000', TRN_WORD: combinedWordList, TRN_SENT: sentenceList, TRN_TP: 'R' }]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT050000_U01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"STT.U_setTrainDelete\",\r\n\t\t\t\t\tdatasetsend:\"dsIndex\",\r\n\t\t\t\t});\r\n\t\r\n\t\t\t\ttransManager.addDataset('dsIndex', [{TRN_UNQ :params[1] }]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\t\r\n\t\tlet state = this.state;\r\n\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'STT050000_R01':\t\r\n\t\t\tlet dsTrainList = res.data.dsTrainList;\r\n\t\t\tlet wordList     = dsTrainList[0].TRN_WORD.split(\",\");\r\n\t\t\tlet sentenceList = dsTrainList[0].TRN_SENT.split(\",\");\r\n\t\t\tlet dsWordList     = [];\r\n\t\t\tlet dsSentenceList = [];\r\n\r\n\t\t\tfor (let i = 0; i < wordList.length; i ++) {\r\n\t\t\t\tdsWordList.push({word: wordList[i]})\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < sentenceList.length; i ++) {\r\n\t\t\t\tdsSentenceList.push({sentence: sentenceList[i]})\r\n\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsTrainList\", dsTrainList);\r\n\t\t\tComLib.setStateInitRecords(this, \"dsWordList\", dsWordList);\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSentenceList\", dsSentenceList);\r\n\t\t\t\r\n\t\t\tlet rows = this.trainListGridApi.rowModel.rowsToDisplay;\r\n\t\t\trows[0].setSelected(true);\r\n\r\n\t\t\tstate['gridProps']['grdTrainList']['paging'].loading = false;\r\n\t\t\t\r\n\t\t\tthis.setState(state);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'STT050000_R02':\t\t\t\t\r\n\t\t\tComLib.setStateInitRecords(this, \"dsTrainList\", res.data.dsTrainList);\r\n\t\t\t\r\n\t\t\tif (this.state.gridProps.grdTrainList.paging.excelLoadAll) {\r\n\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t, gridProps: {...this.state.gridProps, \r\n\t\t\t\t\t\tgrdTrainList : { ...this.state.grdTrainList\r\n\t\t\t\t\t\t\t, paging : { ...this.state.grdTrainList.paging\r\n\t\t\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t\t\t, excelLoadAll: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.trainListGrid.downExcelData();\r\n\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t, gridProps: {...this.state.gridProps, \r\n\t\t\t\t\t\tgrdTrainList : { ...this.state.gridProps.grdTrainList\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.grdTrainList.paging\r\n\t\t\t\t\t\t\t\t, loading : false\r\n\t\t\t\t\t\t\t\t, excelLoadAll: false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\t\r\n\r\n\t\tcase 'STT050000_R03':\r\n\t\t\tlet stateChk = res.data.dsTrainState;\r\n\t\t\t\r\n\t\t\tif(stateChk[0].TrainUse_YN === 'X'){\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', '이미 등록된 학습이 있습니다. \\n학습 완료 후 진행해주세요.');\t\r\n\r\n\t\t\t\treturn;\r\n\t\t \r\n\t\t\t} else {\r\n\t\t\t\tlet option = { width: '500px', height: '400px', modaless: false, callback :  () => {return;}}\r\n\r\n\t\t\t\tComLib.openPop('STT050001', '학습진행', option, this.event.addNewTrainList);\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t// case 'STT050000_R03':\r\n\t\t// \tlet dsTrainHistory = res.data.dsTrainHistory;\r\n\r\n\t\t// \tComLib.setStateInitRecords(this, \"dsTrainHistory\", dsTrainHistory);\r\n\r\n\t\t\t\r\n\r\n\t\t// \tbreak;\r\n\r\n\t\tcase 'STT050000_C01':\t\r\n\t\t\tif (this.validation(\"STT050000_R01\")) this.handler.setDs('STT050000_R01');\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'STT050000_U01':\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', '삭제 되엇습니다.');\t\r\n\r\n\t\t\tif (this.validation(\"STT050000_R01\")) this.handler.setDs('STT050000_R01');\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\tevent = {\r\n\t\ttab : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tthis.setState({...this.state, activeTab : e});\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnDataDownload\":\r\n\t\t\t\t\tthis.onExelDownLoad();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnExcelUpload\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnExecuteLearning\":\r\n\t\t\t\t\tif (this.validation('executeLearning')) {\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.transaction('STT050000_R03')\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t// case \"btnMisSenMan\":\r\n\t\t\t\t// \toption1 = { width: '1200px', height: '600px', modaless: false, callback : () => {} }\r\n\t\t\t\t// \tComLib.openPop('STT050002', '오인식문장관리', option1);\r\n\t\t\t\t// \tbreak;\r\n\r\n\t\t\t\tcase \"btnStudyLog\":\r\n\t\t\t\t\tlet option = { width: '600px', height: '480px', modaless: false,callback : () => {} }\r\n\r\n\t\t\t\t\tComLib.openPop('STT050003', '학습로그', option);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tif (!this.state.gridProps.grdTrainList.paging.loading) {\r\n\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t, gridProps : {...this.state.gridProps\r\n\t\t\t\t\t\t\t, gridSttResultList : { ...this.state.gridProps.grdTrainList\r\n\t\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.grdTrainList.paging\r\n\t\t\t\t\t\t\t\t\t, start : this.state.gridProps.grdTrainList.paging.start + this.state.gridProps.grdTrainList.paging.size\r\n\t\t\t\t\t\t\t\t\t, loading : true\r\n\t\t\t\t\t\t\t\t\t, excelLoadAll : e.excelLoadAll\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.transaction(\"STT050000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t} \r\n\t\t\t},\r\n\t\t\tonGridReady: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdTrainList\":\r\n\t\t\t\t\tthis.trainListGridApi = e.gridApi;\r\n\t\t\t\t\tthis.trainListGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdTrainList\":\r\n\t\t\t\t\tlet selectedRow = this.trainListGrid.getSelectedRows();\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet rows = this.trainListGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet row;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < rows.length; i ++) {\r\n\t\t\t\t\t\tif (rows[i].data.TRN_UNQ === e.data.TRN_UNQ){\r\n\t\t\t\t\t\t\trow = this.trainListGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (row.selected !== true) {\r\n\t\t\t\t\t\trow.setSelected(true);\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet wordList     = selectedRow[0].TRN_WORD.split(\",\");\r\n\t\t\t\t\t\tlet sentenceList = selectedRow[0].TRN_SENT.split(\",\");\r\n\t\t\t\t\t\tlet dsWordList     = [];\r\n\t\t\t\t\t\tlet dsSentenceList = [];\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < wordList.length; i ++) {\r\n\t\t\t\t\t\t\tdsWordList.push({word: wordList[i]})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let i = 0; i < sentenceList.length; i ++) {\r\n\t\t\t\t\t\t\tdsSentenceList.push({sentence: sentenceList[i]})\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsWordList\", dsWordList);\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSentenceList\", dsSentenceList);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeDeleteRow: () => {\r\n\t\t\t\tlet trnState  = this.trainListGrid.getSelectedRows()[0].TRN_STATE;\r\n\t\t\t\tif (trnState === 'S' || trnState === 'Y') {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', '학습 진행중 이거나 적용중인 내역은 삭제 불가능');\t\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t} else {\t\r\n\t\t\t\t\tComLib.openDialog('C', 'SYSI0010', '정말 삭제하시겠습니까?'\r\n\t\t\t\t\t\t, confirm => { \r\n\t\t\t\t\t\t\tif (confirm) {\r\n\t\t\t\t\t\t\t\tlet TRN_UNQ  = this.trainListGrid.getSelectedRows()[0].TRN_UNQ;\r\n\r\n\t\t\t\t\t\t\t\tthis.transaction(\"STT050000_U01\" , TRN_UNQ);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\taddNewTrainList: (e) => {\r\n\t\t\tif (this.validation('STT050000_C01')) {\t\t\t\t\r\n\t\t\t\tthis.transaction('STT050000_C01', e.date, e.time, e.title )\r\n\t\t\t} \r\n\t\t},\r\n\t\taddCombineWord : (e) => {\r\n\t\t\tlet wordList = this.state.dsWordList;\r\n\t\t\tlet newTargetList = e.targetWord;\r\n\r\n\t\t\tlet newWordList = JSON.parse(JSON.stringify(wordList.records))\r\n\r\n\t\t\tlet chkCnt = 0;\r\n\r\n\t\t\tfor (let i = 0; i < newTargetList.length; i ++) {\r\n\t\t\t\tlet newWord = newTargetList[i];\r\n\t\t\t\t\r\n\t\t\t\tlet index = wordList.indexOf('word', newTargetList[i]);\r\n\r\n\t\t\t\tif (!StrLib.isNull(newWord)) {\r\n\r\n\t\t\t\t\tif (index === -1) {\t\t\t\t\t\r\n\t\t\t\t\t\tnewWordList.push({recid:newWordList.length, rowtype: newScrmObj.constants.crud.create, word: newWord})\r\n\t\t\t\t\t\tchkCnt ++;\r\n\r\n\t\t\t\t\t} else {\t\r\n\t\t\t\t\t\tlet filteredOrgRecord = wordList.orgrecords.filter( row => (\r\n\t\t\t\t\t\t\trow.word === newWord\r\n\t\t\t\t\t\t))\r\n\t\t\r\n\t\t\t\t\t\tif (filteredOrgRecord.length > 0) {\r\n\t\t\t\t\t\t\tif (newWordList[index]['rowtype'] !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\t\t\tnewWordList[index]['rowtype'] = newScrmObj.constants.crud.read;\r\n\t\t\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewWordList[index]['rowtype'] = newScrmObj.constants.crud.create;\r\n\t\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (chkCnt > 0) {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsWordList\", newWordList)\r\n\t\t\t\tthis.setState({...this.state, updateFlag: !this.state.updateFlag})\r\n\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', '이미 추가된 복합명사(들) 입니다.');\r\n\t\t\t}\r\n\t\r\n\t\t},\r\n\t\tdelCombineWord : (e) => {\r\n\t\t\tlet wordList = this.state.dsWordList;\r\n\t\t\tlet index = wordList.indexOf('word', e.targetWord);\r\n\t\t\tlet newWordList = JSON.parse(JSON.stringify(wordList.records))\r\n\r\n\t\t\tnewWordList[index]['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\r\n\t\t\tComLib.setStateRecords(this, \"dsWordList\", newWordList)\r\n\r\n\t\t\t//this.setState({...this.state, cmpWordList: this.state.dsWordList.getRecords()})\r\n\r\n\t\t},\r\n\t\taddSentence : (e) => {\r\n\t\t\tlet sentenceList = this.state.dsSentenceList;\r\n\t\t\tlet newTargetList = e.targetSentence;\r\n\t\t\tlet newSentanceList = JSON.parse(JSON.stringify(sentenceList.records))\r\n\t\t\r\n\t\t\tlet chkCnt = 0;\r\n\r\n\t\t\tfor (let i = 0; i < newTargetList.length; i ++) {\r\n\t\t\t\tlet newSentance = newTargetList[i];\r\n\t\t\t\tlet index = sentenceList.indexOf('word', newTargetList[i]);\r\n\t\t\t\tif (!StrLib.isNull(newSentance)) {\r\n\t\t\t\t\tif (index === -1) {\t\t\t\t\t\r\n\t\t\t\t\t\tnewSentanceList.push({recid:newSentanceList.length, rowtype: newScrmObj.constants.crud.create, sentence: newSentance})\r\n\t\t\t\t\t\tchkCnt ++;\r\n\t\r\n\t\t\t\t\t} else {\t\r\n\t\t\t\t\t\tlet filteredOrgRecord = sentenceList.orgrecords.filter( row => (\r\n\t\t\t\t\t\t\trow.sentence === newSentance\r\n\t\t\t\t\t\t))\r\n\t\t\r\n\t\t\t\t\t\tif (filteredOrgRecord.length > 0) {\r\n\t\t\t\t\t\t\tif (newSentanceList[index]['rowtype'] !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\t\t\tnewSentanceList[index]['rowtype'] = newScrmObj.constants.crud.read;\r\n\t\t\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t\t\t}\t\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnewSentanceList[index]['rowtype'] = newScrmObj.constants.crud.create;\r\n\t\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t\t}\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (chkCnt > 0) {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsSentenceList\", newSentanceList)\r\n\t\t\t\tthis.setState({...this.state, updateFlag: !this.state.updateFlag})\r\n\r\n\t\t\t} else {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', '이미 추가된 문장(들) 입니다.');\r\n\t\t\t}\r\n\r\n\t\t},\r\n\t\tdelSentence : (e) => {\r\n\t\t\tlet sentenceList = this.state.dsSentenceList;\r\n\t\t\tlet index = sentenceList.indexOf('sentence', e.targetSentence);\r\n\t\t\tlet newSentenceList = JSON.parse(JSON.stringify(sentenceList.records))\r\n\r\n\t\t\tnewSentenceList[index]['rowtype'] = newScrmObj.constants.crud.remove;\r\n\t\t\t\r\n\t\t\tComLib.setStateRecords(this, \"dsSentenceList\", newSentenceList)\r\n\t\t}\r\n\t}\r\n\t\r\n\tonUploadFiles = async(files) => {\r\n\t\tconst targetFile = files[0];\r\n\r\n\t\t/// 파일 확장자 확인\r\n\t\tconst targetFileName = targetFile.name;\r\n\t\tif ( targetFileName.substring(targetFileName.lastIndexOf('.'), targetFileName.length) !== '.xlsx' ) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', '업로드 가능한 파일 확장자는 xlsx 입니다.');\t\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// read excel\r\n\t\tconst reader = new FileReader();\r\n\t\treader.onload = (e) => {\r\n\t\t  try {\r\n\t\t\t/* Parse data */\r\n\t\t\tconst bstr = e.target.result;\r\n\t\t\tconst wb = excel.read(bstr, {type:'array'});\r\n\t\r\n\t\t\t/// 복합명사 시트 (첫번째 시트)\r\n\t\t\tconst sheetNm1 = wb.SheetNames[0];\r\n\t\t\tif(sheetNm1) {\r\n\t\t\t  const ws1 = wb.Sheets[sheetNm1];\r\n\r\n\t\t\t\tif(ws1.A1) {\r\n\t\t\t\t\tconst cmpData = excel.utils.sheet_to_json(ws1, {header:1});\r\n\t\t\t\t\tlet dsWordList     = [];\r\n\t\t\t\t\tfor (let i = 1; i < cmpData.length; i ++) {\r\n\t\t\t\t\t\tif(!StrLib.isNull(cmpData[i])) {\r\n\t\t\t\t\t\t\tdsWordList.push({word: cmpData[i]})\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsWordList\", dsWordList);\r\n\r\n\t\t\t  \t}\r\n\t\t\t}\r\n\t\t\r\n\t\t\t/////////////////////////////////////\r\n\t\t\t/// 문장 시트 (두번째 시트)\r\n\t\t\tconst sheetNm2 = wb.SheetNames[1];\r\n\t\r\n\t\t\tif(sheetNm2) {\r\n\t\t\t\tconst ws2 = wb.Sheets[sheetNm2];\r\n\t\t\r\n\t\t\t\tif(ws2.A1) {\r\n\t\t\t\t\tconst srtData = excel.utils.sheet_to_json(ws2, {header:1});\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet dsSentenceList = [];\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 1; i < srtData.length; i ++) {\r\n\t\t\t\t\t\tif(!StrLib.isNull(srtData[i])) {\r\n\t\t\t\t\t\t\tdsSentenceList.push({sentence: srtData[i]})\r\n\r\n\t\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSentenceList\", dsSentenceList);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t  } catch(err) {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', '파일 업로드를 실패하였습니다.\\n파일을 확인해 주세요.');\t\r\n\t\t  } finally {\r\n\t\t\tComLib.openDialog('A', 'SYSI0010', '파일 업로드를 성공하였습니다.');\t\r\n\t\t  }\r\n\t\t};\r\n\t\treader.readAsArrayBuffer(targetFile);\r\n\t\r\n\t\t// let req = new TransManager();\r\n\t\r\n\t\t// req.setTransUrl(CommonConstants.url.common);\r\n\t\t// req.addConfig({\r\n\t\t//   dao        : CommonConstants.dao.base,\r\n\t\t//   crudh      : CommonConstants.crudh.read_one,\r\n\t\t//   sqlmapid   : 'COM.P_proc_stt_set_log', \r\n\t\t//   datasetsend: 'reqInfo',\r\n\t\t// });\r\n\t\r\n\t\t// let actUsr = sessionStorage.getItem(\"usrCd\");\r\n\t\t// let selectedTrnList = this.props.selectedTrnList;\r\n\t\r\n\t\t// req.addDataset('reqInfo', { TABLE: \"TRAIN\", KEY: selectedTrnList[0].TRN_UNQ, TYPE:\"UE\", ACT_USR: actUsr, ETC:''});\r\n\t\t// req.agent();\r\n\t\r\n\t}\r\n\t\r\n\tonExelDownLoad = async() => {\t\r\n\t\tif (this.state.activeTab === 0) {\r\n\t\t\tlet header = [{headerName:  '학습_복합명사',\tfield: 'word', colId: 'word'}]\r\n\t\t\tExcelLib.exportToExcel(header, this.state.dsWordList.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy), true, \"복합명사\", this.props.tray.MNU_ID);\r\n\t\t\t\r\n\t\t} else {\r\n\t\t\tlet header = [{headerName:  '학습_문장',\tfield: 'sentence', colId: 'sentence'}]\r\n\t\t\tExcelLib.exportToExcel(header, this.state.dsSentenceList.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy), true, \"문장\", this.props.tray.MNU_ID);\r\n\t\t\t\r\n\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t<FullPanel>\r\n\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Tabs tabWidth='100px' onClick = {this.event.tab.onClick}>\r\n\t\t\t\t\t\t\t\t<TabPanel id = {'STT050100'} index={0} label={'복합명사'}>\r\n\t\t\t\t\t\t\t\t\t<STT050100 \r\n\t\t\t\t\t\t\t\t\t\tcmpWordList   = {this.state.dsWordList.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\taddCombineWord= {this.event.addCombineWord}\r\n\t\t\t\t\t\t\t\t\t\tdelCombineWord= {this.event.delCombineWord}\r\n\t\t\t\t\t\t\t\t\t\torgColor      = {'purple'}\r\n\t\t\t\t\t\t\t\t\t\tnewColor      = {'green'}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t\t<TabPanel id = {'STT050200'} index={1} label={'문장'}>\r\n\t\t\t\t\t\t\t\t\t<STT050200\r\n\t\t\t\t\t\t\t\t\t\tsentenceList= {this.state.dsSentenceList.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\taddSentence = {this.event.addSentence}\r\n\t\t\t\t\t\t\t\t\t\tdelSentence = {this.event.delSentence}\r\n\t\t\t\t\t\t\t\t\t\torgColor    = {'purple'}\r\n\t\t\t\t\t\t\t\t\t\tnewColor    = {'green'}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t</Tabs>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t\t<ReactFileReader  fileTypes={['.xlsx']} handleFiles={this.onUploadFiles}>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\tid    = {this.state.buttonProps.btnExcelUpload.id} \r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor = {this.state.buttonProps.btnExcelUpload.color} \r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue = {this.state.buttonProps.btnExcelUpload.value}\t\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick= {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\t\tml     = {4}\r\n\t\t\t\t\t\t\t\t\t\t\t\tfiiled= {true} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</ReactFileReader>\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tid     = {this.state.buttonProps.btnDataDownload.id} \r\n\t\t\t\t\t\t\t\t\t\t\tcolor  = {this.state.buttonProps.btnDataDownload.color} \r\n\t\t\t\t\t\t\t\t\t\t\tvalue  = {this.state.buttonProps.btnDataDownload.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick= {this.event.button.onClick}\t\r\n\t\t\t\t\t\t\t\t\t\t\tml     = {10}\r\n\t\t\t\t\t\t\t\t\t\t\tfiiled = {true} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\t\r\n\t\t\t\t\t\t\t\t</LFloatArea>\t\r\n\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t<FlexPanel>\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\tid     = {this.state.buttonProps.btnExecuteLearning.id} \r\n\t\t\t\t\t\t\t\t\t\t\tcolor  = {this.state.buttonProps.btnExecuteLearning.color} \r\n\t\t\t\t\t\t\t\t\t\t\tvalue  = {this.state.buttonProps.btnExecuteLearning.value}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick= {this.event.button.onClick}\t\r\n\t\t\t\t\t\t\t\t\t\t\tmr     = {7}\r\n\t\t\t\t\t\t\t\t\t\t\tfiiled = {true} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</FlexPanel>\t\t\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tareaName = {this.state.gridProps.grdTrainList.areaName}\t\t\r\n\t\t\t\t\t\t\t\tid       = {this.state.gridProps.grdTrainList.id}\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\theight   = \"650px\"\r\n\t\t\t\t\t\t\t\tdata     = {this.state.dsTrainList}\r\n\t\t\t\t\t\t\t\theader   = {this.state.gridProps.grdTrainList.header}\r\n\r\n\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\r\n\t\t\t\t\t\t\t\trowNum      = {true}\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tpaging   = {true}\r\n\t\t\t\t\t\t\t\tinfinite = {true}\r\n\r\n\t\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsTrainList.getRecords().length === 0) ? 0 : this.state.dsTrainList.getValue(0, 'totalcount')}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonScrollEnd       = {this.event.grid.onScrollEnd}\r\n\t\t\t\t\t\t\t\tonGridReady       = {this.event.grid.onGridReady}\t\t\t\r\n\t\t\t\t\t\t\t\tonRowClicked      = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonBeforeDeleteRow = {this.event.grid.onBeforeDeleteRow}\r\n\t\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{/* <RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tid=\"btnStudyLog\" \r\n\t\t\t\t\t\t\t\t\t\tmt=\"10px\" \r\n\t\t\t\t\t\t\t\t\t\tcolor=\"blue\"   \r\n\t\t\t\t\t\t\t\t\t\tvalue=\"학습로그\" \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tfiiled = {true} \t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup> */}\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT인식률측정\r\nimport React from 'react';\r\nimport {\r\n\tSearchPanel, ComponentPanel, FullPanel, SubFullPanel, RFloatArea} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {RangeInputCalendar, Selectbox} from 'components';\r\nimport {Table, Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsAccSwt : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tlastSelAccType    : '',\r\n\t\t\tlastSelSearchType : '',\r\n\t\t\tlastCcalSearchDate: '',\r\n\t\t\tlastCalSearchDate : '',\r\n\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselAccType : {\r\n\t\t\t\t\tid       : 'selAccType',\r\n\t\t\t\t\tlabel    : '측정 상태',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList(\"STT_TBL_ACC_ANS\",\"ACC_FLAG\"), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},   \r\n\t\t\t\tselSearchType : {\r\n\t\t\t\t\tid       : 'selSearchType',\r\n\t\t\t\t\tlabel    : '일자 타입',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList(\"STT_TBL_ACC_ANS\",\"DATE_TYPE\"), newScrmObj.constants.select.argument.select),\r\n\t\t\t\t\twidth    : 200,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}, \r\n\t\t\t},\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch: {\r\n\t\t\t\t\tid    : 'btnSearch',\t\t\t\t\r\n\t\t\t\t\tvalue : '조회'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tcalSearchDate : {\r\n\t\t\t\t\tid        : 'calSearchDate',\r\n\t\t\t\t\tstId      : 'calSearchDateStart',\r\n\t\t\t\t\tendId     : 'calSearchDateEnd',\r\n\t\t\t\t\tstartDate : null,\r\n\t\t\t\t\tendDate   : null\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\tgridProps : {\r\n\t\t\t\tgrdAccSwt : {\r\n\t\t\t\t\tid       : 'grdAccSwt',\r\n\t\t\t\t\tareaName : 'STT인식률측정',\r\n\t\t\t\t\theight   : '610px',\r\n\t\t\t\t\theader   : [\r\n\t\t\t\t\t\t\t\t\t{headerName: '센터명',\t\tfield: 'CENT_NM',\t\tcolId: 'CENT_NM'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '파트명',\t\tfield: 'PART_NM',\t\tcolId: 'PART_NM'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '팀명',\t\tfield: 'TEAM_NM',\t\tcolId: 'TEAM_NM'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담원명',\tfield: 'USR_NM',\t\tcolId: 'USR_NM'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '제출일자',\tfield: 'SUBMIT_DT',\t\tcolId: 'SUBMIT_DT'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '상담일자',\tfield: 'CALL_ST_DT',\tcolId: 'CALL_ST_DT'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '측정일자',\tfield: 'REG_DT',\t\tcolId: 'REG_DT'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '내용보기',\tfield: 'ACC_CONT',\t    colId: 'ACC_CONT', \r\n\t\t\t\t\t\t\t\t\t\tcellRenderer: 'actionButton', \r\n\t\t\t\t\t\t\t\t\t\tfiiled: true,\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{headerName: '인식율',\t    field: 'ACC',\t\t\tcolId: 'ACC'},\r\n\t\t\t\t\t\t\t\t\t{headerName: '인식율내역',\tfield: 'ACC_HISTORY',\tcolId: 'ACC_HISTORY', \r\n\t\t\t\t\t\t\t\t\t\tcellRenderer: 'actionButton', \r\n\t\t\t\t\t\t\t\t\t\tfiiled: true,\r\n\t\t\t\t\t\t\t\t\t\tcolor: 'red',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t],\t\t\t\t\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1\r\n\t\t\t\t\t},\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STT060000_R01':\r\n\t\t\tlet state = this.state;\t\r\n\t\t\t// let accType = state['selectboxProps']['selAccType'].value\r\n\t\t\tlet searchType = state['selectboxProps']['selSearchType'].value\r\n\t\t\tlet searchDateS = state['rangeCalendarProps']['calSearchDate'].startDate\r\n\t\t\tlet searchDateE = state['rangeCalendarProps']['calSearchDate'].endDate\r\n\r\n\t\t\t// if (StrLib.isNull(accType)) {\r\n\t\t\t// \tComLib.openDialog('A', 'SYSI0010', ['측정상태 미선택']);\t\r\n\r\n\t\t\t// \treturn false;\r\n\t\t\t// }\r\n\r\n\t\t\tif (StrLib.isNull(searchType)) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['일자타입 미선택']);\t\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (StrLib.isNull(searchDateS) || StrLib.isNull(searchDateE)) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['일자 미선택']);\t\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"STT060000_R01\":\r\n\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['grdAccSwt']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['grdAccSwt']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('STT060000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\t\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet accType, searchType, searchDateS, searchDateE = '';\r\n\t\tlet pageStart   = state['gridProps']['grdAccSwt']['paging'].start\r\n\t\tlet pageLimit   = state['gridProps']['grdAccSwt']['paging'].size\r\n\t\tlet pageEnd     = state['gridProps']['grdAccSwt']['paging'].page\r\n\r\n\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\t\r\n\t\t\tcase 'STT060000_R01':\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_getAccRateList\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsAccSwt\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\taccType     = state['selectboxProps']['selAccType'].value\r\n\t\t\t\tsearchType  = state['selectboxProps']['selSearchType'].value\r\n\t\t\t\tsearchDateS = state['rangeCalendarProps']['calSearchDate'].startDate\r\n\t\t\t\tsearchDateE = state['rangeCalendarProps']['calSearchDate'].endDate\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearch',\t[{\tSTD_FLAG    : accType,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSTD_TYPE    : searchType,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tS_DATE      : searchDateS,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tE_DATE      : searchDateE,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tQUERY_START : pageStart,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tQUERY_LIMIT : pageLimit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tQUERY_PAGE  : pageEnd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]);\r\n\t\t\t\t\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'STT060000_R02':\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT.R_getAccRateList\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsAccSwt\",\r\n\t\t\t\t});\t\r\n\t\t\t\taccType     = state.lastSelAccType;\r\n\t\t\t\tsearchType  = state.lastSelSearchType;\r\n\t\t\t\tsearchDateS = state.lastCcalSearchDate;\r\n\t\t\t\tsearchDateE = state.lastCalSearchDate;\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearch',\t[{\tSTD_FLAG    : accType,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tSTD_TYPE    : searchType,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tS_DATE      : searchDateS,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tE_DATE      : searchDateE,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tQUERY_START : pageStart,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tQUERY_LIMIT : pageLimit,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t \tQUERY_PAGE  : pageEnd\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}]);\r\n\t\t\t\t\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STT060000_R01':\r\n\t\t\t// let dsAccSwt = res.data.dsAccSwt;\r\n\t\t\tlet test = [{CENT_NM: '강제', PART_NM: '데이터', REG_DT: '2222-22-22', CALL_ST_DT: '1111-11-11', totalcount: 2, ACC_FLAG: 'N',ACC_CONT: 'srch', ACC_HISTORY:'' },\r\n\t\t\t            {CENT_NM: '강제2', PART_NM: '데이터2', REG_DT: '2222-22-11', CALL_ST_DT: '1111-11-22', totalcount: 2, ACC_FLAG: 'Y',ACC_CONT: 'srch', ACC_HISTORY:'fileText'},];\t\t\t\t\t\t\r\n\t\t\tlet state = this.state;\r\n\t\t\t\r\n\t\t\tstate.lastSelAccType     = state['selectboxProps']['selAccType'].value\r\n\t\t\tstate.lastSelSearchType  = state['selectboxProps']['selSearchType'].value\r\n\t\t\tstate.lastCcalSearchDate = state['rangeCalendarProps']['calSearchDate'].startDate\r\n\t\t\tstate.lastCalSearchDate  = state['rangeCalendarProps']['calSearchDate'].endDate\r\n\r\n\t\t\tthis.setState(state, ComLib.setStateInitRecords(this, \"dsAccSwt\", test))\r\n\t\t\t// this.setState(state, ComLib.setStateInitRecords(this, \"dsAccSwt\", dsAccSwt))\r\n\r\n\t\t\tconsole.log(state)\r\n\t\t\tbreak;\t\r\n\t\tcase 'STT060000_R02':\r\n\t\t\tlet dsAccSwt = res.data.dsAccSwt;\t\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsAccSwt\", dsAccSwt);\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\t\t\r\n\t\t\tonClick: (e) => {\t\t\t\t\r\n\t\t\tswitch (e.target.id) {\t\t\t\r\n\t\t\tcase 'btnSearch':\t\t\t\t\t\r\n\t\t\t\tif (this.validation(\"STT060000_R01\")) this.handler.setDs('STT060000_R01');\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\t\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['grdAccSwt']['paging'].start = state['gridProps']['grdAccSwt']['paging'].start + state['gridProps']['grdAccSwt']['paging'].size;\r\n\t\t\t\tstate['gridProps']['grdAccSwt']['paging'].page  = state['gridProps']['grdAccSwt']['paging'].page + 1;\r\n\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('STT060000_R02');\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdAccSwt\":\t\t\t\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdAccSwt\":\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tonInsertRow : (e) => {\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdAccSwt\":\t\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonActionCellClicked : (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdAccSwt\":\t\r\n\t\t\t\t\tswitch (e.col) {\r\n\t\t\t\t\tcase \"ACC_CONT\":\r\n\t\t\t\t\t\tconsole.log(e.data)\r\n\t\t\t\t\t\tlet params = e.data\r\n\t\t\t\t\t\tlet option = { width: '1200px', height: '750px', modaless: false, params}\r\n\t\t\t\t\t\tComLib.openPop('STT060001', '상담내용(' + e.data.CALL_ST_DT + ')', option);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase \"ACC_HISTORY\":\r\n\t\t\t\t\t\tconsole.log(e.data)\r\n\t\t\t\t\t\tif (e.data.ACC_FLAG === 'N') {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['인식율 내역이 없습니다.']);\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tinputcalendar : {\t\t\r\n\t\t\tonChange : (e) => {\t\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tcase 'calSearchDate' :\t\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['rangeCalendarProps']['calSearchDate'].startDate = e.startDate;\r\n\t\t\t\t\tstate['rangeCalendarProps']['calSearchDate'].endDate   = e.endDate;\t\r\n\r\n\t\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t},\r\n\t\t\t// onFocusChange : (e) => {\r\n\t\t\t// \tswitch (e.target.id) {\r\n\t\t\t// \tcase 'iptRangeCal' :\r\n\t\t\t// \t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, focusedInput : e.focusedInput}});\r\n\t\t\t// \t\tbreak;\r\n\t\t\t// \tdefault : break;\r\n\t\t\t// \t}\r\n\t\t\t// }\r\n\t\t},\r\n\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.id].value    = e.target.value;\t\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\tcolGrp = {[{width: '5%'}, {width: '15%'}, {width: '5%'}, {width: '10%'}, {width: '20%'},{width: '50%'}]}\r\n\t\t\t\t\t\t\ttbData = {[[  \t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginTop:'-9px'}}><Label value={this.state.selectboxProps.selAccType.label}/></div> },\r\n\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selAccType.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selAccType.dataset}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selAccType.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selAccType.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selAccType.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/> },\r\n\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginTop:'-9px'}}><Label value={this.state.selectboxProps.selSearchType.label}/></div> },\r\n\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <Selectbox\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selSearchType.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selSearchType.dataset}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selSearchType.width}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selSearchType.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selSearchType.selected}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/> },\r\n\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.calSearchDate.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.calSearchDate.stId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.calSearchDate.endId}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.calSearchDate.startDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.calSearchDate.endDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>},\r\n\t\t\t\t\t\t\t\t\t\t{type : 'D', value : <RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid         = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor      = 'blue' \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfiiled     = \"o\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon       = {'srch'} \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmt         = {5}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue      = {this.state.btnProps.btnSearch.value}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</RFloatArea> },\t\r\n\t\t\t\t\t\t\t\t\t]]}\r\n\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid       = {this.state.gridProps.grdAccSwt.id} \r\n\t\t\t\t\t\t\t\tareaName = {this.state.gridProps.grdAccSwt.areaName}\r\n\t\t\t\t\t\t\t\theader   = {this.state.gridProps.grdAccSwt.header}\r\n\t\t\t\t\t\t\t\tdata     = {this.state.dsAccSwt}\r\n\t\t\t\t\t\t\t\theight   = {this.state.gridProps.grdAccSwt.height}\r\n\t\t\t\t\t\t\t\trowNum   = {true}\t\t\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tpaging   = {true}\r\n\t\t\t\t\t\t\t\tinfinite = {true}\r\n\r\n\t\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsAccSwt.getRecords().length === 0) ? 0 : this.state.dsAccSwt.getValue(0, 'totalcount')}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonScrollEnd       = {this.event.grid.onScrollEnd}\t\t\r\n\t\t\t\t\t\t\t\tonActionCellClicked={this.event.grid.onActionCellClicked}\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// STT인식률측정\r\nimport React from 'react';\r\nimport {\r\n\tSearchPanel, ComponentPanel, FullPanel, SubFullPanel, RFloatArea, FlexPanel,RelativeGroup, LFloatArea} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {RangeInputCalendar, Selectbox, ScrmLineBarChart} from 'components';\r\nimport {Table, Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager, DateLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\t\r\n\t\t\tuseMaxSucc : 0,\r\n\t\t\tuseMaxFail : 0,\r\n\t\t\tdataTP     :  \"ALL\",\r\n\t\t\toptions : {\r\n\t\t\t\tuseSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_SUCC_CNT\", \"name\" : \"전체 성공\", \"color\" : \"red\"}]\r\n\t\t\t\t},\r\n\t\t\t\tuseFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_FAIL_CNT\", \"name\" : \"전체 실패\", \"color\" : \"blue\"}]\r\n\t\t\t\t},\r\n\t\t\t\tjobSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tjobFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tcallSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tcallFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : []\r\n\t\t\t\t},\r\n\t\t\t\tallSucc: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_SUCC_CNT\", \"name\" : \"전체 성공\", \"color\" : \"red\"}]\r\n\t\t\t\t},\r\n\t\t\t\tallFail: {\r\n\t\t\t\t\tXAsisKey : 'REG_DT',\r\n\t\t\t\t\tdataKey  : [{\"key\" : \"ALL_FAIL_CNT\", \"name\" : \"전체 실패\", \"color\" : \"blue\"}]\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\r\n\t\t\tdsSttGraph: DataLib.datalist.getInstance([]),\t\t\t\r\n\t\t\tdsTotalJobList: DataLib.datalist.getInstance([]),\r\n\t\t\tdsErrList: DataLib.datalist.getInstance([]),\r\n\r\n\t\t\tgridSttSucc_total: \"0\",\r\n\t\t\tgridSttSucc_header: [\r\n\t\t\t\t{headerName: '일자',\t field: 'REG_DT',\t\tcolId: 'REG_DT'},\r\n\t\t\t\t{headerName: '타입'    , field: 'TP_CONT',\t    colId: 'TP_CONT', textAlign: 'center', \r\n\t\t\t\t\tvalueFormatter : (params) => { \t\t\t\t\t\t\r\n\t\t\t\t\t\tlet returnVal = \"\";\r\n\t\t\t\t\t\tif (params.value === \"ALL\") {\r\n\t\t\t\t\t\t\treturnVal = \"전체\";\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturnVal = params.value;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn returnVal;\r\n\t\t\t\t\t}},\r\n\t\t\t\t{headerName: '전체건수', field: 'TOT_CNT',\t\tcolId: 'TOT_CNT' , textAlign: 'center'},\r\n\t\t\t\t{headerName: '성공건수', field: 'SUCC_CNT',\t\tcolId: 'SUCC_CNT', textAlign: 'center'},\r\n\t\t\t\t{headerName: '실패건수', field: 'FAIL_CNT',\t\tcolId: 'FAIL_CNT', textAlign: 'center'},\r\n\t\t\t\t{headerName: '변환율',\t field: 'SUCC_PER',\t    colId: 'SUCC_PER', textAlign: 'center', \r\n\t\t\t\t\tvalueFormatter : (params) => { \r\n\t\t\t\t\t\tlet numbered = Number(params.value) * 100;\r\n\t\t\t\t\t\tlet returnVal = numbered + \" %\";\r\n\t\t\t\t\t\treturn returnVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\t{headerName: '실패율',\t field: 'FAIL_PER',\t    colId: 'FAIL_PER', textAlign: 'center', \r\n\t\t\t\t\tvalueFormatter : (params) => { \r\n\t\t\t\t\t\tlet numbered = Number(params.value) * 100;\r\n\t\t\t\t\t\tlet returnVal = numbered + \" %\";\r\n\t\t\t\t\t\treturn returnVal;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t],\r\n\t\t\tgridSttFail_total: \"0\",\r\n\t\t\tgridSttFail_header: [\r\n\t\t\t\t{headerName: '발생건수', field: 'CNT',\t\tcolId: 'CNT', textAlign: 'center'},\r\n\t\t\t\t{headerName: '타입'    , field: 'TP_CONT',\tcolId: 'TP_CONT', textAlign: 'center'},\r\n\t\t\t\t{headerName: '오류코드', field: 'ERR_CD',\tcolId: 'ERR_CD', textAlign: 'center'},\r\n\t\t\t\t{headerName: '오류내용', field: 'ERR_CD',\tcolId: 'ERR_CD',\r\n\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('STT_JOB_INFO', 'ERR_CD')},\r\n\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('STT_JOB_INFO', param.value, 'ERR_CD')}\r\n\t\t\t],\r\n\t\t\t\r\n\t\t\tcalSearchDate_startDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\tcalSearchDate_endDate   : DateLib.getToday(),\r\n\r\n\t\t\tselSearchType_value : \"\",\r\n\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch: {\r\n\t\t\t\t\tid    : 'btnSearch',\t\t\t\t\r\n\t\t\t\t\tvalue : '조회'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\t\t\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tlet JobTpList  = ComLib.getCommCodeList('CMN', 'JOB_TP');\r\n\t\tlet callTpList = ComLib.getCommCodeList('CMN', 'CALL_TP');\r\n\r\n\t\tlet jobDataKeySucc  = [];\r\n\t\tlet jobDataKeyFail  = [];\r\n\t\tlet callDataKeySucc = [];\r\n\t\tlet callDataKeyFail = [];\r\n\t\t\r\n\t\tfor (let i = 0; i < JobTpList.length; i ++) {\r\n\t\t\tjobDataKeySucc.push({\"key\" : JobTpList[i].CODE_NM + \"_SUCC_CNT\", \"name\" : JobTpList[i].CODE_NM + \" 성공\", \"color\": JobTpList[i].CD_VAL});\r\n\t\t\tjobDataKeyFail.push({\"key\" : JobTpList[i].CODE_NM + \"_FAIL_CNT\", \"name\" : JobTpList[i].CODE_NM + \" 실패\", \"color\": JobTpList[i].CD_VAL});\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < callTpList.length; i ++) {\r\n\t\t\tcallDataKeySucc.push({\"key\" : callTpList[i].CODE_NM + \"_SUCC_CNT\", \"name\" : callTpList[i].CODE_NM + \" 성공\", \"color\": callTpList[i].CD_VAL});\r\n\t\t\tcallDataKeyFail.push({\"key\" : callTpList[i].CODE_NM + \"_FAIL_CNT\", \"name\" : callTpList[i].CODE_NM + \" 실패\", \"color\": callTpList[i].CD_VAL});\r\n\t\t}\r\n\r\n\t\tthis.setState({...this.state, options : {...this.state.options\r\n\t\t\t                                    \t, jobSucc : {...this.state.options.jobSucc , dataKey: jobDataKeySucc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, jobFail : {...this.state.options.jobFail , dataKey: jobDataKeyFail}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, callSucc: {...this.state.options.callSucc, dataKey: callDataKeySucc}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, callFail: {...this.state.options.callFail, dataKey: callDataKeyFail}}} ,\t\t\t\r\n\t\t() => {\r\n\t\t\tthis.transaction(\"STT070000_R01\");\r\n\r\n\t\t})\t\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'STT070000_R01':\r\n\t\t\tlet state = this.state;\t\r\n\t\t\tlet searchDateS = state.calSearchDate_startDate;\r\n\t\t\tlet searchDateE = state.calSearchDate_endDate;\r\n\t\t\t\r\n\t\t\tif (StrLib.isNull(searchDateS) || StrLib.isNull(searchDateE) )  {\r\n\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (searchDateS > searchDateE ) {\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색시작일자가 검색종료일보다 클 수 없습니다.']);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\t\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\t\r\n\t\t\tcase 'STT070000_R01':\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT_STATIS.R_getSttSuccess\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsSuccess\",\r\n\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"STT_STATIS.R_getSttFail\",\r\n\t\t\t\t\tdatasetsend:\"dsSearch\",\r\n\t\t\t\t\tdatasetrecv:\"dsFail\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet searchType  = state.selSearchType_value;\r\n\t\t\t\tlet searchDateS = state.calSearchDate_startDate;\r\n\t\t\t\tlet searchDateE = state.calSearchDate_endDate;\r\n\r\n\t\t\t\ttransManager.addDataset('dsSearch',\t[{S_DATE: searchDateS, E_DATE: searchDateE, SCH_TP: searchType}]);\r\n\t\t\t\t\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tswitch (res.id) {\r\n\t\tcase 'STT070000_R01':\t\t\t\r\n\t\t\tlet dsJobInfo = res.data.dsSuccess;\r\n\t\t\tlet dsErrInfo = res.data.dsFail;\r\n\t\t\tlet totalJobCnt = 0;\r\n\t\t\tlet totalFailCnt = 0;\r\n\t\t\t\r\n\t\t\tlet merged  = [];\r\n\r\n\t\t\tfor (let i = 0; i < dsJobInfo.length; i ++) {\r\n\t\t\t\tlet isExist    = false;\r\n\t\t\t\tlet existIndex = -1;\r\n\r\n\t\t\t\ttotalJobCnt += dsJobInfo[i].TOT_CNT;\r\n\t\t\t\ttotalFailCnt += dsJobInfo[i].FAIL_CNT;\r\n\r\n\t\t\t\tfor (let j = 0; j < merged.length; j ++) {\r\n\t\t\t\t\tif (merged[j].REG_DT === dsJobInfo[i].REG_DT) {\r\n\t\t\t\t\t\tisExist = true;\r\n\t\t\t\t\t\texistIndex = j;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!isExist) {\r\n\t\t\t\t\tmerged.push({REG_DT                               : dsJobInfo[i].REG_DT\r\n\t\t\t\t\t\t       , [dsJobInfo[i].TP_CONT + \"_SUCC_CNT\"] : dsJobInfo[i].SUCC_CNT\r\n\t\t\t\t\t\t\t   , [dsJobInfo[i].TP_CONT + \"_FAIL_CNT\"] : dsJobInfo[i].FAIL_CNT})\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmerged[existIndex][dsJobInfo[i].TP_CONT + \"_SUCC_CNT\"] = dsJobInfo[i].SUCC_CNT;\r\n\t\t\t\t\tmerged[existIndex][dsJobInfo[i].TP_CONT + \"_FAIL_CNT\"] = dsJobInfo[i].FAIL_CNT;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tlet JobTpList  = ComLib.getCommCodeList('CMN', 'JOB_TP');\r\n\t\t\tlet callTpList = ComLib.getCommCodeList('CMN', 'CALL_TP');\r\n\r\n\t\t\tlet maxData = [0,0,0,0,0,0]\r\n\r\n\t\t\tfor (let i = 0; i < merged.length; i ++) {\r\n\t\t\t\tfor (let j = 0; j < JobTpList.length; j ++) {\r\n\t\t\t\t\tif (merged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"] === undefined) {\r\n\t\t\t\t\t\tmerged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"] = 0;\r\n\t\t\t\t\t\tmerged[i][JobTpList[j].CODE_NM + \"_FAIL_CNT\"] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (merged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"] > maxData[2]) {\r\n\t\t\t\t\t\tmaxData[2] = merged[i][JobTpList[j].CODE_NM + \"_SUCC_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (merged[i][JobTpList[j].CODE_NM + \"_FAIL_CNT\"] > maxData[3]) {\r\n\t\t\t\t\t\tmaxData[3] = merged[i][JobTpList[j].CODE_NM + \"_FAIL_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < callTpList.length; j ++) {\r\n\t\t\t\t\tif (merged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"] === undefined) {\r\n\t\t\t\t\t\tmerged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"] = 0;\r\n\t\t\t\t\t\tmerged[i][callTpList[j].CODE_NM + \"_FAIL_CNT\"] = 0;\r\n\t\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\t\tif (merged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"] > maxData[4]) {\r\n\t\t\t\t\t\tmaxData[4] = merged[i][callTpList[j].CODE_NM + \"_SUCC_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (merged[i][callTpList[j].CODE_NM + \"_FAIL_CNT\"] > maxData[5]) {\r\n\t\t\t\t\t\tmaxData[5] = merged[i][callTpList[j].CODE_NM + \"_FAIL_CNT\"];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif (merged[i][\"ALL_SUCC_CNT\"] > maxData[0]) {\r\n\t\t\t\t\tmaxData[0] = merged[i][\"ALL_SUCC_CNT\"];\r\n\t\t\t\t}\r\n\t\t\t\tif (merged[i][\"ALL_FAIL_CNT\"] > maxData[1]) {\r\n\t\t\t\t\tmaxData[1] = merged[i][\"ALL_FAIL_CNT\"];\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\r\n\r\n\t\t\tfor (let i = 0; i < maxData.length; i ++) {\t\t\t\t\r\n\t\t\t\tlet maxAdd = \"1\";\r\n\t\t\t\tfor (let j = 0; j < String(maxData[i]).length -1; j ++) {\r\n\t\t\t\t\tmaxAdd += \"0\"\r\n\t\t\t\t} \r\n\t\t\t\tmaxData[i] = (maxData[i]  + Number(maxAdd))  - maxData[i]%Number(maxAdd);\r\n\t\t\t} \r\n\r\n\t\t\tlet serTp = this.state.selSearchType_value;\r\n\t\t\tlet useMaxSucc = 0;\r\n\t\t\tlet useMaxFail = 0;\r\n\t\t\tlet useSucc = {};\r\n\t\t\tlet useFail = {};\r\n\r\n\t\t\tif (serTp === \"\") {\r\n\t\t\t\tuseMaxSucc = maxData[0];\r\n\t\t\t\tuseMaxFail = maxData[1];\r\n\t\t\t\tuseSucc    = this.state.options.allSucc;\r\n\t\t\t\tuseFail    = this.state.options.allFail;\r\n\r\n\t\t\t} else if (serTp === \"1\") {\r\n\t\t\t\tuseMaxSucc = maxData[2];\r\n\t\t\t\tuseMaxFail = maxData[3];\r\n\t\t\t\tuseSucc    = this.state.options.jobSucc;\r\n\t\t\t\tuseFail    = this.state.options.jobFail;\r\n\r\n\t\t\t} else {\r\n\t\t\t\tuseMaxSucc = maxData[4];\r\n\t\t\t\tuseMaxFail = maxData[5];\r\n\t\t\t\tuseSucc    = this.state.options.callSucc;\r\n\t\t\t\tuseFail    = this.state.options.callFail;\r\n\t\t\t}\r\n\r\n\t\t\tthis.setState({...this.state, \r\n\t\t\t\tuseMaxSucc : useMaxSucc, useMaxFail : useMaxFail,\r\n\t\t\t\tmaxData : maxData,\r\n\t\t\t    options: {...this.state.options, useSucc: useSucc, useFail: useFail},\r\n\t\t\t\tgridSttSucc_total : totalJobCnt,\r\n\t\t\t\tgridSttFail_total : totalFailCnt\r\n\t\t\t})\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSttGraph\", merged);\t\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsTotalJobList\", dsJobInfo);\r\n\t\t\tComLib.setStateInitRecords(this, \"dsErrList\", dsErrInfo);\t\r\n\r\n\t\t\tbreak;\t\r\n\t\t\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\t\t\r\n\t\t\tonClick: (e) => {\t\t\t\t\r\n\t\t\tswitch (e.target.id) {\t\t\t\r\n\t\t\tcase 'btnSearch':\t\t\t\t\t\r\n\t\t\t\tif (this.validation(\"STT070000_R01\")) this.transaction('STT070000_R01');\r\n\t\t\t\tbreak;\t\t\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\t\t\t\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdAccSwt\":\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t},\r\n\r\n\t\tinputcalendar : {\t\t\r\n\t\t\tonChange : (e) => {\t\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tcase 'calSearchDate' :\t\r\n\t\t\t\t\tlet state = this.state;\r\n\t\r\n\t\t\t\t\tstate.calSearchDate_startDate = e.startDate;\r\n\t\t\t\t\tstate.calSearchDate_endDate   = e.endDate;\t\r\n\r\n\t\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate.selSearchType_value    = e.target.value;\t\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={\"검색일자\"}/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid        = {\"calSearchDate\"}\r\n\t\t\t\t\t\t\t\t\t\tstrtId    = {\"calSearchDateStart\"}\r\n\t\t\t\t\t\t\t\t\t\tendId     = {\"calSearchDateEnd\"}\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.calSearchDate_startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate   = {this.state.calSearchDate_endDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {\"selSearchType\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList([{CODE_NM: \"전체\", CODE: \"\"},{CODE_NM: \"작업별\", CODE: \"1\"},{CODE_NM: \"콜타입별\", CODE: \"2\"}])}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\twidth    = {100}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\t\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tid         = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tcolor      = 'blue' \r\n\t\t\t\t\t\t\t\t\tfiiled     = \"o\"\r\n\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\ticon       = {'srch'} \r\n\t\t\t\t\t\t\t\t\tmt         = {5}\r\n\t\t\t\t\t\t\t\t\tvalue      = {this.state.btnProps.btnSearch.value}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Label value = {\"STT 성공 건수\"} />\r\n\t\t\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsSttGraph.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\tmaxData = {this.state.useMaxSucc}\r\n\t\t\t\t\t\t\t\t\t\tunit    = {\"건\"}\r\n\t\t\t\t\t\t\t\t\t\toptions = {this.state.options.useSucc}\t\r\n\t\t\t\t\t\t\t\t\t\taspect={4.0/1.3}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<Label value = {\"STT 실패 건수\"} />\r\n\t\t\t\t\t\t\t\t\t<ScrmLineBarChart \r\n\t\t\t\t\t\t\t\t\t\tdata = {this.state.dsSttGraph.getRecords()}\r\n\t\t\t\t\t\t\t\t\t\tmaxData = {this.state.useMaxFail}\r\n\t\t\t\t\t\t\t\t\t\tunit    = {\"건\"}\r\n\t\t\t\t\t\t\t\t\t\toptions = {this.state.options.useFail}\t\r\n\t\t\t\t\t\t\t\t\t\taspect={4.0/1.3}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\t\t\r\n\t\t\t\t\t\t\t</ComponentPanel>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {\"gridSttSucc\"} \r\n\t\t\t\t\t\t\t\t\tareaName = {\"STT 작업 내역 : \" + this.state.gridSttSucc_total + \" 건\"}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.gridSttSucc_header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsTotalJobList}\r\n\t\t\t\t\t\t\t\t\theight   = {'295px'}\t\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\t\r\n\t\t\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {\"gridSttFail\"} \r\n\t\t\t\t\t\t\t\t\tareaName = {\"STT 오류 내역 : \" + this.state.gridSttFail_total + \" 건\"}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.gridSttFail_header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsErrList}\r\n\t\t\t\t\t\t\t\t\theight   = {'295px'}\r\n\t\t\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\t\t\tdnlExcelBtn = {true}\t\r\n\t\t\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 사용자관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , SearchPanel\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield \r\n\t   , Selectbox \r\n\t   , Checkbox\r\n\t   , Table                 } from 'components';\r\nimport { BasicButton as Button } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.grdUser    = null;\r\n\t\tthis.grdUserApi = null;\r\n\r\n\t\tthis.password   = '';\r\n\t\tthis.clickBtnId = '';\r\n\t\tthis.state = {\r\n\t\t\tdsSrch       : DataLib.datalist.getInstance([{CENT_CD: \"\", TEAM_CD: \"\", AUTH_LV: \"\", SRCH_DV: \"NM\", SRCH_VALUE: \"\"}]),\r\n\t\t\tdsUserList   : DataLib.datalist.getInstance(),\r\n\t\t\tdsUserDetail : DataLib.datalist.getInstance([{USR_ID: \"\", USR_NM: \"\", AUTH_LV: \"\", CENT_CD: \"\", TEAM_CD: \"\", USE_FLAG: \"\"}]),\r\n\t\t\tlastdsSrch   : null,\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tcmbSrchAuth_dataset: [{value : 'ALL', name : '전체'}],\r\n\t\t\tcmbSrchDv_dataset:[\r\n\t\t\t\t{value : 'NM', name : '이름'},\r\n\t\t\t\t{value : 'ID', name : '아이디'}\r\n\t\t\t],\t\t\t\r\n\t\t\tgridProps : {\r\n\t\t\t\tid : 'grdUserList',\r\n\t\t\t\tareaName : '사용자 목록',\r\n\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '센터',\t\tfield: 'CENT_NM',\t\tcolId: 'CENT_NM', \t\twidth: '120', req: true},\r\n\t\t\t\t\t{headerName: '센터',\t\tfield: 'CENT_CD',\t\tcolId: 'CENT_CD', \t\thide: true},\r\n\t\t\t\t\t{headerName: '팀',\t\t\tfield: 'TEAM_NM',\t\tcolId: 'TEAM_NM',\t\twidth: '120', req: true},\r\n\t\t\t\t\t{headerName: '권한',\t\tfield: 'AUTH_NM',\t    colId: 'AUTH_NM', \t    width: '100', req: true},\r\n\t\t\t\t\t{headerName: '아이디',\t\tfield: 'USR_ID',\t\tcolId: 'USR_ID',\t\twidth: '100', req: true},\r\n\t\t\t\t\t{headerName: '이름',\t\tfield: 'USR_NM',\t\tcolId: 'USR_NM',\t\twidth: '120', req: true},\r\n\t\t\t\t\t{headerName: '사용여부',\t field: 'USE_FLAG_NM',\tcolId: 'USE_FLAG_NM',\twidth: '50', req: true, textAlign: 'center'},\t\r\n\t\t\t\t\t{headerName: '등록일시',\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM', \t\twidth: '80', textAlign: 'center', resizable: false},\r\n\t\t\t\t],\t\t\t\t\r\n\t\t\t\tpaging : {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\tpage : 1,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t},\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// 1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t// => 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () { // 조회\r\n\t\tthis.transaction(\"SYS010000_R00\");\r\n\t\r\n\t}\r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS010000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SYS010000_R01\" :\r\n\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SYS010000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['gridProps']['paging'].start;\r\n\t\tlet pageLimit   = state['gridProps']['paging'].size;\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\t\tcase 'SYS010000_R00' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getAuthList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsAuthList\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\ttransManager.addDataset('dsSend', [{}]);\r\n\t\t\t\t\ttransManager.agent();\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010000_R01' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getUserList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsUserList\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet param = {\r\n\t\t\t\t\t\tCENT_CD     : state.dsSrch.records[0][\"CENT_CD\"],\r\n\t\t\t\t\t\tTEAM_CD     : state.dsSrch.records[0][\"TEAM_CD\"],\r\n\t\t\t\t\t\tAUTH_LV     : state.dsSrch.records[0][\"AUTH_LV\"],\r\n\t\t\t\t\t\tSRCH_DV     : state.dsSrch.records[0][\"SRCH_DV\"],\r\n\t\t\t\t\t\tSRCH_VALUE  : state.dsSrch.records[0][\"SRCH_VALUE\"].trim(),\r\n\t\t\t\t\t\tQUERY_START : pageStart,\r\n\t\t\t\t\t\tQUERY_LIMIT : pageLimit,\r\n\t\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t\tstate.lastdsSrch = state.dsSrch;\r\n\r\n\t\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSend', [ param ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS010000_R02' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getUserList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsUserList\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet param2 = {\r\n\t\t\t\t\t\tCENT_CD     : state.lastdsSrch.records[0][\"CENT_CD\"],\r\n\t\t\t\t\t\tTEAM_CD     : state.lastdsSrch.records[0][\"TEAM_CD\"],\r\n\t\t\t\t\t\tAUTH_LV     : state.lastdsSrch.records[0][\"AUTH_LV\"],\r\n\t\t\t\t\t\tSRCH_DV     : state.lastdsSrch.records[0][\"SRCH_DV\"],\r\n\t\t\t\t\t\tSRCH_VALUE  : state.lastdsSrch.records[0][\"SRCH_VALUE\"].trim(),\r\n\t\t\t\t\t\tQUERY_START : pageStart,\r\n\t\t\t\t\t\tQUERY_LIMIT : pageLimit,\r\n\t\t\t\t\t};\r\n\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSend', [ param2 ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t\r\n\t\tlet state = this.state;\r\n\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS010000_R00': \r\n\t\t\t\tlet dsAuthList   = res.data.dsAuthList;\r\n\t\t\t\tlet authSearData = state.cmbSrchAuth_dataset;\r\n\r\n\t\t\t\tfor (let i = 0; i < dsAuthList.length; i ++) {\r\n\t\t\t\t\tlet temp = {};\r\n\t\t\t\t\ttemp.value = dsAuthList[i].AUTH_LV;\r\n\t\t\t\t\ttemp.name  = dsAuthList[i].AUTH_NM;\r\n\t\t\t\t\tauthSearData.push(temp)\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstate.cmbSrchAuth_dataset = authSearData;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t\tthis.transaction('SYS010000_R01');\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS010000_R01':\r\n\t\t\t\tif (res.data.dsUserList.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsUserList\", res.data.dsUserList);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsUserList\", []);\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstate.dsUserDetail = DataLib.datalist.getInstance([{USR_ID: \"\", USR_NM: \"\", AUTH_LV: \"\", CENT_CD: \"\", TEAM_CD: \"\", USE_FLAG: \"\"}]);\r\n\t\t\t\tstate['gridProps']['paging'].loading = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\tbreak; \r\n\t\t\t\r\n\t\t\tcase 'SYS010000_R02':\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsUserList\", res.data.dsUserList);\r\n\r\n\t\t\t\tstate['gridProps']['paging'].loading = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\tbreak; \r\n\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tthis.clickBtnId = e.target.id;\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t// 조회\r\n\t\t\t\t\t\tif (this.validation(\"SYS010000_R01\")) this.handler.setDs('SYS010000_R01');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonBeforeInsertRow: (e) => {\t\t\t\t\r\n\t\t\t\tlet param = {id: 'test', records: [{USR_ID: \"\", USR_NM: \"\", AUTH_LV: \"\", CENT_CD: \"\", TEAM_CD: \"\", USE_FLAG: \"Y\"}], authList: this.state.cmbSrchAuth_dataset, isNew: true};\r\n\t\t\t\tlet option2 = { width: '600px', height: '300px', modaless: false, param: param}\r\n\t\t\t\tComLib.openPop('SYS010001', '신규 사용자 등록', option2, this.event.grid.afterAddUser)\r\n\r\n\t\t\t\treturn {rtn:false};\r\n\t\t\t},\r\n\t\t\tafterAddUser: (e) => {\r\n\t\t\t\tthis.handler.setDs('SYS010000_R01');\r\n\t\t\t},\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\t//this.setState({grdMenuApi : e.gridApi, grdMenu : e.grid});\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase \"grdUserList\":\r\n\t\t\t\t\t\tthis.grdUserApi = e.gridApi;\r\n\t\t\t\t\t\tthis.grdUser = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\t\r\n\t\t\t\t// 클릭을 한 번 더 했을 때 그리드에 선택된 인덱스가 풀리지 않도록 하기\r\n\t\t\t\tlet userRows = this.grdUserApi.rowModel.rowsToDisplay;\r\n\t\t\t\tlet userRow;\r\n\r\n\t\t\t\tfor (let i = 0; i < userRows.length; i ++) {\r\n\t\t\t\t\tif (userRows[i].data.USR_ID === e.data.USR_ID){\r\n\t\t\t\t\t\tuserRow = this.grdUserApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tuserRow.setSelected(true);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\tlet param = {id: 'test', records: [e.data], authList: this.state.cmbSrchAuth_dataset, isNew: false};\r\n\t\t\t\tlet option2 = { width: '600px', height: '300px', modaless: false, param: param}\r\n\t\t\t\tComLib.openPop('SYS010001', '사용자 정보 변경', option2, this.event.grid.afterAddUser)\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tif (!this.state.gridProps.paging.loading) {\r\n\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t, gridProps : { ...this.state.gridProps\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.paging\r\n\t\t\t\t\t\t\t\t, start : this.state.gridProps.paging.start + this.state.gridProps.paging.size\r\n\t\t\t\t\t\t\t\t, page : this.state.gridProps.paging.page + 1\r\n\t\t\t\t\t\t\t\t, loading : true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SYS010000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptSrchword' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRCH_VALUE\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'cmbSrchCent' : \r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", \"\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbSrchTeam' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbSrchAuth' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"AUTH_LV\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'cmbSrchDv' :\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRCH_DV\", e.target.value);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchCent\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tcontrolOrgCombo = {'CENT'}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchTeam\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getTeamList(this.state.dsSrch), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"권한\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchAuth\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"AUTH_LV\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.cmbSrchAuth_dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchDv\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"SRCH_DV\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.cmbSrchDv_dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\tid    = {\"iptSrchword\"}\r\n\t\t\t\t\t\t\t\t\t\tname  = {\"iptSrchword\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"SRCH_VALUE\"]}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {\"이름/아이디\"}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {200}\r\n\t\t\t\t\t\t\t\t\t\treadOnly = {false}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor= 'blue' fiiled= {true} innerImage={true} icon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid        = {this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\tref       = {this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\theader    = {this.state.gridProps.header}\r\n\t\t\t\t\t\t\t\tareaName  = {this.state.gridProps.areaName}\r\n\t\t\t\t\t\t\t\theight    = \"650px\" \r\n\t\t\t\t\t\t\t\trowNum    = {true}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tpaging    = {true}\r\n\t\t\t\t\t\t\t\tinfinite  = {true}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\r\n\t\t\t\t\t\t\t\tdata        = {this.state.dsUserList}\r\n\t\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsUserList.getRecords().length === 0) ? 0 : this.state.dsUserList.getValue(0, 'totalcount')}\r\n\t\t\t\t\t\t\t\tonBeforeInsertRow  = {this.event.grid.onBeforeInsertRow}\r\n\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\t\r\n\t\t\t\t\t\t\t\tonScrollEnd        = {this.event.grid.onScrollEnd}\t\t\r\n\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked= {this.event.grid.onCellDoubleClicked}\r\n\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t\t\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 센터 관리\r\nimport React from 'react';\r\nimport {\r\n   ComponentPanel,\r\n   FlexPanel, FullPanel, SearchPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {Textfield, Selectbox, Grid\r\n   , Label  } from 'components';\r\nimport {ComLib, StrLib, DataLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n   constructor() {\r\n      super();\r\n      this.gridCentApi = null;\r\n      this.gridTeamApi = null;\r\n      this.gridStndValApi = null;\r\n\r\n      this.gridCent = null;\r\n      this.gridTeam = null;\r\n      this.gridStndVal = null;\r\n\r\n      this.currentRowCent  = '';\r\n      this.currentRowTeam  = '';\r\n      this.currentRowStnd  = '';\r\n\r\n      this.currentCentTempCd = 0;\r\n      this.currtenTeamTempCd = 0;\r\n      \r\n      this.maxCentTempCd = 0;\r\n      this.maxTeamTempCd = 0;\r\n      this.maxStndTempCd = 0;\r\n\r\n      this.lastEditedCent = '';\r\n\t\tthis.lastEditedTeam = '';\r\n\r\n\r\n      this.copyRow = false;\r\n\r\n      this.state = {\r\n      \r\n         dsSel : DataLib.datalist.getInstance([{USE_FLAG:\"\", }]),\r\n         dsCentList : DataLib.datalist.getInstance(),\r\n         dsTeamList : DataLib.datalist.getInstance(),\r\n         dsCentStndValList : DataLib.datalist.getInstance(),\r\n         \r\n\r\n         btnProps : {\r\n            btnSearch : {\r\n               id       : 'btnSearch',\r\n               disabled : false,\r\n               value    : '조회',\r\n               hidden   : false\r\n            },\r\n            btnCentSave : {\r\n               id       : 'btnCentSave',\r\n               disabled : false,\r\n               value    : '저장',\r\n               hidden   : false\r\n            },\r\n   \r\n            btnTeamSave : {\r\n               id       : 'btnTeamSave',\r\n               disabled : false,\r\n               value    : '저장',\r\n               hidden   : false\r\n            },\r\n            btnStndSave : {\r\n               id       : 'btnStndSave',\r\n               disabled : false,\r\n               value    : '저장',\r\n               hidden   : false\r\n            },\r\n         },\r\n\r\n         textFieldProps : {\r\n            iptCentCdNm : {\r\n               id          : 'iptCentCdNm',\r\n               name        : 'iptCentCdNm',\r\n               value       : '',\r\n               placeholder : '센터코드/센터명',\r\n               minLength   : 1,\r\n               maxLength   : 20,\r\n               readOnly    : false,\r\n               disabled    : false\r\n            }\r\n         },\r\n\r\n         gridCent : {\r\n            id : 'gridCent',\r\n            areaName : '센터정보',\r\n            header :\r\n               [\r\n                  {headerName: '센터코드',      field: 'CENT_CD',      colId: 'CENT_CD', editable: true, req: true, width: '110', cellEditor: 'customEditor', maxLength : '10'},\r\n                  {headerName: '센터명',        field: 'CENT_NM',      colId: 'CENT_NM',   editable: true, req: true, width: '110',cellEditor: 'customEditor', maxLength : '90'},\r\n                  {headerName: '영업가능여부',   field: 'BIZ_PSB_FLAG', colId: 'BIZ_PSB_FLAG',   editable: true, width: '90', defaultValue : 'Y', textAlign: 'center', singleClickEdit: true,\r\n                     cellEditor: 'agSelectCellEditor',\r\n                     cellEditorParams: { values : ComLib.getComCodeValue('CMN', 'BIZ_PSB_FLAG')},\r\n                     valueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'BIZ_PSB_FLAG')                  \r\n                  },\r\n                  {headerName: '사용여부',      field: 'USE_FLAG',      colId: 'USE_FLAG',   editable: true, req: true, width: '90', defaultValue : 'Y', textAlign: 'center', singleClickEdit: true,\r\n                     cellEditor: 'agSelectCellEditor',\r\n                     cellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n                     valueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\r\n                  },\r\n                  {headerName: '등록일자',      field: 'REG_DTM',      colId: 'REG_DTM',   editable: true, width: '100', resizable : false, },\r\n               ],\r\n               \r\n         },\r\n         gridTeam : {\r\n            id : 'gridTeam',\r\n            areaName : '팀정보',\r\n            header : \r\n               [\r\n                  {headerName: '팀 코드',      field: 'TEAM_CD',      colId: 'TEAM_CD',editable: true, req: true, width: '100',cellEditor: 'customEditor', maxLength : '50'},\r\n                  {headerName: '팀 명',      field: 'TEAM_NM',      colId: 'TEAM_NM',   editable: true,req: true, width: '100', cellEditor: 'customEditor', maxLength : '10'},\r\n                  {headerName: '사용여부',      field: 'USE_FLAG',      colId: 'USE_FLAG',   editable: true,width: '100', req: true,defaultValue : 'Y', textAlign: 'center', singleClickEdit: true,\r\n                     cellEditor: 'agSelectCellEditor',\r\n                     cellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n                     valueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\r\n                  },\r\n                  {headerName: '등록일자',      field: 'REG_DTM',      colId: 'REG_DTM',   editable: true,width: '100', resizable : false},\r\n               ],\r\n               \r\n         },\r\n\r\n         gridStndVal : {\r\n            id : 'gridStndVal',\r\n            areaName : '기준값정보',\r\n            header :\r\n               [\r\n                  {headerName: '기준코드',      field: 'STND_CD',      colId: 'STND_CD',   editable: true, cellEditor: 'customEditor',maxLength : '5', width: '40',},\r\n                  {headerName: '기준코드명',      field: 'STND_CD_NM',      colId: 'STND_CD_NM',   editable: true, cellEditor: 'customEditor', maxLength : '150', width: '150',},\r\n                  {headerName: '기준값',      field: 'STND_VAL',      colId: 'STND_VAL',   editable: true,cellEditor: 'customEditor', maxLength : '20', width: '100',},\r\n                  {headerName: '적용여부',      field: 'APY_FLAG',      colId: 'APY_FLAG',   editable: true, defaultValue : 'Y', width: '40',textAlign: 'center', singleClickEdit: true,\r\n                     cellEditor: 'agSelectCellEditor',\r\n                     cellEditorParams: { values : ComLib.getComCodeValue('CMN', 'APY_FLAG')},\r\n                     valueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'APY_FLAG')                  \r\n                  },\r\n                  {headerName: '기타속성1',      field: 'ETC1',      colId: 'ETC1',   editable: true, cellEditor: 'customEditor', maxLength : '30', width: '60',},\r\n                  {headerName: '기타속성2',      field: 'ETC2',      colId: 'ETC2',   editable: true, resizable : false, cellEditor: 'customEditor', maxLength : '30', width: '60',},\r\n                  {headerName: '센터수정가능여부',    field: 'CENT_SET_CHG_FLAG',      colId: 'CENT_SET_CHG_FLAG',   hide :  true, },\r\n                  {headerName: '적용속성여부',        field: 'APY_PPTY_USE_FLAG',      colId: 'APY_PPTY_USE_FLAG',   hide :  true, },\r\n                  {headerName: '기준값속성사용여부',   field: 'STND_PPTY_USE_FLAG',      colId: 'STND_PPTY_USE_FLAG',   hide :  true, },\r\n                  {headerName: '기타속성1사용여부',    field: 'ETC1_PPTY_USE_FLAG',      colId: 'ETC1_PPTY_USE_FLAG',   hide :  true, },\r\n                  {headerName: '기타속성2사용여부',    field: 'ETC2_PPTY_USE_FLAG',      colId: 'ETC2_PPTY_USE_FLAG',   hide :  true, },\r\n               ],\r\n               \r\n         }\r\n      }\r\n      // 이벤트 바인딩\r\n      this.event.button.onClick = this.event.button.onClick.bind(this);\r\n      this.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n      this.event.input.onChange   = this.event.input.onChange.bind(this);\r\n      this.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n   }\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t0) Custom Event Zone \r\n\t\trowFinder = 조회후 가장 마지막에 선택되어져 있던 행으로 재 포커싱을 하기 위한 함수\r\n\t ------------------------------------------------------------------------------------------------*/\r\n    rowFinder = (targetRecords, targetColumn, currentRow, secondColumn, secondRow) => {\r\n\t\tlet rowNum = 0;\r\n\r\n\t\tif (targetRecords === undefined || targetRecords === null) {\r\n\t\t\treturn rowNum;\r\n\t\t}\r\n\r\n\t\tif (StrLib.isNull(secondColumn)) {\r\n\t\t\tif (!StrLib.isNull(currentRow)) {\r\n\t\t\t\tfor (let i = 0; i < targetRecords.length; i++) {\r\n\t\t\t\t\tif (targetRecords[i][targetColumn] === currentRow) {\r\n\t\t\t\t\t\trowNum = i;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn rowNum;\r\n\r\n\t\t} else {\r\n\t\t\tif (!StrLib.isNull(secondRow)) {\r\n\t\t\t\tfor (let i = 0; i < targetRecords.length; i++) {\r\n\t\t\t\t\tif (targetRecords[i][targetColumn] === currentRow && targetRecords[i][secondColumn] === secondRow) {\r\n\t\t\t\t\t\trowNum = i;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn rowNum;\r\n\t\t}\r\n\t}\r\n\r\n/*------------------------------------------------------------------------------------------------*\r\n      1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n      => 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n    ------------------------------------------------------------------------------------------------*/\r\n    componentDidMount () {\r\n      if (this.validation(\"SYS050000_R01\")) this.transaction(\"SYS050000_R01\");\r\n   }\r\n/*------------------------------------------------------------------------------------------------*\r\n      2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n      => prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n ------------------------------------------------------------------------------------------------*/\r\n    componentDidUpdate (prevProps, prevState, snapshot) {\r\n      //console.log(\"updated!!\");\r\n      //console.log(this.state.dsGrp);\r\n   }\r\n/*------------------------------------------------------------------------------------------------*\r\n      3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n      => 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n ------------------------------------------------------------------------------------------------*/\r\n    componentWillUnmount () {\r\n\r\n   }\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n   // [3. validation Event Zone]\r\n   //  - validation 관련 정의\r\n   //   SYS050000_R01 센터정보 조회\r\n   //   SYS050000_R02 팀정보, 기준값정보 조회\r\n   //   SYS050000_H01 센터정보 저장\r\n   //   SYS050000_H02 팀정보 저장\r\n   //   SYS050000_U03 기준값정보 저장\r\n/*------------------------------------------------------------------------------------------------*/\r\n   validation = (...params) => {\r\n      let serviceid = params[0];\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\r\n      switch (serviceid) {\r\n      case 'SYS050000_R01': \r\n         break;\r\n      case 'SYS050000_R02': \r\n         break;\r\n      case 'SYS050000_H01':\r\n         let centRecord = this.gridCent.gridDataset.records;\r\n      \r\n         outer : for (let intA = 0; intA < centRecord.length; intA ++) {\r\n            if (centRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n               chkCnt++;\r\n            }\t\t\r\n            \r\n            let centHeader = this.state.gridCent.header.filter(item => item['req'] === true);//filter\r\n           \r\n            for (let i = 0; i < centHeader.length; i ++) {\t\t\r\n\r\n                  if (StrLib.isNull(centRecord[intA][centHeader[i].field])) {\r\n                     let centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n                     let centNum = 0;\r\n\r\n                     for(let i = 0; i < centRows.length; i++) {\r\n                        if(centRows[i].data.TEMP_CD === centRecord[intA].TEMP_CD) {\r\n                           centNum = i;\r\n\r\n                           break;\r\n                        }\r\n                     }\r\n                     ComLib.openDialog('A', 'COME0001', [Number(centNum + 1) ,centHeader[i].headerName.replace(/\\*/g,'')]);  //입력해주시기바랍니다\r\n           \r\n                     returnVal = intA;\r\n\r\n                     break outer;\r\n                  }\r\n               }\r\n               \r\n            for ( let intB = 0; intB < centRecord.length; intB ++ ) {\r\n                  if (intA !== intB\r\n                        && centRecord[intA].CENT_CD === centRecord[intB].CENT_CD ) {\r\n\r\n\r\n                  let centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n                  let centNum = 0;\r\n\r\n                  for (let i = 0; i < centRows.length; i++) {\r\n                     if(centRows[i].data.TEMP_CD === centRecord[intA].TEMP_CD) {\r\n                        centNum = i;\r\n\r\n                        break;\r\n                     }\r\n                  }\r\n                     \r\n                  ComLib.openDialog('A', 'COME0012',[Number(centNum + 1) , Number(intB + 1) , '센터코드']); //중복되었습니다\r\n                  \r\n                  this.gridCent.moveRow(intB, true);\r\n      \r\n                  return false;\r\n               }\r\n\r\n                  \r\n                  else if (intA !== intB \t&& centRecord[intA].CENT_NM === centRecord[intB].CENT_NM) {\r\n\r\n\r\n                     let centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n                     let centNum = 0;\r\n\r\n                     for (let i = 0; i < centRows.length; i++) {\r\n                        if(centRows[i].data.TEMP_CD === centRecord[intA].TEMP_CD) {\r\n                           centNum = i;\r\n\r\n                           break;\r\n                        }\r\n                  }\r\n                  //중복\r\n                  ComLib.openDialog('A', 'COME0012',[Number(centNum + 1) , Number(intB + 1) , '센터명']);\r\n                  \r\n                  this.gridCent.moveRow(intB, true);\r\n         \r\n                  return false;\r\n               }\r\n         \r\n            }\t\r\n         }\r\n            \r\n            if (returnVal > -1) {\r\n               this.gridCent.moveRow(returnVal, true);\r\n               \r\n               return false;\r\n            }\t\r\n            if (centRecord.length < 1 || chkCnt === 0) {\r\n               ComLib.openDialog('A', 'COME0005');//변경된 행이 없습니다\r\n\r\n               return false;\r\n            }\r\n\r\n            break;\r\n\r\n      case 'SYS050000_H02': \r\n\r\n         let teamRecord = this.gridTeam.gridDataset.records;\r\n\r\n         outer : for ( let intA = 0; intA < teamRecord.length; intA ++ ) {\r\n\r\n            if (teamRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n               console.log('teamRecord[intA].rowtype', teamRecord[intA].rowtype);\r\n               chkCnt ++;\r\n               console.log('TeamchkCnt',chkCnt);\r\n            }\t\r\n\r\n            let teamHeader = this.state.gridTeam.header.filter(item => item['req'] === true); //filter\r\n            \r\n            for (let i = 0; i < teamHeader.length; i ++) {\t\t\r\n              \r\n                  if (StrLib.isNull(teamRecord[intA][teamHeader[i].field])) {\r\n                   \r\n                     ComLib.openDialog('A', 'COME0001', [Number(intA + 1) , teamHeader[i].headerName.replace(/\\*/g,'')]);  // 입력해 주시기 바랍니다.\r\n      \r\n                     returnVal = intA;\r\n\r\n                     break outer;\r\n                  }\r\n               }\r\n               \r\n               for ( let intB = 0; intB < teamRecord.length; intB ++ ) {\r\n                     if (intA !== intB && teamRecord[intA].TEAM_CD === teamRecord[intB].TEAM_CD) {\r\n                        \r\n                        ComLib.openDialog('A', 'COME0012', [Number(intA + 1), Number(intB + 1), '팀 코드']);//중복되었습니다\r\n                        \r\n                        this.gridTeam.moveRow(intB, true);\r\n               \r\n                        return false;\r\n                     }\r\n                  }\r\n               }\r\n      \r\n               if (returnVal > -1) {\r\n                  this.gridTeam.moveRow(returnVal, true);\r\n               \r\n                  return false;\r\n               }\r\n      \r\n               if (teamRecord.length < 1 || chkCnt === 0) {\r\n                  ComLib.openDialog('A', 'COME0005'); //변경된행이없습니다\r\n      \r\n                  return false;\r\n               }\r\n      \r\n            \r\n            break;\r\n      case 'SYS050000_U03':\r\n         let stndRecord = this.gridStndVal.gridDataset.records;\r\n\r\n         for ( let intA = 0; intA < stndRecord.length; intA ++ ) {\r\n\r\n            if (stndRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n               chkCnt ++;           \r\n            }\r\n         }\r\n         if (stndRecord.length < 1 || chkCnt === 0) {\r\n            ComLib.openDialog('A', 'COME0005');//변경된행이없습니다\r\n            return false;\r\n         }\r\n         \r\n            break;\r\n           \r\n      default: break;\r\n\r\n      }\r\n      return true;\r\n   }\r\n/*------------------------------------------------------------------------------------------------*/\r\n   // [4. transaction Event Zone]\r\n   //  - transaction 관련 정의\r\n   //   SYS050000_R01 센터정보 조회\r\n   //   SYS050000_R02 팀정보, 기준값정보 조회\r\n   //   SYS050000_H01 센터정보 저장\r\n   //   SYS050000_H02 팀정보 저장\r\n   //   SYS050000_U03 기준값정보 저장\r\n/*------------------------------------------------------------------------------------------------*/\r\n   transaction = (...params) => {\r\n    \r\n      let serviceid = params[0];\r\n      let transManager = new TransManager();\r\n\r\n      try {\r\n         switch(serviceid) {\r\n         case 'SYS050000_R01':\r\n            transManager.setTransId (serviceid);\r\n            transManager.setTransUrl(transManager.constants.url.common);\r\n            transManager.setCallBack(this.callback);\r\n            transManager.addConfig  ({\r\n               dao        : transManager.constants.dao.base,\r\n               crudh      : transManager.constants.crudh.read,\r\n               sqlmapid   : \"SYS.R_getCentList\",\r\n               datasetsend: \"dsSearchParam\",\r\n               datasetrecv: \"dsCentRecv\",\r\n            });   \r\n\r\n            transManager.addDataset('dsSearchParam', [{\"CENT_CD_NAME\" :this.state.textFieldProps.iptCentCdNm.value\r\n                                                   ,   \"USE_FLAG\": this.state.dsSel.records[0][\"USE_FLAG\"]}]);\r\n            transManager.agent();\r\n\r\n            break;\r\n\r\n         case 'SYS050000_R02':\r\n            transManager.setTransId (serviceid);\r\n            transManager.setTransUrl(transManager.constants.url.common);\r\n            transManager.setCallBack(this.callback);\r\n            transManager.addConfig  ({\r\n               dao        : transManager.constants.dao.base,\r\n               crudh      : transManager.constants.crudh.read,\r\n               sqlmapid   : \"SYS.R_getTeamList\",\r\n               datasetsend: \"dsSearchParam\",\r\n               datasetrecv: \"dsTeamRecv\",\r\n            });\r\n\r\n            transManager.addConfig  ({\r\n               dao        : transManager.constants.dao.base,\r\n               crudh      : transManager.constants.crudh.read,\r\n               sqlmapid   : \"SYS.R_dsCentStndValList\",\r\n               datasetsend: \"dsSearchParam\",\r\n               datasetrecv: \"dsStndValRecv\",\r\n            });\r\n\r\n            transManager.addDataset('dsSearchParam', [{\"CENT_CD\": params[1]}]);\r\n            \r\n            transManager.agent();\r\n\r\n         break;\r\n\r\n         case 'SYS050000_H01':\r\n            transManager.setTransId (serviceid);\r\n            transManager.setTransUrl(transManager.constants.url.common);\r\n            transManager.setCallBack(this.callback);\r\n            transManager.addConfig  ({\r\n               dao        : transManager.constants.dao.base,\r\n               crudh      : transManager.constants.crudh.handle,\r\n               sqlmapid   : \"SYS.H_handleCentList\",\r\n               datasetsend: \"dsCentList\",\r\n            });\r\n            transManager.addDataset('dsCentList', this.gridCent.gridDataset.getTransRecords(newScrmObj.constants.rowtype.CREATE_OR_UPDATE));\r\n            transManager.agent();\r\n         \r\n            break;\r\n         \r\n         case 'SYS050000_H02':\r\n            transManager.setTransId (serviceid);\r\n            transManager.setTransUrl(transManager.constants.url.common);\r\n            transManager.setCallBack(this.callback);\r\n            transManager.addConfig  ({\r\n               dao        : transManager.constants.dao.base,\r\n               crudh      : transManager.constants.crudh.handle,\r\n               sqlmapid   : \"SYS.H_handleTeamList\",\r\n               datasetsend: \"dsTeamList\",\r\n            });\r\n            for ( let intA = 0; intA < this.gridTeam.gridDataset.records.length; intA ++ ) {\r\n               if (StrLib.isNull(this.gridTeam.gridDataset.records[intA][\"CENT_CD\"])) {\r\n                  this.gridTeam.gridDataset.records[intA][\"CENT_CD\"] = this.gridCentApi.getSelectedRows()[0].CENT_CD;\r\n                  \r\n               }               \r\n            }\r\n            transManager.addDataset('dsTeamList', this.gridTeam.gridDataset.records);   \r\n            transManager.agent();\r\n            break;\r\n         case 'SYS050000_U03':\r\n            transManager.setTransId (serviceid);\r\n            transManager.setTransUrl(transManager.constants.url.common);\r\n            transManager.setCallBack(this.callback);\r\n            transManager.addConfig  ({\r\n               dao        : transManager.constants.dao.base,\r\n               crudh      : transManager.constants.crudh.handle,\r\n               sqlmapid   : \"SYS.H_updateStndValList\",\r\n               datasetsend: \"dsCentStndValList\",\r\n            });\r\n      \r\n            for ( let intA = 0; intA < this.gridStndVal.gridDataset.records.length; intA ++ ) {\r\n               if (StrLib.isNull(this.gridStndVal.gridDataset.records[intA][\"CENT_CD\"])) {\r\n                  this.gridStndVal.gridDataset.records[intA][\"CENT_CD\"] = this.gridCentApi.getSelectedRows()[0].CENT_CD;         \r\n               }               \r\n            }\r\n\r\n            transManager.addDataset('dsCentStndValList', this.gridStndVal.gridDataset.records);\r\n            transManager.agent();\r\n            break;\r\n         default: break;\r\n         }\r\n      }   catch (err) {\r\n\r\n      }\r\n   }\r\n/*------------------------------------------------------------------------------------------------*/\r\n   // [5. Callback Event Zone]\r\n   //  - Callback 관련 정의\r\n   //   SYS050000_R01 센터정보 조회\r\n   //   SYS050000_R02 팀정보, 기준값정보 조회\r\n   //   SYS050000_H01 센터정보 저장\r\n   //   SYS050000_H02 팀정보 저장\r\n   //   SYS050000_U03 기준값정보 저장\r\n/*------------------------------------------------------------------------------------------------*/\r\n   callback = (res) => {\r\n\r\n      let centRows, teamRows;\r\n      let centRow, teamRow;    \r\n\r\n      switch (res.id) {\r\n      case 'SYS050000_R01':\r\n         if(res.data.dsCentRecv.length > 0) {\r\n            let dsCentCd = res.data.dsCentRecv;\r\n            let tempCentCd = 0;\r\n\r\n            for(let i = 0; i < dsCentCd.length; i++) {\r\n               dsCentCd[i].TEMP_CD = tempCentCd;\r\n                  tempCentCd++;\r\n            }\r\n\r\n            this.maxCentTempCd = tempCentCd;\r\n\r\n            ComLib.setStateInitRecords(this, \"dsCentList\", dsCentCd);\r\n\r\n            centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n\r\n            let centCd;\r\n\r\n            for(let i = 0; i < centRows.length; i++) {\r\n               if(centRows[i].data.CENT_CD === this.lastEditedCent) {\r\n                  centRow = this.gridCentApi.rowModel.rowsToDisplay[i];\r\n                  centCd = this.gridCentApi.rowModel.rowsToDisplay[i].data.CENT_CD;\r\n                  this.gridCentApi.ensureIndexVisible(i, 'middle');\r\n                  break;\r\n               }\r\n            }\r\n\r\n            if(centRow === undefined) {\r\n               centRow = this.gridCentApi.rowModel.rowsToDisplay[0];\r\n               centCd = this.gridCentApi.rowModel.rowsToDisplay[0].data.CENT_CD;\r\n            }\r\n            if(centRow.selected !== true) {\r\n               centRow.setSelected(true);\r\n            }\r\n            this.currentRowCent = centCd;\r\n\r\n            if (this.validation(\"SYS050000_R02\")) this.transaction(\"SYS050000_R02\", centCd);\r\n         \r\n         } else {\r\n\r\n            ComLib.setStateInitRecords(this, \"dsCentList\", []);\r\n            ComLib.setStateInitRecords(this, \"dsTeamList\", []);\r\n            ComLib.setStateInitRecords(this, \"dsCentStndValList\", []);\r\n         }\r\n         break;\r\n\r\n      case 'SYS050000_R02': \r\n         if(res.data.dsTeamRecv.length > 0) {\r\n            let dsTeamCd = res.data.dsTeamRecv;\r\n            let tempTeamCd = 0;\r\n            \r\n            for(let i = 0; i < dsTeamCd.length; i++) {\r\n               dsTeamCd[i].TEMP_CD = tempTeamCd;\r\n               tempTeamCd++;\r\n            }\r\n\r\n            this.maxTeamTempCd = tempTeamCd;\r\n            ComLib.setStateInitRecords(this, \"dsTeamList\", res.data.dsTeamRecv);\r\n            teamRows = this.gridTeamApi.rowModel.rowsToDisplay;\r\n            let teamCd;\r\n\r\n            for(let i = 0; i < teamRows.length; i++) {\r\n               if(teamRows[i].data.TEAM_CD === this.lastEditedTeam) {\r\n                  teamRow = this.gridTeamApi.rowModel.rowsToDisplay[i];\r\n                  teamCd = this.gridTeamApi.rowModel.rowsToDisplay[i].data.TEAM_CD;\r\n                  this.gridTeamApi.ensureIndexVisible(i, 'middle');\r\n\r\n                  break;\r\n               }\r\n            }\r\n            if(teamRow === undefined) {\r\n               teamRow = this.gridTeamApi.rowModel.rowsToDisplay[0];\r\n               teamCd = this.gridTeamApi.rowModel.rowsToDisplay[0].data.TEAM_CD;\r\n            }\r\n            if(teamRow.selected !== true) {\r\n               teamRow.setSelected(true);\r\n            }\r\n\r\n            this.currentRowTeam = teamCd;\r\n         }\r\n        \r\n     \r\n      else {\r\n            ComLib.setStateInitRecords(this, \"dsTeamList\", []);\r\n            ComLib.setStateInitRecords(this, \"dsCentStndValList\", []);\r\n\r\n         }\r\n         if (res.data.dsStndValRecv.length > 0) {\r\n            ComLib.setStateInitRecords(this, \"dsCentStndValList\", res.data.dsStndValRecv);\r\n            \r\n\r\n         } else {\r\n            ComLib.setStateRecords(this, \"dsCentStndValList\", []);\r\n         }\r\n      \r\n      \r\n         break;\r\n\r\n      case 'SYS050000_H01':   \r\n         ComLib.openDialog('A', 'COMI0001', ['센터 정보']);//정상적으로 저장되었습니다.         \r\n         this.transaction(\"SYS050000_R01\");\r\n            \r\n         break;\r\n      case 'SYS050000_H02':   \r\n         ComLib.openDialog('A', 'COMI0001', ['팀 정보']);//정상적으로 저장되었습니다.\r\n         let centCd = this.gridCentApi.getSelectedRows()[0].CENT_CD;\r\n         this.transaction(\"SYS050000_R02\",centCd);\r\n\r\n         break;\r\n      case 'SYS050000_U03':   \r\n         ComLib.openDialog('A', 'COMI0001', ['기준값 정보']);//정상적으로 저장되었습니다.\r\n         centCd = this.gridCentApi.getSelectedRows()[0].CENT_CD;      \r\n         this.transaction(\"SYS050000_R02\", centCd);  \r\n\r\n         break;\r\n\r\n      default : break;\r\n      }\r\n   }\r\n/*------------------------------------------------------------------------------------------------*/\r\n   // [6. event Zone]\r\n   //  - 각 Component의 event 처리\r\n/*------------------------------------------------------------------------------------------------*/\r\n   \r\n   event = {\r\n      button : {\r\n         onClick : (e) => {\r\n            switch (e.target.id) {\r\n            case 'btnSearch': \r\n               if(this.validation(\"SYS050000_R01\")) this.transaction(\"SYS050000_R01\");\r\n\r\n               break;\r\n\r\n            case 'btnCentSave':\r\n               if (this.validation(\"SYS050000_H01\")) this.transaction('SYS050000_H01');\r\n                           \r\n               break;\r\n\r\n            case 'btnTeamSave':\r\n               if (this.validation(\"SYS050000_H02\")) this.transaction('SYS050000_H02');\r\n            \r\n               break;\r\n\r\n            case 'btnStndSave':\r\n               if (this.validation(\"SYS050000_U03\"))  this.transaction('SYS050000_U03');\r\n               \r\n               break;\r\n               \r\n            default: break;\r\n\r\n            }\r\n         }\r\n      },\r\n      input : {\r\n         onChange : (e) => {\r\n            switch(e.target.id) {\r\n            case 'iptCentCdNm':\r\n               let state = this.state;\r\n               state['textFieldProps']['iptCentCdNm'].value = e.target.value;\r\n               this.setState(state);\r\n\r\n               break;\r\n            default: break;\r\n            }\r\n         }\r\n      },\r\n      grid : {\r\n         onGridReady : (e) => {\r\n            switch (e.id) {\r\n            case \"gridCent\":\r\n               this.gridCentApi = e.gridApi;\r\n               this.gridCent = e.grid;\r\n         \r\n               break;\r\n\r\n            case \"gridTeam\":\r\n      \r\n               this.gridTeamApi = e.gridApi;\r\n               this.gridTeam = e.grid;   \r\n               \r\n               break;\r\n\r\n            case \"gridStndVal\":\r\n            \r\n               this.gridStndValApi = e.gridApi;   \r\n               this.gridStndVal = e.grid;         \r\n            \r\n               break;\r\n\r\n            default: break\r\n            }\r\n            \r\n         },\r\n\r\n         onRowClicked: (e) => { \r\n            switch(e.id) {\r\n            case \"gridCent\":\r\n               let centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n               let centRow;\r\n               \r\n               for(let i = 0; i< centRows.length; i++) {\r\n                  if(centRows[i].data.TEMP_CD === e.data.TEMP_CD) {\r\n                     centRow = this.gridCentApi.rowModel.rowsToDisplay[i];\r\n                     break;\r\n\r\n                  }\r\n               }\r\n               if(centRow.selected !== true) {\r\n                  centRow.setSelected(true);\r\n               \r\n               }\r\n\r\n               break;\r\n\r\n            case \"gridTeam\":\r\n\r\n               let teamRows = this.gridTeamApi.rowModel.rowsToDisplay;\r\n               let teamRow;\r\n               for(let i = 0; i< teamRows.length; i++) {\r\n                  if(teamRows[i].data.TEMP_CD === e.data.TEMP_CD) {\r\n                     teamRow = this.gridTeamApi.rowModel.rowsToDisplay[i];\r\n                     break;\r\n  \r\n                  }\r\n               }\r\n               if(teamRow.selected !== true) {\r\n                  teamRow.setSelected(true);\r\n                  \r\n               }\r\n               break;\r\n            case \"gridStndVal\":   \r\n             \r\n               break;\r\n            default: break;\r\n            }\r\n\r\n         },\r\n         onCellFocused: () => {\r\n         \r\n         },\r\n         onCellClicked: (e) => {\r\n       \r\n         },\r\n         onCellDoubleClicked: () => {\r\n           \r\n         },\r\n         onCellValueChanged: (e) => {\r\n            switch (e.id) {\r\n            case \"gridCent\":\r\n               if(e.col === \"CENT_CD\" ) {\r\n\r\n                  if(this.gridCent.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n                     \r\n                     ComLib.openDialog('A', 'COME0013', ['센터 코드']);//변경 하실 수 없습니다.\r\n                     \r\n                     this.gridCent.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                     this.gridCentApi.setRowData(this.gridCent.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                  }\r\n               }\r\n               \r\n               let centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n               let centRow;\r\n\r\n               for(let i = 0; i < centRows.length; i++) {\r\n                  if(centRows[i].data.TEMP_CD === e.data[e.index].TEMP_CD) {\r\n                     centRow = this.gridCentApi.rowModel.rowsToDisplay[i];\r\n                     \r\n                     break;\r\n                  }\r\n               }\r\n\r\n               this.currentRowCent = centRow.data.CENT_CD;\r\n               this.lastEditedCent =   this.currentRowCent;\r\n               break;\r\n\r\n            case \"gridTeam\":\r\n               if(e.col === \"TEAM_CD\") {    \r\n                  if(this.gridTeam.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create) {\r\n                     \r\n                     ComLib.openDialog('A', 'COME0013', ['팀 코드']);//{0}는 변경 하실 수 없습니다.\r\n                     this.gridTeam.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n\r\n                     this.gridTeamApi.setRowData(this.gridTeam.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                  }\r\n               }\r\n               let teamRows = this.gridTeamApi.rowModel.rowsToDisplay;\r\n               let teamRow;\r\n\r\n               for(let i = 0; i < teamRows.length; i++) {\r\n                  if(teamRows[i].data.TEMP_CD === e.data[e.index].TEMP_CD) {\r\n                     teamRow = this.gridTeamApi.rowModel.rowsToDisplay[i];\r\n                     this.gridTeamApi.ensureIndexVisible(i, 'middle');\r\n                     break;\r\n                  }\r\n               }\r\n               this.currentRowCent = this.gridCentApi.getSelectedRows()[0].CENT_CD;\r\n\t\t\t\t\r\n\t\t\t\t\tthis.currentRowTeam = teamRow.data.TEAM_CD;\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.lastEditedCent = this.currentRowCent;\r\n               break;\r\n            case \"gridStndVal\":    \r\n               console.log(\"A\")\r\n               if(e.col === \"STND_VAL\" || e.col === \"APY_FLAG\" || e.col ===\"ETC1\" || e.col ===\"ETC2\") {\r\n                  console.log(\"A\")\r\n\r\n                  if( (this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create)\r\n                     && (this.gridStndVal.gridDataset.records[e.index].CENT_SET_CHG_FLAG ==='N')\r\n                      && (ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV'] !== 1) ) {\r\n\r\n                        console.log(\"A\")\r\n                      ComLib.openDialog('A', 'SYSI0010', ['수정이 불가능합니다.']);//센터수정가능여부 N\r\n\r\n                     this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                     this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                 \r\n                     return false;\r\n                  }\r\n               }\r\n                      \r\n\r\n               else if(e.col === \"STND_CD\") {\r\n                  if(this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create) {\r\n                     ComLib.openDialog('A', 'COME0013', ['기준 코드']);//변경할 수 없습니다\r\n\r\n                     this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                     this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                  }\r\n               }\r\n               else if(e.col === \"STND_CD_NM\") {\r\n                  if(this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create) {\r\n                     ComLib.openDialog('A', 'COME0013', ['기준 코드명']);//변경할 수 없습니다\r\n\r\n                     this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                     this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                  }\r\n               }\r\n               if(e.col === \"STND_VAL\" ) {\r\n                  if((ComLib.getSession(\"gdsUserInfo\")[0]['AUTH_LV'] === 1)\r\n                        && (this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create)\r\n                        && (this.gridStndVal.gridDataset.records[e.index].STND_PPTY_USE_FLAG ==='N') ) { //기준값속성사용여부 N\r\n                        \r\n                        ComLib.openDialog('A', 'SYSI0010', ['기준값 속성 사용여부를 확인하세요.']);\r\n\r\n                        this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                        this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                    \r\n                     return false;\r\n                  \r\n                  }\r\n               }\r\n               if(e.col === \"APY_FLAG\") {\r\n                     if( (this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create)\r\n                     && (this.gridStndVal.gridDataset.records[e.index].APY_PPTY_USE_FLAG ==='N') ) {//적용속성 사용여부 N\r\n   \r\n                         ComLib.openDialog('A', 'SYSI0010', ['적용속성 사용여부를 확인하세요.']);\r\n   \r\n                        this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                        this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                        return false;\r\n                     }\r\n                  }\r\n                  if(e.col === \"ETC1\") {\r\n                     if( (this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create)\r\n                     && (this.gridStndVal.gridDataset.records[e.index].ETC1_PPTY_USE_FLAG ==='N') ) {//기타속성1 사용여부 N\r\n   \r\n                         ComLib.openDialog('A', 'SYSI0010', ['기타속성1 사용여부를 확인하세요.']);\r\n   \r\n                        this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                        this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                        \r\n                        return false;\r\n                     }\r\n                  }\r\n                  if(e.col === \"ETC2\") {\r\n                     if( (this.gridStndVal.gridDataset.records[e.index].rowtype !==  newScrmObj.constants.crud.create)\r\n                     && (this.gridStndVal.gridDataset.records[e.index].ETC2_PPTY_USE_FLAG ==='N') ) {//기타속성2 사용여부 N\r\n   \r\n                         ComLib.openDialog('A', 'SYSI0010', ['기타속성2 사용여부를 확인하세요.']);\r\n   \r\n                        this.gridStndVal.gridDataset.setValue(e.index, e.col, e.oldValue);\r\n                        this.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                        return false;\r\n                     }\r\n                  }\r\n   \r\n\r\n        \r\n           \r\n               break;\r\n            default: break;\r\n            }\r\n         },\r\n         onRowDoubleClicked: () => {\r\n         },\r\n         onCellEditingStopped: () => {\r\n         },\r\n         onSelectionChanged: (e) => {      \r\n            switch(e.id) {\r\n            case \"gridCent\":\r\n               console.log(\"selection chagend\")\r\n               console.log(this.currentRowCent)\r\n\r\n               let centRow = this.gridCent.getSelectedRows()[0]\r\n               let centCd = centRow.CENT_CD;\r\n               let rowType = centRow.rowtype;\r\n\r\n               \r\n               console.log(centCd)\r\n               \r\n               console.log(this.currentRowCent !== centCd)\r\n\r\n\r\n               if((rowType === 'r' || rowType === 'u') && (this.currentRowCent !== centCd)) {\r\n                  if(this.validation(\"SYS050000_R02\")) this.transaction(\"SYS050000_R02\", centCd);\r\n                  \r\n               }else if(rowType === 'c') {\r\n                  ComLib.setStateInitRecords(this, \"dsTeamList\", []);\r\n               }\r\n\r\n               this.currentRowCent = this.gridCentApi.getSelectedRows()[0].CENT_CD;\r\n\r\n               break;\r\n            case \"gridTeam\":\r\n               break;\r\n               \r\n            case \"gridStndVal\":\r\n               break;\r\n\r\n            default: break;\r\n               \r\n            }\r\n         },\r\n         onRowSelected: (e) => {\r\n            \r\n         },\r\n         onDeleteRow: (e) => {\r\n            \r\n            switch(e.id) {\r\n            case \"gridCent\":\r\n               \r\n               let centCd   = this.gridCentApi.getSelectedRows()[0].CENT_CD\r\n\t\t\t\t\r\n\t\t\t\t\tlet rowType = this.gridCentApi.getSelectedRows()[0].rowtype;\t\t\t\t\t\r\n\r\n\t\t\t\t\tif ((rowType === 'r' || rowType === 'u') && (this.currentRowCent !== centCd )) {\r\n\t\t\t\t\t\tif (this.validation(\"SYS050000_R02\")) this.transaction(\"SYS050000_R02\", centCd);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsTeamList\", []);\r\n\t\t\t\t\t}\t\t\t\t\r\n\t\t\t\t\tthis.currentRowCent = this.gridCentApi.getSelectedRows()[0].CENT_CD;       \r\n               break;\r\n            case \"gridTeam\":\r\n               \r\n               if (this.gridTeamApi.getSelectedRows().length > 0) {\r\n\t\t\t\t\t\tthis.currentRowTeam = this.gridTeamApi.getSelectedRows()[0].TEAM_CD;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.currentRowTeam = '';\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\r\n\r\n               break;\r\n\r\n            default: break;\r\n            }\r\n            \r\n         },\r\n         onBeforeInsertRow : (e) => {\r\n         },\r\n         onInsertRow : (e) => {\r\n            switch(e.id) {\r\n               case \"gridCent\":\r\n                  let centCdRecords = this.gridCent.gridDataset.records;\r\n                  centCdRecords[e.index].TEMP_CD = this.maxCentTempCd + 1;\r\n                  this.maxCentTempCd++;\r\n                  this.gridCent.gridDataset.setRecords(centCdRecords);\r\n                  this.gridCentApi.setRowData(this.gridCent.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n                  let centRows = this.gridCentApi.rowModel.rowsToDisplay;\r\n                  let centRow;\r\n\r\n                  for (let i = 0; i < centRows.length; i ++) {\r\n                     if (centRows[i].data.TEMP_CD === this.maxCentTempCd){\r\n                        centRow = this.gridCentApi.rowModel.rowsToDisplay[i];\r\n                        this.gridCentApi.ensureIndexVisible(i, 'middle');\r\n                        break;\r\n                     }\r\n                  }\r\n   \r\n                  if (centRow.selected !== true) {\r\n                     centRow.setSelected(true);\r\n                  }\t\t\t\t\t\r\n   \r\n                  ComLib.setStateInitRecords(this, \"dsTeamList\", []);\r\n                  \r\n                  this.currentRowCent = '';\r\n\r\n                  break;\r\n\r\n               case \"gridTeam\":\r\n            \r\n            \r\n                  break;\r\n\r\n               case \"gridStndVal\":\r\n                  \r\n                  \r\n                  break;\r\n               default: break;\r\n               } \r\n         \r\n         }      \r\n      },\r\n      onKeyPress: (e) => {\r\n         switch (e.target.id) {\r\n         case 'iptCentCdNm':\r\n            if (e.key === 'Enter') {\r\n               if (this.validation(\"SYS050000_R01\")) this.transaction(\"SYS050000_R01\");\r\n            }\r\n            \r\n            break;\r\n\r\n         default: break;\r\n         }\r\n\r\n      },\r\n      selectbox : {\r\n         onChange : (e) => {\r\n            switch (e.id) {\r\n            case 'useYn': \r\n               ComLib.setStateValue(this, \"dsSel\", 0, \"USE_FLAG\", e.target.value);\r\n               break;\r\n            default: break;\r\n\r\n            }\r\n\r\n         }\r\n      }\r\n   \r\n}\r\n/*------------------------------------------------------------------------------------------------*/\r\n   // [7. render Zone]\r\n   //  - 화면 관련 내용 작성\r\n/*------------------------------------------------------------------------------------------------*/\r\n   render () {\r\n      return (\r\n         <React.Fragment>\r\n            <FullPanel>\r\n            <SearchPanel>\r\n                  <RelativeGroup>\r\n                     <LFloatArea>\r\n                        <FlexPanel>\r\n                           <Label value=\"센터코드/센터명\"/>\r\n                           <Textfield \r\n                              width={200}\r\n                              id = {this.state.textFieldProps.iptCentCdNm.id}\r\n                              name =  {this.state.textFieldProps.iptCentCdNm.name}\r\n                              value =  {this.state.textFieldProps.iptCentCdNm.value}\r\n                              placeholder =  {this.state.textFieldProps.iptCentCdNm.placeholder}\r\n                              minLength =   {this.state.textFieldProps.iptCentCdNm.minLength}\r\n                              maxLength =   {this.state.textFieldProps.iptCentCdNm.maxLength}\r\n                              readOnly =  {this.state.textFieldProps.iptCentCdNm.readOnly}\r\n                              disabled =  {this.state.textFieldProps.iptCentCdNm.disabled}\r\n                              onChange = {this.event.input.onChange}\r\n                           />\r\n                           <Label value=\"사용여부\"/>\r\n                           <Selectbox\r\n                              id = {\"useYn\"}\r\n                              dataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n                              value = {this.state.dsSel.records[0][\"USE_FLAG\"]}\r\n                              width = {200}\r\n                              disabled = {false}\r\n                              onChange = {this.event.selectbox.onChange}\r\n                           />\r\n                        </FlexPanel>\r\n                     </LFloatArea>\r\n                     <RFloatArea>\r\n                        <Button \r\n                           id = {this.state.btnProps.btnSearch.id}\r\n                           value = {this.state.btnProps.btnSearch.value}\r\n                           disabled = {this.state.btnProps.btnSearch.disabled}\r\n                           hidden = {this.state.btnProps.btnSearch.hidden}\r\n                           onClick = {this.event.button.onClick}\r\n                           color= 'blue' fiiled= {true} \r\n                           innerImage={true} icon = {'srch'} mt=\"5px\"\r\n                        />\r\n                     </RFloatArea>\r\n                  </RelativeGroup>\r\n                  </SearchPanel>\r\n               <SubFullPanel>\r\n                  <FlexPanel>\r\n                     <ComponentPanel>\r\n                        <Grid\r\n                           id = {this.state.gridCent.id}\r\n\r\n                           areaName = {this.state.gridCent.areaName}\r\n                           height= \"200px\"\r\n                           header = {this.state.gridCent.header}\r\n                           data = {this.state.dsCentList}\r\n                           rowNum = {true}\r\n                           onGridReady = {this.event.grid.onGridReady}\r\n                           onDeleteRow = {this.event.grid.onDeleteRow}\r\n                           onInsertRow = {this.event.grid.onInsertRow}   \r\n                           onCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n                           onRowClicked = {this.event.grid.onRowClicked}\r\n                           onCellFocused = {this.event.grid.onCellFocused}\r\n                           onCellClicked = {this.event.grid.onCellClicked}\r\n                           onCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n                           onRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n                           onCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n                           onSelectionChanged = {this.event.grid.onSelectionChanged}\r\n                           onRowSelected = {this.event.grid.onRowSelected}\r\n                        \r\n                        />\r\n                        <RelativeGroup>\r\n                           <RFloatArea>\r\n                              <Button\r\n                                 id = {this.state.btnProps.btnCentSave.id}\r\n                                 value = {this.state.btnProps.btnCentSave.value}\r\n                                 disabled = {this.state.btnProps.btnCentSave.disabled}\r\n                                 hidden = {this.state.btnProps.btnCentSave.hidden}\r\n\t\t\t\t\t\t\t\t          onClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t          color=\"purple\" fiiled=\"o\" mt=\"5px\"\r\n                                />\r\n                           </RFloatArea>\r\n                        </RelativeGroup>\r\n                     </ComponentPanel>\r\n                     <ComponentPanel>\r\n                        <Grid\r\n                           id = {this.state.gridTeam.id}\r\n\r\n                           areaName = {this.state.gridTeam.areaName}\r\n                           height= \"200px\"\r\n                           rowNum = {true}\r\n                           header = {this.state.gridTeam.header}\r\n                           data = {this.state.dsTeamList}\r\n                           onGridReady = {this.event.grid.onGridReady}\r\n                           onRowClicked = {this.event.grid.onRowClicked}\r\n                           onCellFocused = {this.event.grid.onCellFocused}\r\n                           onCellClicked = {this.event.grid.onCellClicked}\r\n                           onCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n                           onCellValueChanged = {this.event.grid.onCellValueChanged}\r\n                           onRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n                           onCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n                           onSelectionChanged = {this.event.grid.onSelectionChanged}\r\n                           onRowSelected = {this.event.grid.onRowSelected}\r\n                           onDeleteRow = {this.event.grid.onDeleteRow}\r\n                           onInsertRow = {this.event.grid.onInsertRow}                    \r\n                        />\r\n                        <RelativeGroup>\r\n                           <RFloatArea>\r\n                              <Button\r\n                                 id = {this.state.btnProps.btnTeamSave.id}\r\n                                 value = {this.state.btnProps.btnTeamSave.value}\r\n                                 disabled = {this.state.btnProps.btnTeamSave.disabled}\r\n                                 hidden = {this.state.btnProps.btnTeamSave.hidden}\r\n\t\t\t\t\t\t\t\t         onClick = {this.event.button.onClick}\r\n                                 color=\"purple\" fiiled=\"o\" mt=\"5px\"\r\n                              />\r\n                           </RFloatArea>\r\n                        </RelativeGroup>\r\n                     </ComponentPanel>\r\n                  </FlexPanel>\r\n               </SubFullPanel>\r\n               <SubFullPanel>\r\n                  <ComponentPanel>\r\n                     <Grid\r\n                        id = {this.state.gridStndVal.id}\r\n               \r\n                        areaName = {this.state.gridStndVal.areaName}\r\n                        height= \"250px\"\r\n                        header = {this.state.gridStndVal.header}\r\n                        addRowBtn = {false}\r\n                        delRowBtn = {false}\r\n                        rowNum = {true}\r\n                        data = {this.state.dsCentStndValList}\r\n                        onGridReady = {this.event.grid.onGridReady}\r\n                        onRowClicked = {this.event.grid.onRowClicked}\r\n                        onCellFocused = {this.event.grid.onCellFocused}\r\n                        onCellClicked = {this.event.grid.onCellClicked}\r\n                        onCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n                        onCellValueChanged = {this.event.grid.onCellValueChanged}\r\n                        onRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n                        onCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n                        onSelectionChanged = {this.event.grid.onSelectionChanged}\r\n                        onRowSelected = {this.event.grid.onRowSelected}\r\n                        onDeleteRow = {this.event.grid.onDeleteRow}\r\n                        onInsertRow = {this.event.grid.onInsertRow}\r\n                     />\r\n                     <RelativeGroup>\r\n                        <RFloatArea>\r\n                           <Button \r\n                              id = {this.state.btnProps.btnStndSave.id}\r\n                              value = {this.state.btnProps.btnStndSave.value}\r\n                              disabled = {this.state.btnProps.btnStndSave.disabled}\r\n                              hidden = {this.state.btnProps.btnStndSave.hidden}\r\n                              onClick = {this.event.button.onClick}\r\n                              color=\"purple\" fiiled=\"o\" mt=\"5px\"\r\n                           />\r\n                        </RFloatArea>\r\n                     </RelativeGroup>\r\n                  </ComponentPanel>\r\n               </SubFullPanel>\r\n            </FullPanel>\r\n         </React.Fragment>\r\n      )\r\n   }\r\n}\r\n\r\nexport default View;\r\n\r\n\r\n\r\n","// 상담원관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, SearchPanel} from 'components'; //버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Checkbox, Textfield, Selectbox} from 'components';\r\nimport {Grid, Table} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, TransManager, StrLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.csGrid = null;\r\n\t\tthis.csGridApi = null;\r\n\t\tthis.password = '';\r\n\t\tthis.clickBtnId = '';\r\n\t\tthis.state = {\r\n\t\t\tdsSrch: DataLib.datalist.getInstance([{CENT_CD: ComLib.setOrgComboValue(\"CENT_CD\"), TEAM_CD: \"\", SRCH_DV: \"NM\", SRCH_VALUE: \"\"}]),\r\n\t\t\tdsConstList : DataLib.datalist.getInstance(),\r\n\t\t\t\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tcmbSrchDv_dataset : [\r\n\t\t\t\t{value : 'NM', name : '성명'},\r\n\t\t\t\t{value : 'CD', name : 'CD'}\r\n\t\t\t],\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptSrchword : {\r\n\t\t\t\t\tid          : 'iptSrchword',\r\n\t\t\t\t\tname        : 'iptSrchword',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '성명/CD',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgridProps : {\r\n\t\t\t\tid : 'grdCsList',\r\n\t\t\t\tareaName : '상당원 목록',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '센터',\t\tfield: 'CENT_NM',\t\tcolId: 'CENT_NM', \t\teditable: false,\twidth: 100},\r\n\t\t\t\t\t{headerName: '팀',\t\t\tfield: 'TEAM_NM',\t\tcolId: 'TEAM_NM',\t\teditable: false,\twidth: 100},\r\n\t\t\t\t\t{headerName: '상담원CD',\tfield: 'CONST_CD',\t\tcolId: 'CONST_CD',\t\teditable: false,\twidth: 100},\r\n\t\t\t\t\t{headerName: '상담원명',\tfield: 'CONST_NM',\t\tcolId: 'CONST_NM',\t\teditable: false,\twidth: 100, textAlign: 'center'},\r\n\t\t\t\t\t{headerName: '내선번호',\tfield: 'EXT_NUM',\t\tcolId: 'EXT_NUM',\t\teditable: false,\twidth: 100},\r\n\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_FLAG_NM',\tcolId: 'USE_FLAG_NM', \teditable: false,\twidth: 50, textAlign: 'center'},\r\n\t\t\t\t\t{headerName: '등록/수정자',\tfield: 'REG_USR_ID',\tcolId: 'REG_USR_ID', \teditable: false,\twidth: 100, textAlign: 'center'},\r\n\t\t\t\t\t{headerName: '등록/수정 일시',\tfield: 'REG_DTM',\t colId: 'REG_DTM', \t    editable: false,\twidth: 100, textAlign: 'center'},\r\n\t\t\t\t],\t\t\t\t\r\n\t\t\t\tpaging : {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\tpage : 1,\r\n\t\t\t\t\tloading: false\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// 1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t// => 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () { // 조회\r\n\t\tif(this.validation(\"SYS030000_R01\")) this.transaction(\"SYS030000_R01\");\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SYS030000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SYS030000_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SYS030000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\t\t\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['gridProps']['paging'].start;\r\n\t\tlet pageLimit   = state['gridProps']['paging'].size;\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\t\tcase 'SYS030000_R01' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getConstList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsConstList\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet param = {\r\n\t\t\t\t\t\tCENT_CD    : state.dsSrch.records[0][\"CENT_CD\"],\r\n\t\t\t\t\t\tTEAM_CD    : state.dsSrch.records[0][\"TEAM_CD\"],\r\n\t\t\t\t\t\tSRCH_DV    : state.dsSrch.records[0][\"SRCH_DV\"],\r\n\t\t\t\t\t\tSRCH_VALUE : state.dsSrch.records[0][\"SRCH_VALUE\"].trim(),\t\t\t\t\t\t\r\n\t\t\t\t\t\tQUERY_START: pageStart,\r\n\t\t\t\t\t\tQUERY_LIMIT: pageLimit,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tstate.lastdsSrch = state.dsSrch;\r\n\r\n\t\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSend', [ param ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SYS030000_R02' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SYS.R_getConstList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsConstList\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tlet param2 = {\r\n\t\t\t\t\t\tCENT_CD    : state.lastdsSrch.records[0][\"CENT_CD\"],\r\n\t\t\t\t\t\tTEAM_CD    : state.lastdsSrch.records[0][\"TEAM_CD\"],\r\n\t\t\t\t\t\tSRCH_DV    : state.lastdsSrch.records[0][\"SRCH_DV\"],\r\n\t\t\t\t\t\tSRCH_VALUE : state.lastdsSrch.records[0][\"SRCH_VALUE\"].trim(),\t\t\t\t\t\t\r\n\t\t\t\t\t\tQUERY_START: pageStart,\r\n\t\t\t\t\t\tQUERY_LIMIT: pageLimit,\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSend', [ param2 ]);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tlet state = this.state;\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SYS030000_R01':\r\n\t\t\t\tif (res.data.dsConstList.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsConstList\", res.data.dsConstList);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateRecords(this, \"dsConstList\", []);\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tstate['gridProps']['paging'].loading = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t\tbreak; \r\n\r\n\t\t\tcase 'SYS030000_R02':\t\t\t\t\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsConstList\", res.data.dsConstList);\r\n\r\n\t\t\t\tstate['gridProps']['paging'].loading = false;\r\n\t\t\t\t\r\n\t\t\t\tthis.setState(state);\r\n\r\n\r\n\t\t\t\tbreak; \r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tthis.clickBtnId = e.target.id;\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t// 조회\r\n\t\t\t\t\t\tif(this.validation(\"SYS030000_R01\")) this.handler.setDs('SYS030000_R01');\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonBeforeInsertRow: (e) => {\t\t\t\t\r\n\t\t\t\tlet param = {id: 'test', records: [{CONST_CD: \"\", CONST_NM: \"\", EXT_NUM: \"\", CENT_CD: \"\", TEAM_CD: \"\", USE_FLAG: \"Y\"}], isNew: true};\r\n\t\t\t\tlet option2 = { width: '600px', height: '300px', modaless: false, param: param}\r\n\t\t\t\tComLib.openPop('SYS030001', '신규 상담원 등록', option2, this.event.grid.afterAddCus)\r\n\r\n\t\t\t\treturn {rtn:false};\r\n\t\t\t},\r\n\t\t\tafterAddCus: (e) => {\r\n\t\t\t\tthis.handler.setDs('SYS030000_R01');\r\n\t\t\t},\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\t//this.setState({grdMenuApi : e.gridApi, grdMenu : e.grid});\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase \"grdCsList\":\r\n\t\t\t\t\t\tthis.csGridApi = e.gridApi;\r\n\t\t\t\t\t\tthis.csGrid = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\t// 클릭을 한 번 더 했을 때 그리드에 선택된 인덱스가 풀리지 않도록 하기\r\n\t\t\t\tlet constRows = this.csGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\tlet constRow;\r\n\r\n\t\t\t\tfor (let i = 0; i < constRows.length; i ++) {\r\n\t\t\t\t\tif (constRows[i].data.CONST_CD === e.data.CONST_CD){\r\n\t\t\t\t\t\tconstRow = this.csGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconstRow.setSelected(true);\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\tlet param = {id: 'test', records: [e.data], isNew: false};\r\n\t\t\t\tlet option2 = { width: '600px', height: '300px', modaless: false, param: param}\r\n\t\t\t\tComLib.openPop('SYS030001', '상담원 정보 변경', option2, this.event.grid.afterAddCus)\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tif (!this.state.gridProps.paging.loading) {\r\n\t\t\t\t\tthis.setState({...this.state\r\n\t\t\t\t\t\t, gridProps : { ...this.state.gridProps\r\n\t\t\t\t\t\t\t, paging : { ...this.state.gridProps.paging\r\n\t\t\t\t\t\t\t\t, start : this.state.gridProps.paging.start + this.state.gridProps.paging.size\r\n\t\t\t\t\t\t\t\t, page : this.state.gridProps.paging.page + 1\r\n\t\t\t\t\t\t\t\t, loading : true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SYS030000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSrchword' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRCH_VALUE\", e.target.value);\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'cmbSrchCent' : \r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"CENT_CD\", e.target.value);\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", \"\");\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'cmbSrchTeam' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"TEAM_CD\", e.target.value);\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'cmbSrchDv' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRCH_DV\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"센터\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchCent\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCentList(), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"CENT_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tcontrolOrgCombo = {'CENT'}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"팀\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchTeam\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getTeamList(this.state.dsSrch), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"TEAM_CD\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"상담원\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"cmbSrchDv\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"SRCH_DV\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {this.state.cmbSrchDv_dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\tid    = {\"iptSrchword\"}\r\n\t\t\t\t\t\t\t\t\t\tname  = {\"iptSrchword\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSrch.records[0][\"SRCH_VALUE\"]}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {\"이름/아이디\"}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {200}\r\n\t\t\t\t\t\t\t\t\t\treadOnly = {false}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor= 'blue' fiiled= {true} innerImage={true} icon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid      = {this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\tref     = {this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\theader  = {this.state.gridProps.header}\r\n\t\t\t\t\t\t\t\tareaName= {this.state.gridProps.areaName}\r\n\t\t\t\t\t\t\t\theight  = \"650px\"\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\trowNum    = {true}\t\t\t\t\r\n\t\t\t\t\t\t\t\tpaging    = {true}\r\n\t\t\t\t\t\t\t\tinfinite  = {true}\r\n\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsConstList}\r\n\t\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsConstList.getRecords().length === 0) ? 0 : this.state.dsConstList.getValue(0, 'totalcount')}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonBeforeInsertRow  = {this.event.grid.onBeforeInsertRow}\r\n\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonScrollEnd        = {this.event.grid.onScrollEnd}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked= {this.event.grid.onCellDoubleClicked}\t\r\n\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","//STT 결과조회\r\nimport React from 'react';\r\n\r\nimport {\r\n\tComponentPanel, FullPanel,  RFloatArea, LFloatArea, SearchPanel, FlexPanel, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, RangeInputCalendar, Selectbox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {StrLib, TransManager, ComLib, DataLib, newScrmObj, DateLib} from 'common';\r\n\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\t\t\r\n\t\tthis.missSentGridApi = null;\r\n\t\tthis.missSentGrid    = null;\r\n\t\tthis.state = {\t\t\t\r\n\t\t\tdsMissSentList : DataLib.datalist.getInstance(),\t\t\t\r\n\t\t\tlastStartDate: '',\r\n\t\t\tlastEndDate: '', \r\n\t\t\tlastRegIdNm: '',\r\n\t\t\tlastAppYn: '',\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnSave : {\r\n\t\t\t\t\tid       : 'btnSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tgridProps : {\r\n\t\t\t\tgridMissSentList : {\r\n\t\t\t\t\tareaName : '오인식 문장',\r\n\t\t\t\t\tid : 'gridMissSentList',\r\n\t\t\t\t\theader : \r\n\t\t\t\t\t[\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{headerName: '콜아이디',\t       field: 'STT_UNQ',\t\t  colId: 'STT_UNQ',\t\t  editable: false },\r\n\t\t\t\t\t\t{headerName: '오인식 상담 원문',field: 'MIS_SENT_CONT',\t   colId: 'MIS_SENT_CONT', editable: false},\r\n\t\t\t\t\t\t{headerName: '작성문장',\t\tfield: 'ANS_SENT_CONT',\t  colId: 'ANS_SENT_CONT', editable: false},\r\n\t\t\t\t\t\t{headerName: '오인식 타입',\t\tfield: 'ACT_TP',\t  colId: 'ACT_TP', editable: false, textAlign: 'center',\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'ACT_TP')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'ACT_TP')},\r\n\t\t\t\t\t\t{headerName: '등록시간',\t    field: 'REG_DTM',\t      colId: 'REG_DTM',\t      editable: false},\r\n\t\t\t\t\t\t{headerName: '등록자',\t        field: 'REG_USR_NM',\t  colId: 'REG_USR_NM',\t  editable: false, textAlign: 'center'},\r\n\t\t\t\t\t\t{headerName: '학습적용여부',\tfield: 'TRN_APY_FLAG',\t  colId: 'TRN_APY_FLAG',  editable: true, singleClickEdit: true, textAlign: 'center',\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'APY_FLAG')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'APY_FLAG')}\r\n\t\t\t\t\t],\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1\r\n\t\t\t\t\t},\r\n\t\t\t\t}\r\n\t\t\t},\t\t\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\trgcRecDate : {\r\n\t\t\t\t\tlabel : '녹취일',\r\n\t\t\t\t\tid : 'rgcRecDate',\r\n\t\t\t\t\tstrtId : 'rgcRecDateStart',\r\n\t\t\t\t\tendId : 'rgcRecDateEnd',\r\n\t\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselAppYn : {\r\n\t\t\t\t\tid       : 'selAppYn',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'APY_FLAG'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptRegIdNm : {\r\n\t\t\t\t\tid          : 'iptRegIdNm',\r\n\t\t\t\t\tname        : 'iptRegIdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '등록자 아이디/등록자 명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 15,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\t// [2. React Lifecycle Method Zone] ==> 리액트 컴포넌트 생명주기 메소드\r\n\t\t// 참고 site : https://ko.reactjs.org/docs/react-component.html#constructor\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SYS040000_R01\")) this.transaction(\"SYS040000_R01\");\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SYS040000_R01' :\r\n\t\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.rgcRecDate.startDate) || StrLib.isNull(this.state.rangeCalendarProps.rgcRecDate.endDate) )  {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(this.state.rangeCalendarProps.rgcRecDate.startDate > this.state.rangeCalendarProps.rgcRecDate.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색 시작일자가 종료일자보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS040000_U01' :\r\n\t\t\t\tlet chkCnt  = 0;\r\n\t\t\t\tlet records = this.missSentGrid.gridDataset.records;\r\n\r\n\t\t\t\tfor (let intA = 0; intA < records.length; intA ++) {\r\n\t\t\t\t\tif (records[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t}\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (records.length < 1 || chkCnt === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SYS040000_R01\" :\r\n\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['gridMissSentList']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['gridMissSentList']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SYS040000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (transId) => {\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId(transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['gridProps']['gridMissSentList']['paging'].start;\r\n\t\tlet pageLimit   = state['gridProps']['gridMissSentList']['paging'].size;\r\n\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SYS040000_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"SYS.R_getMissSentMngList\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsMissSentList\",\r\n\t\t\t\t})\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ \r\n\t\t\t\t\t  START_DATE  : this.state.rangeCalendarProps.rgcRecDate.startDate\r\n\t\t\t\t\t, END_DATE    : this.state.rangeCalendarProps.rgcRecDate.endDate \r\n\t\t\t\t\t, REG_USR_ID  : this.state.textFieldProps.iptRegIdNm.value\r\n\t\t\t\t\t, APP_YN      : this.state.selectboxProps.selAppYn.value\r\n\t\t\t\t\t, QUERY_START : pageStart\r\n\t\t\t\t\t, QUERY_LIMIT : pageLimit\r\n\t\t\t\t}]);\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS040000_R02':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"SYS.R_getMissSentMngList\",\r\n\t\t\t\t\tdatasetsend:\"dsSrchParamInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsMissSentList\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSrchParamInfo', [{ \r\n\t\t\t\t\t  START_DATE  : this.state.lastStartDate\r\n\t\t\t\t\t, END_DATE    : this.state.lastEndDate \r\n\t\t\t\t\t, REG_USR_ID  : this.state.lastRegIdNm\r\n\t\t\t\t\t, APP_YN      : this.state.lastAppYn\r\n\t\t\t\t\t, QUERY_START : pageStart\r\n\t\t\t\t\t, QUERY_LIMIT : pageLimit\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tcase 'SYS040000_U01' :\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid:\"SYS.U_SetMissSentApy\",\r\n\t\t\t\t\tdatasetsend:\"dsMissSent\",\r\n\t\t\t\t\tdatasetrecv:\"\",\r\n\t\t\t\t});\t\t\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\ttransManager.addDataset('dsMissSent', this.missSentGrid.gridDataset.records.filter((item) => item.rowtype !== newScrmObj.constants.crud.read));\r\n\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttransManager.agent();\r\n\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tlet state = this.state;\r\n\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SYS040000_R01':\t\t\t\r\n\t\t\tif(res.data.dsMissSentList.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsMissSentList\", res.data.dsMissSentList);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t\tstate.lastAppYn     = state['selectboxProps']['selAppYn'].value;\r\n\t\t\t\tstate.lastRegIdNm   = state['textFieldProps']['iptRegIdNm'].value;\r\n\t\t\t\tstate.lastStartDate = state['rangeCalendarProps']['rgcRecDate'].startDate;\r\n\t\t\t\tstate.lastEndDate   = state['rangeCalendarProps']['rgcRecDate'].endDate;\r\n\t\t\t\tstate['gridProps']['gridMissSentList']['paging'].loading = false;\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t\t\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\r\n\t\t\t\tComLib.setStateRecords(this, \"dsMissSentList\", \"\");\t\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS040000_R02':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsMissSentList\", res.data.dsMissSentList);\r\n\t\t\t\r\n\t\t\tstate['gridProps']['gridMissSentList']['paging'].loading = false;\r\n\t\t\tthis.setState(state);\r\n\t\t\t\r\n\t\t\tbreak;\r\n\t\t\r\n\t\tcase 'SYS040000_U01':\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnSearch\" :\r\n\t\t\t\t\tif (this.validation(\"SYS040000_R01\")) this.handler.setDs('SYS040000_R01');\t\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"btnSave\" :\r\n\t\t\t\t\tif (this.validation(\"SYS040000_U01\")) this.transaction('SYS040000_U01');\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, \r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'rgcRecDate':\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, \r\n\t\t\t\t\t\t\trangeCalendarProps : {...this.state.rangeCalendarProps\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t, rgcRecDate : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{...this.state.rangeCalendarProps.rgcRecDate, startDate : e.startDate, endDate : e.endDate}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}});\r\n\t\t\t\tbreak; \r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"gridMissSentList\":\t\t\t\t\t\r\n\t\t\t\t\tthis.missSentGridApi = e.gridApi;\r\n\t\t\t\t\tthis.missSentGrid    = e.grid;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\t\t\t\tif (!state['gridProps']['gridMissSentList']['paging'].loading) {\r\n\t\t\t\t\tstate['gridProps']['gridMissSentList']['paging'].start = state['gridProps']['gridMissSentList']['paging'].start + state['gridProps']['gridMissSentList']['paging'].size;\r\n\t\t\t\t\tstate['gridProps']['gridMissSentList']['paging'].page  = state['gridProps']['gridMissSentList']['paging'].page + 1;\r\n\t\t\t\t\tstate['gridProps']['gridMissSentList']['paging'].loading = true;\r\n\r\n\t\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SYS040000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['textFieldProps'][e.target.id].value = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.target.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.target.id].value    = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\t\t\t\t\t\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value={this.state.rangeCalendarProps.rgcRecDate.label} req={true}/>\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.rangeCalendarProps.rgcRecDate.id}\r\n\t\t\t\t\t\t\t\t\t\tstrtId  = {this.state.rangeCalendarProps.rgcRecDate.strtId}\r\n\t\t\t\t\t\t\t\t\t\tendId  = {this.state.rangeCalendarProps.rgcRecDate.endId}\t\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.rgcRecDate.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate = {this.state.rangeCalendarProps.rgcRecDate.endDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Label value=\"오인식 문장 등록자\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptRegIdNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptRegIdNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptRegIdNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptRegIdNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptRegIdNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptRegIdNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptRegIdNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptRegIdNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"학습 적용 여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selAppYn.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selAppYn.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selAppYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selAppYn.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selAppYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selAppYn.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor= 'blue' fiiled= {true} innerImage={true} icon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tareaName = {this.state.gridProps.gridMissSentList.areaName}\r\n\t\t\t\t\t\t\tid       = {this.state.gridProps.gridMissSentList.id}\r\n\t\t\t\t\t\t\theight   = \"600px\"\r\n\t\t\t\t\t\t\theader   = {this.state.gridProps.gridMissSentList.header}\r\n\t\t\t\t\t\t\tdata     = {this.state.dsMissSentList}\t\t\t\r\n\r\n\t\t\t\t\t\t\trowNum   = {true}\r\n\t\t\t\t\t\t\taddRowBtn   = {false}\r\n\t\t\t\t\t\t\tdelRowBtn   = {false}\r\n\t\t\t\t\t\t\tdnlExcelBtn = {true}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging      = {true}\r\n\t\t\t\t\t\t\tinfinite    = {true}\r\n\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsMissSentList.getRecords().length === 0) ? 0 : this.state.dsMissSentList.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\t\r\n\t\t\t\t\t\t\tonScrollEnd        = {this.event.grid.onScrollEnd}\t\r\n\r\n\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSave.id}\r\n\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSave.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSave.disabled}\r\n\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSave.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 키워드관리\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, SearchPanel, FullPanel, SubFullPanel, Table, RFloatArea, RelativeGroup\r\n} from 'components';\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {RangeInputCalendar, Selectbox} from 'components';\r\nimport { Grid} from 'components';\r\nimport { ComLib, DataLib, newScrmObj, TransManager, StrLib, DateLib } from 'common';\r\n\r\nclass View extends React.Component {\r\n\r\n/*------------------------------------------------------------------------------------------------*/\r\n\t// [1. Default State Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tconstructor(props){\r\n\r\n\t\tsuper();\r\n\r\n\t\tthis.keywordGrid    = null;\r\n\t\tthis.keywordGridApi = null;\r\n\t\tthis.state = {\r\n\t\t\tdsKeywordList : DataLib.datalist.getInstance(),\t\t\t\r\n\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselKeyType : {\r\n\t\t\t\t\tid : 'selKeyType',\r\n\t\t\t\t\tlabel : '키워드 타입',\r\n\t\t\t\t\twidth : 200,\r\n\t\t\t\t\tselected : 1,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\t\t\t\t\r\n\t\t\t\tselUseYn : {\r\n\t\t\t\t\tid       : 'selUseYn',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},   \r\n\r\n\t\t\tbtnSearchProps : {\r\n\t\t\t\tid : 'btnSearch',\t\t\t\t\r\n\t\t\t\tvalue : '조회'\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\tgridProps : {\r\n\t\t\t\tid : 'keywordGrid',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '키워드',\t\tfield: 'KWD',\tcolId: 'KWD',\teditable: true,\treq: true},\r\n\t\t\t\t\t{headerName: '키워드 타입',\tfield: 'KWD_TP',\tcolId: 'KWD_TP',\teditable: true,\treq: true,\ttextAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('STT_SYS_KWD', 'KWD_TP')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('STT_SYS_KWD', param.value, 'KWD_TP')         \r\n\t\t\t\t\t},\r\n\t\t\t\t\t{headerName: '등록자',\t\tfield: 'REG_USR_ID', colId: 'REG_USR_ID', \tdefaultValue : ComLib.getSession(\"gdsUserInfo\")[0][\"USR_NM\"],\ttextAlign: 'center',},\r\n\t\t\t\t\t{headerName: '등록일자',\tfield: 'REG_DTM',\t colId: 'REG_DTM',\tdefaultValue : StrLib.setFormatData(DateLib.getTodayTime()),\ttextAlign: 'center', },\r\n\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_FLAG',\t colId: 'USE_FLAG',\teditable: true,\tdefaultValue : 'Y',\twidth: 90,\tresizable: false,\ttextAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\r\n\t\t\t\t],\r\n\t\t\t\tpaging : {\r\n\t\t\t\t\tstart: 0,\r\n\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\tpage : 1\r\n\t\t\t\t},\r\n\t\t\t},\t\t\t\t\r\n\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tlabel : '등록날짜',\r\n\t\t\t\tid : 'iptRangeCal',\r\n\t\t\t\tstId : 'iptRangeCalStrt',\r\n\t\t\t\tendId : 'iptRangeCalEnd',\r\n\t\t\t\tstartDate : null,\r\n\t\t\t\tendDate : null,\r\n\t\t\t\tfocusedInput : null\r\n\t\t\t},\r\n\r\n\t\t\tpaging : {\r\n\t\t\t\tstart: 0,\r\n\t\t\t\tsize : 40,\r\n\t\t\t\tpage : 1\r\n\t\t\t},\r\n\t}\r\n\tthis.event.inputcalendar.onChange = this.event.inputcalendar.onChange.bind(this);\r\n\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\r\n}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [2. OnLoad Event Zone]\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\t\t\r\n\t\tthis.transaction(\"SYS050000_R01\");\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tlet record;\r\n\t\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'SYS050000_R01':\r\n\t\t\tif(this.state.rangeCalendarProps.startDate > this.state.rangeCalendarProps.endDate){\r\n\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색시작일자가 검색종료일보다 클 수 없습니다.']);\t\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS050000_H01':\t\t\t\r\n\t\t\trecord = this.keywordGrid.gridDataset.records;\r\n\t\t\tfor ( let intA = 0; intA < record.length; intA ++ ) {\r\n\t\t\t\t\r\n\t\t\t\tlet stnScrtHeader = this.state.gridProps.header;\r\n\t\t\t\tfor (let i = 0; i < stnScrtHeader.length; i ++) {\t\t\t\t\t\t\r\n\t\t\t\t\tif (stnScrtHeader[i].field === 'KWD' || stnScrtHeader[i].field === 'KWD_TP') {\r\n\t\t\t\t\t\tif (StrLib.isNull(record[intA][stnScrtHeader[i].field])) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(intA + 1) , stnScrtHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif (record.filter(item => item['rowtype'] === 'c').length === 0 && record.filter(item => item['rowtype'] === 'u').length === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\t\r\n\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SYS050000_R01\" :\r\n\t\t\t\tconsole.log(\"hander exuted\")\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['gridProps']['paging'].start = 0;\r\n\t\t\t\tstate['gridProps']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SYS050000_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\t\t\r\n\t\tlet state = this.state;\r\n\t\t\r\n\t\tlet pageStart   = state['gridProps']['paging'].start;\r\n\t\tlet pageLimit   = state['gridProps']['paging'].size;\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\t\r\n\t\t\tcase 'SYS050000_R01':\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SYS.R_getKeywordList\",\r\n\t\t\t\t\tdatasetsend: \"dsKeyword\",\r\n\t\t\t\t\tdatasetrecv: \"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\t  \t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsKeyword', [{\r\n\t\t\t\t\t  START_DATE : state.rangeCalendarProps.startDate\r\n\t\t\t\t\t, END_DATE   : state.rangeCalendarProps.endDate \r\n\t\t\t\t\t, KWD_TP     : state.selectboxProps.selKeyType.value\t\r\n\t\t\t\t\t, USE_FLAG   : state.selectboxProps.selUseYn.value\r\n\t\t\t\t\t, QUERY_START: pageStart\r\n\t\t\t\t\t, QUERY_LIMIT: pageLimit}]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS050000_R02':\t\t\t\t\t\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SYS.R_getKeywordList\",\r\n\t\t\t\t\tdatasetsend: \"dsKeyword\",\r\n\t\t\t\t\tdatasetrecv: \"dsRst\",\r\n\t\t\t\t});\r\n\t\t\t\t  \t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsKeyword', [{\r\n\t\t\t\t\t  START_DATE : state.lastStartDate\r\n\t\t\t\t\t, END_DATE   : state.lastEndDate\r\n\t\t\t\t\t, KWD_TP     : state.lastkeyType\t\r\n\t\t\t\t\t, USE_FLAG   : state.slastUseYn\r\n\t\t\t\t\t, QUERY_START: pageStart\r\n\t\t\t\t\t, QUERY_LIMIT: pageLimit}]);\r\n\t\t\t\t\t\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SYS050000_H01': \r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SYS.H_handleKeyword\", \r\n\t\t\t\t\tdatasetsend: \"dsKeywordList\",\r\n\t\t\t\t});\t\t\r\n\t\t\t\ttransManager.addDataset('dsKeywordList', this.keywordGrid.gridDataset.getTransRecords(newScrmObj.constants.rowtype.CREATE_OR_UPDATE));\t\t\t\t\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\t\t\r\n\t\t\tdefault: break;\r\n\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err)\r\n\t\t}\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\tlet state = this.state;\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SYS050000_R01':\t\r\n\t\t\tif(res.data.dsRst.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsKeywordList\", res.data.dsRst);\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tstate.lastStartDate = state['rangeCalendarProps'].startDate;\r\n\t\t\t\tstate.lastEndDate   = state['rangeCalendarProps'].endDate;\t\t\t\t\t\r\n\t\t\t\tstate.lastkeyType   = state['selectboxProps']['selKeyType'].value;\t\t\t\t\t\r\n\t\t\t\tstate.lastUseYn     = state['selectboxProps']['selUseYn'].value;\r\n\r\n\t\t\t\tstate['gridProps']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t\t\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\r\n\t\t\t\tComLib.setStateRecords(this, \"dsKeywordList\", \"\");\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\t\r\n\r\n\t\tcase 'SYS050000_R02':\r\n\t\t\tComLib.setStateInitRecords(this, \"dsKeywordList\", res.data.dsRst);\r\n\r\n\t\t\tstate['gridProps']['paging'].loading = false;\r\n\r\n\t\t\tthis.setState(state);\r\n\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase 'SYS050000_H01':\t\t\t\r\n\t\t\tComLib.openDialog(\"A\", \"COMI0001\", [\"키워드\"]);\r\n\r\n\t\t\tthis.transaction(\"SYS050000_R01\");\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton: {\t\t\r\n\t\t\tonClick: (e) => {\t\t\t\t\r\n\t\t\tswitch (e.target.id) {\t\t\t\r\n\t\t\tcase 'btnSearch':\t\r\n\t\t\t\tconsole.log(\"btn Search Clicked\")\t\t\t\t\r\n\t\t\t\tif (this.validation(\"SYS050000_R01\")) this.handler.setDs('SYS050000_R01');\r\n\t\t\t\tbreak;\t\t\t\t\r\n\t\t\tcase 'btnSave':\t\t\t\t\t\t\t\t\r\n\t\t\t\tif (this.validation(\"SYS050000_H01\")) this.transaction(\"SYS050000_H01\");\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\t\t\t\t\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"keywordGrid\":\r\n\t\t\t\t\tthis.keywordGrid = e.grid;\t\t\t\t\t\t\r\n\t\t\t\t\tthis.keywordGridApi = e.gridApi;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonScrollEnd: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\t\t\t\tif (!state['gridProps']['paging'].loading) {\r\n\t\t\t\t\tstate['gridProps']['paging'].start = state['gridProps']['paging'].start + state['gridProps']['paging'].size;\r\n\t\t\t\t\tstate['gridProps']['paging'].page  = state['gridProps']['paging'].page + 1;\r\n\t\t\t\t\tstate['gridProps']['paging'].loading = true;\r\n\r\n\t\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SYS050000_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\r\n\t\tinputcalendar : {\t\t\r\n\t\t\tonChange : (e) => {\t\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tcase 'iptRangeCal' :\t\t\t\t\t\t\t\r\n\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, startDate : e.startDate, endDate : e.endDate}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonFocusChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptRangeCal' :\r\n\t\t\t\t\tthis.setState({...this.state, rangeCalendarProps : {...this.state.rangeCalendarProps, focusedInput : e.focusedInput}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\t\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.id].value    = e.target.value;\r\n\t\t\t\t\r\n\t\t\t\t//this.setState(state);\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t\t<Table  \r\n\t\t\t\t\t\t\tcolGrp = {[{width: '4%'}, {width: '15%'}, {width: '5%'}, {width: '15%'}, {width: '5%'}, {width: '25%'},{width: '10%'}]}\r\n\t\t\t\t\t\t\ttbData = {[\r\n\t\t\t\t\t\t\t\t[  \t\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginTop:'-9px'}}><Label value={this.state.rangeCalendarProps.label}/></div>},\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value :\r\n\t\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.rangeCalendarProps.id}\r\n\t\t\t\t\t\t\t\t\t\tstrtId  = {this.state.rangeCalendarProps.stId}\r\n\t\t\t\t\t\t\t\t\t\tendId  = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\t\t\t\tendDate = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\t/>},\t\r\n\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginTop:'-9px'}}><Label value={this.state.selectboxProps.selKeyType.label}/></div> },\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value : \r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\t id = {this.state.selectboxProps.selKeyType.id}\r\n\t\t\t\t\t\t\t\t\t\t dataset = {ComLib.convComboList(ComLib.getCommCodeList('STT_SYS_KWD', 'KWD_TP'), newScrmObj.constants.select.argument.all)}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t width = {this.state.selectboxProps.selKeyType.width}\r\n\t\t\t\t\t\t\t\t\t\t disabled = {this.state.selectboxProps.selKeyType.disabled}\r\n\t\t\t\t\t\t\t\t\t\t selected = {this.state.selectboxProps.selKeyType.selected}\r\n\t\t\t\t\t\t\t\t\t\t onChange= {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/> },\t\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value : <div style={{marginTop:'-9px'}}><Label value=\"사용여부\"/></div> },\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value : \r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selUseYn.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selUseYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selUseYn.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/> },\r\n\t\t\t\t\t\t\t\t\t{type : 'D', value : \r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\t\tcolor = 'blue' \r\n\t\t\t\t\t\t\t\t\t\tfiiled = \"o\"\r\n\t\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\t\ticon = {'srch'} \r\n\t\t\t\t\t\t\t\t\t\tmt  = {5}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnSearchProps.value}\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t},\t\r\n\t\t\t\t\t\t\t\t],\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t]}\r\n\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.gridProps.id} ref={this.state.gridProps.id}\r\n\t\t\t\t\t\t\t\tareaName = {\"키워드 목록\"}\r\n\t\t\t\t\t\t\t\theight= {600}\r\n\t\t\t\t\t\t\t\theader = {this.state.gridProps.header}\r\n\t\t\t\t\t\t\t\trowNum = {true}\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tpaging      = {true}\r\n\t\t\t\t\t\t\t\tinfinite    = {true}\r\n\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsKeywordList} \r\n\t\t\t\t\t\t\t\ttotalRowCnt = {(this.state.dsKeywordList.getRecords().length === 0) ? 0 : this.state.dsKeywordList.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\t\r\n\t\t\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tid = \"btnSave\" \r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"저장\"} \r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick} \t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" \r\n\t\t\t\t\t\t\t\t\t\tfiiled=\"o\"\r\n\t\t\t\t\t\t\t\t\t\tmt={5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 검색 사전 관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , SearchPanel\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield \r\n\t   , Selectbox             } from 'components';\r\nimport { BasicButton as Button } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.dictionaryGridApi = null;\r\n\t\tthis.similarGridApi = null;\r\n\r\n\t\tthis.dictionaryGrid = null;\r\n\t\tthis.similarGrid = null;\r\n\r\n\t\tthis.currentRowDic = '';\r\n\t\tthis.currentRowSil = '';\r\n\r\n\t\tthis.lastEditedDic = '';\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsDictionaryList : DataLib.datalist.getInstance(),\r\n\t\t\tdsSimilarList : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnDictionarySave : {\r\n\t\t\t\t\tid       : 'btnDictionarySave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\t\r\n\t\t\t\tbtnSimilarSave : {\r\n\t\t\t\t\tid       : 'btnSimilarSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\t\r\n\t\t\t\tbtnDistribute : {\r\n\t\t\t\t\tid       : 'btnDistribute',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '배포',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\t\t\t\t\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdDictionary : {\r\n\t\t\t\t\tid : 'grdDictionary',\r\n\t\t\t\t\tareaName : '검색 단어 사전',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t\t\t{headerName: '단어구분',\t field: 'WORD_TP',\tcolId: 'WORD_TP',\teditable: true, defaultValue : 'W', width: 200, req: true, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('STT_JOB_SCH_DIC', 'WORD_TP')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('STT_JOB_SCH_DIC', param.value, 'WORD_TP')},\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '단어이름',     field: 'WORD_NM',\tcolId: 'WORD_NM',\teditable: true, width: 120, cellEditor: 'customEditor', maxLength: 25, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '단어내용',\t field: 'WORD_CONT',colId: 'WORD_CONT', editable: true, width: 200, cellEditor: 'customEditor', maxLength: 100, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '사용여부',\t field: 'USE_FLAG',\tcolId: 'USE_FLAG',\teditable: true, defaultValue : 'Y', width: 120, req: true, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\t\r\n\t\t\t\t\t\t\t\t{headerName: '유의어', field: 'SNM_NM',\tcolId: 'SNM_NM',\teditable: false, width: 400, resizable: false},\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '610px'\r\n\t\t\t\t},\t\t\t\r\n\t\t\t\tgrdSilmilar : {\r\n\t\t\t\t\tid : 'grdSilmilar',\r\n\t\t\t\t\tareaName : '유의어',\r\n\t\t\t\t\theader: [\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '유의어 이름',\tfield: 'SNM_NM',\tcolId: 'SNM_NM',\teditable: true, width: 110, cellEditor: 'customEditor', maxLength: 25, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '유의어 내용',\tfield: 'SNM_CONT',\tcolId: 'SNM_CONT',\teditable: true, width: 180, cellEditor: 'customEditor', maxLength: 100, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_FLAG',\tcolId: 'USE_FLAG',\teditable: true, defaultValue : 'Y', width: 90 , req: true, resizable: false, textAlign: 'center',\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '610px'\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselUseYn : {\r\n\t\t\t\t\tid       : 'selUseYn',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tselWordTp : {\r\n\t\t\t\t\tid       : 'selWordTp',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList('STT_JOB_SCH_DIC', 'WORD_TP'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptWordNm : {\r\n\t\t\t\t\tid          : 'iptWordNm',\r\n\t\t\t\t\tname        : 'iptWordNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '단어',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 12,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\t\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SYS060000_R01\")) this.transaction(\"SYS060000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\r\n\t\tswitch (transId) {\r\n\t\tcase 'SYS060000_R01':\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS060000_R02':\t\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS060000_H01':\t\r\n\t\t\tlet dictionaryRecord = this.dictionaryGrid.gridDataset.records;\r\n\r\n\t\t\touter : for (let intA = 0; intA < dictionaryRecord.length; intA ++) {\r\n\t\t\t\tif (dictionaryRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet dictionaryHeader = this.state.grdProps.grdDictionary.header;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < dictionaryHeader.length; i ++) {\t\t\r\n\t\t\t\t\tif (dictionaryHeader[i].req === true) {\r\n\t\t\t\t\t\tif (StrLib.isNull(dictionaryRecord[intA][dictionaryHeader[i].field])) {\r\n\t\t\t\t\t\t\tlet dictionaryRows = this.dictionaryGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\tlet dictionaryNum = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i = 0; i < dictionaryRows.length; i ++) {\r\n\t\t\t\t\t\t\t\tif (dictionaryRows[i].data.TEMP_CD === dictionaryRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tdictionaryNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(dictionaryNum + 1) , dictionaryHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\r\n\t\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < dictionaryRecord.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB \r\n\t\t\t\t\t\t&& dictionaryRecord[intA].WORD_NM === dictionaryRecord[intB].WORD_NM) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet dictionaryRows = this.dictionaryGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\tlet dictionaryNum = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (let i = 0; i < dictionaryRows.length; i ++) {\r\n\t\t\t\t\t\t\tif (dictionaryRows[i].data.TEMP_CD === dictionaryRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tdictionaryNum = i;\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(dictionaryNum + 1), Number(intB + 1), '단어이름']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.dictionaryGrid.moveRow(intA, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.dictionaryGrid.moveRow(returnVal, true);\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\r\n\t\t\tif (dictionaryRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS060000_H02':\r\n\t\t\tlet similarRecord = this.similarGrid.gridDataset.records;\r\n\r\n\t\t\touter : for ( let intA = 0; intA < similarRecord.length; intA ++ ) {\r\n\t\t\t\tif (similarRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tlet similarHeader = this.state.grdProps.grdSilmilar.header;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < similarHeader.length; i ++) {\t\t\r\n\t\t\t\t\tif (similarHeader[i].req === true) {\r\n\t\t\t\t\t\tif (StrLib.isNull(similarRecord[intA][similarHeader[i].field])) {\r\n\t\t\t\t\t\t\tlet similarRows = this.similarGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\tlet similarNum = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i = 0; i < similarRows.length; i ++) {\r\n\t\t\t\t\t\t\t\tif (similarRows[i].data.TEMP_CD === similarRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tsimilarNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(similarNum + 1) , similarHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\r\n\t\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < similarRecord.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB && similarRecord[intA].SNM_NM === similarRecord[intB].SNM_NM) {\r\n\t\t\t\t\t\tlet similarRows = this.similarGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\tlet similarNumA = 0;\r\n\t\t\t\t\t\tlet similarNumB = 0;\r\n\t\t\t\t\t\tfor (let i = 0; i < similarRows.length; i ++) {\r\n\t\t\t\t\t\t\tif (similarRows[i].data.TEMP_CD === similarRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsimilarNumA = i;\r\n\r\n\t\t\t\t\t\t\t} else if (similarRows[i].data.TEMP_CD === similarRecord[intB].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsimilarNumB = i;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(similarNumA + 1), Number(similarNumB + 1), '유의어 이름']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.similarGrid.moveRow(intB, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.similarGrid.moveRow(returnVal, true);\r\n\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (similarRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'SYS060000_U01':\r\n\t\t\tlet dicRecord = this.dictionaryGrid.gridDataset.records;\r\n\t\t\tlet simRecord = this.similarGrid.gridDataset.records;\r\n\r\n\t\t\tfor (let intA = 0; intA < dicRecord.length; intA ++) {\r\n\t\t\t\tif (dicRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let intA = 0; intA < simRecord.length; intA ++ ) {\r\n\t\t\t\tif (simRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\r\n\t\t\tif (chkCnt > 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0006', ['수정항목', '저장']);\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t// SYS060000_R01 : 대분류 코드 조회\r\n\t// SYS060000_R02 : 소분류 코드 조회\r\n\t// SYS060000_H01 : 대분류 코드 저장\r\n\t// SYS060000_H02 : 소분류 코드 저장\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SYS060000_R01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SYS.R_getDictionaryList\",\r\n\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\tdatasetrecv: \"dsDictionaryRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsUser', [{\"WORD_NM\" : this.state.textFieldProps.iptWordNm.value.trim()\r\n\t\t\t\t                                  , \"USE_FLAG\": this.state.selectboxProps.selUseYn.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t  , \"WORD_TP\" : this.state.selectboxProps.selWordTp.value}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS060000_R02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SYS.R_getSimilarList\",\r\n\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\tdatasetrecv: \"dsSimilarRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsUser', [{\"WORD_UNQ\": params[1]}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'SYS060000_H01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SYS.H_handleDictionaryList\",\r\n\t\t\t\t\tdatasetsend: \"dsDictionaryList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsDictionaryList', this.dictionaryGrid.gridDataset.records);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SYS060000_H02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SYS.H_handleSimilarList\",\r\n\t\t\t\t\tdatasetsend: \"dsSimilarList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet similarRecord = this.similarGrid.gridDataset.records;\r\n\r\n\t\t\t\tfor (let intA = 0; intA < similarRecord.length; intA ++) {\r\n\t\t\t\t\tif (StrLib.isNull(similarRecord[intA][\"WORD_UNQ\"])) {\r\n\t\t\t\t\t\tsimilarRecord[intA][\"WORD_UNQ\"] = this.dictionaryGridApi.getSelectedRows()[0].WORD_UNQ;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSimilarList', similarRecord);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\r\n\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\tcase 'SYS060000_U01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid   : \"SYS.U_setDictionarySvr\",\r\n\t\t\t\t\tdatasetsend: \"empty\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('empty', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\tlet dictionaryRows, similarRows;\r\n\t\tlet dictionaryRow, silmilarRow;\t\t\r\n\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SYS060000_R01':\r\n\t\t\tif (res.data.dsDictionaryRecv.length > 0) {\r\n\t\t\t\tlet dsDictionary = res.data.dsDictionaryRecv;\r\n\t\t\t\tlet tempDicCd = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < dsDictionary.length; i ++) {\r\n\t\t\t\t\tdsDictionary[i].TEMP_CD = tempDicCd;\r\n\t\t\t\t\ttempDicCd ++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.maxtempDicCd = tempDicCd;\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsDictionaryList\", dsDictionary);\r\n\r\n\t\t\t\tdictionaryRows = this.dictionaryGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\r\n\t\t\t\tlet wordUnq;\r\n\r\n\t\t\t\tfor (let i = 0; i < dictionaryRows.length; i ++) {\r\n\t\t\t\t\tif (dictionaryRows[i].data.WORD_NM ===  this.lastEditedDic){\r\n\t\t\t\t\t\tdictionaryRow = this.dictionaryGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\twordUnq  = this.dictionaryGridApi.rowModel.rowsToDisplay[i].data.WORD_UNQ;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.dictionaryGridApi.ensureIndexVisible(i, 'middle');\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dictionaryRow === undefined) {\r\n\t\t\t\t\tdictionaryRow = this.dictionaryGridApi.rowModel.rowsToDisplay[0];\t\t\t\t\t\r\n\t\t\t\t\twordUnq  = this.dictionaryGridApi.rowModel.rowsToDisplay[0].data.WORD_UNQ;\r\n\t\t\t\t\tthis.dictionaryGridApi.ensureIndexVisible(0, 'middle');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (dictionaryRow !== undefined && dictionaryRow.selected !== true) {\r\n\t\t\t\t\tdictionaryRow.setSelected(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.currentRowDic = wordUnq;\r\n\r\n\t\t\t\tif (this.validation(\"SYS060000_R02\")) this.transaction(\"SYS060000_R02\", wordUnq);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsDictionaryList\", []);\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSimilarList\", []);\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS060000_R02':\t\r\n\t\t\tlet dsSimilar = res.data.dsSimilarRecv;\r\n\t\t\tlet tempSimilar = 0;\r\n\r\n\t\t\tfor (let i = 0; i < dsSimilar.length; i ++) {\r\n\t\t\t\tdsSimilar[i].TEMP_CD = tempSimilar;\r\n\t\t\t\ttempSimilar ++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.maxtempSimilar = tempSimilar;\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSimilarList\", res.data.dsSimilarRecv);\r\n\r\n\t\t\tsimilarRows = this.similarGridApi.rowModel.rowsToDisplay;\r\n\r\n\t\t\tfor (let i = 0; i < similarRows.length; i ++) {\r\n\t\t\t\tif (similarRows[i].data.SNM_NM === this.currentRowSil){\r\n\t\t\t\t\tsilmilarRow = this.similarGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\tthis.similarGridApi.ensureIndexVisible(i, 'middle');\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (silmilarRow === undefined) {\r\n\t\t\t\tsilmilarRow = this.similarGridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (silmilarRow !== undefined && silmilarRow.selected !== true) {\r\n\t\t\t\tsilmilarRow.setSelected(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS060000_H01':\r\n\t\t\tComLib.openDialog(\"A\", \"COMI0001\", [\"검색 단어 사전\"]);\r\n\t\t\t\r\n\t\t\tthis.transaction(\"SYS060000_R01\");\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SYS060000_H02':\r\n\t\t\tComLib.openDialog(\"A\", \"COMI0001\", [\"유의어 사전\"]);\r\n\t\t\t\r\n\t\t\tlet wordUnq = this.dictionaryGrid.getSelectedRows()[0].WORD_UNQ;\r\n\r\n\t\t\tthis.transaction(\"SYS060000_R01\", wordUnq);\r\n\r\n\t\t\tbreak;\t\r\n\t\tcase 'SYS060000_U01':\r\n\t\t\tComLib.openDialog(\"A\", \"SYSI0010\", [\"배포 되엇습니다. 금일 자정부터 적용 됩니다.\"]);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnSearch\":\r\n\t\t\t\t\tif (this.validation(\"SYS060000_R01\")) this.transaction(\"SYS060000_R01\");\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnDictionarySave\":\r\n\t\t\t\t\tif (this.validation(\"SYS060000_H01\")) this.transaction(\"SYS060000_H01\");\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnSimilarSave\":\r\n\t\t\t\t\tif (this.validation(\"SYS060000_H02\")) this.transaction(\"SYS060000_H02\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\t\r\n\t\t\t\tcase \"btnDistribute\":\r\n\t\t\t\t\tif (this.validation(\"SYS060000_U01\")) this.transaction(\"SYS060000_U01\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\r\n\t\t\t\t\tlet dictionaryRow = this.dictionaryGrid.getSelectedRows()[0]\t\r\n\r\n\t\t\t\t\tlet wordUnq   = dictionaryRow.WORD_UNQ;\r\n\t\t\t\t\tlet rowType = dictionaryRow.rowtype;\t\t\t\r\n\r\n\t\t\t\t\tif ((rowType === 'r' || rowType === 'u') && (this.currentRowDic !== wordUnq)) {\r\n\t\t\t\t\t\tif (this.validation(\"SYS060000_R02\")) this.transaction(\"SYS060000_R02\", wordUnq);\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t} else if (rowType === 'c'){\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSimilarList\", []);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.currentRowDic = this.dictionaryGridApi.getSelectedRows()[0].WORD_UNQ;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\":\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonGridReady: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\r\n\t\t\t\t\tthis.dictionaryGridApi = e.gridApi;\r\n\t\t\t\t\tthis.dictionaryGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\":\r\n\t\t\t\t\tthis.similarGridApi = e.gridApi;\r\n\t\t\t\t\tthis.similarGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\r\n\t\t\t\t\tlet dictionaryRows = this.dictionaryGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet dictionaryRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < dictionaryRows.length; i ++) {\r\n\t\t\t\t\t\tif (dictionaryRows[i].data.TEMP_CD === e.data.TEMP_CD){\r\n\t\t\t\t\t\t\tdictionaryRow = this.dictionaryGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dictionaryRow.selected !== true) {\r\n\t\t\t\t\t\tdictionaryRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\":\r\n\t\t\t\t\tlet similarRows = this.similarGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet silmilarRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < similarRows.length; i ++) {\r\n\t\t\t\t\t\tif (similarRows[i].data.TEMP_CD === e.data.TEMP_CD){\r\n\t\t\t\t\t\t\tsilmilarRow = this.similarGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (silmilarRow.selected !== true) {\r\n\t\t\t\t\t\tsilmilarRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\t\r\n\t\t\t\t\tif (e.col === \"WORD_NM\") {\r\n\t\t\t\t\t\tif (this.dictionaryGrid.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0013', ['단어이름']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.dictionaryGrid.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\t\tthis.dictionaryGridApi.setRowData(this.dictionaryGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\tlet dictionaryRows = this.dictionaryGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet dictionaryRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < dictionaryRows.length; i ++) {\r\n\t\t\t\t\t\tif (dictionaryRows[i].data.TEMP_CD === e.data[e.index].TEMP_CD){\r\n\t\t\t\t\t\t\tdictionaryRow = this.dictionaryGridApi.rowModel.rowsToDisplay[i];\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dictionaryRow.selected !== true) {\r\n\t\t\t\t\t\tdictionaryRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tthis.currentRowDic = dictionaryRow.data.WORD_NM;\r\n\r\n\t\t\t\t\tthis.lastEditedDic = dictionaryRow.data.WORD_NM;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\" :\t\t\r\n\t\t\t\t\tif (e.col === \"SNM_NM\") {\r\n\t\t\t\t\t\tif (this.similarGrid.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0013', ['유의어이름']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.similarGrid.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\t\tthis.similarGridApi.setRowData(this.similarGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet similarRows = this.similarGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet silmilarRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < similarRows.length; i ++) {\r\n\t\t\t\t\t\tif (similarRows[i].data.TEMP_CD === e.data[e.index].TEMP_CD){\r\n\t\t\t\t\t\t\tsilmilarRow = this.similarGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tthis.similarGridApi.ensureIndexVisible(i, 'middle');\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (silmilarRow.selected !== true) {\r\n\t\t\t\t\t\tsilmilarRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.currentRowDic = this.dictionaryGridApi.getSelectedRows()[0].WORD_NM;\r\n\t\t\t\t\tthis.currentRowSil = silmilarRow !== undefined ? silmilarRow.data.SNM_NM : '';\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.lastEditedDic = this.currentRowDic;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\r\n\t\t\t\t\tlet wordUnq   = this.dictionaryGridApi.getSelectedRows()[0].WORD_UNQ\r\n\t\t\t\t\tlet rowType = this.dictionaryGridApi.getSelectedRows()[0].rowtype;\t\t\t\t\t\r\n\r\n\t\t\t\t\tif ((rowType === 'r' || rowType === 'u') && (this.currentRowDic !== wordUnq)) {\r\n\t\t\t\t\t\tif (this.validation(\"SYS060000_R02\")) this.transaction(\"SYS060000_R02\", wordUnq);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSimilarList\", []);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.currentRowDic = this.dictionaryGridApi.getSelectedRows()[0].WORD_UNQ;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\":\r\n\t\t\t\t\tif (this.similarGridApi.getSelectedRows().length > 0) {\r\n\t\t\t\t\t\tthis.currentRowSil = this.similarGridApi.getSelectedRows()[0].SNM_NM;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.currentRowSil = '';\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\":\r\n\t\t\t\t\tif (this.dictionaryGridApi.getSelectedRows().length < 1) {\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0006', ['검색 단어 사전', '선택']);\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn {rtn: false};\r\n\r\n\t\t\t\t\t} else if (this.dictionaryGridApi.getSelectedRows()[0].rowtype !== 'r') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0006', ['검색 단어 사전', '저장']);\r\n\r\n\t\t\t\t\t\treturn {rtn: false};\r\n\t\t\t\t\t} \r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {rtn: true, index: 0};\r\n\t\t\t},\t\t\t\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdDictionary\":\r\n\t\t\t\t\tlet bigCdRecords = this.dictionaryGrid.gridDataset.records;\r\n\r\n\t\t\t\t\tbigCdRecords[e.index].TEMP_CD = this.maxtempDicCd + 1;\r\n\r\n\t\t\t\t\tthis.maxtempDicCd ++;\r\n\r\n\t\t\t\t\tthis.dictionaryGrid.gridDataset.setRecords(bigCdRecords);\r\n\r\n\t\t\t\t\tthis.dictionaryGridApi.setRowData(this.dictionaryGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\r\n\t\t\t\t\tlet dictionaryRows = this.dictionaryGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet dictionaryRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < dictionaryRows.length; i ++) {\r\n\t\t\t\t\t\tif (dictionaryRows[i].data.TEMP_CD === this.maxtempDicCd){\r\n\t\t\t\t\t\t\tdictionaryRow = this.dictionaryGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tthis.dictionaryGridApi.ensureIndexVisible(i, 'middle');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (dictionaryRow.selected !== true) {\r\n\t\t\t\t\t\tdictionaryRow.setSelected(true);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSimilarList\", []);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.currentRowDic = '';\r\n\t\t\t\t\tthis.currentRowMdm = '';\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSilmilar\":\t\t\t\t\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptWordNm':\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['textFieldProps']['iptWordNm'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptWordNm':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"SYS060000_R01\")) this.transaction(\"SYS060000_R01\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.target.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.target.id].value    = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"검색 단어\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptWordNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptWordNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptWordNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptWordNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptWordNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptWordNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptWordNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptWordNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selUseYn.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selUseYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selUseYn.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"단어구분\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selWordTp.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selWordTp.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selWordTp.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selWordTp.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selWordTp.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selWordTp.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor      = 'blue' \r\n\t\t\t\t\t\t\t\t\tfiiled\t   = \"o\"\r\n\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\ticon\t   = {'srch'}  \r\n\t\t\t\t\t\t\t\t\tid         = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue      = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled   = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden     = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt         = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor      = 'blue' \r\n\t\t\t\t\t\t\t\t\tfiiled\t   = \"o\"\r\n\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\ticon\t   = {'check'}  \r\n\t\t\t\t\t\t\t\t\tid         = {this.state.btnProps.btnDistribute.id}\r\n\t\t\t\t\t\t\t\t\tvalue      = {this.state.btnProps.btnDistribute.value}\r\n\t\t\t\t\t\t\t\t\tdisabled   = {this.state.btnProps.btnDistribute.disabled}\r\n\t\t\t\t\t\t\t\t\thidden     = {this.state.btnProps.btnDistribute.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt         = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\t\t\t\t\t\t\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdProps.grdDictionary.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdDictionary.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdProps.grdDictionary.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsDictionaryList}\r\n\t\t\t\t\t\t\t\t\theight   = {this.state.grdProps.grdDictionary.height}\r\n\t\t\t\t\t\t\t\t\trowNum   = {true}\r\n\r\n\t\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow        = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow        = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnDictionarySave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnDictionarySave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnDictionarySave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnDictionarySave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel width={'55%'}>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdProps.grdSilmilar.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdSilmilar.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdProps.grdSilmilar.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsSimilarList}\r\n\t\t\t\t\t\t\t\t\theight   = {this.state.grdProps.grdSilmilar.height}\r\n\t\t\t\t\t\t\t\t\trowNum   = {true}\r\n\r\n\t\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow        = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow        = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\t\tonBeforeInsertRow  = {this.event.grid.onBeforeInsertRow}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSimilarSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSimilarSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSimilarSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSimilarSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 코드관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , SearchPanel\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield \r\n\t   , Selectbox             } from 'components';\r\nimport { BasicButton as Button } from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.lagCdGridApi = null;\r\n\t\tthis.smlCdGridApi = null;\r\n\r\n\t\tthis.maxTempLagCd = 0;\r\n\t\tthis.maxTempSmlCd = 0; \r\n\r\n\t\tthis.lagCdGrid = null;\r\n\t\tthis.smlCdGrid = null;\r\n\r\n\t\tthis.currentRowLag = '';\r\n\t\tthis.currentRowSml = '';\r\n\t\tthis.currentRowMdm = ''; \r\n\r\n\t\tthis.lastEditedLag = '';\r\n\t\tthis.lastEditedMdm = '';\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsLagCdList : DataLib.datalist.getInstance(),\r\n\t\t\tdsSmlCdList : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnBigSave : {\r\n\t\t\t\t\tid       : 'btnBigSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tbtnSmlSave : {\r\n\t\t\t\t\tid       : 'btnSmlSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\t\r\n\t\t\t\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdLagCd : {\r\n\t\t\t\t\tid : 'grdLagCd',\r\n\t\t\t\t\tareaName : '대분류 코드',\r\n\t\t\t\t\theader: [\r\n\t\t\t\t\t\t\t\t{headerName: '대분류코드',\t field: 'LAG_CD',\tcolId: 'LAG_CD', \teditable: true, width: 170, cellEditor: 'customEditor', maxLength: 30, type:'code', req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '대분류코드명', field: 'LAG_NM',\tcolId: 'LAG_NM',\teditable: true, width: 200, cellEditor: 'customEditor', maxLength: 31, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '중분류코드',\t field: 'MDM_CD',\tcolId: 'MDM_CD', \teditable: true, width: 110, cellEditor: 'customEditor', maxLength: 30, type:'code', req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '중분류코드명', field: 'MDM_NM',\tcolId: 'MDM_NM',\teditable: true, width: 110, cellEditor: 'customEditor', maxLength: 31},\r\n\t\t\t\t\t\t\t\t{headerName: '사용여부',\t field: 'USE_FLAG',\tcolId: 'USE_FLAG',\teditable: true, defaultValue : 'Y', width: 90, req: true, resizable: false, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\t\t\t\t\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '610px'\r\n\t\t\t\t},\t\t\t\r\n\t\t\t\tgrdSmlCd : {\r\n\t\t\t\t\tid : 'grdSmlCd',\r\n\t\t\t\t\tareaName : '소분류 코드',\r\n\t\t\t\t\theader: [\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '소분류코드',\tfield: 'SML_CD',\tcolId: 'SML_CD',\teditable: true, width: 110, cellEditor: 'customEditor', maxLength: 30, type:'code', req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '코드명',\t\tfield: 'SML_NM',\tcolId: 'SML_NM',\teditable: true, width: 180, cellEditor: 'customEditor', maxLength: 63, req: true},\r\n\t\t\t\t\t\t\t\t{headerName: '코드',\t\tfield: 'CD_VAL',\tcolId: 'CD_VAL',\teditable: true, width: 80 , cellEditor: 'customEditor', maxLength: 10, type:'code'},\r\n\t\t\t\t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_ORD',\tcolId: 'SORT_ORD',\teditable: true, width: 90 , cellEditor: 'customEditor', maxLength: 3, type: 'num', req: true, textAlign: 'center',},\r\n\t\t\t\t\t\t\t\t{headerName: '사용여부',\tfield: 'USE_FLAG',\tcolId: 'USE_FLAG',\teditable: true, defaultValue : 'Y', width: 90 , req: true, resizable: false, textAlign: 'center',\r\n\t\t\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '610px'\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselUseYn : {\r\n\t\t\t\t\tid       : 'selUseYn',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptLagCdNm : {\r\n\t\t\t\t\tid          : 'iptLagCdNm',\r\n\t\t\t\t\tname        : 'iptLagCdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '대분류코드/코드명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 12,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t0) Custom Event Zone \r\n\t\trowFinder = 조회후 가장 마지막에 선택되어져 있던 행으로 재 포커싱을 하기 위한 함수\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\trowFinder = (targetRecords, targetColumn, currentRow, secondColumn, secondRow) => {\r\n\t\tlet rowNum = 0;\r\n\r\n\t\tif (targetRecords === undefined || targetRecords === null) {\r\n\t\t\treturn rowNum;\r\n\t\t}\r\n\r\n\t\tif (StrLib.isNull(secondColumn)) {\r\n\t\t\tif (!StrLib.isNull(currentRow)) {\r\n\t\t\t\tfor (let i = 0; i < targetRecords.length; i++) {\r\n\t\t\t\t\tif (targetRecords[i][targetColumn] === currentRow) {\r\n\t\t\t\t\t\trowNum = i;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn rowNum;\r\n\r\n\t\t} else {\r\n\t\t\tif (!StrLib.isNull(secondRow)) {\r\n\t\t\t\tfor (let i = 0; i < targetRecords.length; i++) {\r\n\t\t\t\t\tif (targetRecords[i][targetColumn] === currentRow && targetRecords[i][secondColumn] === secondRow) {\r\n\t\t\t\t\t\trowNum = i;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn rowNum;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SUP010000_R01\")) this.transaction(\"SUP010000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t// console.log(\"updated!!\");\r\n\t\t// console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t// SUP010000_R01 : 대분류 코드 조회\r\n\t// SUP010000_R02 : 소분류 코드 조회\r\n\t// SUP010000_H01 : 대분류 코드 저장\r\n\t// SUP010000_H02 : 소분류 코드 저장\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\r\n\t\tswitch (transId) {\r\n\t\tcase 'SUP010000_R01':\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SUP010000_R02':\t\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SUP010000_H01':\t\r\n\t\t\tlet lagRecord = this.lagCdGrid.gridDataset.records;\r\n\r\n\t\t\touter : for (let intA = 0; intA < lagRecord.length; intA ++) {\r\n\t\t\t\tif (lagRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\t\r\n\t\t\t\t\r\n\t\t\t\tlet lagHeader = this.state.grdProps.grdLagCd.header;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < lagHeader.length; i ++) {\t\t\r\n\t\t\t\t\tif (lagHeader[i].req === true) {\r\n\t\t\t\t\t\tif (StrLib.isNull(lagRecord[intA][lagHeader[i].field])) {\r\n\t\t\t\t\t\t\tlet lagRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\tlet lagNum = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i = 0; i < lagRows.length; i ++) {\r\n\t\t\t\t\t\t\t\tif (lagRows[i].data.TEMP_CD === lagRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tlagNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(lagNum + 1) , lagHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\r\n\t\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < lagRecord.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB \r\n\t\t\t\t\t\t&& lagRecord[intA].LAG_CD === lagRecord[intB].LAG_CD \r\n\t\t\t\t\t\t&& lagRecord[intA].MDM_CD === lagRecord[intB].MDM_CD) {\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tlet lagRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\tlet lagNum = 0;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tfor (let i = 0; i < lagRows.length; i ++) {\r\n\t\t\t\t\t\t\tif (lagRows[i].data.TEMP_CD === lagRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tlagNum = i;\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(lagNum + 1), Number(intB + 1), '대분류코드와 중분류코드']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.lagCdGrid.moveRow(intA, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.lagCdGrid.moveRow(returnVal, true);\r\n\t\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\t\r\n\r\n\t\t\tif (lagRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SUP010000_H02':\r\n\t\t\tlet smlRecord = this.smlCdGrid.gridDataset.records;\r\n\r\n\t\t\touter : for ( let intA = 0; intA < smlRecord.length; intA ++ ) {\r\n\t\t\t\tif (smlRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tlet smlHeader = this.state.grdProps.grdSmlCd.header;\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < smlHeader.length; i ++) {\t\t\r\n\t\t\t\t\tif (smlHeader[i].req === true) {\r\n\t\t\t\t\t\tif (StrLib.isNull(smlRecord[intA][smlHeader[i].field])) {\r\n\t\t\t\t\t\t\tlet smlRows = this.smlCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\tlet smlNum = 0;\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tfor (let i = 0; i < smlRows.length; i ++) {\r\n\t\t\t\t\t\t\t\tif (smlRows[i].data.TEMP_CD === smlRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tsmlNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(smlNum + 1) , smlHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\r\n\t\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < smlRecord.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB && smlRecord[intA].SML_CD === smlRecord[intB].SML_CD) {\r\n\t\t\t\t\t\tlet smlRows = this.smlCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\tlet smlNumA = 0;\r\n\t\t\t\t\t\tlet smlNumB = 0;\r\n\t\t\t\t\t\tfor (let i = 0; i < smlRows.length; i ++) {\r\n\t\t\t\t\t\t\tif (smlRows[i].data.TEMP_CD === smlRecord[intA].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsmlNumA = i;\r\n\r\n\t\t\t\t\t\t\t} else if (smlRows[i].data.TEMP_CD === smlRecord[intB].TEMP_CD){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tsmlNumB = i;\r\n\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(smlNumA + 1), Number(smlNumB + 1), '소분류 코드']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.smlCdGrid.moveRow(intB, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.smlCdGrid.moveRow(returnVal, true);\r\n\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (smlRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault: break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t// SUP010000_R01 : 대분류 코드 조회\r\n\t// SUP010000_R02 : 소분류 코드 조회\r\n\t// SUP010000_H01 : 대분류 코드 저장\r\n\t// SUP010000_H02 : 소분류 코드 저장\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SUP010000_R01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getLagCdList\",\r\n\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\tdatasetrecv: \"dsBigCdRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsUser', [{\"LAG_CD_NM\": this.state.textFieldProps.iptLagCdNm.value.trim(), \"USE_FLAG\": this.state.selectboxProps.selUseYn.value}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SUP010000_R02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getSmlCdList\",\r\n\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\tdatasetrecv: \"dsSmlCdRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsUser', [{\"LAG_CD\": params[1], \"MDM_CD\": params[2]}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak\r\n\r\n\t\t\tcase 'SUP010000_H01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SUP.H_handleLagCdList\",\r\n\t\t\t\t\tdatasetsend: \"dsLagCdList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsLagCdList', this.lagCdGrid.gridDataset.records);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SUP010000_H02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SUP.H_handleSmlCdList\",\r\n\t\t\t\t\tdatasetsend: \"dsSmlCdList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet smlRecord = this.smlCdGrid.gridDataset.records;\r\n\r\n\t\t\t\tfor (let intA = 0; intA < smlRecord.length; intA ++) {\r\n\t\t\t\t\tif (StrLib.isNull(smlRecord[intA][\"LAG_CD\"]) || StrLib.isNull(smlRecord[intA][\"MDM_CD\"])) {\r\n\t\t\t\t\t\tsmlRecord[intA][\"LAG_CD\"] = this.lagCdGridApi.getSelectedRows()[0].LAG_CD;\r\n\t\t\t\t\t\tsmlRecord[intA][\"MDM_CD\"] = this.lagCdGridApi.getSelectedRows()[0].MDM_CD;\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsSmlCdList', smlRecord);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\r\n\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t\t\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t// SUP010000_R01 : 대분류 코드 조회\r\n\t// SUP010000_R02 : 소분류 코드 조회\r\n\t// SUP010000_H01 : 대분류 코드 저장\r\n\t// SUP010000_H02 : 소분류 코드 저장\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\tlet lagRows, smlRows;\r\n\t\tlet lagRow, smlRow;\t\t\r\n\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP010000_R01':\r\n\t\t\tif (res.data.dsBigCdRecv.length > 0) {\r\n\t\t\t\tlet dsBigCd = res.data.dsBigCdRecv;\r\n\t\t\t\tlet tempLagCd = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < dsBigCd.length; i ++) {\r\n\t\t\t\t\tdsBigCd[i].TEMP_CD = tempLagCd;\r\n\t\t\t\t\ttempLagCd ++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.maxTempLagCd = tempLagCd;\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsLagCdList\", dsBigCd);\r\n\r\n\t\t\t\tlagRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\r\n\t\t\t\tlet bigCd;\r\n\t\t\t\tlet mdlCd;\r\n\r\n\t\t\t\tfor (let i = 0; i < lagRows.length; i ++) {\r\n\t\t\t\t\tif (lagRows[i].data.LAG_CD ===  this.lastEditedLag && lagRows[i].data.MDM_CD === this.lastEditedMdm){\r\n\t\t\t\t\t\tlagRow = this.lagCdGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\tbigCd  = this.lagCdGridApi.rowModel.rowsToDisplay[i].data.LAG_CD;\r\n\t\t\t\t\t\tmdlCd  = this.lagCdGridApi.rowModel.rowsToDisplay[i].data.MDM_CD;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.lagCdGridApi.ensureIndexVisible(i, 'middle');\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (lagRow === undefined) {\r\n\t\t\t\t\tlagRow = this.lagCdGridApi.rowModel.rowsToDisplay[0];\t\t\t\t\t\r\n\t\t\t\t\tbigCd  = this.lagCdGridApi.rowModel.rowsToDisplay[0].data.LAG_CD;\r\n\t\t\t\t\tmdlCd  = this.lagCdGridApi.rowModel.rowsToDisplay[0].data.MDM_CD;\r\n\t\t\t\t\tthis.lagCdGridApi.ensureIndexVisible(0, 'middle');\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (lagRow !== undefined && lagRow.selected !== true) {\r\n\t\t\t\t\tlagRow.setSelected(true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.currentRowLag = bigCd;\r\n\t\t\t\tthis.currentRowMdm = mdlCd;\r\n\r\n\t\t\t\tif (this.validation(\"SUP010000_R02\")) this.transaction(\"SUP010000_R02\", bigCd, mdlCd);\r\n\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsLagCdList\", []);\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", []);\r\n\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SUP010000_R02':\t\r\n\t\t\tlet dsSmlCd = res.data.dsSmlCdRecv;\r\n\t\t\tlet tempSmlCd = 0;\r\n\r\n\t\t\tfor (let i = 0; i < dsSmlCd.length; i ++) {\r\n\t\t\t\tdsSmlCd[i].TEMP_CD = tempSmlCd;\r\n\t\t\t\ttempSmlCd ++;\r\n\t\t\t}\r\n\r\n\t\t\tthis.maxTempSmlCd = tempSmlCd;\r\n\r\n\r\n\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", res.data.dsSmlCdRecv);\r\n\r\n\t\t\tsmlRows = this.smlCdGridApi.rowModel.rowsToDisplay;\r\n\r\n\t\t\tfor (let i = 0; i < smlRows.length; i ++) {\r\n\t\t\t\tif (smlRows[i].data.TEMP_CD === this.currentRowSml){\r\n\t\t\t\t\tsmlRow = this.smlCdGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\tthis.smlCdGridApi.ensureIndexVisible(i, 'middle');\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (smlRow === undefined) {\r\n\t\t\t\tsmlRow = this.smlCdGridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t}\r\n\r\n\t\t\tif (smlRow !== undefined && smlRow.selected !== true) {\r\n\t\t\t\tsmlRow.setSelected(true);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SUP010000_H01':\r\n\t\t\tComLib.openDialog(\"A\", \"COMI0001\", [\"대분류 코드\"]);\r\n\t\t\t\r\n\t\t\tthis.transaction(\"SUP010000_R01\");\r\n\t\t\t\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'SUP010000_H02':\r\n\t\t\tComLib.openDialog(\"A\", \"COMI0001\", [\"소분류 코드\"]);\r\n\t\t\t\r\n\t\t\tlet bigCd = this.lagCdGrid.getSelectedRows()[0].LAG_CD;\r\n\t\t\tlet mdlCd = this.lagCdGrid.getSelectedRows()[0].MDM_CD;\r\n\r\n\t\t\tthis.transaction(\"SUP010000_R02\", bigCd, mdlCd);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnSearch\":\r\n\t\t\t\t\tif (this.validation(\"SUP010000_R01\")) this.transaction(\"SUP010000_R01\");\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnBigSave\":\r\n\t\t\t\t\tif (this.validation(\"SUP010000_H01\")) this.transaction(\"SUP010000_H01\");\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnSmlSave\":\r\n\t\t\t\t\tif (this.validation(\"SUP010000_H02\")) this.transaction(\"SUP010000_H02\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\r\n\t\t\t\t\tlet lagRow = this.lagCdGrid.getSelectedRows()[0]\t\r\n\r\n\t\t\t\t\tlet bigCd   = lagRow.LAG_CD;\r\n\t\t\t\t\tlet rowType = lagRow.rowtype;\r\n\t\t\t\t\tlet mdlCd   = lagRow.MDM_CD;\t\t\t\t\t\r\n\r\n\t\t\t\t\tif ((rowType === 'r' || rowType === 'u') && (this.currentRowLag !== bigCd || this.currentRowMdm !== mdlCd)) {\r\n\t\t\t\t\t\tif (this.validation(\"SUP010000_R02\")) this.transaction(\"SUP010000_R02\", bigCd, mdlCd);\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t} else if (rowType === 'c'){\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", []);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.currentRowLag = this.lagCdGridApi.getSelectedRows()[0].LAG_CD;\r\n\t\t\t\t\tthis.currentRowMdm = this.lagCdGridApi.getSelectedRows()[0].MDM_CD;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\":\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonGridReady: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\r\n\t\t\t\t\tthis.lagCdGridApi = e.gridApi;\r\n\t\t\t\t\tthis.lagCdGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\":\r\n\t\t\t\t\tthis.smlCdGridApi = e.gridApi;\r\n\t\t\t\t\tthis.smlCdGrid    = e.grid;\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\r\n\t\t\t\t\tlet lagRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet lagRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < lagRows.length; i ++) {\r\n\t\t\t\t\t\tif (lagRows[i].data.TEMP_CD === e.data.TEMP_CD){\r\n\t\t\t\t\t\t\tlagRow = this.lagCdGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (lagRow.selected !== true) {\r\n\t\t\t\t\t\tlagRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\":\r\n\t\t\t\t\tlet smlRows = this.smlCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet smlRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < smlRows.length; i ++) {\r\n\t\t\t\t\t\tif (smlRows[i].data.TEMP_CD === e.data.TEMP_CD){\r\n\t\t\t\t\t\t\tsmlRow = this.smlCdGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif (smlRow.selected !== true) {\r\n\t\t\t\t\t\tsmlRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\t\t\t\t\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\t\r\n\t\t\t\t\tif (e.col === \"LAG_CD\" || e.col === \"MDM_CD\" ) {\r\n\t\t\t\t\t\tif (this.lagCdGrid.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0013', [(e.col === \"LAG_CD\" ? '대' : '중') + '분류 코드']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.lagCdGrid.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\t\tthis.lagCdGridApi.setRowData(this.lagCdGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\tlet lagRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet lagRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < lagRows.length; i ++) {\r\n\t\t\t\t\t\tif (lagRows[i].data.TEMP_CD === e.data[e.index].TEMP_CD){\r\n\t\t\t\t\t\t\tlagRow = this.lagCdGridApi.rowModel.rowsToDisplay[i];\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (lagRow.selected !== true) {\r\n\t\t\t\t\t\tlagRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.currentRowLag = lagRow.data.LAG_CD;\r\n\t\t\t\t\tthis.currentRowMdm = lagRow.data.MDM_CD;\r\n\r\n\t\t\t\t\tthis.lastEditedLag = lagRow.data.LAG_CD;\r\n\t\t\t\t\tthis.lastEditedMdm = lagRow.data.MDM_CD;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\" :\t\t\r\n\t\t\t\t\tif (e.col === \"SML_CD\") {\r\n\t\t\t\t\t\tif (this.smlCdGrid.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0013', ['소분류 코드']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.smlCdGrid.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\t\tthis.smlCdGridApi.setRowData(this.smlCdGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet smlRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet smlRow;\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\tsmlRow = this.smlCdGridApi.rowModel.rowsToDisplay[e.index];\r\n\t\t\t\t\tthis.smlCdGridApi.ensureIndexVisible(e.index, 'middle');\t\t\r\n\r\n\t\t\t\t\t// for (let i = 0; i < smlRows.length; i ++) {\r\n\t\t\t\t\t// \tif (smlRows[i].data.TEMP_CD === e.data[e.index].TEMP_CD){\t\t\t\t\r\n\t\t\t\t\t// \t\tbreak;\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t\t\r\n\t\t\t\t\tif (smlRow.selected !== true) {\r\n\t\t\t\t\t\tsmlRow.setSelected(true);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.currentRowLag = this.lagCdGridApi.getSelectedRows()[0].LAG_CD;\r\n\t\t\t\t\tthis.currentRowMdm = this.lagCdGridApi.getSelectedRows()[0].MDM_CD;\r\n\t\t\t\t\tthis.currentRowSml = smlRow !== undefined ? smlRow.data.SML_CD : '';\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.lastEditedLag = this.currentRowLag;\r\n\t\t\t\t\tthis.lastEditedMdm = this.currentRowMdm;\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\r\n\t\t\t\t\tlet bigCd   = this.lagCdGridApi.getSelectedRows()[0].LAG_CD\r\n\t\t\t\t\tlet mdlCd   = this.lagCdGridApi.getSelectedRows()[0].MDM_CD\r\n\t\t\t\t\tlet rowType = this.lagCdGridApi.getSelectedRows()[0].rowtype;\t\t\t\t\t\r\n\r\n\t\t\t\t\tif ((rowType === 'r' || rowType === 'u') && (this.currentRowLag !== bigCd || this.currentRowMdm !== mdlCd)) {\r\n\t\t\t\t\t\tif (this.validation(\"SUP010000_R02\")) this.transaction(\"SUP010000_R02\", bigCd, mdlCd);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", []);\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.currentRowLag = this.lagCdGridApi.getSelectedRows()[0].LAG_CD;\r\n\t\t\t\t\tthis.currentRowMdm = this.lagCdGridApi.getSelectedRows()[0].MDM_CD;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\":\r\n\t\t\t\t\tif (this.smlCdGridApi.getSelectedRows().length > 0) {\r\n\t\t\t\t\t\tthis.currentRowSml = this.smlCdGridApi.getSelectedRows()[0].SML_CD;\r\n\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.currentRowSml = '';\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonBeforeInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\":\r\n\t\t\t\t\tif (this.lagCdGridApi.getSelectedRows().length < 1) {\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0006', ['대분류 코드', '선택']);\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\treturn {rtn: false};\r\n\r\n\t\t\t\t\t} else if (this.lagCdGridApi.getSelectedRows()[0].rowtype !== 'r') {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0006', ['대분류 코드', '저장']);\r\n\r\n\t\t\t\t\t\treturn {rtn: false};\r\n\t\t\t\t\t} \r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn {rtn: true, index: 0};\r\n\t\t\t},\t\t\t\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"grdLagCd\":\r\n\t\t\t\t\tlet bigCdRecords = this.lagCdGrid.gridDataset.records;\r\n\r\n\t\t\t\t\tbigCdRecords[e.index].TEMP_CD = this.maxTempLagCd + 1;\r\n\r\n\t\t\t\t\tthis.maxTempLagCd ++;\r\n\r\n\t\t\t\t\tthis.lagCdGrid.gridDataset.setRecords(bigCdRecords);\r\n\r\n\t\t\t\t\tthis.lagCdGridApi.setRowData(this.lagCdGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\r\n\t\t\t\t\tlet lagRows = this.lagCdGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet lagRow;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < lagRows.length; i ++) {\r\n\t\t\t\t\t\tif (lagRows[i].data.TEMP_CD === this.maxTempLagCd){\r\n\t\t\t\t\t\t\tlagRow = this.lagCdGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tthis.lagCdGridApi.ensureIndexVisible(i, 'middle');\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (lagRow.selected !== true) {\r\n\t\t\t\t\t\tlagRow.setSelected(true);\r\n\t\t\t\t\t}\t\t\t\t\t\r\n\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSmlCdList\", []);\r\n\t\t\t\t\t\r\n\t\t\t\t\tthis.currentRowLag = '';\r\n\t\t\t\t\tthis.currentRowMdm = '';\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"grdSmlCd\":\t\t\t\t\r\n\r\n\t\t\t\t\tbreak;\r\n\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptLagCdNm':\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['textFieldProps']['iptLagCdNm'].value = e.target.value;\r\n\t\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptLagCdNm':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"SUP010000_R01\")) this.transaction(\"SUP010000_R01\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['selectboxProps'][e.target.id].selected = e.target.selectedIndex;\r\n\t\t\t\tstate['selectboxProps'][e.target.id].value    = e.target.value;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"대분류코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {this.state.textFieldProps.iptLagCdNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname        = {this.state.textFieldProps.iptLagCdNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.textFieldProps.iptLagCdNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {this.state.textFieldProps.iptLagCdNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {this.state.textFieldProps.iptLagCdNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {this.state.textFieldProps.iptLagCdNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {this.state.textFieldProps.iptLagCdNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {this.state.textFieldProps.iptLagCdNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"대분류코드 사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.selUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.selectboxProps.selUseYn.value}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {this.state.selectboxProps.selUseYn.dataset}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.selUseYn.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.selUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.selUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor      = 'blue' \r\n\t\t\t\t\t\t\t\t\tfiiled\t   = \"o\"\r\n\t\t\t\t\t\t\t\t\tinnerImage = {true} \r\n\t\t\t\t\t\t\t\t\ticon\t   = {'srch'}  \r\n\t\t\t\t\t\t\t\t\tid         = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue      = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled   = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden     = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick    = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt         = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\t\t\t\t\t\t\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdProps.grdLagCd.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdLagCd.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdProps.grdLagCd.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsLagCdList}\r\n\t\t\t\t\t\t\t\t\theight   = {this.state.grdProps.grdLagCd.height}\r\n\t\t\t\t\t\t\t\t\trowNum   = {true}\r\n\r\n\t\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow        = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow        = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\t\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnBigSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnBigSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnBigSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnBigSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t\t<ComponentPanel width={'85%'}>\r\n\t\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\t\tid       = {this.state.grdProps.grdSmlCd.id} \r\n\t\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdSmlCd.areaName}\r\n\t\t\t\t\t\t\t\t\theader   = {this.state.grdProps.grdSmlCd.header}\r\n\t\t\t\t\t\t\t\t\tdata     = {this.state.dsSmlCdList}\r\n\t\t\t\t\t\t\t\t\theight   = {this.state.grdProps.grdSmlCd.height}\r\n\t\t\t\t\t\t\t\t\trowNum   = {true}\r\n\r\n\t\t\t\t\t\t\t\t\tonGridReady        = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\t\tonRowClicked       = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\t\tonDeleteRow        = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\t\tonInsertRow        = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\t\tonBeforeInsertRow  = {this.event.grid.onBeforeInsertRow}\r\n\t\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tcolor    = 'purple' \r\n\t\t\t\t\t\t\t\t\t\t\tfiiled   = \"o\" \r\n\t\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSmlSave.id}\r\n\t\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSmlSave.value}\r\n\t\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSmlSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSmlSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 메뉴관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, SearchPanel} from 'components';//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, StrLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.grdMenu = null;\r\n\t\tthis.grdMenuApi = null;\r\n\t\tthis.state = {\r\n\t\t\tdsMenuInfo: DataLib.datalist.getInstance(),\r\n\t\t\tdsSel: DataLib.datalist.getInstance([{MNU_TP: \"\", USE_FLAG: \"\"}]),\r\n\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptMenuId : {\r\n\t\t\t\t\tid : 'iptMenuId',\r\n\t\t\t\t\tname : 'iptMenuId',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '메뉴ID',\r\n\t\t\t\t\tminLength : 1,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\r\n\t\t\t\tiptMenuNm : {\r\n\t\t\t\t\tid : 'iptMenuNm',\r\n\t\t\t\t\tname : 'iptMenuNm',\r\n\t\t\t\t\tvalue : '',\r\n\t\t\t\t\tplaceholder : '메뉴명',\r\n\t\t\t\t\tminLength : 1,\r\n\t\t\t\t\tmaxLength : 20,\r\n\t\t\t\t\treadOnly : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tbtnMenuSearchProps : {\r\n\t\t\t\tid : 'menuSearchBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '조회',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tbtnBMenuSaveProps : {\r\n\t\t\t\tid : 'menuSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue : '저장',\r\n\t\t\t\thidden : false\r\n\t\t\t},\r\n\t\t\tgrdMenuCdProps : {\r\n\t\t\t\tid : 'menuCdGrid',\r\n\t\t\t\tareaName : '메뉴목록',\r\n\t\t\t\theader : [\r\n\t\t\t\t\t{headerName: '메뉴ID'    , field: 'MNU_ID'     , colId: 'MNU_ID'     , editable: true, req: true, width: '250',  cellEditor: 'customEditor', maxLength: 10, type:'code'},\r\n\t\t\t\t\t{headerName: '메뉴명'    , field: 'MNU_NM'     , colId: 'MNU_NM'     , editable: true, req: true, width: '300',  cellEditor: 'customEditor', maxLength: 45},\r\n\t\t\t\t\t{headerName: '상위메뉴ID', field: 'PARE_MNU_ID', colId: 'PARE_MNU_ID', editable: true, req: false, width: '250', cellEditor: 'customEditor', maxLength: 50},\r\n\t\t\t\t\t{headerName: '메뉴유형'  , field: 'MNU_TP'    , colId: 'MNU_TP'    , editable: true, req: true, width: '200', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('STT_SYS_MNU', 'MNU_TP')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('STT_SYS_MNU', param.value, 'MNU_TP')},\r\n\t\t\t\t\t{headerName: '파일경로', field: 'PGM_PATH', colId: 'PGM_PATH', editable: true, req: false, width: '300', maxLength: 100},\r\n\t\t\t\t\t{headerName: '메뉴순서', field: 'SORT_ORD', colId: 'SORT_ORD', editable: true, req: true, width: '100', cellEditor: 'customEditor', maxLength: 6, type:'num'},\r\n\t\t\t\t\t{headerName: '사용여부', field: 'USE_FLAG'  , colId: 'USE_FLAG'  , editable: true, req: true, width: '100', textAlign: 'center', defaultValue : 'Y', resizable: false, singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\t\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange   = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount() {\r\n\t\tif (this.validation(\"SUP020000_R01\")) this.transaction(\"SUP020000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tlet chkCnt = 0;\r\n\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SUP020000_R01': break;\r\n\t\t\tcase 'SUP020000_H01':\r\n\t\t\t\tlet menuRecord = this.grdMenu.gridDataset.records;\r\n\t\t\t\tlet menuHeader = this.state.grdMenuCdProps.header.filter(item => item['req'] === true);\r\n\t\t\t\tlet menuRows = this.grdMenuApi.rowModel.rowsToDisplay;\r\n\t\t\t\tlet menuNum = 0;\r\n\r\n\t\t\t\tfor(let intA = 0; intA < menuRecord.length; intA++) {\r\n\t\t\t\t\tif(menuRecord[intA].rowtype !== newScrmObj.constants.crud.read){\r\n\t\t\t\t\t\tchkCnt++;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// req 빈칸 체크\r\n\t\t\t\t\tfor (let intB = 0; intB < menuHeader.length; intB++) {\r\n\t\t\t\t\t\tif(StrLib.isNull(menuRecord[intA][menuHeader[intB].field])){\r\n\t\t\t\t\t\t\t// 정렬 순서를 바꿨을 때 그에 따른 index값 따라가게 하기\r\n\t\t\t\t\t\t\tfor (let i = 0; i < menuRows.length; i++) {\r\n\t\t\t\t\t\t\t\tif (menuRows[i].data.MNU_ID === menuRecord[intA].MNU_ID){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tmenuNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(menuNum + 1) , menuHeader[intB].headerName.replace(/\\*/g,'')]);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tthis.grdMenu.moveRow(intA, true);\r\n\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\t// 메뉴ID 중복체크\r\n\t\t\t\t\tif(menuRecord.filter(item => item['MNU_ID'] === menuRecord[intA]['MNU_ID']).length > 1) {\r\n\t\t\t\t\t\tlet index = menuRecord.findIndex((ele, index) => ele['MNU_ID'] === menuRecord[intA]['MNU_ID'] && intA !== index);\r\n\t\t\t\t\t\t// 정렬 순서를 바꿨을 때 그에 따른 index값 따라가게 하기\r\n\t\t\t\t\t\tfor (let i = 0; i < menuRows.length; i++) {\r\n\t\t\t\t\t\t\tif (menuRows[i].data.MNU_ID === menuRecord[intA].MNU_ID){\r\n\t\t\t\t\t\t\t\tmenuNum = i;\t\t\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(menuNum + 1), Number(index + 1), '메뉴ID']);\r\n\r\n\t\t\t\t\t\tthis.grdMenu.moveRow(intA, true);\r\n\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//메뉴 저장 시, 메뉴순서 중복체크\r\n\t\t\t\t\tif(menuRecord[intA]['MNU_TP'] === '10') {\r\n\t\t\t\t\t\tif(menuRecord.filter(item => item['MNU_TP'] === menuRecord[intA]['MNU_TP']).filter(ele => ele['SORT_ORD'] === menuRecord[intA]['SORT_ORD']).length > 1) {\r\n\t\t\t\t\t\t\tlet index = menuRecord.findIndex((ele, index) => ele['MNU_TP'] === menuRecord[intA]['MNU_TP'] && ele['SORT_ORD'] === menuRecord[intA]['SORT_ORD'] && intA !== index);\r\n\t\t\t\t\t\t\t// 정렬 순서를 바꿨을 때 그에 따른 index값 따라가게 하기\r\n\t\t\t\t\t\t\tfor (let i = 0; i < menuRows.length; i++) {\r\n\t\t\t\t\t\t\t\tif (menuRows[i].data.MNU_ID === menuRecord[intA].MNU_ID){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tmenuNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(intA+1), Number(index+1), '메뉴순서']);\r\n\r\n\t\t\t\t\t\t\tthis.grdMenu.moveRow(intA, true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif(menuRecord.filter(menu => menu['MNU_TP'] === menuRecord[intA]['MNU_TP']).filter(item => item['PARE_MNU_ID'] === menuRecord[intA]['PARE_MNU_ID']).filter(ele => ele['SORT_ORD'] === menuRecord[intA]['SORT_ORD']).length > 1) {\r\n\t\t\t\t\t\t\tlet index = menuRecord.findIndex((ele, index) => ele['MNU_TP'] === menuRecord[intA]['MNU_TP'] && ele['PARE_MNU_ID'] === menuRecord[intA]['PARE_MNU_ID'] && ele['SORT_ORD'] === menuRecord[intA]['SORT_ORD'] && intA !== index);\r\n\t\t\t\t\t\t\t// 정렬 순서를 바꿨을 때 그에 따른 index값 따라가게 하기\r\n\t\t\t\t\t\t\tfor (let i = 0; i < menuRows.length; i++) {\r\n\t\t\t\t\t\t\t\tif (menuRows[i].data.MNU_ID === menuRecord[intA].MNU_ID){\r\n\t\t\t\t\t\t\t\t\tmenuNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(intA+1), Number(index+1), '메뉴순서']);\r\n\r\n\t\t\t\t\t\t\tthis.grdMenu.moveRow(intA, true);\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 변경된 행이 없을 때\r\n\t\t\t\tif(menuRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\t\r\n\t\ttransManager.setTransId(serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SUP020000_R01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getMenuList\",\r\n\t\t\t\t\tdatasetsend: \"dsUser\",\r\n\t\t\t\t\tdatasetrecv: \"dsMenuRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUser', \r\n\t\t\t\t[{\r\n\t\t\t\t\t\"MNU_ID\": this.state.textFieldProps.iptMenuId.value.trim(), \r\n\t\t\t\t\t\"MNU_NM\": this.state.textFieldProps.iptMenuNm.value.trim(), \r\n\t\t\t\t\t\"MNU_TP\": this.state.dsSel.records[0][\"MNU_TP\"],\r\n\t\t\t\t\t\"USE_FLAG\" : this.state.dsSel.records[0][\"USE_FLAG\"]\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\t\tcase 'SUP020000_H01':\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao         : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh       : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid    : \"SUP.H_handleMenuList\",\r\n\t\t\t\t\tdatasetsend : \"dsMenuInfo\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsMenuInfo', this.grdMenu.gridDataset.records);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\t//console.log(res)\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SUP020000_R01':\r\n\t\t\t\tif(res.data.dsMenuRecv.length > 0){\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsMenuInfo\", res.data.dsMenuRecv);\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//ComLib.setStateRecords(this, \"dsMenuInfo\", []);\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsMenuInfo\", []);\r\n\t\t\t\t\t// stateRecord로만 바꾸면 orgRecord 라든지 데이터가 남아 있어 \r\n\t\t\t\t\t// 다른 페이지에서 에러가 발생할 확율이 있음.\r\n\t\t\t\t\t// 완전 초기화는 setStateInitRecords로 할것\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\tbreak;\r\n\t\t\tcase 'SUP020000_H01':\r\n\t\t\t\tComLib.openDialog('A', 'COMI0003');\r\n\t\t\t\tthis.transaction('SUP020000_R01');\r\n\r\n\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"menuSearchBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SUP020000_R01\")) this.transaction(\"SUP020000_R01\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"menuSaveBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SUP020000_H01\")) this.transaction(\"SUP020000_H01\");\r\n\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// grid 이벤트\r\n\t\tgrid: {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase \"menuCdGrid\":\r\n\t\t\t\t\t\tthis.grdMenuApi = e.gridApi;\r\n\t\t\t\t\t\tthis.grdMenu = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: () => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellFocused: () => {\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellClicked: () => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: () => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tComLib.setStateValue(this, \"dsMenuInfo\", e.index, e.col, e.newValue);\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: () => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: () => {\r\n\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: () => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowSelected: () => {\r\n\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\t// input 이벤트\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'iptMenuId' :\r\n\t\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t\tstate['textFieldProps']['iptMenuId'].value = e.target.value;\r\n\t\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\t\t//this.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, iptMenuId : {...this.state.textFieldProps.iptMenuId, value : e.target.value }}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'iptMenuNm' :\r\n\t\t\t\t\t\tthis.setState({...this.state, textFieldProps : { ...this.state.textFieldProps, iptMenuNm : {...this.state.textFieldProps.iptMenuNm, value : e.target.value }}});\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// selectbox 이벤트\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\tcase 'mnuKnd':\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"MNU_TP\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'useYN':\r\n\t\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_FLAG\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴ID\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptMenuId.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptMenuId.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptMenuId.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptMenuId.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptMenuId.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptMenuId.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptMenuId.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptMenuId.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptMenuNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptMenuNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptMenuNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptMenuNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptMenuNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptMenuNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptMenuNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptMenuNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메뉴유형\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"mnuKnd\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('STT_SYS_MNU', 'MNU_TP'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"MNU_TP\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\t//disabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"useYN\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN','USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor= 'blue' fiiled= {true} innerImage={true} icon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnMenuSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnMenuSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnMenuSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnMenuSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt = {5} \r\n\t\t\t\t\t\t\t\t></Button>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.grdMenuCdProps.id} \r\n\t\t\t\t\t\t\t\tref={this.state.grdMenuCdProps.id}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.grdMenuCdProps.areaName}\r\n\t\t\t\t\t\t\t\trowNum = {true}\r\n\t\t\t\t\t\t\t\theight= \"605px\"\r\n\t\t\t\t\t\t\t\theader = {this.state.grdMenuCdProps.header}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsMenuInfo}\r\n\r\n\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" fiiled= {true} \r\n\t\t\t\t\t\t\t\t\t\tid \t\t = {this.state.btnBMenuSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue \t = {this.state.btnBMenuSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnBMenuSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden \t = {this.state.btnBMenuSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmt \t\t = {5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default View;","// 권한관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, RFloatArea, RelativeGroup} from 'components'; //버튼 컴포넌트\r\nimport {BasicButton as Button} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, StrLib, TransManager, newScrmObj} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.grdAuth = null;\r\n\t\tthis.grdPrgm = null;\r\n\t\tthis.grdAuthApi = null;\r\n\t\tthis.grdPrgmApi = null;\r\n\t\t//this.authLv = '';\r\n\t\tthis.isRowClicked = false;\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsAuthInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsPrgmInfo : DataLib.datalist.getInstance(),\r\n\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdAuthInfo : {\r\n\t\t\t\t\tid : 'grdAuthInfo',\r\n\t\t\t\t\tareaName : '권한목록',\r\n\t\t\t\t\theader : [\r\n\t\t\t\t\t\t{headerName: '사용자권한', field: 'AUTH_NM', colId: 'AUTH_NM', req: true},\r\n\t\t\t\t\t\t{headerName: '권한레벨', field: 'AUTH_LV', colId: 'AUTH_LV', req: true, resizable: false,}\r\n\t\t\t\t\t]\r\n\t\t\t\t},\t\t\r\n\t\t\t\tgrdPrgmInfo : {\r\n\t\t\t\t\tid : 'grdPrgmInfo',\r\n\t\t\t\t\tareaName : '프로그램목록',\r\n\t\t\t\t\theader : [\r\n\t\t\t\t\t\t{headerName: '', field: '', colId: '', headerCheckboxSelection: true, checkboxSelection: true, width: '25'},\r\n\t\t\t\t\t\t{headerName : '프로그램ID', field: 'MNU_ID', colId: 'MNU_ID'},\r\n\t\t\t\t\t\t{headerName : '상위메뉴', field: 'PARE_MNU_ID', colId: 'PARE_MNU_ID'},\r\n\t\t\t\t\t\t{headerName : '프로그램명', field: 'MNU_NM', colId: 'MNU_NM'},\r\n\t\t\t\t\t\t{headerName : '메뉴유형', field: 'MNU_TP_NM', colId: 'MNU_TP_NM', resizable: false}\r\n\t\t\t\t\t]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tbtnPrgmSaveProps : {\r\n\t\t\t\tid       : 'prgmSaveBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '저장',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SUP030000_R01\")) this.transaction(\"SUP030000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t// SUP030000_R01 : 권한목록 조회\r\n\t// SUP030000_R02 : 프로그램목록 조회\r\n\t// SUP030000_H01 : 프로그램목록 수정\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SUP030000_R01':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SUP030000_R02':\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SUP030000_H01':\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t// SUP030000_R01 : 권한목록 조회\r\n\t// SUP030000_R02 : 프로그램목록 조회\r\n\t// SUP030000_H01 : 프로그램목록 수정\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SUP030000_R01':\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"SUP.R_getAuthList\",\r\n\t\t\t\t\tdatasetsend:\"dsAuthInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsAuthRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsAuthInfo', [{}]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SUP030000_R02':\r\n\t\t\t\ttransManager.setTransId(transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid:\"SUP.R_getPrgmList\",\r\n\t\t\t\t\tdatasetsend:\"dsPrgmInfo\",\r\n\t\t\t\t\tdatasetrecv:\"dsPrgmRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsPrgmInfo', [{\"AUTH_LV\": params[1]}]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SUP030000_H01':\r\n\t\t\t\ttransManager.setTransId (transId);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid   : \"SUP.D_handlePrgmList\",\r\n\t\t\t\t\tdatasetsend: \"dsPrgmInfoDel\",\r\n\t\t\t\t}); \r\n\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.create,\r\n\t\t\t\t\tsqlmapid   : \"SUP.C_handlePrgmList\",\r\n\t\t\t\t\tdatasetsend: \"dsPrgmInfoInst\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet temp = [];\r\n\t\t\t\tfor(let i=0; i<this.grdPrgmApi.getSelectedRows().length; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\ttemp.push({ \r\n\t\t\t\t\t\tAUTH_LV: this.grdAuthApi.getSelectedRows()[0].AUTH_LV, \r\n\t\t\t\t\t\tMNU_ID: this.grdPrgmApi.getSelectedRows()[i].MNU_ID\r\n\t\t\t\t\t});\r\n\t\t\t\t }\r\n\r\n\t\t\t\ttransManager.addDataset('dsPrgmInfoDel', [{\"AUTH_LV\": this.grdAuthApi.getSelectedRows()[0].AUTH_LV}]);\r\n\t\t\t\ttransManager.addDataset('dsPrgmInfoInst', temp);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t// SUP030000_R01 : 권한목록 조회\r\n\t// SUP030000_R02 : 프로그램목록 조회\r\n\t// SUP030000_H01 : 프로그램목록 수정\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tlet data;\r\n\t\tlet { currentRowAuth } = this.state; \r\n\t\tlet authRowNm = 0;\r\n\r\n\t\tif (!StrLib.isNull(currentRowAuth)) {\r\n\t\t\tauthRowNm = this.state.dsAuthInfo.indexOf(\"AUTH_LV\", currentRowAuth);\r\n\t\t}\t\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SUP030000_R01':\r\n\t\t\t\tif (res.data.dsAuthRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsAuthInfo\", res.data.dsAuthRecv);\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata = this.grdAuthApi.rowModel.rowsToDisplay[authRowNm];\r\n\t\t\t\t\t\r\n\t\t\t\t\tdata.setSelected(true);\r\n\r\n\t\t\t\t\tlet authCd = \"\";\r\n\t\r\n\t\t\t\t\tauthCd = this.state.dsAuthInfo.records[authRowNm].AUTH_LV;\r\n\t\r\n\t\t\t\t\tif (this.validation(\"SUP030000_R02\", authCd)) this.transaction(\"SUP030000_R02\", authCd);\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsAuthInfo\", []);\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsPrgmInfo\", []);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SUP030000_R02':\r\n\t\t\t\tif (res.data.dsPrgmRecv.length > 0) {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsPrgmInfo\", res.data.dsPrgmRecv);\r\n\r\n\t\t\t\t\tthis.grdPrgmApi.forEachNode((node) => { \r\n\t\t\t\t\t\tif (node.data.CHK === 'Y') { \r\n\t\t\t\t\t\t\tnode.setSelected(true); \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//ComLib.setStateRecords(this, \"dsPrgmInfo\", []);\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsPrgmInfo\", []);\r\n\t\t\t\t\t\r\n\t\t\t\t\t// stateRecord로만 바꾸면 orgRecord 라든지 데이터가 남아 있어 \r\n\t\t\t\t\t// 다른 페이지에서 에러가 발생할 확률이 있음.\r\n\t\t\t\t\t// 완전 초기화는 setStateInitRecords로 할것\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SUP030000_H01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"COMI0003\");\r\n\t\t\t\tthis.transaction(\"SUP030000_R02\", \r\n\t\t\t\t\t(\tthis.grdAuthApi.getSelectedNodes().length > 0 \r\n\t\t\t\t\t\t? this.state.dsAuthInfo.records[Number(this.grdAuthApi.getSelectedNodes()[0]['id'])].AUTH_LV\r\n\t\t\t\t\t\t: this.state.dsAuthInfo.records[0].AUTH_LV\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"prgmSaveBtn\" :\r\n\t\t\t\t\t\tif (this.validation(\"SUP030000_H01\")) this.transaction(\"SUP030000_H01\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// grid 이벤트\r\n\t\tgrid: {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase \"grdAuthInfo\" : \r\n\t\t\t\t\t\tthis.grdAuth = e.grid;\r\n\t\t\t\t\t\tthis.grdAuthApi = e.gridApi;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"grdPrgmInfo\" :\r\n\t\t\t\t\t\tthis.grdPrgm = e.grid;\r\n\t\t\t\t\t\tthis.grdPrgmApi = e.gridApi;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\tif (e.id === \"grdAuthInfo\") {\r\n\t\t\t\t\tlet authRows = this.grdAuthApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\tlet authRow;\r\n\t\t\t\t\t\r\n\t\t\t\t\t// 권한목록 그리드 안에 같은 인덱스를 클릭하였을 때 트랜잭션이 돌지 않도록 만들기\r\n\t\t\t\t\t// if (this.authLv !== e.data.SML_CD) {\r\n\t\t\t\t\t// \tif (this.validation(\"SUP030000_R02\", e.data.SML_CD)){\r\n\t\t\t\t\t// \t\tthis.transaction(\"SUP030000_R02\", e.data.SML_CD);\r\n\t\t\t\t\t// \t}\r\n\t\t\t\t\t// }\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < authRows.length; i ++) {\r\n\t\t\t\t\t\tif (authRows[i].data.AUTH_LV === e.data.AUTH_LV){\r\n\t\t\t\t\t\t\tauthRow = this.grdAuthApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tauthRow.setSelected(true);\r\n\r\n\t\t\t\t\tif (this.validation(\"SUP030000_R02\", e.data.AUTH_LV)){\r\n\t\t\t\t\t\tthis.transaction(\"SUP030000_R02\", e.data.AUTH_LV);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// this.authLv = e.data.SML_CD;\r\n\r\n\t\t\t\t} else if (e.id === \"grdPrgmInfo\") {\r\n\t\t\t\t\tif(this.grdPrgmApi.getRowNode(e.index).isSelected()) {\r\n\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((node) => {\r\n\t\t\t\t\t\t\tif (node.data.MNU_ID === e.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\tnode.setSelected(false);\r\n\t\t\t\t\t\t\t\tnode.data.rowtype = newScrmObj.constants.crud.update\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((node) => {\r\n\t\t\t\t\t\t\tif (node.data.MNU_ID === e.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\tnode.setSelected(true);\r\n\t\t\t\t\t\t\t\tnode.data.rowtype = newScrmObj.constants.crud.update\r\n\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellFocused: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\t\t\t\tif (e.id === \"grdPrgmInfo\") {\t\r\n\t\t\t\t\tif(this.grdPrgmApi.getRowNode(e.index).isSelected()) {\r\n\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((node) => {\r\n\t\t\t\t\t\t\tif (node.data.MNU_ID === e.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\tlet childSelectedCnt = 0;\r\n\r\n\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((childNode) => {\r\n\t\t\t\t\t\t\t\t\tif (childNode.data.PARE_MNU_ID === node.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\t\t\tif(childNode.isSelected()) {\r\n\t\t\t\t\t\t\t\t\t\t\tchildSelectedCnt += 1;\r\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\t\tif (childSelectedCnt === 0) {\r\n\t\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((childNode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (childNode.data.PARE_MNU_ID === node.data.MNU_ID && node.data.PARE_MNU_ID === null) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(!childNode.isSelected()) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchildNode.setSelected(true);\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t} \r\n\t\r\n\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((parentNode) => {\r\n\t\t\t\t\t\t\t\t\tif (node.data.PARE_MNU_ID === parentNode.data.MNU_ID) {\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tif(!parentNode.isSelected()) {\r\n\t\t\t\t\t\t\t\t\t\t\tparentNode.setSelected(true);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((node) => {\r\n\t\t\t\t\t\t\tif (node.data.MNU_ID === e.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\tlet childSelectedCnt = 0;\r\n\r\n\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((childNode) => {\r\n\t\t\t\t\t\t\t\t\tif (childNode.data.PARE_MNU_ID === node.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\t\t\tif(childNode.isSelected()) {\r\n\t\t\t\t\t\t\t\t\t\t\tchildSelectedCnt += 1;\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\t\tif (childSelectedCnt > 0) {\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((childNode) => {\r\n\t\t\t\t\t\t\t\t\t\tif (childNode.data.PARE_MNU_ID === node.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(childNode.isSelected()) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tchildNode.setSelected(false);\r\n\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t});\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t} \r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((parentNode) => {\r\n\t\t\t\t\t\t\t\t\tif (node.data.PARE_MNU_ID === parentNode.data.MNU_ID) {\t\r\n\t\t\t\t\t\t\t\t\t\tlet siblingSelectedCnt = 0;\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tthis.grdPrgmApi.forEachNode((siblingNode) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (siblingNode.data.PARE_MNU_ID === parentNode.data.MNU_ID) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tif(siblingNode.isSelected()) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsiblingSelectedCnt += 1;\r\n\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\r\n\t\t\t\t\t\t\t\t\t\tif (siblingSelectedCnt === 0 && parentNode.isSelected() && parentNode.data.MNU_ID.length === 3) {\r\n\t\t\t\t\t\t\t\t\t\t\tparentNode.setSelected(false);\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t<ComponentPanel width={'65%'}>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.grdProps.grdAuthInfo.id} \r\n\t\t\t\t\t\t\t\tref={this.state.grdProps.grdAuthInfo.id}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdAuthInfo.areaName}\r\n\t\t\t\t\t\t\t\trowNum = {true}\r\n\t\t\t\t\t\t\t\theight = \"675px\"\r\n\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\theader = {this.state.grdProps.grdAuthInfo.header}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsAuthInfo}\r\n\r\n\t\t\t\t\t\t\t\tonGridReady\t\t\t = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow          = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow          = {this.event.grid.onInsertRow}\t\r\n\t\t\t\t\t\t\t\tsort                 = {false}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.grdProps.grdPrgmInfo.id} \r\n\t\t\t\t\t\t\t\tref={this.state.grdProps.grdPrgmInfo.id}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdPrgmInfo.areaName}\r\n\t\t\t\t\t\t\t\theight= \"675px\"\r\n\t\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\t\trowSelection = 'multiple' \r\n\t\t\t\t\t\t\t\tsuppressRowClickSelection = {true}\r\n\t\t\t\t\t\t\t\theader = {this.state.grdProps.grdPrgmInfo.header}\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsPrgmInfo}\r\n\r\n\t\t\t\t\t\t\t\tonGridReady\t\t\t = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked         = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellFocused        = {this.event.grid.onCellFocused}\r\n\t\t\t\t\t\t\t\tonCellClicked        = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked  = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged   = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked   = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged   = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected        = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow          = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow          = {this.event.grid.onInsertRow}\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" fiiled= {true}\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnPrgmSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnPrgmSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnPrgmSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnPrgmSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 기준값관리\r\nimport React from 'react';\r\nimport {ComponentPanel, SearchPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib,StrLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.gridStndValApi = null;\r\n\r\n\t\tthis.gridStndVal = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsStndValInfo : DataLib.datalist.getInstance(),\r\n\t\t\tdsSel: DataLib.datalist.getInstance([{USE_FLAG: \"\", APY_PPTY_USE_FLAG:\"\", STND_PPTY_USE_FLAG:\"\"}]),\r\n\r\n\t\t\tbtnSearchProps : {\r\n\t\t\t\tid       : 'searchBtn',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '조회',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\t\t\tbtnSaveProps : {\r\n\t\t\t\tid       : 'btnSave',\r\n\t\t\t\tdisabled : false,\r\n\t\t\t\tvalue    : '저장',\r\n\t\t\t\thidden   : false\r\n\t\t\t},\r\n\t\t\tstndCdGrid : {\r\n\t\t\t\tid : 'stndCdGrid',\r\n\t\t\t\tareaName : '기준값목록',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '코드',\tfield: 'STND_CD',\t\t\t\tcolId: 'STND_CD', cellEditor: 'customEditor', width :'40',textAlign: 'center',\r\n\t\t\t\t\tmaxLength: 5, type:'code',editable: true, req: true,\trowspan: true, },\r\n \t\t\t\t\t{headerName: '코드명',\t\tfield: 'STND_CD_NM',\t\tcolId: 'STND_CD_NM', cellEditor: 'customEditor',\tmaxLength: 150, editable: true, req: true, width :'190'},\r\n\t\t\t\t\t{headerName: '사용구분',\t\tfield: 'USE_FLAG',\t\tcolId: 'USE_FLAG',\teditable: true, req: true,width :'60',defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{headerName: '적용속성 사용여부',\tfield: 'APY_PPTY_USE_FLAG',\t\tcolId: 'APY_PPTY_USE_FLAG',\teditable: true,req: true,width :'95',defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG') },\r\n\t\t\t\t\t\t\tvalueFormatter : (params) => { return ComLib.getComCodeName('CMN', params.value, 'USE_FLAG') }         \r\n\t\t\t\t\t},\r\n\t\t\t\t\t {headerName: '센터수정 가능여부',\tfield: 'CENT_SET_CHG_FLAG',colId: 'CENT_SET_CHG_FLAG',\teditable: true, req: true,width :'95',defaultValue : 'N',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t \tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'PSB_FLAG')},\r\n\t\t\t\t\t \tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'PSB_FLAG')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t {headerName: '기준값속성 사용여부',\tfield: 'STND_PPTY_USE_FLAG',colId: 'STND_PPTY_USE_FLAG',\teditable: true,req: true,width :'100',defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{headerName: '기타속성1 사용여부',\tfield: 'ETC1_PPTY_USE_FLAG',colId: 'ETC1_PPTY_USE_FLAG',\teditable: true,width :'95',defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{headerName: '기타속성2 사용여부',\tfield: 'ETC2_PPTY_USE_FLAG',\t\tcolId: 'ETC2_PPTY_USE_FLAG',\teditable: true,width :'95',defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\r\n\t\t\t\t\t},\r\n \t\t\t\t\t{headerName: '정렬순서',\tfield: 'SORT_ORD',\t\tcolId: 'SORT_ORD',\tcellEditor: 'customEditor', maxLength: 3, type: 'num', editable: true, req: true,width :'60',textAlign: 'center',},\r\n\t\t\t\t\t{headerName: '등록일자',\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM',\teditable: true, resizable: false,width :'60',},\r\n\t\t\t\t],\r\n\r\n\t\t\t},\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptCdNm : {\r\n\t\t\t\t\tid \t\t\t: 'iptCdNm',\r\n\t\t\t\t\tname        : 'iptCdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '기준값코드/코드명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.event.button.onClick   = this.event.button.onClick.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tif (this.validation(\"SUP040000_R01\")) this.transaction(\"SUP040000_R01\");\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (transId) => {\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\t\tswitch (transId) {\r\n\t\tcase 'SUP040000_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'SUP040000_H01':\r\n\r\n\t\t\tlet stndRecord = this.gridStndVal.gridDataset.records;\r\n\r\n\t\t\touter : for ( let intA = 0; intA < stndRecord.length; intA ++ ) {\r\n\t\t\t\tif (stndRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tlet stndHeader = this.state.stndCdGrid.header.filter(item => item['req'] === true);; // filter\r\n\t\t\t\t\r\n\t\t\t\tfor(let i = 0; i < stndHeader.length; i++) {\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (StrLib.isNull(stndRecord[intA][stndHeader[i].field])) {\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(intA + 1) , stndHeader[i].headerName.replace(/\\*/g,'') ]);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor ( let intB = 0; intB < stndRecord.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB && stndRecord[intA].STND_CD === stndRecord[intB].STND_CD) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(intA + 1) , Number(intB + 1) , '기준 코드']);// 중복되었습니다\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.gridStndVal.moveRow(intB, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\r\n\t\t\t}\t\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.gridStndVal.moveRow(returnVal, true);\r\n\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (stndRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault: break;\r\n\t\t}\r\n\t\treturn true;\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SUP040000_R01':\r\n\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getStndValInfo\",\r\n\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\tdatasetrecv: \"dsStndCdRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSearchParam'\t, [{\"STND_CD_NAME\": this.state.textFieldProps.iptCdNm.value\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t, \t\"USE_FLAG\": this.state.dsSel.records[0][\"USE_FLAG\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t,\t\"APY_PPTY_USE_FLAG\":this.state.dsSel.records[0][\"APY_PPTY_USE_FLAG\"]\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t,\t\"STND_PPTY_USE_FLAG\":this.state.dsSel.records[0][\"STND_PPTY_USE_FLAG\"]}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SUP040000_H01': \r\n\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SUP.H_handleStndValInfo\",\r\n\t\t\t\t\tdatasetsend: \"dsStndValInfo\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsStndValInfo', this.gridStndVal.gridDataset.getTransRecords(newScrmObj.constants.rowtype.CREATE_OR_UPDATE));\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\t\r\n\t\t\tdefault: break;\r\n\t\t}\r\n\t}\tcatch (err) {\r\n\r\n\t}\r\n}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP040000_R01':\r\n\t\t\tif(res.data.dsStndCdRecv.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsStndValInfo\", res.data.dsStndCdRecv);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsStndValInfo\", []);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'SUP040000_H01':\r\n\t\t\tComLib.openDialog('A', 'COMI0001',['기준 코드']);//정상적으로 저장되었습니다\r\n\t\t\tthis.transaction('SUP040000_R01');\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"searchBtn\":\r\n\t\t\t\t\tif (this.validation(\"SUP040000_R01\")) this.transaction(\"SUP040000_R01\");\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"btnSave\": \r\n\t\t\t\t\tif (this.validation(\"SUP040000_H01\")) this.transaction(\"SUP040000_H01\");\r\n\t\t\t\t\tbreak;\t\t\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch(e.target.id) {\r\n\t\t\t\tcase 'iptCdNm':\r\n\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\tstate['textFieldProps']['iptCdNm'].value = e.target.value;\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptCdNm':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"SUP040000_R01\")) this.transaction(\"SUP040000_R01\");\r\n\t\t\t\t\t}\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\tcase 'useYn': \r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_FLAG\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'apyPtyYn':\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"APY_PPTY_USE_FLAG\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'stndYn': \r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"STND_PPTY_USE_FLAG\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid : {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\tcase \"stndCdGrid\":\r\n\t\t\t\t\tthis.gridStndValApi = e.gridApi;\r\n\t\t\t\t\tthis.gridStndVal = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\t\t\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\t\t\t\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tif(e.col === \"STND_CD\") {\r\n\t\t\t\t\tif(this.gridStndVal.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0013',['기준값 코드']);//변경할수없습니다\r\n\r\n\t\t\t\t\t\tthis.gridStndVal.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\tthis.gridStndValApi.setRowData(this.gridStndVal.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t},\r\n\t\t}\r\n\t\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기준값코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptCdNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptCdNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptCdNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptCdNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptCdNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptCdNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptCdNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptCdNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"useYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"적용속성\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"apyPtyYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"APY_PPTY_USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"기준값속성\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"stndYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"STND_PPTY_USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnSearchProps.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnSearchProps.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSearchProps.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnSearchProps.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tcolor=\"blue\" fiiled=\"o\" innerImage={true} icon = {'srch'} mt=\"5px\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid={this.state.stndCdGrid.id}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.stndCdGrid.areaName}\r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsStndValInfo}\r\n\t\t\t\t\t\t\t\trowNum   = {true}\r\n\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\theader = {this.state.stndCdGrid.header}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\t\t\tid={this.state.btnSaveProps.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.btnSaveProps.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnSaveProps.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnSaveProps.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" fiiled=\"o\" mt=\"5px\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n}\r\n\r\nexport default View;","// 메시지관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel,SearchPanel, LFloatArea, RFloatArea, RelativeGroup} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox, Grid} from 'components';\r\nimport {ComLib, StrLib, DataLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.gridMsgCdApi = null;\r\n\t\tthis.gridMsgCd = null;\r\n\t\t\r\n\t\tthis.currentRowMsg = '';\r\n\t\tthis.state = {\r\n\t\t\t\r\n\r\n\t\t\tdsSel : DataLib.datalist.getInstance([{USE_FLAG:\"\"}]),\r\n\t\t\tdsMsgCdList : DataLib.datalist.getInstance(),\r\n\t\t\t\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnSave : {\r\n\t\t\t\t\tid       : 'btnSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptMsgCdNm : {\r\n\t\t\t\t\tid          : 'iptMsgCdNm',\r\n\t\t\t\t\tname        : 'iptMsgCdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '메시지코드/코드명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgridMsgCd : {\r\n\t\t\t\tid : 'gridMsgCd',\r\n\t\t\t\tareaName : '메시지목록',\r\n\t\t\t\theader :\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{headerName: '메시지코드',\t\tfield: 'MSG_CD',\tcolId: 'MSG_CD', cellEditor: 'customEditor', maxLength: 30, type:'code',  editable: true, width :'50', req: true, },\r\n\t\t\t\t\t\t{headerName: '메시지명',\t\tfield: 'MSG_CONT',\t\tcolId: 'MSG_CONT', cellEditor: 'customEditor',\teditable: true, width :'150', req: true, maxLength: 300, },\r\n\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USE_FLAG',\t\tcolId: 'USE_FLAG',\teditable: true, width :'30', req: true, defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{headerName: '등록자',\t\t\tfield: 'REG_USR_ID',\t\tcolId: 'REG_USR_ID',\teditable: true,width :'30'},\r\n\t\t\t\t\t\t{headerName: '등록일시',\t\tfield: 'REG_DTM',\t\tcolId: 'REG_DTM',\teditable: true,width :'50', resizable: false},\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidMount () {\r\n\t\tif (this.validation(\"SUP050000_R01\")) this.transaction(\"SUP050000_R01\");\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t//console.log(\"updated!!\");\r\n\t\t//console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'SUP050000_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'SUP050000_H01':\r\n\t\t\tlet msgRecord = this.gridMsgCd.gridDataset.records;\r\n\r\n\t\t\touter : for ( let intA = 0; intA < msgRecord.length; intA ++ ) {\r\n\t\t\t\tif (msgRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tlet msgHeader = this.state.gridMsgCd.header.filter(item => item['req'] === true); //filter\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < msgHeader.length; i ++) {\r\n\t\t\t\t\tif (StrLib.isNull(msgRecord[intA][msgHeader[i].field])) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0001',[Number(intA + 1), msgHeader[i].headerName.replace(/\\*/g,'')]);//입력해주기시바랍니다\r\n\t\r\n\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < msgRecord.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB && msgRecord[intA].MSG_CD === msgRecord[intB].MSG_CD) {\r\n\t\t\t\t\t\t//중복되었습니다\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(intA + 1), Number(intB + 1), '메시지코드']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.gridMsgCd.moveRow(intB, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.gridMsgCd.moveRow(returnVal, true);\r\n\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (msgRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');//변경된 행이 없습니다\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t\t\r\n\tdefault: break;\r\n\t\t\r\n\t}\r\n\t\treturn true;\r\n}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SUP050000_R01':\r\n\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getMsgCdList\",\r\n\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\tdatasetrecv: \"dsMsgCdRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSearchParam', [{\r\n\t\t\t\t\t\"MSG_CD_NAME\": this.state.textFieldProps.iptMsgCdNm.value,\r\n\t\t\t\t\t\"USE_FLAG\": this.state.dsSel.records[0][\"USE_FLAG\"]}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SUP050000_H01':\r\n\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SUP.H_handleMsgCdList\",\r\n\t\t\t\t\tdatasetsend: \"dsMsgCdList\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsMsgCdList', this.gridMsgCd.gridDataset.getTransRecords(newScrmObj.constants.rowtype.CREATE_OR_UPDATE));\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\tcatch (err) {\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP050000_R01':\r\n\t\t\tif(res.data.dsMsgCdRecv.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsMsgCdList\", res.data.dsMsgCdRecv);\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsMsgCdList\", []);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'SUP050000_H01':\r\n\t\t\tComLib.openDialog('A', 'COMI0001', '메시지 코드');//정상적으로 저장되었습니다\r\n\t\t\tthis.transaction('SUP050000_R01');\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\": \r\n\t\t\t\t\t\tif(this.validation(\"SUP050000_R01\")) this.transaction(\"SUP050000_R01\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnSave\":\r\n\t\t\t\t\t\tif (this.validation(\"SUP050000_H01\")) this.transaction('SUP050000_H01');\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch(e.target.id) {\r\n\t\t\t\tcase 'iptMsgCdNm':\r\n\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\tstate['textFieldProps']['iptMsgCdNm'].value = e.target.value;\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptMsgCdNm':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"SUP050000_R01\")) this.transaction(\"SUP050000_R01\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid : {\r\n\t\t\tonGridReady : (e) => {\r\n\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\tcase \"gridMsgCd\":\r\n\t\t\t\t\tthis.gridMsgCdApi = e.gridApi;\r\n\t\t\t\t\tthis.gridMsgCd = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tif(e.col === \"MSG_CD\") {\r\n\t\t\t\t\tif(this.gridMsgCd.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0013',['메시지 코드']);//변경할수없습니다\r\n\r\n\t\t\t\t\t\tthis.gridMsgCd.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\tthis.gridMsgCdApi.setRowData(this.gridMsgCd.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\t\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tconsole.log(e.id);\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'useYn': \r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_FLAG\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"메시지코드/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptMsgCdNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptMsgCdNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptMsgCdNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptMsgCdNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptMsgCdNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptMsgCdNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptMsgCdNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptMsgCdNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"useYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \t\t\t\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"blue\" fiiled=\"o\" innerImage={true} icon = {'srch'} mt=\"5px\"\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid = {this.state.gridMsgCd.id}\r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsMsgCdList}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.gridMsgCd.areaName}\r\n\t\t\t\t\t\t\t\theader = {this.state.gridMsgCd.header}\r\n\t\t\t\t\t\t\t\trowNum = {true}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button \t\t\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSave.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSave.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" fiiled=\"o\"  mt=\"5px\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</RelativeGroup>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 서버관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel,SearchPanel, LFloatArea, RFloatArea, RelativeGroup} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox, Grid} from 'components';\r\nimport {ComLib, StrLib, DataLib, newScrmObj, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.gridServerApi = null;\r\n\t\tthis.gridServer = null;\r\n\t\t\r\n\t\tthis.currentRowSvr = '';\r\n\t\tthis.state = {\r\n\t\t\t\r\n\r\n\t\t\tdsSel : DataLib.datalist.getInstance([{USE_FLAG:\"\"}]),\r\n\t\t\tdsServerList : DataLib.datalist.getInstance(),\r\n\t\t\t\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnSave : {\r\n\t\t\t\t\tid       : 'btnSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptServerNm : {\r\n\t\t\t\t\tid          : 'iptServerNm',\r\n\t\t\t\t\tname        : 'iptServerNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '서버호스트/IP',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 20,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgridServer : {\r\n\t\t\t\tid : 'gridServer',\r\n\t\t\t\tareaName : '서버목록',\r\n\t\t\t\theader :\r\n\t\t\t\t\t[\r\n\t\t\t\t\t\t{headerName: '서버호스트',\t\tfield: 'SVR_HST',\tcolId: 'SVR_HST', cellEditor: 'customEditor', maxLength: 30, type:'code',  editable: true, width :'100', req: true, },\r\n\t\t\t\t\t\t{headerName: '서버명',\t\tfield: 'SVR_CONT',\t\tcolId: 'SVR_CONT', cellEditor: 'customEditor',\teditable: true, width :'150', req: true, maxLength: 100, },\r\n\t\t\t\t\t\t{headerName: '서버IP',\t\tfield: 'SVR_IP',\t\tcolId: 'SVR_IP', cellEditor: 'customEditor',\teditable: true, width :'90', req: true, maxLength: 20, },\r\n\t\t\t\t\t\t{headerName: '사용여부',\t\tfield: 'USE_FLAG',\t\tcolId: 'USE_FLAG', editable: true, width :'60', req: true,defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{headerName: '리소스사용여부',\t\tfield: 'RESC_USE_FLAG',\t\tcolId: 'RESC_USE_FLAG', editable: true, width :'90', req: true,defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{headerName: '학습사용여부',\t\tfield: 'TRN_FLAG',\t\tcolId: 'TRN_FLAG', editable: true, width :'80', req: true,defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t// {headerName: '학습고유번호',\t\tfield: 'TRN_UNQ',\t\tcolId: 'TRN_UNQ', cellEditor: 'customEditor',\teditable: true, width :'90', req: true, maxLength: 20, },\r\n\t\t\t\t\t\t{headerName: '학습여부',\t\tfield: 'TRN_STATE',\t\tcolId: 'TRN_STATE', editable: false, width :'60', defaultValue : 'N',textAlign: 'center',\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'TRN_STATE')\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{headerName: '검색사전사용여부',\t\tfield: 'SCH_DIC_USE_FLAG',\t\tcolId: 'SCH_DIC_USE_FLAG', editable: true, width :'90', req: true,defaultValue : 'Y',textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')\t\t\t\t\t\t\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{headerName: '검색사전적용여부',\t\tfield: 'SCH_DIC_STATE',\t\tcolId: 'SCH_DIC_STATE', editable: false, width :'90', defaultValue : 'N',textAlign: 'center',\r\n\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'APY_FLAG')\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t],\r\n\t\t\t\t\t\r\n\t\t\t},\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t\tthis.event.input.onChange   = this.event.input.onChange.bind(this);\r\n\t\tthis.event.grid.onInsertRow = this.event.grid.onInsertRow.bind(this);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidMount () {\r\n\t\tif (this.validation(\"SUP060000_R01\")) this.transaction(\"SUP060000_R01\");\r\n\t}\r\n/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t//console.log(\"updated!!\");\r\n\t\t//console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'SUP060000_R01':\r\n\t\t\tbreak;\r\n\t\tcase 'SUP060000_H01':\r\n\t\t\tlet serverRecords = this.gridServer.gridDataset.records;\r\n\r\n\t\t\touter : for ( let intA = 0; intA < serverRecords.length; intA ++ ) {\r\n\t\t\t\tif (serverRecords[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tlet serverHeader = this.state.gridServer.header.filter(item => item['req'] === true); //filter\r\n\t\t\t\t\r\n\t\t\t\tfor (let i = 0; i < serverHeader.length; i ++) {\r\n\t\t\t\t\tif (StrLib.isNull(serverRecords[intA][serverHeader[i].field])) {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0001',[Number(intA + 1), serverHeader[i].headerName.replace(/\\*/g,'')]);//입력해주기시바랍니다\r\n\t\r\n\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( let intB = 0; intB < serverRecords.length; intB ++ ) {\r\n\t\t\t\t\tif (intA !== intB && serverRecords[intA].SVR_HST === serverRecords[intB].SVR_HST) {\r\n\t\t\t\t\t\t//중복되었습니다\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(intA + 1), Number(intB + 1), '서버호스트']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.gridServer.moveRow(intB, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (intA !== intB && serverRecords[intA].SVR_IP === serverRecords[intB].SVR_IP) {\r\n\t\t\t\t\t\t//중복되었습니다\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(intA + 1), Number(intB + 1), '서버 IP']);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.gridServer.moveRow(intB, true);\r\n\t\t\t\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tif (returnVal > -1) {\r\n\t\t\t\tthis.gridServer.moveRow(returnVal, true);\r\n\t\t\t\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif (serverRecords.length < 1 || chkCnt === 0) {\r\n\t\t\t\tComLib.openDialog('A', 'COME0005');//변경된 행이 없습니다\r\n\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t\t\r\n\tdefault: break;\r\n\t\t\r\n\t}\r\n\t\treturn true;\r\n}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'SUP060000_R01':\r\n\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getServerList\",\r\n\t\t\t\t\tdatasetsend: \"dsSearchParam\",\r\n\t\t\t\t\tdatasetrecv: \"dsServerListRecv\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsSearchParam', [{\r\n\t\t\t\t\t\"SVR_HST_NAME\": this.state.textFieldProps.iptServerNm.value,\r\n\t\t\t\t\t\"USE_FLAG\": this.state.dsSel.records[0][\"USE_FLAG\"]}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'SUP060000_H01':\r\n\t\t\t\ttransManager.setTransId (serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"SUP.H_handleServerList\",\r\n\t\t\t\t\tdatasetsend: \"dsServerList\",\r\n\t\t\t\t});\r\n\t\t\t\t\r\n\t\t\t\ttransManager.addDataset('dsServerList', this.gridServer.gridDataset.getTransRecords(newScrmObj.constants.rowtype.CREATE_OR_UPDATE));\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\tcatch (err) {\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP060000_R01':\r\n\t\t\tif(res.data.dsServerListRecv.length > 0) {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsServerList\", res.data.dsServerListRecv);\t\t\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tComLib.setStateRecords(this, \"dsServerList\", []);\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\tcase 'SUP060000_H01':\r\n\t\t\tComLib.openDialog('A', 'COMI0001', '서버 리스트');//정상적으로 저장되었습니다\r\n\t\t\tthis.transaction('SUP060000_R01');\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\t\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\": \r\n\t\t\t\t\t\tif(this.validation(\"SUP060000_R01\")) this.transaction(\"SUP060000_R01\");\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase \"btnSave\":\r\n\t\t\t\t\t\tif (this.validation(\"SUP060000_H01\")) this.transaction('SUP060000_H01');\t\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t},\r\n\r\n\t\tinput : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch(e.target.id) {\r\n\t\t\t\tcase 'iptServerNm':\r\n\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\tstate['textFieldProps']['iptServerNm'].value = e.target.value;\r\n\t\t\t\t\tthis.setState(state);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptServerNm':\r\n\t\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\t\tif (this.validation(\"SUP060000_R01\")) this.transaction(\"SUP060000_R01\");\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid : {\r\n\t\t\tonGridReady : (e) => {\r\n\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\tcase \"gridServer\":\r\n\t\t\t\t\tthis.gridServerApi = e.gridApi;\r\n\t\t\t\t\tthis.gridServer = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\r\n\t\r\n\t\t\t},\r\n\t\t\tonCellClicked: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonCellValueChanged: (e) => {\r\n\t\t\t\tif(e.col === \"SVR_HST\") {\r\n\t\t\t\t\tif(this.gridServer.gridDataset.records[e.index].rowtype !== newScrmObj.constants.crud.create) {\r\n\t\t\t\t\t\tComLib.openDialog('A', 'COME0013',['서버 호스트']);//변경할수없습니다\r\n\r\n\t\t\t\t\t\tthis.gridServer.gridDataset.setValue(e.index , e.col, e.oldValue);\r\n\t\t\t\t\t\tthis.gridServerApi.setRowData(this.gridServer.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonRowDoubleClicked: (e) => {\r\n\t\r\n\t\t\t},\r\n\t\t\tonCellEditingStopped: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonSelectionChanged: (e) => {\r\n\t\t\r\n\t\t\t},\r\n\t\t\tonRowSelected: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\r\n\t\t\t},\r\n\t\t\tonInsertRow : (e) => {\r\n\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tconsole.log(e.id);\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'useYn': \r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSel\", 0, \"USE_FLAG\", e.target.value);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault: break;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"서버호스트/코드명\"/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\twidth={200}\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.textFieldProps.iptServerNm.id}\r\n\t\t\t\t\t\t\t\t\t\tname =  {this.state.textFieldProps.iptServerNm.name}\r\n\t\t\t\t\t\t\t\t\t\tvalue =  {this.state.textFieldProps.iptServerNm.value}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder =  {this.state.textFieldProps.iptServerNm.placeholder}\r\n\t\t\t\t\t\t\t\t\t\tminLength =   {this.state.textFieldProps.iptServerNm.minLength}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength =   {this.state.textFieldProps.iptServerNm.maxLength}\r\n\t\t\t\t\t\t\t\t\t\treadOnly =  {this.state.textFieldProps.iptServerNm.readOnly}\r\n\t\t\t\t\t\t\t\t\t\tdisabled =  {this.state.textFieldProps.iptServerNm.disabled}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {this.event.input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid = {\"useYn\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.dsSel.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\twidth = {200}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button \t\t\t\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"blue\" fiiled=\"o\" innerImage={true} icon = {'srch'} mt=\"5px\"\t\t\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid = {this.state.gridServer.id}\r\n\t\t\t\t\t\t\t\theight= \"600px\"\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsServerList}\r\n\t\t\t\t\t\t\t\tareaName = {this.state.gridServer.areaName}\r\n\t\t\t\t\t\t\t\theader = {this.state.gridServer.header}\r\n\t\t\t\t\t\t\t\trowNum = {true}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tonGridReady = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellClicked = {this.event.grid.onCellClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked = {this.event.grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellValueChanged = {this.event.grid.onCellValueChanged}\r\n\t\t\t\t\t\t\t\tonRowDoubleClicked = {this.event.grid.onRowDoubleClicked}\r\n\t\t\t\t\t\t\t\tonCellEditingStopped = {this.event.grid.onCellEditingStopped}\r\n\t\t\t\t\t\t\t\tonSelectionChanged = {this.event.grid.onSelectionChanged}\r\n\t\t\t\t\t\t\t\tonRowSelected = {this.event.grid.onRowSelected}\r\n\t\t\t\t\t\t\t\tonDeleteRow = {this.event.grid.onDeleteRow}\r\n\t\t\t\t\t\t\t\tonInsertRow = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t<Button \t\t\r\n\t\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSave.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSave.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tcolor=\"purple\" fiiled=\"o\"  mt=\"5px\"\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</RelativeGroup>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 채널관리\r\nimport React from 'react';\r\nimport {ComponentPanel, FlexPanel, FullPanel, SubFullPanel, LFloatArea, RFloatArea, RelativeGroup, SearchPanel} from 'components'; //버튼 컴포넌트\r\nimport {BasicButton as Button, Label} from 'components';\r\nimport {Textfield, Selectbox} from 'components';\r\nimport {Grid} from 'components';\r\nimport {ComLib, DataLib, newScrmObj, TransManager, StrLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.currntChennel = null;\r\n\t\tthis.chennelGrid = null;\r\n\t\tthis.chennelGridApi = null;\r\n\t\tthis.state = {\r\n\t\t\tdsSrch: DataLib.datalist.getInstance([{SRH_STR: \"\", USE_FLAG: \"\",SRH_TP:\"1\"}]),\r\n\t\t\tdsChennelList : DataLib.datalist.getInstance(),\r\n\t\t\t\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnSave : {\r\n\t\t\t\t\tid       : 'btnSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnAdd : {\r\n\t\t\t\t\tid       : 'btnAdd',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '신규',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tcmbSrchUseYn : {\r\n\t\t\t\t\tid       : 'cmbSrchUseYn',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t},\t\t\t\t\r\n\t\t\t},\t\t\t\r\n\t\t\tgridProps : {\r\n\t\t\t\tid : 'grdCsList',\r\n\t\t\t\tareaName : '상당원 목록',\r\n\t\t\t\torgAreaName: '상당원 목록',\r\n\t\t\t\theader: [\r\n\t\t\t\t\t{headerName: '내선번호',\tfield: 'EXT_NUM',\t\tcolId: 'EXT_NUM',\t\teditable: true,\twidth: '100', req: true},\r\n\t\t\t\t\t{headerName: '채널번호',\tfield: 'CHNL_NUM',\t  colId: 'UNQ',\t\t    editable: true,\twidth: '100', textAlign: 'center', req: true},\t\t\t\t\t\r\n\t\t\t\t\t{headerName: 'IP'       ,\tfield: 'CONST_IP',\t\tcolId: 'CONST_IP',\t\teditable: true,\twidth: '100', req: true},\r\n\t\t\t\t\t{headerName: '사용여부',\t field: 'USE_FLAG',\t    colId: 'USE_FLAG',   \teditable: true, defaultValue : 'Y', width: 90, \r\n\t\t\t\t\t    req: true, resizable: false, textAlign: 'center', singleClickEdit: true,\r\n\t\t\t\t\t\tcellEditor: 'agSelectCellEditor',\r\n\t\t\t\t\t\tcellEditorParams: { values : ComLib.getComCodeValue('CMN', 'USE_FLAG')},\r\n\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'USE_FLAG')},\t\t\r\n\t\t\t\t\t{headerName: '등록/수정자',\tfield: 'REG_USR_ID',\tcolId: 'REG_USR_ID', \teditable: false,\twidth: '100', textAlign: 'center'},\r\n\t\t\t\t\t{headerName: '등록/수정 일시',\tfield: 'REG_DTM',\t colId: 'REG_DTM', \t    editable: false,\twidth: '100', textAlign: 'center'},\r\n\t\t\t\t],\t\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// 이벤트 바인딩\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t\tthis.event.selectbox.onChange = this.event.selectbox.onChange.bind(this);\r\n\t}\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// 1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t// => 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () { // 조회\r\n\t\tthis.setState({...this.state, allowed: ComLib.getComCodeCdVal(\"CMN_SET\",\"CHNL_CNT\",\"STT_SYS_CONST\")});\r\n\t\tif(this.validation(\"SUP080000_R01\")) this.transaction(\"SUP080000_R01\");\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (serviceid) => {\r\n\t\tlet chkCnt  = 0;\r\n\t\tlet returnVal = -1;\r\n\r\n\t\tswitch (serviceid) {\r\n\t\t\tcase 'SUP080000_R01' :\r\n\t\t\t\tbreak;\r\n\t\t\t\r\n\t\t\tcase 'SUP080000_C01' :\r\n\t\t\t\tlet chennelRecord = this.chennelGrid.gridDataset.records;\r\n\r\n\t\t\t\touter : for (let intA = 0; intA < chennelRecord.length; intA ++) {\r\n\t\t\t\t\tif (chennelRecord[intA].rowtype !== newScrmObj.constants.crud.read) {\r\n\t\t\t\t\t\tchkCnt ++;\r\n\t\t\t\t\t}\t\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet chennelHeader = this.state.gridProps.header;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < chennelHeader.length; i ++) {\t\t\r\n\t\t\t\t\t\tif (chennelHeader[i].req === true) {\r\n\t\t\t\t\t\t\tif (StrLib.isNull(chennelRecord[intA][chennelHeader[i].field])) {\r\n\t\t\t\t\t\t\t\tlet chennelRows = this.chennelGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\t\tlet chennelNum = 0;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < chennelRows.length; i ++) {\r\n\t\t\t\t\t\t\t\t\tif (chennelRows[i].data.TEMP === chennelRecord[intA].TEMP){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tchennelNum = i;\r\n\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0001', [Number(chennelNum + 1) , chennelHeader[i].headerName.replace(/\\*/g,'')]);\r\n\t\t\t\r\n\t\t\t\t\t\t\t\treturnVal = intA;\r\n\r\n\t\t\t\t\t\t\t\tbreak outer;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\r\n\r\n\t\t\t\t\tfor ( let intB = 0; intB < chennelRecord.length; intB ++ ) {\t\t\t\t\t\t\t\r\n\t\t\t\t\t\tif (intA !== intB) {\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tlet isDup = false;\r\n\t\t\t\t\t\t\tlet dupType = \"\"; \r\n\t\t\t\t\t\t\tif (chennelRecord[intA].USE_FLAG === \"Y\" && String(chennelRecord[intA].CONST_IP) === String(chennelRecord[intB].CONST_IP)) {\r\n\t\t\t\t\t\t\t\tisDup = true;\r\n\t\t\t\t\t\t\t\tdupType = \"IP\"; \r\n\t\r\n\t\t\t\t\t\t\t} else if (chennelRecord[intA].USE_FLAG === \"Y\" && String(chennelRecord[intA].EXT_NUM) === String(chennelRecord[intB].EXT_NUM)) {\r\n\t\t\t\t\t\t\t\tisDup = true;\r\n\t\t\t\t\t\t\t\tdupType = \"내선 번호\"; \r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif (isDup) {\r\n\t\t\t\t\t\t\t\tlet chennelRows = this.chennelGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\t\t\t\t\tlet chennelNum = 0;\r\n\t\r\n\t\t\t\t\t\t\t\tfor (let i = 0; i < chennelRows.length; i ++) {\r\n\t\t\t\t\t\t\t\t\tif (chennelRows[i].data.TEMP === chennelRecord[intA].TEMP){\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\tchennelNum = i;\r\n\t\t\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tComLib.openDialog('A', 'COME0012', [Number(chennelNum + 1), Number(intB + 1), dupType ]);\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tthis.chennelGrid.moveRow(intA, true);\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\t\t\r\n\t\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (returnVal > -1) {\r\n\t\t\t\t\tthis.chennelGrid.moveRow(returnVal, true);\r\n\t\t\t\t\t\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\r\n\t\t\t\tif (chennelRecord.length < 1 || chkCnt === 0) {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0005');\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\tlet state = this.state;\r\n\t\t\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\t\t\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\t\tcase 'SUP080000_R01' :\r\n\t\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t\tsqlmapid   : \"SUP.R_getChennelList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t\tdatasetrecv: \"dsChennelList\",\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// transManager.addConfig  ({\r\n\t\t\t\t\t// \tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t// \tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\t// \tsqlmapid   : \"SUP.R_getNewChennelList\",\r\n\t\t\t\t\t// \tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t// \tdatasetrecv: \"dsNewChennelList\",\r\n\t\t\t\t\t// });\r\n\t\t\t\t\t// {SRH_STR: \"\", USE_FLAG: \"\",SRH_TP:\"1\"}\r\n\t\r\n\t\t\t\t\tlet param = [{}];\r\n\t\t\t\t\tparam[0].USE_FLAG = state.dsSrch.records[0].USE_FLAG\r\n\t\t\t\t\tif (!StrLib.isNull(state.dsSrch.records[0].SRH_STR)) {\r\n\t\t\t\t\t\tif (state.dsSrch.records[0].SRH_TP === \"1\") {\r\n\t\t\t\t\t\t\tparam[0].EXT_NUM = state.dsSrch.records[0].SRH_STR\r\n\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tparam[0].CONST_IP = state.dsSrch.records[0].SRH_STR\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttransManager.addDataset('dsSend', param);\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SUP080000_C01' :\r\n\t\t\t\t\ttransManager.addConfig ({\r\n\t\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\t\tcrudh      : transManager.constants.crudh.create,\r\n\t\t\t\t\t\tsqlmapid   : \"SUP.C_setChennelList\",\r\n\t\t\t\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\ttransManager.addDataset('dsSend', this.chennelGrid.gridDataset.getTransRecords(newScrmObj.constants.rowtype.CREATE_OR_UPDATE));\r\n\t\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault :\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\r\n\t\tswitch (res.id) {\r\n\t\t\tcase 'SUP080000_R01':\r\n\t\t\t\tlet cnList = res.data.dsChennelList;\r\n\t\t\t\tif (cnList.length > 0) {\r\n\t\t\t\t\tlet cntUse = 0;\r\n\t\t\t\t\tfor (let i = 0; i < cnList.length; i ++) {\r\n\t\t\t\t\t\tif (cnList[i].USE_FLAG === 'Y'){\r\n\t\t\t\t\t\t\tcntUse += 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet cnt = 0;\r\n\t\t\t\t\tfor (let j = 0; j < cnList.length; j ++) {\r\n\t\t\t\t\t\tcnList[j].TEMP = cnt;\r\n\t\t\t\t\t\tcnt += 1;\r\n\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsChennelList\", cnList);\r\n\t\t\t\t\t\r\n\t\t\t\t\tlet chennelRow = this.chennelGridApi.rowModel.rowsToDisplay[0];\r\n\t\t\t\t\tthis.chennelGridApi.ensureIndexVisible(0, 'middle');\t\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (chennelRow.selected !== true) {\r\n\t\t\t\t\t\tchennelRow.setSelected(true);\r\n\t\t\t\t\t}\t\r\n\t\r\n\t\t\t\t\tthis.currntChennel = chennelRow.data.TEMP\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsChennelList\", []);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tbreak; \r\n\r\n\t\t\tcase 'SUP080000_C01':\r\n\t\t\t\tComLib.openDialog(\"A\", \"COMI0003\");\r\n\t\t\t\tthis.transaction(\"SUP080000_R01\");\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\r\n \r\n\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t// 조회\r\n\t\t\t\t\t\tif(this.validation(\"SUP080000_R01\")) this.transaction('SUP080000_R01');\r\n\t\t\t\t\t\tbreak;\t\t\t\t\t\r\n\t\t\t\t\tcase \"btnSave\" : \t// 저장\r\n\t\t\t\t\t\tif (this.validation(\"SUP080000_C01\")) {\r\n\t\t\t\t\t\t\tthis.transaction('SUP080000_C01')\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonGridReady : (e) => {\r\n\t\t\t\t//this.setState({grdMenuApi : e.gridApi, grdMenu : e.grid});\r\n\t\t\t\tswitch(e.id) {\r\n\t\t\t\t\tcase \"grdCsList\":\r\n\t\t\t\t\t\tthis.chennelGridApi = e.gridApi;\r\n\t\t\t\t\t\tthis.chennelGrid = e.grid;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonRowClicked: (e) => {\t\t\r\n\t\t\t\tlet constRows = this.chennelGridApi.rowModel.rowsToDisplay;\r\n\t\t\t\tlet constRow;\r\n\t\t\t\tthis.currntChennel = e.data.TEMP;\r\n\t\t\t\tfor (let i = 0; i < constRows.length; i ++) {\r\n\t\t\t\t\tif (constRows[i].data.TEMP === e.data.TEMP){\r\n\t\t\t\t\t\tconstRow = this.chennelGridApi.rowModel.rowsToDisplay[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tconstRow.setSelected(true);\r\n\t\t\t},\r\n\t\t\tonDeleteRow: (e) => {\r\n\t\t\t\tlet records    = this.chennelGrid.gridDataset.records;\r\n\t\t\t\tlet cnt = 0;\r\n\t\t\t\tfor (let i = 0; i < records.length; i ++) {\r\n\t\t\t\t\tif (records[i].USE_FLAG === 'Y'){\r\n\t\t\t\t\t\tcnt += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t},\r\n\t\t\tonBeforeInsertRow: (e) => {\r\n\t\t\t\tlet records = this.chennelGrid.gridDataset.records;\r\n\t\t\t\tlet rtn = true;\r\n\t\t\t\tlet cnt = 0;\r\n\t\t\t\tfor (let i = 0; i < records.length; i ++) {\r\n\t\t\t\t\tif (records[i].USE_FLAG === 'Y'){\r\n\t\t\t\t\t\tcnt += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlet allowed = this.state.allowed;\r\n\r\n\t\t\t\tif (cnt > allowed) {\r\n\t\t\t\t\trtn = false\r\n\t\t\t\t\tComLib.openDialog(\"A\", \"SUPI0701\",[allowed,cnt]);\r\n\t\t\t\t} \r\n\r\n\t\t\t\treturn {'rtn': rtn, 'index': records.length};\r\n\t\t\t},\r\n\t\t\tonInsertRow: (e) => {\t\r\n\t\t\t\tlet records    = this.chennelGrid.gridDataset.records;\t\t\t\t\r\n\t\t\t\tlet cnt = 0;\r\n\r\n\t\t\t\tfor (let i = 0; i < records.length; i ++) {\r\n\t\t\t\t\tif (records[i].USE_FLAG === 'Y'){\r\n\t\t\t\t\t\tcnt += 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t\tlet rowData    = this.chennelGrid.gridDataset.getRecords();\r\n\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\tthis.chennelGrid.gridDataset.setRecords(rowData);\r\n\r\n\t\t\t\tthis.chennelGridApi.setRowData(this.chennelGrid.gridDataset.getRecords().filter(item => item['rowtype'] !== newScrmObj.constants.crud.destroy));\r\n\t\t\t\t\r\n\t\t\t\tlet chennelRow = this.chennelGridApi.rowModel.rowsToDisplay[e.index];\r\n\t\t\t\t\r\n\t\t\t\tthis.chennelGridApi.ensureIndexVisible(e.index, 'middle');\r\n\r\n\t\t\t\tif (chennelRow.selected !== true) {\r\n\t\t\t\t\tchennelRow.setSelected(true);\r\n\t\t\t\t}\t\r\n\t\t\t\r\n\t\t\t\tthis.currntChennel = chennelRow.data.TEMP;\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'cmbSrchUseYn' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"USE_FLAG\", e.target.value);\r\n\r\n\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\t\r\n\t\t\t\tcase 'selSchTP' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRH_TP\", e.target.value);\r\n\r\n\t\t\t\t\tbreak;\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSchStr':\t\t\t\t\t\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRH_STR\", e.target.value);\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"채널구분\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {'selSchTP'}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSrch.records[0][\"SRH_TP\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList([{CODE:\"1\",CODE_NM:\"내선번호\"},{CODE:\"2\",CODE_NM:\"아이피\"}])}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {80}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\t\tid          = {\"iptSchStr\"}\r\n\t\t\t\t\t\t\t\t\t\tname        = {\"iptSchStr\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsSrch.records[0][\"SRH_STR\"]}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {\"\"}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {0}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용여부\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.selectboxProps.cmbSrchUseYn.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSrch.records[0][\"USE_FLAG\"]}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getCommCodeList('CMN', 'USE_FLAG'), newScrmObj.constants.select.argument.all)}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {this.state.selectboxProps.cmbSrchUseYn.width}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.selectboxProps.cmbSrchUseYn.disabled}\r\n\t\t\t\t\t\t\t\t\t\tselected = {this.state.selectboxProps.cmbSrchUseYn.selected}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tcolor= 'blue' fiiled= {true} innerImage={true} icon = {'srch'}\r\n\t\t\t\t\t\t\t\t\tid = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\t\tvalue = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\t\thidden = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\tmt = {5}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid      = {this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\tref     = {this.state.gridProps.id} \r\n\t\t\t\t\t\t\t\theader  = {this.state.gridProps.header}\r\n\t\t\t\t\t\t\t\tareaName= {this.state.gridProps.areaName}\r\n\t\t\t\t\t\t\t\theight  = \"610px\"\r\n\t\t\t\t\t\t\t\trowNum    = {true}\t\r\n\t\t\t\t\t\t\t\taddRowBtn = {true}\r\n\t\t\t\t\t\t\t\tdelRowBtn = {true}\r\n\r\n\t\t\t\t\t\t\t\tdata = {this.state.dsChennelList}\r\n\r\n\t\t\t\t\t\t\t\tonGridReady       = {this.event.grid.onGridReady}\r\n\t\t\t\t\t\t\t\tonRowClicked      = {this.event.grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonBeforeInsertRow = {this.event.grid.onBeforeInsertRow}\t\r\n\t\t\t\t\t\t\t\tonInsertRow       = {this.event.grid.onInsertRow}\r\n\t\t\t\t\t\t\t\tonDeleteRow       = {this.event.grid.onDeleteRow}\t\r\n\t\t\t\t\t\t\t\torgMenu = {this.props.tray.MNU_ID}\r\n\t\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor    =\"purple\"\r\n\t\t\t\t\t\t\t\t\t\tfiiled   = {true} \r\n\t\t\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSave.id}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSave.value}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSave.disabled}\r\n\t\t\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSave.hidden}\r\n\t\t\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tmt       = {5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</RFloatArea>\t\r\n\t\t\t\t\t\t\t</RelativeGroup>\t\t\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 시스템 로그\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FlexPanel, SearchPanel, LFloatArea, RFloatArea, RelativeGroup, Grid\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label, RangeInputCalendar} from 'components';\r\nimport {StrLib, DateLib, ComLib, DataLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsSnroList : DataLib.datalist.getInstance(),\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false\r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\t\t\tlastStartDate: \"\",\r\n\t\t\tlastEndDate  : \"\",\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdSysLog : {\r\n\t\t\t\t\tareaName : '시스템 로그',\r\n\t\t\t\t\theader: [\t\r\n\t\t\t\t\t\t\t\t{headerName: '프로그램명'       , field: 'PGM_NM',\t    colId: 'PGM_NM', width: 120},\r\n\t\t\t\t\t\t\t\t{headerName: '로그코드'        , field: 'ERR_CD',\t    colId: 'ERR_CD', width: 60},\t\r\n\t\t\t\t\t\t\t\t{headerName: '로그메시지'       , field: 'ERR_MSG',\t    colId: 'ERR_MSG', width: 250},\t\r\n\t\t\t\t\t\t\t\t{headerName: '등록일시'         , field: 'REG_DTM',\t    colId: 'REG_DTM', width: 100},\t\r\n\t\t\t\t\t\t\t\t{headerName: '실행 호스트'      , field: 'EXE_HST',\t    colId: 'EXE_HST', width: 100, textAlign: 'center'},\t\r\n\t\t\t\t\t\t\t\t{headerName: '실행 호스트 IP'   , field: 'EXE_HST_IP',\tcolId: 'EXE_HST_IP', width: 100, textAlign: 'center'},\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '600px',\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t},\r\n\t\t\t\t},\t\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tlabel : '기간',\r\n\t\t\t\tid : 'searchDateCalender',\r\n\t\t\t\tstrtId : 'searchDateCalenderStart',\r\n\t\t\t\tendId : 'searchDateCalenderEnd',\t\t\t\t\r\n\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\tfocusedInput : null,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"SUP080100_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\tvalidation = (...params) => {\r\n\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SUP080100_R01' :\r\n\t\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.startDate) || StrLib.isNull(this.state.rangeCalendarProps.endDate) )  {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.state.rangeCalendarProps.startDate > this.state.rangeCalendarProps.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색시작일자가 검색종료일보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SUP080100_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['grdProps']['grdSysLog']['paging'].start = 0;\r\n\t\t\t\tstate['grdProps']['grdSysLog']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SUP080100_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['grdProps']['grdSysLog']['paging'].start;\r\n\t\tlet pageLimit   = state['grdProps']['grdSysLog']['paging'].size;\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SUP080100_R01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getSysLogList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrch\",\r\n\t\t\t\t\tdatasetrecv: \"dsSysLogList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrch', \r\n\t\t\t\t\t[{ START_DATE  : this.state.rangeCalendarProps.startDate\r\n\t\t\t\t\t,  END_DATE    : this.state.rangeCalendarProps.endDate \r\n\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\t\t\r\n\r\n\t\t\tcase 'SUP080100_R02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getSysLogList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrch\",\r\n\t\t\t\t\tdatasetrecv: \"dsSysLogList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrch', \r\n\t\t\t\t\t[{ START_DATE  : this.state.lastStartDate\r\n\t\t\t\t\t,  END_DATE    : this.state.lastEndDate \r\n\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\t\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\tlet state = this.state;\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP080100_R01':\r\n\t\t\tif (res.data.dsSysLogList.length > 0) {\t\t\t\t\r\n\t\t\t\tthis.props.onLoadData({id: \"SYS\", data: res.data.dsSysLogList});\r\n\r\n\t\t\t\tstate.lastStartDate = state['rangeCalendarProps'].startDate;\r\n\t\t\t\tstate.lastEndDate   = state['rangeCalendarProps'].endDate;\r\n\r\n\t\t\t\tstate['grdProps']['grdSysLog']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\t\r\n\t\t\tbreak;\r\n\t\tcase 'SUP080100_R02':\r\n\t\t\tif (res.data.dsSysLogList.length > 0) {\t\t\t\t\r\n\t\t\t\tthis.props.onLoadData({id: \"SYS\", data: res.data.dsSysLogList});\r\n\r\n\t\t\t\tstate['grdProps']['grdSysLog']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t\t\r\n\t\t\t\t\t\tif (this.validation(\"SUP080100_R01\")) this.handler.setDs('SUP080100_R01');\t\r\n\t\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\tdefault : break;\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'searchDateCalender':\r\n\t\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].startDate = e.startDate;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].endDate   = e.endDate;\r\n\t\t\t\t\t\tthis.setState(state); \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\t\r\n\t\tgrid: {\t\t\r\n\t\t\tonScrollEnd: (e) => {\t\t\t\t\r\n\t\t\t\tif (!this.state.grdProps.grdSysLog.paging.loading) {\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['grdProps']['grdSysLog']['paging'].start = state['grdProps']['grdSysLog']['paging'].start + state['grdProps']['grdSysLog']['paging'].size;\r\n\t\t\t\t\tstate['grdProps']['grdSysLog']['paging'].page  = state['grdProps']['grdSysLog']['paging'].page + 1;\r\n\t\t\t\t\tstate['grdProps']['grdSysLog']['paging'].loading = true; \r\n\r\n\t\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SUP080100_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\t\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<Label value = {this.state.rangeCalendarProps.label} req={true} />\r\n\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.id}\r\n\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.strtId}\r\n\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tinnerImage= {true}\r\n\t\t\t\t\t\t\t\tmt        = {5}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcolor     = {'blue'} \r\n\t\t\t\t\t\t\t\ticon      = {'srch'}\r\n\t\t\t\t\t\t\t\tfiiled    = {'o'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t</SearchPanel>\t\r\n\t\t\t\t<ComponentPanel>\t\t\t\t\r\n\t\t\t\t\t<RelativeGroup>\t\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tid       = {this.state.grdProps.grdSysLog.id} \r\n\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdSysLog.areaName}\r\n\t\t\t\t\t\t\theader   = {this.state.grdProps.grdSysLog.header}\r\n\t\t\t\t\t\t\tdata     = {this.props.sysLogList}\r\n\t\t\t\t\t\t\theight   = {this.state.grdProps.grdSysLog.height}\r\n\r\n\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\trowNum    = {true}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging    = {true}\r\n\t\t\t\t\t\t\tinfinite  = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {(this.props.sysLogList.getRecords().length === 0) ? 0 : this.props.sysLogList.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\t\r\n\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t</RelativeGroup>\t\r\n\t\t\t\t</ComponentPanel>\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 사용자 로그\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FlexPanel, SearchPanel, LFloatArea, RFloatArea, RelativeGroup, Grid\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label, RangeInputCalendar, Selectbox, Textfield} from 'components';\r\nimport {StrLib, DateLib, ComLib, TransManager, DataLib} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsSrch: DataLib.datalist.getInstance([{SRH_STR: \"\", SRH_TP:\"ID\"}]),\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false\r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\t\t\tlastStartDate: \"\",\r\n\t\t\tlastEndDate  : \"\",\r\n\t\t\tlastSchStr   : \"\",\r\n\t\t\tlastSchTp    : \"\",\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdUserLog : {\r\n\t\t\t\t\tid : 'grdUserLog',\r\n\t\t\t\t\tareaName : '사용자 로그',\r\n\t\t\t\t\theader: [\t\r\n\t\t\t\t\t\t\t\t{headerName: '활동구분'     , field: 'ACT_TP',\t    colId: 'ACT_TP', width: 60, textAlign: 'center',\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'ACT_TP')},\t\r\n\t\t\t\t\t\t\t\t{headerName: '활동코드'     , field: 'ACT_CD',\t    colId: 'ACT_CD', width: 120, textAlign: 'center',\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('STT_USR_LOG', param.value, 'ACT_CD')},\t\r\n\t\t\t\t\t\t\t\t{headerName: '로그등록일시' , field: 'LOG_REG_DTM',\tcolId: 'LOG_REG_DTM', width: 120},\t\r\n\t\t\t\t\t\t\t\t{headerName: '센터'        , field: 'CENT_NM',\t    colId: 'CENT_NM', width: 100},\t\r\n\t\t\t\t\t\t\t\t{headerName: '팀'          , field: 'TEAM_NM',\t    colId: 'TEAM_NM', width: 100},\t\r\n\t\t\t\t\t\t\t\t{headerName: '사용자 ID'   , field: 'USR_ID',\t    colId: 'USR_ID', width: 100, textAlign: 'center'},\t\r\n\t\t\t\t\t\t\t\t{headerName: '사용자 명'   , field: 'USR_NM',\t    colId: 'USR_NM', width: 100, textAlign: 'center'},\t\r\n\t\t\t\t\t\t\t\t{headerName: '실행자'     , field: 'REG_USR_ID',\tcolId: 'REG_USR_ID', width: 100, textAlign: 'center'},\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '600px',\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t},\r\n\t\t\t\t},\t\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tlabel : '기간',\r\n\t\t\t\tid : 'searchDateCalender',\r\n\t\t\t\tstrtId : 'searchDateCalenderStart',\r\n\t\t\t\tendId : 'searchDateCalenderEnd',\t\t\t\t\r\n\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\tfocusedInput : null,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"SUP080200_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\tvalidation = (...params) => {\r\n\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SUP080200_R01' :\r\n\t\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.startDate) || StrLib.isNull(this.state.rangeCalendarProps.endDate) )  {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.state.rangeCalendarProps.startDate > this.state.rangeCalendarProps.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색시작일자가 검색종료일보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SUP080200_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['grdProps']['grdUserLog']['paging'].start = 0;\r\n\t\t\t\tstate['grdProps']['grdUserLog']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SUP080200_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['grdProps']['grdUserLog']['paging'].start;\r\n\t\tlet pageLimit   = state['grdProps']['grdUserLog']['paging'].size;\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SUP080200_R01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getUserLogList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrch\",\r\n\t\t\t\t\tdatasetrecv: \"dsUserLogList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrch', \r\n\t\t\t\t\t[{ START_DATE  : this.state.rangeCalendarProps.startDate\r\n\t\t\t\t\t,  END_DATE    : this.state.rangeCalendarProps.endDate \r\n\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t,  SRH_STR      : this.state.dsSrch.records[0].SRH_STR\r\n\t\t\t\t\t,  SRH_TP       : this.state.dsSrch.records[0].SRH_TP\r\n\t\t\t\t\t}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\t\t\r\n\r\n\t\t\tcase 'SUP080200_R02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getUserLogList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrch\",\r\n\t\t\t\t\tdatasetrecv: \"dsUserLogList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrch', \r\n\t\t\t\t\t[{ START_DATE  : this.state.lastStartDate\r\n\t\t\t\t\t,  END_DATE    : this.state.lastEndDate \r\n\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t,  SRH_STR      : this.state.lastSchStr\r\n\t\t\t\t\t,  SRH_TP       : this.state.lastSchTp\r\n\t\t\t\t\t}]);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\t\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\tlet state = this.state;\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP080200_R01':\r\n\t\t\tif (res.data.dsUserLogList.length > 0) {\t\t\t\t\r\n\t\t\t\tthis.props.onLoadData({id: \"USR\", data: res.data.dsUserLogList});\r\n\r\n\t\t\t\tstate.lastStartDate = state['rangeCalendarProps'].startDate;\r\n\t\t\t\tstate.lastEndDate   = state['rangeCalendarProps'].endDate;\r\n\t\t\t\tstate.lastSchTp     = state.dsSrch.records[0].SRH_TP\r\n\t\t\t\tstate.lastSchStr    = state.dsSrch.records[0].SRH_STR;\r\n\r\n\t\t\t\tstate['grdProps']['grdUserLog']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\t\r\n\t\t\tbreak;\r\n\t\tcase 'SUP080200_R02':\r\n\t\t\tif (res.data.dsUserLogList.length > 0) {\t\t\t\t\r\n\t\t\t\tthis.props.onLoadData({id: \"USR\", data: res.data.dsUserLogList});\r\n\r\n\t\t\t\tstate['grdProps']['grdUserLog']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t\t\r\n\t\t\t\t\t\tif (this.validation(\"SUP080200_R01\")) this.handler.setDs('SUP080200_R01');\t\r\n\t\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\tdefault : break;\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'searchDateCalender':\r\n\t\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].startDate = e.startDate;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].endDate   = e.endDate;\r\n\t\t\t\t\t\tthis.setState(state); \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\t\r\n\t\tgrid: {\t\r\n\t\t\tonScrollEnd: (e) => {\t\t\t\t\r\n\t\t\t\tif (!this.state.grdProps.grdUserLog.paging.loading) {\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['grdProps']['grdUserLog']['paging'].start = state['grdProps']['grdUserLog']['paging'].start + state['grdProps']['grdUserLog']['paging'].size;\r\n\t\t\t\t\tstate['grdProps']['grdUserLog']['paging'].page  = state['grdProps']['grdUserLog']['paging'].page + 1;\r\n\t\t\t\t\tstate['grdProps']['grdUserLog']['paging'].loading = true; \r\n\r\n\t\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SUP080200_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\t\t\t\t\t\r\n\t\t\t\tcase 'selUsrTP' :\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRH_TP\", e.target.value);\r\n\r\n\t\t\t\t\tbreak;\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\t\t\r\n\t\tinput : {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'iptSchStr':\t\t\t\t\t\r\n\t\t\t\t\tComLib.setStateValue(this, \"dsSrch\", 0, \"SRH_STR\", e.target.value);\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: break;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\t\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t<Label value = {this.state.rangeCalendarProps.label} req={true} />\r\n\t\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.id}\r\n\t\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.strtId}\r\n\t\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\tid       = {'selUsrTP'}\r\n\t\t\t\t\t\t\t\t\tvalue    = {this.state.dsSrch.records[0][\"SRH_TP\"]}\r\n\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList([{CODE:\"ID\",CODE_NM:\"아이디\"},{CODE:\"NM\",CODE_NM:\"이름\"}])}\r\n\t\t\t\t\t\t\t\t\twidth    = {80}\r\n\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\tonChange = {this.event.selectbox.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Textfield\r\n\t\t\t\t\t\t\t\t\twidth       = {300}\r\n\t\t\t\t\t\t\t\t\tid          = {\"iptSchStr\"}\r\n\t\t\t\t\t\t\t\t\tname        = {\"iptSchStr\"}\r\n\t\t\t\t\t\t\t\t\tvalue       = {this.state.dsSrch.records[0][\"SRH_STR\"]}\r\n\t\t\t\t\t\t\t\t\tplaceholder = {\"\"}\r\n\t\t\t\t\t\t\t\t\tminLength   = {0}\r\n\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\treadOnly    = {false}\r\n\t\t\t\t\t\t\t\t\tdisabled    = {false}\r\n\t\t\t\t\t\t\t\t\tonChange    = {this.event.input.onChange}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tinnerImage= {true}\r\n\t\t\t\t\t\t\t\tmt        = {5}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcolor     = {'blue'} \r\n\t\t\t\t\t\t\t\ticon      = {'srch'}\r\n\t\t\t\t\t\t\t\tfiiled    = {'o'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t</SearchPanel>\t\r\n\t\t\t\t<ComponentPanel>\t\t\t\t\r\n\t\t\t\t\t<RelativeGroup>\t\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tid       = {this.state.grdProps.grdUserLog.id} \r\n\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdUserLog.areaName}\r\n\t\t\t\t\t\t\theader   = {this.state.grdProps.grdUserLog.header}\r\n\t\t\t\t\t\t\tdata     = {this.props.userLogList}\r\n\t\t\t\t\t\t\theight   = {this.state.grdProps.grdUserLog.height}\r\n\r\n\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\trowNum    = {true}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging    = {true}\r\n\t\t\t\t\t\t\tinfinite  = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {(this.props.userLogList.getRecords().length === 0) ? 0 : this.props.userLogList.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\t\r\n\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t</RelativeGroup>\t\r\n\t\t\t\t</ComponentPanel>\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","// 시스템 로그\r\nimport React from 'react';\r\nimport {\r\n\tComponentPanel, FlexPanel, SearchPanel, LFloatArea, RFloatArea, RelativeGroup, Grid\r\n} from 'components';\r\n//버튼 컴포넌트\r\nimport {BasicButton as Button, Label, RangeInputCalendar} from 'components';\r\nimport {StrLib, DateLib, ComLib, TransManager} from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue : '조회',\r\n\t\t\t\t\thidden : false\r\n\t\t\t\t}\t\r\n\t\t\t},\r\n\t\t\tlastStartDate: \"\",\r\n\t\t\tlastEndDate  : \"\",\r\n\t\t\tgrdProps : {\r\n\t\t\t\tgrdTrainLog : {\r\n\t\t\t\t\tid : 'grdTrainLog',\r\n\t\t\t\t\tareaName : '시스템 로그',\r\n\t\t\t\t\theader: [\t\r\n\t\t\t\t\t\t\t\t{headerName: '학습고유번호', field: 'TRN_UNQ',\tcolId: 'TRN_UNQ', width: 100},\r\n\t\t\t\t\t\t\t\t{headerName: '학습제목'  , field: 'TRN_TIT',\tcolId: 'TRN_TIT', width: 150},\t\r\n\t\t\t\t\t\t\t\t{headerName: '사용자 ID' , field: 'TRN_STATE',\tcolId: 'TRN_STATE', width: 80, textAlign: 'center',\r\n\t\t\t\t\t\t\t\t\tvalueFormatter : (param) => ComLib.getComCodeName('CMN', param.value, 'TRN_STATE')},\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '학습일시'  , field: 'TRN_DTM',\t colId: 'TRN_DTM', width: 100},\t\r\n\t\t\t\t\t\t\t\t{headerName: '에러'      , field: 'ERR_CD',\t    colId: 'ERR_CD', width: 100, textAlign: 'center',\r\n\t\t\t\t\t\t\t\t\ttooltipComponent: 'customTooltip', tooltipField: \"ERR_CONT\" },\t\r\n\t\t\t\t\t\t\t\t{headerName: '서버 명'   , field: 'SVR_HST',\tcolId: 'SVR_HST', width: 100, textAlign: 'center'},\r\n\t\t\t\t\t\t\t\t{headerName: '서버 IP'   , field: 'SVR_IP',\t    colId: 'SVR_IP', width: 100, textAlign: 'center'},\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '등록일시'  , field: 'REG_DTM',\tcolId: 'REG_DTM', width: 100},\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '등록자'    , field: 'REG_USR_NM',\tcolId: 'REG_USR_NM', width: 80, textAlign: 'center'},\t\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '600px',\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\tpaging : {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tsize : Number(ComLib.getCentStndVl('00012','STND_VAL')),\r\n\t\t\t\t\t\tpage : 1,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t},\r\n\t\t\t\t},\t\r\n\t\t\t},\r\n\t\t\trangeCalendarProps : {\r\n\t\t\t\tlabel : '기간',\r\n\t\t\t\tid : 'searchDateCalender',\r\n\t\t\t\tstrtId : 'searchDateCalenderStart',\r\n\t\t\t\tendId : 'searchDateCalenderEnd',\t\t\t\t\r\n\t\t\t\tstartDate : DateLib.getAddMonth(DateLib.getToday(), -3),\r\n\t\t\t\tendDate : DateLib.getToday(),\r\n\t\t\t\tfocusedInput : null,\r\n\t\t\t},\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"SUP080300_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\t\r\n\tvalidation = (...params) => {\r\n\r\n\t\tlet transId = params[0];\r\n\r\n\t\tswitch (transId) {\r\n\t\t\tcase 'SUP080300_R01' :\r\n\t\t\t\tif(StrLib.isNull(this.state.rangeCalendarProps.startDate) || StrLib.isNull(this.state.rangeCalendarProps.endDate) )  {\r\n\t\t\t\t\tComLib.openDialog('A', 'COME0004', ['시작일자', '종료일자']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(this.state.rangeCalendarProps.startDate > this.state.rangeCalendarProps.endDate ) {\r\n\t\t\t\t\tComLib.openDialog('A', 'SYSI0010', ['검색시작일자가 검색종료일보다 클 수 없습니다.']);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\t\r\n\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault :\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\thandler = {\r\n\t\tsetDs : (transId) => {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase \"SUP080300_R01\" :\r\n\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].start = 0;\r\n\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].page = 1;\r\n\r\n\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\tthis.transaction('SUP080300_R01');\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\tlet state       = this.state;\t\r\n\t\t\r\n\t\tlet pageStart   = state['grdProps']['grdTrainLog']['paging'].start;\r\n\t\tlet pageLimit   = state['grdProps']['grdTrainLog']['paging'].size;\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'SUP080300_R01':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getTrainLogList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrch\",\r\n\t\t\t\t\tdatasetrecv: \"dsTrainLogList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrch', \r\n\t\t\t\t\t[{ START_DATE  : this.state.rangeCalendarProps.startDate\r\n\t\t\t\t\t,  END_DATE    : this.state.rangeCalendarProps.endDate \r\n\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\t\t\r\n\r\n\t\t\tcase 'SUP080300_R02':\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"SUP.R_getTrainLogList\",\r\n\t\t\t\t\tdatasetsend: \"dsSrch\",\r\n\t\t\t\t\tdatasetrecv: \"dsTrainLogList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsSrch', \r\n\t\t\t\t\t[{ START_DATE  : this.state.lastStartDate\r\n\t\t\t\t\t,  END_DATE    : this.state.lastEndDate \r\n\t\t\t\t\t,  QUERY_START : pageStart\r\n\t\t\t\t\t,  QUERY_LIMIT : pageLimit\r\n\t\t\t\t\t}]);\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\t\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\t\tlet state = this.state;\r\n\t\tswitch (res.id) {\r\n\t\tcase 'SUP080300_R01':\r\n\t\t\tif (res.data.dsTrainLogList.length > 0) {\t\t\t\t\r\n\t\t\t\tthis.props.onLoadData({id: \"TRAIN\", data: res.data.dsTrainLogList});\r\n\r\n\t\t\t\tstate.lastStartDate = state['rangeCalendarProps'].startDate;\r\n\t\t\t\tstate.lastEndDate   = state['rangeCalendarProps'].endDate;\r\n\r\n\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\t\r\n\t\t\tbreak;\r\n\t\tcase 'SUP080300_R02':\r\n\t\t\tif (res.data.dsTrainLogList.length > 0) {\t\t\t\t\r\n\t\t\t\tthis.props.onLoadData({id: \"TRAIN\", data: res.data.dsTrainLogList});\r\n\r\n\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].loading = false;\r\n\r\n\t\t\t\tthis.setState(state);\r\n\t\t\t}\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase \"btnSearch\" :\t\t\r\n\t\t\t\t\t\tif (this.validation(\"SUP080300_R01\")) this.handler.setDs('SUP080300_R01');\t\r\n\t\t\t\t\t\tbreak;\t\t\r\n\t\t\t\t\tdefault : break;\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputcalendar : {\r\n\t\t\tonChange : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'searchDateCalender':\r\n\t\t\t\t\t\tlet state = this.state;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].startDate = e.startDate;\r\n\t\t\t\t\t\tstate['rangeCalendarProps'].endDate   = e.endDate;\r\n\t\t\t\t\t\tthis.setState(state); \r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\t\r\n\t\tgrid: {\t\t\r\n\t\t\tonScrollEnd: (e) => {\t\t\t\t\r\n\t\t\t\tif (!this.state.grdProps.grdTrainLog.paging.loading) {\r\n\t\t\t\t\tlet state = this.state;\r\n\r\n\t\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].start = state['grdProps']['grdTrainLog']['paging'].start + state['grdProps']['grdTrainLog']['paging'].size;\r\n\t\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].page  = state['grdProps']['grdTrainLog']['paging'].page + 1;\r\n\t\t\t\t\tstate['grdProps']['grdTrainLog']['paging'].loading = true; \r\n\r\n\t\t\t\t\tthis.setState(state, () => {\r\n\t\t\t\t\t\tthis.transaction(\"SUP080300_R02\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\t\t\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t<Label value = {this.state.rangeCalendarProps.label} req={true} />\r\n\t\t\t\t\t\t\t<RangeInputCalendar\r\n\t\t\t\t\t\t\t\tid        = {this.state.rangeCalendarProps.id}\r\n\t\t\t\t\t\t\t\tstartDate = {this.state.rangeCalendarProps.startDate}\r\n\t\t\t\t\t\t\t\tendDate   = {this.state.rangeCalendarProps.endDate}\r\n\t\t\t\t\t\t\t\tonChange  = {this.event.inputcalendar.onChange}\r\n\t\t\t\t\t\t\t\tstrtId    = {this.state.rangeCalendarProps.strtId}\r\n\t\t\t\t\t\t\t\tendId     = {this.state.rangeCalendarProps.endId}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t<Button \r\n\t\t\t\t\t\t\t\tid       = {this.state.btnProps.btnSearch.id}\r\n\t\t\t\t\t\t\t\tvalue    = {this.state.btnProps.btnSearch.value}\r\n\t\t\t\t\t\t\t\tdisabled = {this.state.btnProps.btnSearch.disabled}\r\n\t\t\t\t\t\t\t\thidden   = {this.state.btnProps.btnSearch.hidden}\r\n\t\t\t\t\t\t\t\tonClick  = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tinnerImage= {true}\r\n\t\t\t\t\t\t\t\tmt        = {5}\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tcolor     = {'blue'} \r\n\t\t\t\t\t\t\t\ticon      = {'srch'}\r\n\t\t\t\t\t\t\t\tfiiled    = {'o'}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t</SearchPanel>\t\r\n\t\t\t\t<ComponentPanel>\t\t\t\t\r\n\t\t\t\t\t<RelativeGroup>\t\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tid       = {this.state.grdProps.grdTrainLog.id} \r\n\t\t\t\t\t\t\tareaName = {this.state.grdProps.grdTrainLog.areaName}\r\n\t\t\t\t\t\t\theader   = {this.state.grdProps.grdTrainLog.header}\r\n\t\t\t\t\t\t\tdata     = {this.props.trainLogList}\r\n\t\t\t\t\t\t\theight   = {this.state.grdProps.grdTrainLog.height}\r\n\r\n\t\t\t\t\t\t\taddRowBtn = {false}\r\n\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\t\t\t\t\t\t\trowNum    = {true}\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tpaging    = {true}\r\n\t\t\t\t\t\t\tinfinite  = {true}\r\n\r\n\t\t\t\t\t\t\ttotalRowCnt = {(this.props.trainLogList.getRecords().length === 0) ? 0 : this.props.trainLogList.getValue(0, 'totalcount')}\r\n\r\n\t\t\t\t\t\t\tonScrollEnd = {this.event.grid.onScrollEnd}\t\r\n\t\t\t\t\t\t/>\t\r\n\t\t\t\t\t</RelativeGroup>\t\r\n\t\t\t\t</ComponentPanel>\t\t\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default View;","import COM010000 from 'containers/com/COM010000';\r\n\r\nimport STA010000 from 'containers/sta/STA010000';\r\nimport STA030000 from 'containers/sta/STA030000';\r\n\r\nimport STT010000 from 'containers/stt/STT010000';\r\nimport STT020000 from 'containers/stt/STT020000';\r\nimport STT030000 from 'containers/stt/STT030000';\r\nimport STT040000 from 'containers/stt/STT040000';\r\nimport STT050000 from 'containers/stt/STT050000';\r\nimport STT060000 from 'containers/stt/STT060000';\r\nimport STT070000 from 'containers/stt/STT070000';\r\n\r\nimport SYS010000 from 'containers/sys/SYS010000';\r\nimport SYS020000 from 'containers/sys/SYS020000';\r\nimport SYS030000 from 'containers/sys/SYS030000';\r\nimport SYS040000 from 'containers/sys/SYS040000';\r\nimport SYS050000 from 'containers/sys/SYS050000';\r\nimport SYS060000 from 'containers/sys/SYS060000';\r\n\r\n\r\nimport SUP010000 from 'containers/sup/SUP010000';\r\nimport SUP020000 from 'containers/sup/SUP020000';\r\nimport SUP030000 from 'containers/sup/SUP030000';\r\nimport SUP040000 from 'containers/sup/SUP040000';\r\nimport SUP050000 from 'containers/sup/SUP050000';\r\nimport SUP060000 from 'containers/sup/SUP060000';\r\nimport SUP070000 from 'containers/sup/SUP070000';\r\nimport SUP080000 from 'containers/sup/SUP080000';\r\n\r\nimport BOT010000 from 'containers/bot/BOT010000';\r\n\r\nimport SAM010000 from 'containers/sam/SAM010000';\r\n\r\nexport const appRoute = [\r\n\t{ id: 'COM010000',\tpath: \"/com/COM010000\",\t\texact: true,\tcomponent: COM010000 },\r\n\r\n\t{ id: 'STA010000',\tpath: \"/sta/STA010000\",\t\texact: true,\tcomponent: STA010000 },\t\r\n\t{ id: 'STA030000',\tpath: \"/sta/STA030000\",\t\texact: true,\tcomponent: STA030000 },\r\n\t\r\n\t{ id: 'STT010000',\tpath: \"/stt/STT010000\",\t\texact: true,\tcomponent: STT010000 },\r\n\t{ id: 'STT020000',\tpath: \"/stt/STT020000\",\t\texact: true,\tcomponent: STT020000 },\r\n\t{ id: 'STT030000',\tpath: \"/stt/STT030000\",\t\texact: true,\tcomponent: STT030000 },\r\n\t{ id: 'STT040000',\tpath: \"/stt/STT040000\",\t\texact: true,\tcomponent: STT040000 },\r\n\t{ id: 'STT050000',\tpath: \"/stt/STT050000\",\t\texact: true,\tcomponent: STT050000 },\r\n\t{ id: 'STT060000',\tpath: \"/stt/STT060000\",\t\texact: true,\tcomponent: STT060000 },\r\n\t{ id: 'STT070000',\tpath: \"/stt/STT070000\",\t\texact: true,\tcomponent: STT070000 },\r\n\r\n\r\n\t{ id: 'SYS010000',\tpath: \"/sys/SYS010000\",\t\texact: true,\tcomponent: SYS010000 },\r\n\t{ id: 'SYS020000',\tpath: \"/sys/SYS020000\",\t\texact: true,\tcomponent: SYS020000 },\r\n\t{ id: 'SYS030000',\tpath: \"/sys/SYS030000\",\t\texact: true,\tcomponent: SYS030000 },\r\n\t{ id: 'SYS040000',\tpath: \"/sys/SYS040000\",\t\texact: true,\tcomponent: SYS040000 },\r\n\t{ id: 'SYS050000',\tpath: \"/sys/SYS050000\",\t\texact: true,\tcomponent: SYS050000 },\r\n\t{ id: 'SYS060000',\tpath: \"/sys/SYS060000\",\t\texact: true,\tcomponent: SYS060000 },\r\n\t\r\n\t{ id: 'SUP010000',\tpath: \"/sup/SUP010000\",\t\texact: true,\tcomponent: SUP010000 },\r\n\t{ id: 'SUP020000',\tpath: \"/sup/SUP020000\",\t\texact: true,\tcomponent: SUP020000 },\r\n\t{ id: 'SUP030000',\tpath: \"/sup/SUP030000\",\t\texact: true,\tcomponent: SUP030000 },\r\n\t{ id: 'SUP040000',\tpath: \"/sup/SUP040000\",\t\texact: true,\tcomponent: SUP040000 },\r\n\t{ id: 'SUP050000',\tpath: \"/sup/SUP050000\",\t\texact: true,\tcomponent: SUP050000 },\r\n\t{ id: 'SUP060000',\tpath: \"/sup/SUP060000\",\t\texact: true,\tcomponent: SUP060000 },\r\n\t{ id: 'SUP070000',\tpath: \"/sup/SUP070000\",\t\texact: true,\tcomponent: SUP070000 },\r\n\t{ id: 'SUP080000',\tpath: \"/sup/SUP080000\",\t\texact: true,\tcomponent: SUP080000 },\r\n\r\n\t{ id: 'BOT010000',\tpath: \"/bot/BOT010000\",\texact: true,\tcomponent: BOT010000 },\r\n\t\r\n\t{ id: 'SAM010000',\tpath: \"/sam/SAM010000\",\texact: true,\tcomponent: SAM010000 },\r\n\r\n];","// 로그 관리\r\nimport React from 'react';\r\nimport { FullPanel\r\n\t   , SubFullPanel\r\n\t   , RelativeGroup\r\n\t   , TabPanel\r\n\t   , Tabs } from 'components';\t   \r\nimport { ComLib\r\n\t   , DataLib            } from 'common';\r\nimport SUP080100 from '../SUP080100';\r\nimport SUP080200 from '../SUP080200';\r\nimport SUP080300 from '../SUP080300';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tdsSysLogList   : DataLib.datalist.getInstance(),\r\n\t\t\tdsUserLogList  : DataLib.datalist.getInstance(),\r\n\t\t\tdsTrainLogList : DataLib.datalist.getInstance(),\t\r\n\t\t}\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\ttab : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t},\r\n\t\t\tonLoadData : (e) => {\r\n\t\t\t\tconsole.log(e);\r\n\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase 'SYS':\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsSysLogList\", e.data);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'USR':\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsUserLogList\", e.data);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'TRAIN':\r\n\t\t\t\t\tComLib.setStateInitRecords(this, \"dsTrainLogList\", e.data);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\t\t\t\t\r\n\t\t\t\t\t<SubFullPanel>\t\r\n\t\t\t\t\t\t\t<RelativeGroup>\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<Tabs tabWidth='100px' onClick = {this.event.tab.onClick}>\r\n\t\t\t\t\t\t\t\t\t<TabPanel id = {'SUP080100'} index={0} label={'시스템 로그'}>\r\n\t\t\t\t\t\t\t\t\t\t<SUP080100\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tsysLogList = {this.state.dsSysLogList}\r\n\t\t\t\t\t\t\t\t\t\t\tonLoadData = {this.event.tab.onLoadData}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t\t\t<TabPanel id = {'SUP080200'} index={1} label={'사용자 로그'}>\r\n\t\t\t\t\t\t\t\t\t\t<SUP080200\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\tuserLogList = {this.state.dsUserLogList}\r\n\t\t\t\t\t\t\t\t\t\t\tonLoadData  = {this.event.tab.onLoadData}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TabPanel>\r\n\t\t\t\t\t\t\t\t\t<TabPanel id = {'SUP080300'} index={2} label={'학습 로그'}>\r\n\t\t\t\t\t\t\t\t\t\t<SUP080300\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\ttrainLogList = {this.state.dsTrainLogList}\r\n\t\t\t\t\t\t\t\t\t\t\tonLoadData   = {this.event.tab.onLoadData}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</TabPanel>\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</Tabs>\t\r\n\t\t\t\t\t\t\t</RelativeGroup>\t\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 콜봇 시나리오 관리\r\nimport React from 'react';\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , RelativeGroup\r\n\t   , SearchPanel\r\n\t   , LFloatArea\r\n\t   , Grid \r\n\t   , Diagram            } from 'components';\r\nimport {BasicButton as Button} from 'components';\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , StrLib\r\n\t   , TransManager\r\n\t   , newScrmObj            } from 'common';\r\n\r\nclass View extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.saveNode = null;\r\n\t\tthis.saveLink = null;\r\n\r\n\t\tthis.state = {\r\n\t\t\tdsSnroInitTTSList: DataLib.datalist.getInstance(),\r\n\t\t\tdsSnroNodeList   : DataLib.datalist.getInstance(),\r\n\t\t\tdsSnroLinkList   : DataLib.datalist.getInstance(),\r\n\t\t\t\r\n\t\t\tdsSnroNode: [],\r\n\t\t\tdsSnroLink: [],\r\n\r\n\t\t\tdsSnroList : [],\r\n\t\t\tactionData : [],\r\n\t\t\tbtnProps : {\r\n\t\t\t\tbtnSearch : {\r\n\t\t\t\t\tid       : 'btnSearch',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '조회',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t\tbtnBigSave : {\r\n\t\t\t\t\tid       : 'btnBigSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\r\n\t\t\t\tbtnSmlSave : {\r\n\t\t\t\t\tid       : 'btnSmlSave',\r\n\t\t\t\t\tdisabled : false,\r\n\t\t\t\t\tvalue    : '저장',\r\n\t\t\t\t\thidden   : false\r\n\t\t\t\t},\r\n\t\t\t},\t\r\n\t\t\t\r\n\t\t\tgrdProps : {\t\t\r\n\t\t\t\tgrdSnroInitProcess : {\r\n\t\t\t\t\tid : 'grdSnroInitProcess',\r\n\t\t\t\t\tareaName : '시나리오 프로세스',\r\n\t\t\t\t\theader: [\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t{headerName: '코드',field: 'SNRO_CD',\t       colId: 'SNRO_CD',\t\teditable: false, width: 80 },\r\n\t\t\t\t\t\t\t\t{headerName: '타입',field: 'PROCESS_TP_NM',    colId: 'PROCESS_TP_NM',\teditable: false, width: 100},\r\n\t\t\t\t\t\t\t\t{headerName: '시나리오 명',\tfield: 'SNRO_EXPL',\tcolId: 'SNRO_EXPL',\t    editable: false, width: 300 },\r\n\t\t\t\t\t\t\t\t{headerName: '프로세스', field: 'PROCESS'   ,\tcolId: 'PROCESS'   ,\teditable: true, width: 90,\r\n\t\t\t\t\t\t\t\t\tcellRenderer: 'actionButton', \r\n\t\t\t\t\t\t\t\t\tfiiled: true,\r\n\t\t\t\t\t\t\t\t\tcolor: 'blue'},\r\n\t\t\t\t\t\t\t],\r\n\t\t\t\t\theight: '670px'\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\tselectboxProps : {\r\n\t\t\t\tselUseYn : {\r\n\t\t\t\t\tid       : 'selUseYn',\r\n\t\t\t\t\tvalue    : '',\r\n\t\t\t\t\tdataset  : ComLib.convComboList(ComLib.getCommCodeList(\"USE_FLAG\"), newScrmObj.constants.select.argument.all),\r\n\t\t\t\t\twidth    : 80,\r\n\t\t\t\t\tselected : 0,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t},\t\t\t\r\n\t\t\ttextFieldProps : {\r\n\t\t\t\tiptBigCdNm : {\r\n\t\t\t\t\tid          : 'iptBigCdNm',\r\n\t\t\t\t\tname        : 'iptBigCdNm',\r\n\t\t\t\t\tvalue       : '',\r\n\t\t\t\t\tplaceholder : '대분류코드/코드명',\r\n\t\t\t\t\tminLength   : 1,\r\n\t\t\t\t\tmaxLength   : 12,\r\n\t\t\t\t\treadOnly    : false,\r\n\t\t\t\t\tdisabled    : false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t0) Custom Event Zone \r\n\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t1) componentDidMount () => init 함수 개념으로 이해하는게 빠름\r\n\t\t=> 컴포넌트가 마운트된 직후, 호출 ->  해당 함수에서 this.setState를 수행할 시, 갱신이 두번 일어나 render()함수가 두번 발생 -> 성능 저하 가능성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () {\r\n\t\tthis.transaction(\"BOT010000_R00\")\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t2) componentDidUpdate () => 갱신이 일어나 직후에 호춮 (최초 렌더링 시에는 호출되지 않음)\r\n\t\t=> prevProps와 현재 props를 비교할 수 있음 -> 조건문으로 감싸지 않고 setState를 실행할 시, 무한 반복 가능성 -> 반드시 setState를 쓰려면 조건문으로 작성\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidUpdate (prevProps, prevState, snapshot) {\r\n\t\t// console.log(\"updated!!\");\r\n\t\t// console.log(this.state.dsGrp);\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*\r\n\t\t3) componentWillUnmount () => 컴포넌트가 마운트 해제되어 제거되기 직전에 호출\r\n\t\t=> 타이머 제거, 네트워크 요청 취소 등 수행 -> 마운트가 해제되기 때문에 setState를 호출하면 안됨\r\n\t ------------------------------------------------------------------------------------------------*/\r\n\t componentWillUnmount () {\r\n\r\n\t}\r\n\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [3. validation Event Zone]\r\n\t//  - validation 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tvalidation = (...params) => {\r\n\t\tlet transId = params[0];\r\n\t\tswitch (transId) {\r\n\t\tcase 'BOT010000_R01':\r\n\r\n\t\t\tbreak;\r\n\t\tcase 'BOT010000_H01':\r\n\r\n\t\t\tlet orgNode = this.state.dsSnroNodeList.records;\r\n\t\t\tlet saveNode = [];\r\n\r\n\t\t\tfor (let i = 0; i < orgNode.length; i ++) {\r\n\t\t\t\tlet isExist = false;\r\n\t\t\t\tfor (let j = 0; j < params[1].length; j ++) {\r\n\t\t\t\t\tif (params[1][j].ND_UUID === orgNode[i].ND_UUID) {\r\n\t\t\t\t\t\tisExist = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!isExist) {\r\n\t\t\t\t\tsaveNode.push({EXTRAS    : {}\r\n\t\t\t\t\t\t\t\t , ND_COLOR  : orgNode[i].ND_COLOR\r\n\t\t\t\t\t\t\t\t , ND_KWD_SCO: orgNode[i].ND_KWD_SCO\r\n\t\t\t\t\t\t\t\t , ND_NM     : orgNode[i].ND_NM\r\n\t\t\t\t\t\t\t\t , ND_PORTS  : orgNode[i].ND_PORTS\r\n\t\t\t\t\t\t\t\t , ND_TP     : orgNode[i].ND_TP\r\n\t\t\t\t\t\t\t\t , ND_TTS_ID : orgNode[i].ND_TTS_ID\r\n\t\t\t\t\t\t\t\t , ND_UUID   : orgNode[i].ND_UUID\r\n\t\t\t\t\t\t\t\t , ND_X      : orgNode[i].ND_X\r\n\t\t\t\t\t\t\t\t , ND_Y      : orgNode[i].ND_Y\r\n\t\t\t\t\t\t\t\t , rowtype   : \"d\"})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (let j = 0; j < params[1].length; j ++) {\r\n\t\t\t\tsaveNode.push(params[1][j])\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tlet orgLink = this.state.dsSnroLinkList.records;\r\n\t\t\tlet saveLink = [];\r\n\r\n\t\t\tfor (let i = 0; i < orgLink.length; i ++) {\r\n\t\t\t\tlet isExist = false;\r\n\t\t\t\tfor (let j = 0; j < params[2].length; j ++) {\r\n\t\t\t\t\tif (params[2][j].LK_UUID === orgLink[i].LK_UUID) {\r\n\t\t\t\t\t\tisExist = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n  \r\n\r\n\t\t\t\tif (!isExist) {\r\n\t\t\t\t\tsaveLink.push({LK_EN_ND     : orgLink[i].LK_EN_ND\r\n\t\t\t\t\t\t         , LK_EN_ND_PORT: orgLink[i].LK_EN_ND_PORT\r\n\t\t\t\t\t\t         , LK_POINT     : orgLink[i].LK_POINT\r\n\t\t\t\t\t\t         , LK_ST_ND     : orgLink[i].LK_ST_ND\r\n\t\t\t\t\t\t         , LK_ST_ND_PORT: orgLink[i].LK_ST_ND_PORT\r\n\t\t\t\t\t\t         , LK_TP        : orgLink[i].LK_TP\r\n\t\t\t\t\t\t         , LK_UUID      : orgLink[i].LK_UUID\r\n\t\t\t\t\t\t\t\t , rowtype      : \"d\"})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let j = 0; j < params[2].length; j ++) {\r\n\t\t\t\tif (params[2][j].rowtype !== \"r\") {\r\n\t\t\t\t\tsaveLink.push(params[2][j])\r\n\t\t\t\t} else {\t\t\t\t\t\r\n\t\t\t\t\tfor (let i = 0; i < orgLink.length; i ++) {\r\n\t\t\t\t\t\tif (orgLink[i].LK_UUID === params[2][j].LK_UUID) {\r\n\t\t\t\t\t\t\tsaveLink.push({LK_EN_ND     : params[2][j].LK_EN_ND\r\n\t\t\t\t\t\t\t\t\t\t , LK_EN_ND_PORT: params[2][j].LK_EN_ND_PORT\r\n\t\t\t\t\t\t\t\t\t\t , LK_POINT     : params[2][j].LK_POINT\r\n\t\t\t\t\t\t\t\t\t\t , LK_ST_ND     : params[2][j].LK_ST_ND\r\n\t\t\t\t\t\t\t\t\t\t , LK_ST_ND_PORT: params[2][j].LK_ST_ND_PORT\r\n\t\t\t\t\t\t\t\t\t\t , LK_TP        : params[2][j].LK_TP\r\n\t\t\t\t\t\t\t\t\t\t , LK_UUID      : params[2][j].LK_UUID\r\n\t\t\t\t\t\t\t\t\t\t , rowtype      : params[2][j].LK_POINT === orgLink[i].LK_POINT ? 'r' : 'u'})\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\t\t\t\t\r\n\t\t\t}\r\n\r\n\t\t\tthis.saveNode = saveNode;\r\n\t\t\tthis.saveLink = saveLink;\r\n\r\n\t\t\t\r\n\t\t\t// console.log(orgNode)\r\n\t\t\t// console.log(orgLink)\r\n\r\n\t\t\t// console.log(this.saveNode)\r\n\t\t\t// console.log(this.saveLink)\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (...params) => {\r\n\t\tlet transId = params[0];\r\n\r\n\t\tlet transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (transId);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttry  {\r\n\t\t\tswitch (transId) {\r\n\t\t\tcase 'BOT010000_R00':\r\n\t\t\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"BOT.R_getSnroTTS\",\r\n\t\t\t\t\tdatasetsend: \"dsEmpty\",\r\n\t\t\t\t\tdatasetrecv: \"dsSnroInitTTSListRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsEmpty', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\t\t\t\r\n\t\t\tcase 'BOT010000_R01':\r\n\r\n\t\t\t\t// transManager.setTransId(\"test\");\r\n\t\t\t\t// transManager.setTransUrl(transManager.constants.url.sftp);\r\n\t\t\t\t// transManager.setCallBack(this.callback);\r\n\t\t\t\t// transManager.addConfig({\r\n\t\t\t\t// \tdao: transManager.constants.dao.base,\r\n\t\t\t\t// \tcrudh: transManager.constants.crudh.sttSearch,\r\n\t\t\t\t// \tdatasetsend: \"test\",\r\n\t\t\t\t// });\r\n\t\t\t\t\t\r\n\t\t\t\t// transManager.addDataset('test', [{path:\"test/eere/eer\", svrIp: \"1.1.1.1\"}]);\r\n\t\t\t\t// transManager.agent();\r\n\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"BOT.R_getSnroNode\",\r\n\t\t\t\t\tdatasetsend: \"dsEmpty\",\r\n\t\t\t\t\tdatasetrecv: \"dsSnroNodeListRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\t\t\tsqlmapid   : \"BOT.R_getSnroLink\",\r\n\t\t\t\t\tdatasetsend: \"dsEmpty\",\r\n\t\t\t\t\tdatasetrecv: \"dsSnroLinkListRecv\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsEmpty', [{}]);\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak\r\n\t\t\tcase 'BOT010000_H01':\r\n\r\n\t\t\t\t// 노드 지울떄 노드에 걸린 키워드들도 같이 지우는 기능 추가 필요\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"BOT.H_handleSnroLink\",\r\n\t\t\t\t\tdatasetsend: \"dsLinkList\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.handle,\r\n\t\t\t\t\tsqlmapid   : \"BOT.H_handleSnroNode\",\r\n\t\t\t\t\tdatasetsend: \"dsNodeList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\tlet dsDelNodeList = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < this.saveNode.length; i ++) {\r\n\t\t\t\t\tif (this.saveNode[i].rowtype === \"d\") {\r\n\t\t\t\t\t\tdsDelNodeList.push(this.saveNode[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttransManager.addConfig  ({\r\n\t\t\t\t\tdao        : transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh      : transManager.constants.crudh.destroy,\r\n\t\t\t\t\tsqlmapid   : \"BOT.D_delSnroKeyword\",\r\n\t\t\t\t\tdatasetsend: \"dsDelNodeList\"\r\n\t\t\t\t});\r\n\r\n\t\t\t\ttransManager.addDataset('dsLinkList', this.saveLink);\r\n\t\t\t\ttransManager.addDataset('dsDelNodeList', dsDelNodeList);\r\n\t\t\t\ttransManager.addDataset('dsNodeList', this.saveNode);\r\n\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t// BOT010000_R01 : 대분류 코드 조회\r\n\t// BOT010000_R02 : 소분류 코드 조회\r\n\t// BOT010000_H01 : 대분류 코드 저장\r\n\t// BOT010000_H02 : 소분류 코드 저장\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\r\n\r\n\t\tswitch (res.id) {\r\n\t\tcase 'BOT010000_R00':\r\n\t\t\tif (res.data.dsSnroInitTTSListRecv.length > 0) {\r\n\t\t\t\tlet dsSnroInitTTSListRecv = res.data.dsSnroInitTTSListRecv;\r\n\r\n\t\t\t\tlet addSelect = [];\r\n\r\n\t\t\t\taddSelect.push({CODE: \"0\", CD_VAL: \"TTS를 선택해 주세요\", CODE_NM: \"선택\", recid: 0, rowtype: \"r\", CODE_TP: 'N'});\r\n\t\t\t\tfor (let i = 0; i < dsSnroInitTTSListRecv.length; i ++) {\r\n\t\t\t\t\taddSelect.push(dsSnroInitTTSListRecv[i]);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroInitTTSList\", addSelect);\r\n\t\t\t\t\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroInitTTSList\", []);\r\n\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t\t\t\r\n\t\tcase 'BOT010000_R01':\t\r\n\t\t\tif (res.data.dsSnroNodeListRecv.length > 0) {\r\n\t\t\t\tlet { dsSnroNodeListRecv, dsSnroLinkListRecv } = res.data;\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroNodeList\", dsSnroNodeListRecv);\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroLinkList\", dsSnroLinkListRecv);\r\n\t\t\t\t\r\n\r\n\t\t\t\t// react diagram npm 자체 오류로 2번 로딩 해줘야함 \r\n\t\t\t\t// 한번만 로딩시 링크 생성 안됨 추후 수정 요망\r\n\t\t\t\t// 노드와 링크를 따로 props 로 던져 줘서 componet 내부에서 2번 랜더링을 하는 방법을 시도 해 봐야 겟음\r\n\t\t\t\tthis.setState({...this.state, dsSnroNode: dsSnroNodeListRecv});\r\n\t\t\t\tthis.setState({...this.state, dsSnroLink: dsSnroLinkListRecv});\r\n\t\t\r\n\r\n\t\t\t} else {\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroNodeList\", []);\r\n\t\t\t\tComLib.setStateInitRecords(this, \"dsSnroLinkList\", []);\r\n\r\n\t\t\t\tthis.setState({...this.state, dsSnroNode: []});\r\n\t\t\t\tthis.setState({...this.state, dsSnroLink: []});\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\r\n\t\tcase 'BOT010000_H01':\r\n\t\t\tthis.transaction('BOT010000_R01');\r\n\t\t\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\t// 버튼 이벤트\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase \"btnDiagramSrch\":\r\n\t\t\t\t\tif (this.validation(\"BOT010000_R01\")) this.transaction(\"BOT010000_R01\");\r\n\t\t\t\t\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnDiagramSave\":\r\n\t\t\t\t\tthis.refs.refDiagram.serializationSave();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"btnSmlSave\":\r\n\t\t\t\t\tif (this.validation(\"BOT010000_H02\")) this.transaction(\"BOT010000_H02\");\r\n\t\t\t\t\t\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\t\t\t\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdiagram : {\r\n\t\t\tonSave : (e) => {\r\n\t\t\t\tlet transNode = e.node;\r\n\t\t\t\tlet transLink = e.link;\r\n\t\t\t\tif (this.validation(\"BOT010000_H01\", transNode, transLink)) this.transaction(\"BOT010000_H01\");\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\t\t\t\t\t\t\t\t\r\n\t\t\t\t<FullPanel>\t\t\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor='purple' \r\n\t\t\t\t\t\t\t\t\t\tsize ='md'\r\n\t\t\t\t\t\t\t\t\t\tfiiled= {true}\r\n\t\t\t\t\t\t\t\t\t\tid = {\"btnDiagramSrch\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"조회\"}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\thidden = {false}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tml = {5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\tcolor='purple' \r\n\t\t\t\t\t\t\t\t\t\tsize ='md'\r\n\t\t\t\t\t\t\t\t\t\tfiiled= {true}\r\n\t\t\t\t\t\t\t\t\t\tid = {\"btnDiagramSave\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue = {\"저장 테스트\"}\r\n\t\t\t\t\t\t\t\t\t\tdisabled = {false}\r\n\t\t\t\t\t\t\t\t\t\thidden = {false}\r\n\t\t\t\t\t\t\t\t\t\tonClick = {this.event.button.onClick}\r\n\t\t\t\t\t\t\t\t\t\tml = {5}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t<SubFullPanel>\t\t\t\t\r\n\t\t\t\t\t\t<Diagram\r\n\t\t\t\t\t\t\theight     = \"650px\"\r\n\t\t\t\t\t\t\ttts        = {this.state.dsSnroInitTTSList.records}\r\n\t\t\t\t\t\t\tonSave     = {this.event.diagram.onSave}\r\n\t\t\t\t\t\t\tdsSnroNode = {this.state.dsSnroNode}\r\n\t\t\t\t\t\t\tdsSnroLink = {this.state.dsSnroLink}\r\n\t\t\t\t\t\t\tref = \"refDiagram\"\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t/>\t\t\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default View;","// 사용자관리\r\nimport React from \"react\";\r\nimport { ComponentPanel\r\n\t   , FlexPanel\r\n\t   , FullPanel\r\n\t   , SubFullPanel\r\n\t   , LFloatArea\r\n\t   , RFloatArea\r\n\t   , RelativeGroup\r\n\t   , SearchPanel   } from \"components\";\r\nimport { BasicButton as Button\r\n\t   , Label\r\n\t   , Grid\r\n\t   , Textfield \r\n\t   , Selectbox \r\n\t   , TreeSelectbox } from \"components\";\r\nimport { ComLib\r\n\t   , DataLib\r\n\t   , TransManager\r\n\t   , newScrmObj    } from \"common\";\r\n\r\nclass SYS020000 extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.userGrid = null;\r\n\r\n\t\tthis.lastEdited = \"\";\r\n\t\t\r\n\t\tthis.grdUserList_header = [\r\n\t\t\t{headerName: \"조직명\",\t\tfield: \"ORG_NM\",\tcolId: \"ORG_NM\", \teditable: false,\twidth: 120},\r\n\t\t\t{headerName: \"사용자ID\",\tfield: \"USR_CD\",\tcolId: \"USR_CD\",\teditable: false,\twidth: 100},\r\n\t\t\t{headerName: \"사용자명\",\tfield: \"USR_NM\",\tcolId: \"USR_NM\",\teditable: false,\twidth: 120},\r\n\t\t\t{headerName: \"권한\",\t\tfield: \"AUTH_NM\",\tcolId: \"AUTH_NM\", \teditable: false,\twidth: 100},\r\n\t\t\t{headerName: \"사용여부\",\tfield: \"USE_YN_NM\",\tcolId: \"USE_YN_NM\", editable: false,\twidth: 50, textAlign: \"center\"},\r\n\t\t\t{headerName: \"등록일시\",\tfield: \"REG_DTM\",\tcolId: \"REG_DTM\", \teditable: false,\twidth: 80, textAlign: \"center\", resizable: false},\r\n\t\t]\r\n\t\tthis.state = {\r\n\t\t\tdsSrch            : {ORG_ID: \"\", AUTH_LV: \"\", SRCH_DV: \"NM\", SRCH_VALUE: \"\"},\r\n\t\t\tdsUserList        : DataLib.datalist.getInstance(),\t\t\t\t\t\r\n\t\t\tselAuthCd_dataSet : ComLib.getSession(\"gdsUserInfo\")[0][\"AUTH_LV\"] !== 1 ? ComLib.convComboList(ComLib.getCommCodeList(\"AUTH_LV\"), newScrmObj.constants.select.argument.select).filter(item => item.value !== \"1\") : ComLib.convComboList(ComLib.getCommCodeList(\"AUTH_LV\"), newScrmObj.constants.select.argument.select)\r\n\t\t}\r\n\t}\t\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// 1) componentDidMount ()\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcomponentDidMount () { \r\n\t\tthis.transaction(\"SYS020000_R01\");\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [4. transaction Event Zone]\r\n\t//  - transaction 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\ttransaction = (serviceid) => {\r\n\t\tconst transManager = new TransManager();\r\n\r\n\t\ttransManager.setTransId (serviceid);\r\n\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\ttransManager.setCallBack(this.callback);\r\n\r\n\t\ttransManager.addConfig  ({\r\n\t\t\tcrudh      : transManager.constants.crudh.read,\r\n\t\t\tsqlmapid   : \"SYS.R_getSampleUserList\",\r\n\t\t\tdatasetsend: \"dsSend\",\r\n\t\t\tdatasetrecv: \"dsUserList\",\r\n\t\t});\r\n\t\t\r\n\t\tconst schRecord = this.state.dsSrch;\r\n\t\tconst param = [{\r\n\t\t\tORG_ID    : schRecord.ORG_ID,\r\n\t\t\tAUTH_CD   : schRecord.AUTH_CD,\r\n\t\t\tSRCH_DV   : schRecord.SRCH_DV,\r\n\t\t\tSRCH_VALUE: schRecord.SRCH_VALUE.trim(),\r\n\t\t}];\r\n\t\t\r\n\t\ttransManager.addDataset(\"dsSend\", param);\r\n\t\ttransManager.agent();\r\n\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [5. Callback Event Zone]\r\n\t//  - Callback 관련 정의\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tcallback = (res) => {\t\t\r\n\t\tconst dsUserList = res.data.dsUserList;\r\n\t\tComLib.setStateInitRecords(this, \"dsUserList\", dsUserList);\r\n\t\t\r\n\t\tif (dsUserList.length > 0 && this.lastEdited !== \"\") {\t\t\r\n\t\t\tfor (let intA = 0; intA < dsUserList.length; intA ++) {\t\t\t\r\n\t\t\t\tif (this.lastEdited === dsUserList[intA].USR_CD) {\r\n\t\t\t\t\tthis.userGrid.moveRow(intA, true);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\t\t\t\t\r\n\t\t}\t\t\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [6. event Zone]\r\n\t//  - 각 Component의 event 처리\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\tevent = {\r\n\t\tmultiSelectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tthis.setState({dsSrch: {...this.state.dsSrch, ORG_ID: e.rowId}});\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t},\r\n\t\tbutton: {\r\n\t\t\tonClick: () => {\r\n\t\t\t\tthis.transaction(\"SYS020000_R01\");\r\n\t\t\t}\r\n\t\t},\r\n\t\tgrid: {\r\n\t\t\tonGridReady: (e) => {\r\n\t\t\t\tthis.userGrid    = e.grid;\r\n\r\n\t\t\t},\r\n\t\t\tonBeforeInsertRow: (e) => {\t\t\t\t\r\n\t\t\t\tconst param  = {id: \"test\", records: [{USR_CD: \"\", USR_NM: \"\", AUTH_LV: \"\", CENT_CD: \"\", TEAM_CD: \"\", USE_YN: \"Y\"}], authList: this.state.selAuthCd_dataSet, isNew: true};\r\n\t\t\t\tconst option = {width: \"600px\", height: \"300px\", modaless: false, param: param}\r\n\t\t\t\t\r\n\t\t\t\tComLib.openPop(\"SYS020001\", \"신규 사용자 등록\", option, this.event.grid.afterAddUser)\r\n\r\n\t\t\t\treturn {rtn:false};\r\n\t\t\t},\r\n\t\t\tafterAddUser: (e) => {\r\n\t\t\t\tthis.lastEdited = e.data.USR_CD;\r\n\r\n\t\t\t\tthis.transaction(\"SYS020000_R01\");\r\n\t\t\t},\t\t\t\r\n\t\t\tonRowClicked: (e) => {\t\r\n\t\t\t\tif (e.node.selected !== true) {\r\n\t\t\t\t\te.node.setSelected(true);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tonCellDoubleClicked: (e) => {\r\n\t\t\t\tconst param  = {id: \"test\", records: [e.data], authList: this.state.selAuthCd_dataSet, isNew: false};\r\n\t\t\t\tconst option = {width: \"600px\", height: \"300px\", modaless: false, param: param}\r\n\t\t\t\tComLib.openPop(\"SYS020001\", \"사용자 정보 변경\", option, this.event.grid.afterAddUser)\r\n\t\t\t}\r\n\t\t},\r\n\t\tinput: {\r\n\t\t\tonChange: (e) => {\t\t\t\t\r\n\t\t\t\tthis.setState({dsSrch: {...this.state.dsSrch, SRCH_VALUE: e.target.value}});\r\n\t\t\t},         \r\n\t\t\tonKeyPress: (e) => {\r\n\t\t\t\tif (e.key === 'Enter') {\r\n\t\t\t\t\tthis.transaction(\"SYS020000_R01\")\r\n\t\t\t\t} \r\n\t\t\t}\r\n\t\t},\r\n\t\tselectbox: {\r\n\t\t\tonChange: (e) => {\r\n\t\t\t\tswitch (e.id) {\r\n\t\t\t\tcase \"selSrchCent\": \r\n\t\t\t\t\tthis.setState({dsSrch: {...this.state.dsSrch, CENT_CD: e.target.value, TEAM_CD: \"\"}});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selSrchTeam\":\r\n\t\t\t\t\tthis.setState({dsSrch: {...this.state.dsSrch, TEAM_CD: e.target.value}});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selSrchAuth\":\r\n\t\t\t\t\tthis.setState({dsSrch: {...this.state.dsSrch, AUTH_LV: e.target.value}});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase \"selSrchDv\":\r\n\t\t\t\t\tthis.setState({dsSrch: {...this.state.dsSrch, SRCH_DV: e.target.value}});\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\t// [7. render Zone]\r\n\t//  - 화면 관련 내용 작성\r\n\t/*------------------------------------------------------------------------------------------------*/\r\n\trender () {\r\n\t\tconst schParm = this.state.dsSrch;\t\t\r\n\t\tconst {input, selectbox, button, grid, multiSelectbox} = this.event;\r\n\t\tconst {argument} = newScrmObj.constants.select;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<FullPanel>\r\n\t\t\t\t\t<SearchPanel>\r\n\t\t\t\t\t\t<RelativeGroup>\r\n\t\t\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t\t\t<FlexPanel>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"조직\"/>\r\n\t\t\t\t\t\t\t\t\t<TreeSelectbox\r\n\t\t\t\t\t\t\t\t\t\tid \t\t = {\"treSelOrg\"} \r\n\t\t\t\t\t\t\t\t\t\tdata \t = {ComLib.convOrgList(\"all\")} \r\n\t\t\t\t\t\t\t\t\t\tonChange = {multiSelectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder= {\"전체\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {schParm.ORG_ID}\t\t\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"권한\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {\"selSrchAuth\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {schParm.AUTH_LV}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {\"200px\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {ComLib.convComboList(ComLib.getCommCodeList(\"AUTH_LV\"), argument.all)}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Label value=\"사용자\"/>\r\n\t\t\t\t\t\t\t\t\t<Selectbox\r\n\t\t\t\t\t\t\t\t\t\tid       = {\"selSrchDv\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue    = {schParm.SRCH_DV}\r\n\t\t\t\t\t\t\t\t\t\twidth    = {\"200px\"}\r\n\t\t\t\t\t\t\t\t\t\tdataset  = {[{value: \"NM\", name: \"성명\"},{value: \"ID\", name: \"ID\"}]}\r\n\t\t\t\t\t\t\t\t\t\tonChange = {selectbox.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<Textfield \r\n\t\t\t\t\t\t\t\t\t\tid          = {\"iptSrchword\"}\r\n\t\t\t\t\t\t\t\t\t\tname        = {\"iptSrchword\"}\r\n\t\t\t\t\t\t\t\t\t\tvalue       = {schParm.SRCH_VALUE}\r\n\t\t\t\t\t\t\t\t\t\twidth       = {\"200px\"}\r\n\t\t\t\t\t\t\t\t\t\tplaceholder = {\"성명/ID\"}\r\n\t\t\t\t\t\t\t\t\t\tminLength   = {1}\r\n\t\t\t\t\t\t\t\t\t\tmaxLength   = {20}\r\n\t\t\t\t\t\t\t\t\t\tonChange    = {input.onChange}\r\n\t\t\t\t\t\t\t\t\t\tonKeyPress  = {input.onKeyPress}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</FlexPanel>\r\n\t\t\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tid      = {\"btnSearch\"}\r\n\t\t\t\t\t\t\t\t\tmt      = {5}\r\n\t\t\t\t\t\t\t\t\ticon    = {\"srch\"}  \r\n\t\t\t\t\t\t\t\t\tcolor   = {\"blue\"} \r\n\t\t\t\t\t\t\t\t\tvalue   = {\"조회\"}\r\n\t\t\t\t\t\t\t\t\tfiiled  = {\"o\"}\r\n\t\t\t\t\t\t\t\t\tonClick = {button.onClick}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t\t\t</RelativeGroup>\r\n\t\t\t\t\t</SearchPanel>\r\n\t\t\t\t\t<SubFullPanel>\r\n\t\t\t\t\t\t<ComponentPanel>\r\n\t\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\t\tid        = {\"grdUserList\"} \r\n\t\t\t\t\t\t\t\tdata      = {this.state.dsUserList}\r\n\t\t\t\t\t\t\t\theader    = {this.grdUserList_header}\r\n\t\t\t\t\t\t\t\theight    = {\"620px\"} \r\n\t\t\t\t\t\t\t\tareaName  = {\"사용자 목록\"}\r\n\t\t\t\t\t\t\t\trowNum    = {true}\t\t\r\n\t\t\t\t\t\t\t\tdelRowBtn = {false}\r\n\r\n\t\t\t\t\t\t\t\tonBeforeInsertRow  = {grid.onBeforeInsertRow}\r\n\t\t\t\t\t\t\t\tonGridReady        = {grid.onGridReady}\t\r\n\t\t\t\t\t\t\t\tonRowClicked       = {grid.onRowClicked}\r\n\t\t\t\t\t\t\t\tonCellDoubleClicked= {grid.onCellDoubleClicked}\r\n\t\t\t\t\t\t\t/>\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</ComponentPanel>\r\n\t\t\t\t\t</SubFullPanel>\r\n\t\t\t\t</FullPanel>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default SYS020000;","import React from 'react';\r\nimport {appRoute} from 'routes';\r\nimport {TrayPanel, IconButton, RFloatArea, LFloatArea, TrayDiv} from 'components';\r\n\r\nclass Main extends React.Component{\r\n\tconstructor (props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\ttrayProp : []\r\n\t\t}\r\n\t\tthis.onClick = this.onClick.bind(this);\r\n\t\tthis.onClose = this.onClose.bind(this);\r\n\t\tthis.onPrevMove = this.onPrevMove.bind(this);\r\n\t\tthis.onNextMove = this.onNextMove.bind(this);\r\n\t\tthis.onSelect = this.onSelect.bind(this);\r\n\t}\r\n\tonClick = (e) => { this.selectMenu(); }\r\n\tonClose = (e) => { this.props.closeMenu(e); }\r\n\tonPrevMove  = (e) => { this.props.prevMenu(e); }\r\n\tonNextMove  = (e) => { this.props.nextMenu(e); }\r\n\tonSelect  = (e) => { this.props.selectMenu(e); }\r\n\tevent = {\r\n\t\tbutton : {\r\n\t\t\tonClick : (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\t\tcase 'btnPrev' :\r\n\t\t\t\t\t\t// 이전 메뉴 이동\r\n\t\t\t\t\t\tthis.props.prevMenu(this.props.selected);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'btnNext' :\r\n\t\t\t\t\t\t// 다음 메뉴 이동\r\n\t\t\t\t\t\tthis.props.nextMenu(this.props.selected);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'btnClose' :\r\n\t\t\t\t\t\tthis.props.closeAllMenu();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<TrayPanel id = {\"_trayPanelMenu\"}>\r\n\t\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t\t<TrayDiv id={\"_mainTrayDiv\"} data= {this.props.tray} selected = {this.props.selected} onClick = {this.onClick} onClose = {this.onClose} onSelect={this.onSelect}/>\r\n\t\t\t\t\t</LFloatArea>\r\n\t\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t\t<div className=\"scrm-tray-btn-div\" id = \"_trayBtnArea\">\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-prev' id='btnPrev' onClick={this.event.button.onClick} />\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-next' id='btnNext' onClick={this.event.button.onClick} />\r\n\t\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-close' id='btnClose' onClick={this.event.button.onClick} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</RFloatArea>\r\n\t\t\t\t</TrayPanel>\r\n\t\t\t\t<div className={'scrm-main-view-area'}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tthis.props.tray.map(tray => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div id={tray.MNU_ID} style={{display : (this.props.selected.MNU_ID === tray.MNU_ID) ? 'block' : 'none'}} key={'_menu_div_' + tray.MNU_ID}>\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\tappRoute.filter(item => item.id === tray.MNU_ID).map((prop) => {\r\n\t\t\t\t\t\t\t\t\t\t\treturn <prop.component key = {'_menu_comp_' + prop.id} tray={tray}/>\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Main;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\nimport {TrayPanel, IconButton, RFloatArea, LFloatArea} from 'components';\r\nclass Footer extends React.Component{\r\n\trender () {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\treturn (\r\n\t\t\t<TrayPanel id=\"_trayPanelPopup\">\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div id=\"scrmFooterDiv\" className=\"scrm-footer-div\">\r\n\t\t\t\t\t\t<ul className=\"scrm-footer-pop-ul\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t(this.props.popupList !== undefined) ? this.props.popupList.map((item, index) => { return (\r\n\t\t\t\t\t\t\t\t\t<li className=\"scrm-footer-pop-li\">\r\n\t\t\t\t\t\t\t\t\t\t<div onClick={e => {document.getElementById(item.id).hidden = false; AppModuleAction.selectPop(item)}}>\r\n\t\t\t\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t)})\r\n\t\t\t\t\t\t\t: null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t<div className=\"scrm-tray-btn-div\">\r\n\t\t\t\t\t\t<IconButton classes='scrm-tray-btn-close' id='btnPopAllClose'\r\n\t\t\t\t\t\t\t\t\tonClick={e => {\r\n\t\t\t\t\t\t\t\t\t\tthis.props.popupList.forEach(element => {\r\n\t\t\t\t\t\t\t\t\t\t\tReactDOM.unmountComponentAtNode(document.getElementById(element.id));\r\n\t\t\t\t\t\t\t\t\t\t\tdocument.body.removeChild(document.getElementById(element.id));\r\n\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\tAppModuleAction.delAllPop()\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</RFloatArea>\r\n\t\t\t</TrayPanel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(\r\n\t(state) => ({\r\n\t\tpopupList : state.appModule.popupList,\r\n\t}),\r\n\t(dispatch) => ({\r\n\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t})\r\n)(Footer);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\nimport {IconButton, LFloatArea, RFloatArea, HeaderMenu, Label} from 'components';\r\nimport 'assets/styles/header.css';\r\n\r\nclass Header extends React.Component{\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t\t}\r\n\t\tthis.event.button.onClick = this.event.button.onClick.bind(this);\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\t}\r\n\tevent = {\r\n\t\tbutton: {\r\n\t\t\tonClick: (e) => {\r\n\t\t\t\tswitch (e.target.id) {\r\n\t\t\t\tcase 'btnLogout':\r\n\t\t\t\t\tif (this.validation(\"HEADER_D01\")) this.transaction(\"HEADER_D01\");\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnNoti':\r\n\t\t\t\t\tlet notiOption = { width: '700px', height: '800px' }\r\n\t\t\t\t\tComLib.openPop('COM010010', '공지사항조회', 'modal', notiOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnMyinfo':\r\n\t\t\t\t\tlet infoOption = { width: '500px', height: '335px', pop: true }\r\n\t\t\t\t\tComLib.openPop('pwdChg', '비밀번호 변경', 'modal', infoOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'btnSetting':\r\n\t\t\t\t\tlet setOption = { width: '500px', height: '600px' }\r\n\t\t\t\t\tComLib.openPop('COM010020', '설정변경', 'modal', setOption);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault : break;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tdivUser: {\r\n\t\t\tonClick: () => {\r\n\t\t\t\tlet userInfo = ComLib.getSession(\"gdsUserInfo\")[0];\r\n\t\t\t\t\r\n\t\t\t\tlet infoOption = { width: '600px', height: '315px', modaless: false ,param: [{\r\n\t\t\t\t\tUSR_ID: userInfo.USR_ID,\r\n\t\t\t\t\tUSR_NM: userInfo.USR_NM,\r\n\t\t\t\t\tCENT_NM: userInfo.CENT_NM + \"/\" + userInfo.TEAM_NM,\r\n\t\t\t\t\tAUTH_NM: userInfo.AUTH_NM,\r\n\t\t\t\t\tCUR_PWD: '',\r\n\t\t\t\t\tNEW_PWD: '',\r\n\t\t\t\t\tCON_PWD: '',\r\n\t\t\t\t}],}\r\n\t\t\t\tComLib.openPop('userChg', '사용자 정보 변경', infoOption);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'HEADER_D01':\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch (serviceid) {\r\n\t\tcase 'HEADER_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry  {\r\n\t\t\tswitch (serviceid) {\r\n\t\t\tcase 'HEADER_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_setLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUser\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUser', this.state.dsUser.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\ttry {\r\n\t\t\tswitch (res.id) {\r\n\t\t\tcase 'HEADER_D01':\r\n\t\t\t\tComLib.setSession(\"token\", false)\r\n\t\t\t\tComLib.setSession(\"logoutComplete\", true);\r\n\t\t\t\t\r\n\t\t\t\twindow.location = '/';\r\n\t\t\t\tbreak;\r\n\t\t\tdefault : break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\thandleClickOutside = (e) => {\r\n\t\tconst domNode = ReactDOM.findDOMNode(this);\r\n\t\tif ( !domNode || !domNode.contains(e.target) ) {\r\n\t\t\tdocument.getElementById(this.props.id).style.display = \"none\";\r\n\t\t\tthis.setState({...this.state, expended : false});\r\n\t\t}\r\n\t}\r\n\t/*******************************************************************\r\n\t * Render\r\n\t *******************************************************************/\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<LFloatArea>\r\n\t\t\t\t\t<div className = 'logo' style= {{display: 'flex'}}>\r\n\t\t\t\t\t\t<div className = 'scrm-header-left-div'/>Smart VA\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</LFloatArea>\r\n\t\t\t\t<RFloatArea>\r\n\t\t\t\t\t<div className=\"scrm-header-btn-div\">\r\n\t\t\t\t\t\t<IconButton classes='scrm-btn-logut' id='btnLogout'\tonClick={this.event.button.onClick} tooltip=\"로그아웃\"/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</RFloatArea>\r\n\t\t\t\t<div style={{float : 'right',  position: 'absolute', right: 55}}>\r\n\t\t\t\t\t<div style={{alignContent: 'bottom', verticalAlign: 'center', height: '100%'}}>\r\n\t\t\t\t\t\t<div onClick={this.event.divUser.onClick}>\r\n\t\t\t\t\t\t\t<Label color={'white'} value={\"소속 : [\" + ComLib.getSession(\"gdsUserInfo\")[0]['CENT_NM'] + ']' + ((ComLib.getSession(\"gdsUserInfo\")[0]['TEAM_NM'] !== undefined ) ? ' / ['+ComLib.getSession(\"gdsUserInfo\")[0]['TEAM_NM'] +']': '')}> </Label>\r\n\t\t\t\t\t\t\t<Label color={'white'} value={\"사용자 : [\" + ComLib.getSession(\"gdsUserInfo\")[0]['USR_NM'] + ']'}> </Label>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<HeaderMenu menu={this.props.menu} openMenu = {this.props.openMenu}/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Header;","import React from 'react';\r\nimport Main from './main';\r\nimport Footer from './footer';\r\nimport Header from './header';\r\nimport {AppPanel, HeadPanel, MiddlePanel, MainPanel, FooterPanel} from 'components';\r\nimport {ComLib, DataLib, TransManager} from 'common';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport * as appModuleActions from 'store/modules/appModule';\r\n\r\nclass AppMain extends React.Component {\r\n\t/*******************************************************************\r\n\t * Constructor\r\n\t *******************************************************************/\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\tthis.event.window.onbeforeunload = this.event.window.onbeforeunload.bind(this);\r\n\t\t\tthis.event.window.onunload = this.event.window.onunload.bind(this);\r\n\t\t}\r\n\t}\r\n\r\n\tstate = {\r\n\t\tdsUser: DataLib.datalist.getInstance(),\r\n\t\tmenu: ComLib.getSession(\"gdsMenu\").filter(item => item.MNU_TP === '10' || item.MNU_TP === '20')\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Event\r\n\t *******************************************************************/\r\n\tcomponentDidMount() {\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\tAppModuleAction.addTray(ComLib.getInitScreen());\r\n\r\n\t\tthis.state.dsUser.setRecords(ComLib.getSession(\"gdsUserInfo\"));\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\twindow.addEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\t\twindow.addEventListener('unload', this.event.window.onunload);\r\n\t\t}\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tif (ComLib.getSession(\"SYSTEM_DV\") != \"L\") {\r\n\t\t\twindow.removeEventListener('beforeunload', this.event.window.onbeforeunload);\r\n\t\t\twindow.removeEventListener('unload', this.event.window.onunload);\r\n\t\t}\r\n\t}\r\n\tcomponentDidUpdate () {\r\n\t\tthis.handler.trayWidthTransform();\r\n\t}\r\n\tevent = {\r\n\t\twindow: {\r\n\t\t\tonbeforeunload: (e) => {\r\n\t\t\t\tif (!ComLib.getSession(\"logoutComplete\")) e.returnValue = \"로그아웃?\";\r\n\t\t\t},\r\n\t\t\tonunload: (e) => {\r\n\t\t\t\tif (!ComLib.getSession(\"logoutComplete\")) {\r\n\t\t\t\t\tif (this.validation(\"BASE_D01\")) this.transaction(\"BASE_D01\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Validation\r\n\t *******************************************************************/\r\n\tvalidation = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\tdefault : break;\r\n\t\t}\r\n\r\n\t\tthis.setdata(serviceid);\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Set Data\r\n\t *******************************************************************/\r\n\tsetdata = (serviceid) => {\r\n\t\tswitch(serviceid) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tthis.state.dsUser.setValue(0, \"PS_STA_CD\", \"20\");\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Transaction\r\n\t *******************************************************************/\r\n\ttransaction = (serviceid) => {\r\n\t\tlet transManager = new TransManager();\r\n\t\ttry {\r\n\t\t\tswitch(serviceid) {\r\n\t\t\tcase 'BASE_D01':\r\n\t\t\t\ttransManager.setTransId(serviceid);\r\n\t\t\t\ttransManager.setTransUrl(transManager.constants.url.common);\r\n\t\t\t\ttransManager.setCallBack(this.callback);\r\n\t\t\t\ttransManager.setAsync(false);\r\n\t\t\t\ttransManager.addConfig({\r\n\t\t\t\t\tdao: transManager.constants.dao.base,\r\n\t\t\t\t\tcrudh: transManager.constants.crudh.update,\r\n\t\t\t\t\tsqlmapid:\"COM.U_setLogoutInfo\",\r\n\t\t\t\t\tdatasetsend:\"dsUsr\",\r\n\t\t\t\t});\r\n\t\t\t\ttransManager.addDataset('dsUsr', this.state.dsUser.getTransRecords());\r\n\t\t\t\ttransManager.agent();\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tdefault: break;\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * Callback\r\n\t *******************************************************************/\r\n\tcallback = (res) => {\r\n\t\tswitch(res.id) {\r\n\t\tcase 'BASE_D01':\r\n\t\t\tbreak;\r\n\t\tdefault: break;\r\n\t\t}\r\n\t}\r\n\r\n\t/*******************************************************************\r\n\t * User Function\r\n\t *******************************************************************/\r\n\thandler = {\r\n\t\ttrayWidthTransform : () => {\r\n\t\t\t// 전체 tray width 에서 버튼 영역의 width 제거 ()\r\n\t\t\tlet width = document.getElementById('_trayPanelMenu').offsetWidth - document.getElementById('_trayPanelMenu').querySelector('.scrm-rfloat-div').offsetWidth;\r\n\t\t\tlet trayWidth = 0;\r\n\t\t\tfor (let intA = 0; intA < document.getElementById('_ul_mainTrayDiv').children.length; intA ++) {\r\n\t\t\t\t// 15px 만큼의 padding이 잡혀 있어 해당 px도 포함\r\n\t\t\t\ttrayWidth += (document.getElementById('_ul_mainTrayDiv').children[intA].offsetWidth + 15);\r\n\t\t\t}\r\n\t\t\tif (width > trayWidth) {\r\n\t\t\t\tdocument.getElementById('_ul_mainTrayDiv').style.transform = \"translateX(0)\";\r\n\t\t\t} else {\r\n\t\t\t\t// 첫번째 행이 셀렉트 인 경우, tray 원위치\r\n\t\t\t\tif (document.getElementById('_ul_mainTrayDiv').querySelector('.scrm-tray-div-li-selected').id === document.getElementById('_ul_mainTrayDiv').children[0].id) {\r\n\t\t\t\t\tdocument.getElementById('_ul_mainTrayDiv').style.transform = \"translateX(0)\";\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// ul tag에 잡혀있는 margin이 50px이라 그만큼 빼줌\r\n\t\t\t\t\tif (document.getElementById('_ul_mainTrayDiv').querySelector('.scrm-tray-div-li-selected').getBoundingClientRect().x-50  < 0) {\r\n\t\t\t\t\t\tdocument.getElementById('_ul_mainTrayDiv').style.transform = \"translateX(\" + ((document.getElementById('_ul_mainTrayDiv').getBoundingClientRect().x - document.getElementById('_ul_mainTrayDiv').querySelector('.scrm-tray-div-li-selected').getBoundingClientRect().x) + 50).toString() + \"px)\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 선택된 트레이의 right 좌표가 트레이 너비보다 클 경우, 트레이 div 위치 이동\r\n\t\t\t\t\t\tif (document.getElementById('_ul_mainTrayDiv').querySelector('.scrm-tray-div-li-selected').getBoundingClientRect().right > width) {\r\n\t\t\t\t\t\t\tdocument.getElementById('_ul_mainTrayDiv').style.transform = \"translateX(\" + (width - trayWidth - 50).toString() + \"px)\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender () {\r\n\t\tconst {selected, tray, popupList} = this.props;\r\n\t\tconst {AppModuleAction} = this.props;\r\n\t\t\r\n\t\treturn(\r\n\t\t\t<AppPanel>\r\n\t\t\t\t<HeadPanel>\r\n\t\t\t\t\t<Header menu={this.state.menu} openMenu = {AppModuleAction.addTray}/>\r\n\t\t\t\t</HeadPanel>\r\n\t\t\t\t<MiddlePanel>\r\n\t\t\t\t\t<MainPanel width=\"100%\">\r\n\t\t\t\t\t\t<Main\r\n\t\t\t\t\t\t\tmenu = {this.state.menu}\r\n\t\t\t\t\t\t\ttray={tray}\r\n\t\t\t\t\t\t\tselected = {selected}\r\n\t\t\t\t\t\t\topenMenu = {AppModuleAction.addTray}\r\n\t\t\t\t\t\t\tcloseMenu = {AppModuleAction.delTray}\r\n\t\t\t\t\t\t\tprevMenu = {AppModuleAction.prevTray}\r\n\t\t\t\t\t\t\tnextMenu = {AppModuleAction.nextTray}\r\n\t\t\t\t\t\t\tselectMenu = {AppModuleAction.selectTray}\r\n\t\t\t\t\t\t\tcloseAllMenu = {AppModuleAction.delAllTray}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</MainPanel>\r\n\t\t\t\t</MiddlePanel>\r\n\t\t\t\t<FooterPanel>\r\n\t\t\t\t\t<Footer popupList = {popupList}/>\r\n\t\t\t\t</FooterPanel>\r\n\t\t\t</AppPanel>\r\n\t\t);\r\n\t}\r\n}\r\nexport default connect(\r\n\t(state) => ({\r\n\t\tselected : state.appModule.selected,\r\n\t\ttray : state.appModule.tray,\r\n\t\tpopupList : state.appModule.popupList,\r\n\t}),\r\n\t(dispatch) => ({\r\n\t\tAppModuleAction : bindActionCreators(appModuleActions, dispatch)\r\n\t})\r\n)(AppMain);","import React from 'react';\r\nimport Login from 'containers/base/common/login.js'\r\n\r\nimport {Player} from 'components';\r\nimport AppMain from 'containers/base';\r\n\r\nimport { Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from '../store';\r\n\r\n// const NotFound = () => <h1>404.. This page is not found!</h1>\r\n\r\nclass App extends React.Component{\r\n\tcomponentDidMount(){\r\n\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t\r\n\t}\r\n\trender () {\r\n\t\tconst token = sessionStorage.getItem('token');\r\n\t\tconst token_TA = sessionStorage.getItem('token_TA');\r\n\t\tlet option = { width: '600px', height: '740px', modaless: true, UUID : \"2a7db5cc-bc32-11eb-ac33-e0071bf4b204\", useUuid: true, JOB_TP: \"11\", srchText: null, disAllowEdit: true}\r\n\t\t\r\n\t\t// UUID 는 session 으로 들고 들어 가는게 가장 간단한 방법일듯\r\n\t\t// JOB_TP === 'C' > sftp 통신으로 파일 받아야함\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t{ token !== \"true\" ? \r\n\t\t\t\t\t<Route path={'/'} exact={false} component={Login}/>\r\n\t\t\t\t\t: \r\n\t\t\t\t\ttoken_TA !== \"true\" ? \r\n\t\t\t\t\t\t<Provider store={store}><AppMain/></Provider> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div style={{width: '600px', height: '740px'}}>\r\n\t\t\t\t\t\t\t<Player ctrNo={11} callId = {11} options ={option} popupdivid ={\"qwe\"}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t}\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n}\r\nexport default App;\r\n","\r\nimport 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'containers/App.js';\r\n\r\nimport { createBrowserHistory } from 'history';\r\nimport { Router, Route } from 'react-router-dom';\r\n\r\nconst history = createBrowserHistory();\r\n\r\n//ReactDOM.render( <App />,  document.getElementById('root'));\r\nReactDOM.render( <Router history={history}>  <Route path='/'  component= {App} /> </Router>, document.getElementById('root'));","'use strict';\r\n\r\nif (typeof Promise === 'undefined') {\r\n  // Rejection tracking prevents a common issue where React gets into an\r\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\r\n  // and the user has no idea what causes React's erratic future behavior.\r\n  require('promise/lib/rejection-tracking').enable();\r\n  window.Promise = require('promise/lib/es6-extensions.js');\r\n}\r\n\r\n// fetch() polyfill for making API calls.\r\nrequire('whatwg-fetch');\r\nrequire('babel-polyfill');\r\n// Object.assign() is commonly used with React.\r\n// It will use the native implementation if it's present and isn't buggy.\r\nObject.assign = require('object-assign');\r\n\r\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\r\n// We don't polyfill it in the browser--this is user's responsibility.\r\nif (process.env.NODE_ENV === 'test') {\r\n  require('raf').polyfill(global);\r\n}\r\n"],"sourceRoot":""}